{"meta":{"version":1,"warehouse":"4.0.1"},"models":{"Asset":[{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/favicon.ico","path":"favicon.ico","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/css/animate.min.css","path":"css/animate.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/activate-power-mode.js","path":"js/activate-power-mode.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/app.js","path":"js/app.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/goTop.js","path":"js/goTop.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/jquery3.5.1.js","path":"js/jquery3.5.1.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/local_search.js","path":"js/local_search.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/ribbon.min.js","path":"js/ribbon.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/vue2.6.11.js","path":"js/vue2.6.11.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/medias/1.jpg","path":"medias/1.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/wrapImage.js","path":"js/wrapImage.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/medias/10.jpg","path":"medias/10.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/medias/11.jpg","path":"medias/11.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/medias/12.jpg","path":"medias/12.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/medias/13.jpg","path":"medias/13.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/medias/14.jpg","path":"medias/14.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/medias/15.jpg","path":"medias/15.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/medias/2.jpg","path":"medias/2.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/medias/3.jpg","path":"medias/3.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/medias/4.jpg","path":"medias/4.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/medias/5.jpg","path":"medias/5.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/medias/6.jpg","path":"medias/6.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/medias/7.jpg","path":"medias/7.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/medias/8.jpg","path":"medias/8.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/medias/9.jpg","path":"medias/9.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/medias/about.jpg","path":"medias/about.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/medias/archive.jpg","path":"medias/archive.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/medias/categories.jpg","path":"medias/categories.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/medias/categoryDetail.jpg","path":"medias/categoryDetail.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/medias/comment-bg.gif","path":"medias/comment-bg.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/medias/comment.jpg","path":"medias/comment.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/medias/comment2.jpg","path":"medias/comment2.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/medias/friend.jpg","path":"medias/friend.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/medias/logo.png","path":"medias/logo.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/medias/tag.jpg","path":"medias/tag.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/medias/tagDetail.jpg","path":"medias/tagDetail.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/aplayer/APlayer@1.10.1.min.css","path":"js/aplayer/APlayer@1.10.1.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/bubble/bubble.js","path":"js/bubble/bubble.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/bubble/homeBubble.js","path":"js/bubble/homeBubble.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/clipboard/clipboard.min.js","path":"js/clipboard/clipboard.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/cursor/clicklove.js","path":"js/cursor/clicklove.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/cursor/explosion.min.js","path":"js/cursor/explosion.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/cursor/fireworks.js","path":"js/cursor/fireworks.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/cursor/text.js","path":"js/cursor/text.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/danmu/barrager.css","path":"js/danmu/barrager.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/falling/sakura.js","path":"js/falling/sakura.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/falling/snow.js","path":"js/falling/snow.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/danmu/jquery.barrager.js","path":"js/danmu/jquery.barrager.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/fancybox/jquery.fancybox.min.js","path":"js/fancybox/jquery.fancybox.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/fancybox/jquery.fancybox.min.css","path":"js/fancybox/jquery.fancybox.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/issues/index.js","path":"js/issues/index.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/loaded/index.css","path":"js/loaded/index.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/pjax@0.2.8/index.js","path":"js/pjax@0.2.8/index.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/prism/prism-coy.min.css","path":"js/prism/prism-coy.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/prism/prism-dark.min.css","path":"js/prism/prism-dark.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/prism/prism-funky.min.css","path":"js/prism/prism-funky.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/danmu/close.png","path":"js/danmu/close.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/prism/prism-line-numbers.css","path":"js/prism/prism-line-numbers.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/prism/prism-okaidia.min.css","path":"js/prism/prism-okaidia.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/prism/prism-solarizedlight.min.css","path":"js/prism/prism-solarizedlight.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/prism/prism-tomorrow.min.css","path":"js/prism/prism-tomorrow.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/prism/prism-twilight.min.css","path":"js/prism/prism-twilight.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/shareJs/font.css","path":"js/shareJs/font.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/prism/prism.min.css","path":"js/prism/prism.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/swiper/swiper.animate1.0.3.min.js","path":"js/swiper/swiper.animate1.0.3.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/shareJs/social-share.min.js","path":"js/shareJs/social-share.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/swiper/swiper.min.js","path":"js/swiper/swiper.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/shareJs/share.min.css","path":"js/shareJs/share.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/swiper/swiper@5.4.1.min.css","path":"js/swiper/swiper@5.4.1.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/swiper/vue-awesome-swiper.js","path":"js/swiper/vue-awesome-swiper.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/tocbot/tocbot.css","path":"js/tocbot/tocbot.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/tocbot/tocbot.min.js","path":"js/tocbot/tocbot.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/twikoo/twikoo.all.min.js","path":"js/twikoo/twikoo.all.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/twikoo/twikoo.all.min.js.LICENSE.txt","path":"js/twikoo/twikoo.all.min.js.LICENSE.txt","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/utils/index.js","path":"js/utils/index.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/valine/index.js","path":"js/valine/index.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/vue-typed-js/index.css","path":"js/vue-typed-js/index.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/vue-typed-js/index.js","path":"js/vue-typed-js/index.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/waline/waline.min.js","path":"js/waline/waline.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/vue-seamless-scroll/index.js","path":"js/vue-seamless-scroll/index.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/medias/cursor/Horizontal.cur","path":"medias/cursor/Horizontal.cur","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/shareJs/fonts/iconfont.eot","path":"js/shareJs/fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/shareJs/fonts/iconfont.svg","path":"js/shareJs/fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/shareJs/fonts/iconfont.ttf","path":"js/shareJs/fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/js/shareJs/fonts/iconfont.woff","path":"js/shareJs/fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/medias/alipay.jpg","path":"medias/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-bamboo/source/medias/wechatpay.jpg","path":"medias/wechatpay.jpg","modified":0,"renderable":1},{"_id":"source/cnblogs/16284709/789895-20220517111756488-2065442884.png","path":"cnblogs/16284709/789895-20220517111756488-2065442884.png","modified":0,"renderable":0},{"_id":"source/cnblogs/16284709/789895-20220517111813678-1694156337.png","path":"cnblogs/16284709/789895-20220517111813678-1694156337.png","modified":0,"renderable":0},{"_id":"source/cnblogs/16284709/789895-20220517111854548-1820389538.png","path":"cnblogs/16284709/789895-20220517111854548-1820389538.png","modified":0,"renderable":0},{"_id":"source/cnblogs/16284709/789895-20220517111832836-992205237.png","path":"cnblogs/16284709/789895-20220517111832836-992205237.png","modified":0,"renderable":0},{"_id":"source/cnblogs/16284709/789895-20220517112425303-1331896187.png","path":"cnblogs/16284709/789895-20220517112425303-1331896187.png","modified":0,"renderable":0},{"_id":"source/cnblogs/16284709/789895-20220517114752421-658892608.png","path":"cnblogs/16284709/789895-20220517114752421-658892608.png","modified":0,"renderable":0},{"_id":"source/cnblogs/16284709/789895-20220517130635925-523477370.png","path":"cnblogs/16284709/789895-20220517130635925-523477370.png","modified":0,"renderable":0},{"_id":"source/cnblogs/16284709/789895-20220517130240740-1674070652.png","path":"cnblogs/16284709/789895-20220517130240740-1674070652.png","modified":0,"renderable":0},{"_id":"source/cnblogs/15939761/789895-20220226164638139-2008783301.png","path":"cnblogs/15939761/789895-20220226164638139-2008783301.png","modified":0,"renderable":0},{"_id":"source/cnblogs/16284709/789895-20220517130352970-2011761276.png","path":"cnblogs/16284709/789895-20220517130352970-2011761276.png","modified":0,"renderable":0},{"_id":"source/cnblogs/16284709/789895-20220517131720760-1485029732.png","path":"cnblogs/16284709/789895-20220517131720760-1485029732.png","modified":0,"renderable":0},{"_id":"source/cnblogs/16284709/789895-20220517132043920-686434640.png","path":"cnblogs/16284709/789895-20220517132043920-686434640.png","modified":0,"renderable":0},{"_id":"source/cnblogs/15939761/789895-20220226164847500-536945200.png","path":"cnblogs/15939761/789895-20220226164847500-536945200.png","modified":0,"renderable":0},{"_id":"source/cnblogs/15939761/789895-20220226164817702-919307590.png","path":"cnblogs/15939761/789895-20220226164817702-919307590.png","modified":0,"renderable":0},{"_id":"source/cnblogs/15692108/789895-20211215112128412-1674811.png","path":"cnblogs/15692108/789895-20211215112128412-1674811.png","modified":0,"renderable":0},{"_id":"source/cnblogs/15939761/789895-20220226164746450-1643262002.png","path":"cnblogs/15939761/789895-20220226164746450-1643262002.png","modified":0,"renderable":0},{"_id":"source/cnblogs/15692108/789895-20211215114236385-1487974069.png","path":"cnblogs/15692108/789895-20211215114236385-1487974069.png","modified":0,"renderable":0},{"_id":"source/cnblogs/15692108/789895-20211215122523232-1554137109.png","path":"cnblogs/15692108/789895-20211215122523232-1554137109.png","modified":0,"renderable":0},{"_id":"source/cnblogs/15692108/789895-20211220155923883-682805455.png","path":"cnblogs/15692108/789895-20211220155923883-682805455.png","modified":0,"renderable":0},{"_id":"source/cnblogs/15614177/789895-20211128011722252-460488491.png","path":"cnblogs/15614177/789895-20211128011722252-460488491.png","modified":0,"renderable":0},{"_id":"source/cnblogs/15193971/789895-20210827144401834-1665510685.png","path":"cnblogs/15193971/789895-20210827144401834-1665510685.png","modified":0,"renderable":0},{"_id":"source/cnblogs/15193971/789895-20210827152813941-141137389.png","path":"cnblogs/15193971/789895-20210827152813941-141137389.png","modified":0,"renderable":0},{"_id":"source/cnblogs/15193971/789895-20210827151048567-1226899289.png","path":"cnblogs/15193971/789895-20210827151048567-1226899289.png","modified":0,"renderable":0},{"_id":"source/cnblogs/15614159/789895-20211128000729936-492119129.png","path":"cnblogs/15614159/789895-20211128000729936-492119129.png","modified":0,"renderable":0},{"_id":"source/cnblogs/15193971/789895-20210827151210561-965213108.png","path":"cnblogs/15193971/789895-20210827151210561-965213108.png","modified":0,"renderable":0},{"_id":"source/cnblogs/15571172/789895-20211118103746539-355562978.png","path":"cnblogs/15571172/789895-20211118103746539-355562978.png","modified":0,"renderable":0},{"_id":"source/cnblogs/15614159/789895-20211128000828555-1801882487.png","path":"cnblogs/15614159/789895-20211128000828555-1801882487.png","modified":0,"renderable":0},{"_id":"source/cnblogs/15614159/789895-20211128005756655-1385421355.png","path":"cnblogs/15614159/789895-20211128005756655-1385421355.png","modified":0,"renderable":0},{"_id":"source/cnblogs/15571172/789895-20211118103607570-913262409.png","path":"cnblogs/15571172/789895-20211118103607570-913262409.png","modified":0,"renderable":0},{"_id":"source/cnblogs/15571172/789895-20211118103547205-905835845.png","path":"cnblogs/15571172/789895-20211118103547205-905835845.png","modified":0,"renderable":0},{"_id":"source/cnblogs/15571172/789895-20211118103220257-1533204017.png","path":"cnblogs/15571172/789895-20211118103220257-1533204017.png","modified":0,"renderable":0},{"_id":"source/cnblogs/13596927/789895-20200901161634167-1622109568.png","path":"cnblogs/13596927/789895-20200901161634167-1622109568.png","modified":0,"renderable":0},{"_id":"source/cnblogs/13096427/789895-20200611210551368-1414077737.png","path":"cnblogs/13096427/789895-20200611210551368-1414077737.png","modified":0,"renderable":0},{"_id":"source/cnblogs/13096427/789895-20200613120436495-1821816057.png","path":"cnblogs/13096427/789895-20200613120436495-1821816057.png","modified":0,"renderable":0},{"_id":"source/cnblogs/13096427/789895-20200611210653597-521335150.png","path":"cnblogs/13096427/789895-20200611210653597-521335150.png","modified":0,"renderable":0},{"_id":"source/cnblogs/13096427/789895-20200613122433371-1340406219.png","path":"cnblogs/13096427/789895-20200613122433371-1340406219.png","modified":0,"renderable":0},{"_id":"source/cnblogs/13096427/789895-20200613122549077-374827601.png","path":"cnblogs/13096427/789895-20200613122549077-374827601.png","modified":0,"renderable":0},{"_id":"source/cnblogs/13096427/789895-20200613131544727-322024248.png","path":"cnblogs/13096427/789895-20200613131544727-322024248.png","modified":0,"renderable":0},{"_id":"source/cnblogs/13096427/789895-20200613131507643-1916575069.png","path":"cnblogs/13096427/789895-20200613131507643-1916575069.png","modified":0,"renderable":0},{"_id":"source/cnblogs/13096427/789895-20200613151834645-748331091.png","path":"cnblogs/13096427/789895-20200613151834645-748331091.png","modified":0,"renderable":0},{"_id":"source/cnblogs/13096427/789895-20200613151852573-1477272883.png","path":"cnblogs/13096427/789895-20200613151852573-1477272883.png","modified":0,"renderable":0},{"_id":"source/cnblogs/13096427/789895-20200613152221722-277186366.png","path":"cnblogs/13096427/789895-20200613152221722-277186366.png","modified":0,"renderable":0},{"_id":"source/cnblogs/13096427/789895-20200613152628601-193312193.png","path":"cnblogs/13096427/789895-20200613152628601-193312193.png","modified":0,"renderable":0},{"_id":"source/cnblogs/13096427/789895-20200613155431331-1058862470.png","path":"cnblogs/13096427/789895-20200613155431331-1058862470.png","modified":0,"renderable":0},{"_id":"source/cnblogs/13096427/789895-20200613164737035-1698740974.png","path":"cnblogs/13096427/789895-20200613164737035-1698740974.png","modified":0,"renderable":0},{"_id":"source/cnblogs/13096427/789895-20200613175433971-1845076483.png","path":"cnblogs/13096427/789895-20200613175433971-1845076483.png","modified":0,"renderable":0},{"_id":"source/cnblogs/13089690/789895-20200610195839215-1000464738.png","path":"cnblogs/13089690/789895-20200610195839215-1000464738.png","modified":0,"renderable":0},{"_id":"source/cnblogs/13081247/789895-20200609201430814-1116404017.png","path":"cnblogs/13081247/789895-20200609201430814-1116404017.png","modified":0,"renderable":0},{"_id":"source/cnblogs/13089690/789895-20200610200454121-120495896.png","path":"cnblogs/13089690/789895-20200610200454121-120495896.png","modified":0,"renderable":0},{"_id":"source/cnblogs/13089690/789895-20200610220532137-1721821016.png","path":"cnblogs/13089690/789895-20200610220532137-1721821016.png","modified":0,"renderable":0},{"_id":"source/cnblogs/13081247/789895-20200609201521232-1545417003.png","path":"cnblogs/13081247/789895-20200609201521232-1545417003.png","modified":0,"renderable":0},{"_id":"source/cnblogs/13081247/789895-20200609201648005-480300466.png","path":"cnblogs/13081247/789895-20200609201648005-480300466.png","modified":0,"renderable":0},{"_id":"source/cnblogs/13081247/789895-20200609213336194-886524168.png","path":"cnblogs/13081247/789895-20200609213336194-886524168.png","modified":0,"renderable":0},{"_id":"source/cnblogs/13081247/789895-20200609212654759-830200327.png","path":"cnblogs/13081247/789895-20200609212654759-830200327.png","modified":0,"renderable":0},{"_id":"source/cnblogs/13081247/789895-20200609212852714-221170698.png","path":"cnblogs/13081247/789895-20200609212852714-221170698.png","modified":0,"renderable":0},{"_id":"source/cnblogs/13081247/789895-20200609213136622-1683985688.png","path":"cnblogs/13081247/789895-20200609213136622-1683985688.png","modified":0,"renderable":0},{"_id":"source/cnblogs/13040338/789895-20200603213817384-989892636.png","path":"cnblogs/13040338/789895-20200603213817384-989892636.png","modified":0,"renderable":0},{"_id":"source/cnblogs/13081247/789895-20200609213009479-1523421599.png","path":"cnblogs/13081247/789895-20200609213009479-1523421599.png","modified":0,"renderable":0},{"_id":"source/cnblogs/13081247/789895-20200609214928185-1737504330.png","path":"cnblogs/13081247/789895-20200609214928185-1737504330.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12833014/789895-20200505211512224-1873232722.png","path":"cnblogs/12833014/789895-20200505211512224-1873232722.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12700974/789895-20200414202950686-1257092366.png","path":"cnblogs/12700974/789895-20200414202950686-1257092366.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12525540/789895-20200319163629002-354206810.png","path":"cnblogs/12525540/789895-20200319163629002-354206810.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12525540/789895-20200319163732934-1485815953.png","path":"cnblogs/12525540/789895-20200319163732934-1485815953.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12525540/789895-20200319164038644-1263763272.png","path":"cnblogs/12525540/789895-20200319164038644-1263763272.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12525540/789895-20200321141834541-429866891.png","path":"cnblogs/12525540/789895-20200321141834541-429866891.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12525540/789895-20200319164325337-719717806.png","path":"cnblogs/12525540/789895-20200319164325337-719717806.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12525540/789895-20200319164432955-318576517.png","path":"cnblogs/12525540/789895-20200319164432955-318576517.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12525540/789895-20200319164725210-1272652233.png","path":"cnblogs/12525540/789895-20200319164725210-1272652233.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12525540/789895-20200319164451725-1925277368.png","path":"cnblogs/12525540/789895-20200319164451725-1925277368.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12525540/789895-20200319173859759-522955515.png","path":"cnblogs/12525540/789895-20200319173859759-522955515.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12525540/789895-20200321142847608-345165120.png","path":"cnblogs/12525540/789895-20200321142847608-345165120.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12525540/789895-20200321144900449-1370390112.png","path":"cnblogs/12525540/789895-20200321144900449-1370390112.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12490995/789895-20200314103719008-486099808.png","path":"cnblogs/12490995/789895-20200314103719008-486099808.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12525540/789895-20200319175139996-1452396882.png","path":"cnblogs/12525540/789895-20200319175139996-1452396882.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12490995/789895-20200314103659453-1423707822.png","path":"cnblogs/12490995/789895-20200314103659453-1423707822.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12490995/789895-20200314103608996-226690568.png","path":"cnblogs/12490995/789895-20200314103608996-226690568.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12490995/789895-20200314103531976-1657277194.png","path":"cnblogs/12490995/789895-20200314103531976-1657277194.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12490995/789895-20200314103742076-1506683442.png","path":"cnblogs/12490995/789895-20200314103742076-1506683442.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12490995/789895-20200314103515432-233460820.png","path":"cnblogs/12490995/789895-20200314103515432-233460820.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12490995/789895-20200314103935434-15938096.png","path":"cnblogs/12490995/789895-20200314103935434-15938096.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12490995/789895-20200314104005087-1747405802.png","path":"cnblogs/12490995/789895-20200314104005087-1747405802.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12490995/789895-20200314104017330-12695127.png","path":"cnblogs/12490995/789895-20200314104017330-12695127.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12490995/789895-20200314111035435-454576915.png","path":"cnblogs/12490995/789895-20200314111035435-454576915.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12490995/789895-20200314111255378-1900099054.png","path":"cnblogs/12490995/789895-20200314111255378-1900099054.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12490995/789895-20200314111330497-1914185865.png","path":"cnblogs/12490995/789895-20200314111330497-1914185865.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12490995/789895-20200314111407787-1937103574.png","path":"cnblogs/12490995/789895-20200314111407787-1937103574.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12490995/789895-20200314111742266-166098681.png","path":"cnblogs/12490995/789895-20200314111742266-166098681.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12490995/1730174-20190723172447650-1888406330.png","path":"cnblogs/12490995/1730174-20190723172447650-1888406330.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12490995/789895-20200314111825524-170131346.png","path":"cnblogs/12490995/789895-20200314111825524-170131346.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12490995/1730174-20190723172615004-1777913221.png","path":"cnblogs/12490995/1730174-20190723172615004-1777913221.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12490995/1730174-20190723172533547-1436305325.png","path":"cnblogs/12490995/1730174-20190723172533547-1436305325.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12490995/1730174-20190723172640897-1725389911.png","path":"cnblogs/12490995/1730174-20190723172640897-1725389911.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12490995/789895-20200314112146960-1975346260.png","path":"cnblogs/12490995/789895-20200314112146960-1975346260.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12490995/789895-20200315144745201-372259132.png","path":"cnblogs/12490995/789895-20200315144745201-372259132.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12430453/789895-20200306195120995-807700091.png","path":"cnblogs/12430453/789895-20200306195120995-807700091.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12490995/789895-20200315144855769-1157086710.png","path":"cnblogs/12490995/789895-20200315144855769-1157086710.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12490995/789895-20200315140044551-1148857260.png","path":"cnblogs/12490995/789895-20200315140044551-1148857260.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12430453/789895-20200306195431746-1019534379.png","path":"cnblogs/12430453/789895-20200306195431746-1019534379.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12430453/789895-20200306195442560-1506252793.png","path":"cnblogs/12430453/789895-20200306195442560-1506252793.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12430453/789895-20200306195506353-591684384.png","path":"cnblogs/12430453/789895-20200306195506353-591684384.png","modified":0,"renderable":0},{"_id":"source/cnblogs/12430453/789895-20200306195519061-1807506073.png","path":"cnblogs/12430453/789895-20200306195519061-1807506073.png","modified":0,"renderable":0},{"_id":"source/cnblogs/11175665/789895-20190712135006227-2107371641.png","path":"cnblogs/11175665/789895-20190712135006227-2107371641.png","modified":0,"renderable":0},{"_id":"source/cnblogs/11175665/789895-20190712135205933-637885315.png","path":"cnblogs/11175665/789895-20190712135205933-637885315.png","modified":0,"renderable":0},{"_id":"source/cnblogs/11175665/789895-20190712135227098-2050240776.png","path":"cnblogs/11175665/789895-20190712135227098-2050240776.png","modified":0,"renderable":0},{"_id":"source/cnblogs/11175665/789895-20190712135246919-1887689710.png","path":"cnblogs/11175665/789895-20190712135246919-1887689710.png","modified":0,"renderable":0},{"_id":"source/cnblogs/11175665/789895-20190712135307144-1229518040.png","path":"cnblogs/11175665/789895-20190712135307144-1229518040.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/_data/widget.yml","hash":"d63677666986b5d399f1997329aa63dc9b4335b1","modified":1657527255017},{"_id":"source/friends/index.md","hash":"c7f459e22e7cebc9396ce3ac5b932d2d8a6f3267","modified":1657523378837},{"_id":"source/about/index.md","hash":"16d0c414578552175229a17b1efd53f4b9456036","modified":1656995529958},{"_id":"source/_posts/hello-world.md","hash":"653596786fd617fd6efeb58efd9ff2139d6926e4","modified":1656996217508},{"_id":"source/widget/bubbly-bg/bubbly.css","hash":"7d92b2a8416f6cd82d5d071a0b5d9f2ef564f362","modified":1657069911550},{"_id":"source/widget/bubbly-bg/bubbly.js","hash":"072393aca5d719cd206351bf8f4ff2971a53537f","modified":1657069880745},{"_id":"source/widget/bubbly-bg/index.js","hash":"26467051ee280f88c91e4c7ce6dd35ef8ea9ef8b","modified":1657069898798},{"_id":"source/widget/bli/index.css","hash":"9d3ed31a92c77f9fffee77e58a300922cab2164f","modified":1657071149463},{"_id":"source/widget/bli/index.js","hash":"d6de7255b25ae80203596eb7d10400ab4fa75218","modified":1657071142537},{"_id":"source/widget/githubcalendar/index.js","hash":"10b9bcb50108698724bcd2a55b617cd3e0db3144","modified":1657070164701},{"_id":"source/widget/historyToday/index.js","hash":"9a14f12c843f7a4b6f9007fecb8ff065e5b2e5b2","modified":1657070837057},{"_id":"source/widget/weibo/index.css","hash":"691596c2af2d64c69773ffdef2fdc670595f9654","modified":1657070818787},{"_id":"source/widget/love/index.js","hash":"0a28bfc27d12b6ac34e2da8498273c5def9bfa99","modified":1657070860503},{"_id":"source/widget/mySwiper/index.css","hash":"d9b809341c2106105ef0f83ff0b402666539907d","modified":1657070763400},{"_id":"source/widget/weibo/index.js","hash":"857ecfb71ab431dd2133411c67cf734a95d0beb7","modified":1657070812274},{"_id":"source/widget/mySwiper/index.js","hash":"d3733c256c2d72e6e1e6fbcb8763d170e959aec9","modified":1657070757137},{"_id":"themes/hexo-theme-bamboo/package.json","hash":"26ca0ba1b395c79ca5d641cab7763c7f6999f5b7","modified":1656994547997},{"_id":"themes/hexo-theme-bamboo/_config.yml","hash":"478afb34b9551bdf0b74d6ecc64033c10aae7862","modified":1657590083241},{"_id":"themes/hexo-theme-bamboo/languages/default.yml","hash":"8bd4b5a14c8c48229a0dca8eb80b34a5ce01b5b5","modified":1656994547964},{"_id":"themes/hexo-theme-bamboo/languages/zh-CN.yml","hash":"caefd6f264b9b29a45dc507aee17683710aef3fe","modified":1656994547964},{"_id":"themes/hexo-theme-bamboo/languages/zh-TW.yml","hash":"0cdab82f5b0b6c975ddae075312764640ba5592d","modified":1656994547964},{"_id":"themes/hexo-theme-bamboo/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1656994547994},{"_id":"themes/hexo-theme-bamboo/layout/categories.ejs","hash":"7258b144c22829b972fa819d034c45168b7f722a","modified":1656994547995},{"_id":"themes/hexo-theme-bamboo/layout/about.ejs","hash":"26559d8312a395e445bc104fb1bb4e0c8fc7882e","modified":1656994547993},{"_id":"themes/hexo-theme-bamboo/README.md","hash":"052a60e500d8a554483ace3f90910ba847eabb7a","modified":1656994547962},{"_id":"themes/hexo-theme-bamboo/layout/category.ejs","hash":"37ffb09fbfaf42173e0dcc12e77733aaf3dc33d5","modified":1656994547995},{"_id":"themes/hexo-theme-bamboo/layout/index.ejs","hash":"c14582ffc3e238d6a09f13a90058afe764d6c224","modified":1656994547996},{"_id":"themes/hexo-theme-bamboo/layout/friends.ejs","hash":"b6b8bd917fe1d79052c326699126d2a16f23d637","modified":1656994547995},{"_id":"themes/hexo-theme-bamboo/layout/post.ejs","hash":"0f65c2f8d1193393dfe0a7c32026a32cba8c6db4","modified":1656994547996},{"_id":"themes/hexo-theme-bamboo/layout/layout.ejs","hash":"51da0a60698b58182b8f62b6f9b64faf1c02ee1b","modified":1656994547996},{"_id":"themes/hexo-theme-bamboo/layout/tag.ejs","hash":"b8ebaaeb58bdc5a2ece441f05caeccd259a8fd52","modified":1656994547997},{"_id":"themes/hexo-theme-bamboo/layout/tags.ejs","hash":"9f893119661ef904b9b0a44baf15f5b51389fef7","modified":1656994547997},{"_id":"themes/hexo-theme-bamboo/layout/_partial/dark.ejs","hash":"653f56cf403abdf5b5d55cc4174e2877b61ebda3","modified":1656994547974},{"_id":"themes/hexo-theme-bamboo/layout/_partial/archive.ejs","hash":"e6381dbd19b931fe9f8da37fcde132e65fbe1d4a","modified":1656994547965},{"_id":"themes/hexo-theme-bamboo/source/favicon.ico","hash":"3983ed3008cb9dba62b1e861019e5b711deaeaea","modified":1657179045863},{"_id":"themes/hexo-theme-bamboo/layout/_partial/home_widget.ejs","hash":"e94f14d51791e6239fbab5276a186d875f9b919c","modified":1656994547977},{"_id":"themes/hexo-theme-bamboo/layout/_partial/lantern.ejs","hash":"8b3466dbd0158f8297ac336052b8d4fded4081a0","modified":1656994547977},{"_id":"themes/hexo-theme-bamboo/layout/_partial/goTop.ejs","hash":"8799f7e3b34b919cd274c570d77e10e3085f1a58","modified":1656994547975},{"_id":"themes/hexo-theme-bamboo/layout/_partial/loaded.ejs","hash":"3a5d71277a987de431e65f40d2c2d09914cd6f18","modified":1656994547977},{"_id":"themes/hexo-theme-bamboo/layout/_partial/motto.ejs","hash":"3ccb6a463eab6a23de8f8e3527c9ae67f87568d0","modified":1656994547980},{"_id":"themes/hexo-theme-bamboo/layout/_partial/notice.ejs","hash":"bfb9f2ca32d4932f5754bde29bc91a2781524b8d","modified":1656994547980},{"_id":"themes/hexo-theme-bamboo/layout/_partial/paginator.ejs","hash":"ff1b36f73cebd04e72520ceba0d959b56386874d","modified":1656994547981},{"_id":"themes/hexo-theme-bamboo/source/css/style.styl","hash":"b98899c2d4121c62f2002a9c451d10eba3f14051","modified":1656994548025},{"_id":"themes/hexo-theme-bamboo/layout/_partial/side.ejs","hash":"ab1961f7d7fcce547fe43bdf2abd819fb31bab05","modified":1656994547990},{"_id":"themes/hexo-theme-bamboo/layout/_partial/swiper.ejs","hash":"87b3c390b4c15fc8e28818829e710a851b882b73","modified":1656994547993},{"_id":"themes/hexo-theme-bamboo/layout/_partial/topArticle.ejs","hash":"ba26f88c11dcc3ce3a987c4caf071e2f52ad58f0","modified":1656994547993},{"_id":"themes/hexo-theme-bamboo/source/css/animate.min.css","hash":"8411c1c0418521c96d07bcca0d9dbce7e832ccc9","modified":1656994548025},{"_id":"themes/hexo-theme-bamboo/source/medias/1.jpg","hash":"8be56e3deb39033e1e3e1bfcdd2053931b0d7bb5","modified":1656994548054},{"_id":"themes/hexo-theme-bamboo/source/medias/2.jpg","hash":"bc25752d286c7638b2c82eae897c3bbfd1281f51","modified":1656994548059},{"_id":"themes/hexo-theme-bamboo/source/medias/4.jpg","hash":"b48ad74a85834f7cc354de6f0e29885d8406a0bf","modified":1656994548060},{"_id":"themes/hexo-theme-bamboo/source/medias/5.jpg","hash":"b40c58fa6ceaa48ea139b0ef96ba1d7a9ab2b618","modified":1656994548060},{"_id":"themes/hexo-theme-bamboo/source/medias/logo.png","hash":"3983ed3008cb9dba62b1e861019e5b711deaeaea","modified":1657179045863},{"_id":"themes/hexo-theme-bamboo/source/medias/comment.jpg","hash":"d0e27cf8623d6bf743b5d099dfc2916bcab4e4d7","modified":1656994548067},{"_id":"themes/hexo-theme-bamboo/source/js/app.js","hash":"38e8d7ce69449ee7fc28db92f6be88ae26e708b2","modified":1656994548027},{"_id":"themes/hexo-theme-bamboo/source/js/goTop.js","hash":"dfcbf8a70cfb4465d0afabf5153bd069771a6a1c","modified":1656994548033},{"_id":"themes/hexo-theme-bamboo/source/js/activate-power-mode.js","hash":"3d02584da9dd820d1d9a454c5a93a2c37a8e4e42","modified":1656994548025},{"_id":"themes/hexo-theme-bamboo/source/js/local_search.js","hash":"475dc0727cb85c22f15f86701dd93c4bf449a438","modified":1656994548035},{"_id":"themes/hexo-theme-bamboo/source/js/ribbon.min.js","hash":"3c8e4d717ca107f3723def1795c8ed62a5f1a8d0","modified":1656994548038},{"_id":"themes/hexo-theme-bamboo/scripts/helpers/side_archives.js","hash":"b780ec1516d12b088f81b5ce25a80df460d91f3c","modified":1656994547998},{"_id":"themes/hexo-theme-bamboo/source/js/wrapImage.js","hash":"4b3cbceda7950c3fb2a17c4e169c4fdbc023ceab","modified":1656994548053},{"_id":"themes/hexo-theme-bamboo/scripts/tag/btn.js","hash":"35d97ecd3b05abc5069483e4817ff075e5e2cf52","modified":1656994547998},{"_id":"themes/hexo-theme-bamboo/scripts/tag/checkbox.js","hash":"b398969bd13fa37c90a323242f2d6be5c0dacbd1","modified":1656994547999},{"_id":"themes/hexo-theme-bamboo/scripts/tag/btns.js","hash":"e328ebb9b45e4b21f720f65b9c1730596677b964","modified":1656994547999},{"_id":"themes/hexo-theme-bamboo/scripts/tag/file.js","hash":"8cfdf178ea78639a7c852838ecffe1d1d5febaec","modified":1656994547999},{"_id":"themes/hexo-theme-bamboo/scripts/tag/folding.js","hash":"fa0d60a8b32bb942c9b04cd4256281ed8486f223","modified":1656994547999},{"_id":"themes/hexo-theme-bamboo/scripts/tag/gallery.js","hash":"d47607d31105741a33152c8c39cc2d1f6e2c88f9","modified":1656994548000},{"_id":"themes/hexo-theme-bamboo/scripts/tag/ghcard.js","hash":"2e0359ca4bc781b29bdd8c827f6349e7b369ea02","modified":1656994548000},{"_id":"themes/hexo-theme-bamboo/scripts/tag/image.js","hash":"d23c426ca0beb9528a00f0e4185eddd023889ee8","modified":1656994548000},{"_id":"themes/hexo-theme-bamboo/scripts/tag/inline-labels.js","hash":"08fbdc0ea622270e1236a28778f875c8ad2e5516","modified":1656994548001},{"_id":"themes/hexo-theme-bamboo/scripts/tag/issues.js","hash":"136c1d2c002b05cd96f0477033ad98583a3379d9","modified":1656994548001},{"_id":"themes/hexo-theme-bamboo/scripts/tag/media.js","hash":"04434a1760ec70d23f726921ba3e74898af4b531","modified":1656994548001},{"_id":"themes/hexo-theme-bamboo/scripts/tag/note.js","hash":"dd0ef71e882691a6d7a0624440b5de53c7ad7342","modified":1656994548002},{"_id":"themes/hexo-theme-bamboo/scripts/tag/link.js","hash":"c2ee6e2ffef126d9ff0d9d4fb1d588c0f4b8d82c","modified":1656994548001},{"_id":"themes/hexo-theme-bamboo/scripts/tag/progress.js","hash":"62b4170eb844b2bc97cb1aa2082c0669bed287d2","modified":1656994548002},{"_id":"themes/hexo-theme-bamboo/scripts/tag/mermaid.js","hash":"32bc8b283be1f0f3fe99ed979bb2150af3a5ca04","modified":1656994548002},{"_id":"themes/hexo-theme-bamboo/scripts/tag/site.js","hash":"56e270f7242570ab300ec933c9932300e3e3b8fa","modified":1656994548003},{"_id":"themes/hexo-theme-bamboo/scripts/tag/span.js","hash":"377c0ce99bee9eea4930d11d046abbbf72132f0a","modified":1656994548003},{"_id":"themes/hexo-theme-bamboo/scripts/tag/tabs.js","hash":"e15327573e6aec73ab7d494b7fefe950e3e5425b","modified":1656994548004},{"_id":"themes/hexo-theme-bamboo/scripts/events/index.js","hash":"2e6d51390879fc3379dfcfc5377f4c46602dde77","modified":1656994547998},{"_id":"themes/hexo-theme-bamboo/scripts/tag/timeline.js","hash":"c7942e1c59d9d8f25f2d63c6d8b53a6415d11f6b","modified":1656994548004},{"_id":"themes/hexo-theme-bamboo/scripts/tag/title.js","hash":"7efe679acbda3057539f420715e2465bacbe4dcc","modified":1656994548005},{"_id":"themes/hexo-theme-bamboo/scripts/tag/titleB.js","hash":"2a0cb76d94b6e1f85a48644aa07952a1b1499d60","modified":1656994548005},{"_id":"themes/hexo-theme-bamboo/scripts/z-lazyload/index.js","hash":"00807c9898fff8f712fc8f311ed0bdd84c71b812","modified":1656994548006},{"_id":"themes/hexo-theme-bamboo/layout/_partial/card/post.ejs","hash":"004aef800efdd4114f437f29ec1061685dce356e","modified":1656994547966},{"_id":"themes/hexo-theme-bamboo/layout/_partial/footer/busuanzi.ejs","hash":"e270fd0f16574b86630498c15f013d5ef58b80c0","modified":1656994547974},{"_id":"themes/hexo-theme-bamboo/layout/_partial/footer/fish.ejs","hash":"5b6d29219a57bf34ececaf1b9dc598ec63c24201","modified":1656994547975},{"_id":"themes/hexo-theme-bamboo/layout/_partial/analytics/baidu-push.ejs","hash":"2cebcc5ea3614d7f76ec36670e68050cbe611202","modified":1656994547965},{"_id":"themes/hexo-theme-bamboo/layout/_partial/analytics/baidu-analytics.ejs","hash":"f989e0ee065053d355837ca998eca27c00131d34","modified":1656994547965},{"_id":"themes/hexo-theme-bamboo/layout/_partial/analytics/google-analytics.ejs","hash":"f04decc35047925815621d6a559330cc2c6c2bc9","modified":1656994547965},{"_id":"themes/hexo-theme-bamboo/layout/_partial/footer/footer.ejs","hash":"e3d5d8e9cf3c735e7ecf591b6a5ef77e819fea41","modified":1656994547975},{"_id":"themes/hexo-theme-bamboo/layout/_partial/head/head.ejs","hash":"2e530f66898d6d9a6b112f8126c359d0820c44f9","modified":1656994547976},{"_id":"themes/hexo-theme-bamboo/layout/_partial/head/header.ejs","hash":"92b7c699bc8532d9f4d084a2382a9b45155ab96a","modified":1656994547976},{"_id":"themes/hexo-theme-bamboo/layout/_partial/head/search.ejs","hash":"5d2acb6b861ad238b208967c9da5c561dd9e5580","modified":1656994547977},{"_id":"themes/hexo-theme-bamboo/layout/_partial/head/drawer.ejs","hash":"7f58dba694b251049deb73f6a18b94de6d4c82f9","modified":1656994547976},{"_id":"themes/hexo-theme-bamboo/layout/_partial/meta/aplayer.ejs","hash":"160c39f0810c515cdf5c2364227f59aec3251cc2","modified":1656994547980},{"_id":"themes/hexo-theme-bamboo/layout/_partial/math/mathjax.ejs","hash":"388b78bc00022c6550823ffa70b8f0eb1d1cd8be","modified":1656994547978},{"_id":"themes/hexo-theme-bamboo/layout/_partial/math/mermaid.ejs","hash":"fb9ab8c213fa4516e3688a2aab44326ad1a025e7","modified":1656994547979},{"_id":"themes/hexo-theme-bamboo/layout/_partial/pjax/animate.ejs","hash":"2528b879755c3471b3f47bdd8ee3806c2c72fba3","modified":1656994547981},{"_id":"themes/hexo-theme-bamboo/layout/_partial/pjax/index.ejs","hash":"59acb62d88b9e66f05d103f0f118eba4c7470cb1","modified":1656994547981},{"_id":"themes/hexo-theme-bamboo/layout/_partial/post/bgSwiper.ejs","hash":"12a2d8f1d99edf60dd283f74fd99d9c1bfcfaaf8","modified":1656994547982},{"_id":"themes/hexo-theme-bamboo/layout/_partial/post/categories.ejs","hash":"45004011cdca22dd0c980a2f90c68054667d0838","modified":1656994547982},{"_id":"themes/hexo-theme-bamboo/layout/_partial/post/comment.ejs","hash":"b8f914e81e0c17ac904abd9e3e55b8d7e25bc0d1","modified":1656994547982},{"_id":"themes/hexo-theme-bamboo/layout/_partial/post/copyright.ejs","hash":"9f05ed11f3151bf50b843f0429527a523872e098","modified":1656994547983},{"_id":"themes/hexo-theme-bamboo/layout/_partial/post/donate.ejs","hash":"72336d4ecc8fb205b620253f950b2080a2aeed0f","modified":1656994547983},{"_id":"themes/hexo-theme-bamboo/layout/_partial/post/post-detail-header.ejs","hash":"6e418aa25f135ca972935184f28c527485ccb842","modified":1656994547983},{"_id":"themes/hexo-theme-bamboo/layout/_partial/post/post-nav.ejs","hash":"da01c409b1c2b68ff710c5dd83f19d6c435e9776","modified":1656994547984},{"_id":"themes/hexo-theme-bamboo/layout/_partial/post/prismjs.ejs","hash":"bff454e36b76dbc06638090ae8d46044dc8ca85b","modified":1656994547984},{"_id":"themes/hexo-theme-bamboo/layout/_partial/post/share.ejs","hash":"d1cdbc86207b2113f811742419032d1f6058079b","modified":1656994547984},{"_id":"themes/hexo-theme-bamboo/layout/_partial/post/tags.ejs","hash":"ff49ab6225b40e3b2fadcd592f4ffcc8ad3861af","modified":1656994547984},{"_id":"themes/hexo-theme-bamboo/layout/_partial/scripts/copy.ejs","hash":"3b3b4c4bb0a34af119292a948ee29fbcf331b4d2","modified":1656994547985},{"_id":"themes/hexo-theme-bamboo/layout/_partial/scripts/cursor_effect.ejs","hash":"d9f2e7025cc2f4a3de8419e23371ffdaaab018f5","modified":1656994547985},{"_id":"themes/hexo-theme-bamboo/layout/_partial/post/toc.ejs","hash":"5daf18775e5cf3c993d65bc6d8a2dfb8b03ee4b7","modified":1656994547984},{"_id":"themes/hexo-theme-bamboo/layout/_partial/scripts/danmu.ejs","hash":"4eff58f4f870de51f9aa08ebb81cdcde8529ef96","modified":1656994547985},{"_id":"themes/hexo-theme-bamboo/layout/_partial/scripts/falling.ejs","hash":"103bed9758ac8fa53edfba0a4f1b50faee9dca9b","modified":1656994547986},{"_id":"themes/hexo-theme-bamboo/layout/_partial/scripts/dark.ejs","hash":"29c3a72d4b00a3569b0ce209e428fdf2d73317a0","modified":1656994547986},{"_id":"themes/hexo-theme-bamboo/layout/_partial/scripts/global.ejs","hash":"701358cc2b98983a519a1f0c1f30613f6ec81b08","modified":1656994547986},{"_id":"themes/hexo-theme-bamboo/layout/_partial/scripts/head.ejs","hash":"f8217c89fa39e0516200da8ecd0dde2fec3c9891","modified":1656994547986},{"_id":"themes/hexo-theme-bamboo/layout/_partial/scripts/index.ejs","hash":"e56cf13d063441b93253565234d758c3dbfa5e89","modified":1656994547987},{"_id":"themes/hexo-theme-bamboo/layout/_partial/scripts/inputEffects.ejs","hash":"7630b4cef226f99385bcf01f604d25f4b65318c7","modified":1656994547987},{"_id":"themes/hexo-theme-bamboo/layout/_partial/scripts/issues.ejs","hash":"ab547e88bada03125150327a025be05cd7a9bc8e","modified":1656994547987},{"_id":"themes/hexo-theme-bamboo/layout/_partial/scripts/lazyload.ejs","hash":"eaab6c8252a3ed0706f45c331a9e017cea4a3535","modified":1656994547988},{"_id":"themes/hexo-theme-bamboo/layout/_partial/scripts/scrollreveal.ejs","hash":"bdd17960edce7b40c4e26df00d351bb16614133b","modified":1656994547988},{"_id":"themes/hexo-theme-bamboo/layout/_partial/scripts/setHeader.ejs","hash":"42ddaf8f127d1fdf13d9892859946becc63a04ce","modified":1656994547989},{"_id":"themes/hexo-theme-bamboo/layout/_partial/scripts/toc.ejs","hash":"1383c0277e7c5e08c2d0a0e41384c90a851d4fd0","modified":1656994547989},{"_id":"themes/hexo-theme-bamboo/layout/_partial/side/side_archives.ejs","hash":"6659a785f112460877a33b7a6f02dd805558cc21","modified":1656994547991},{"_id":"themes/hexo-theme-bamboo/layout/_partial/side/sideHeader.ejs","hash":"867b9bf090ccf9b542e080ab8a25ca4183ebd817","modified":1656994547991},{"_id":"themes/hexo-theme-bamboo/layout/_partial/scripts/typed.ejs","hash":"73acc534dcfb19f0e674a52eba6a9376ad430b30","modified":1656994547989},{"_id":"themes/hexo-theme-bamboo/layout/_partial/side/side_blogger.ejs","hash":"e88ae04908799f5d6dba38f28d7cd85ff45556a5","modified":1656994547992},{"_id":"themes/hexo-theme-bamboo/layout/_partial/side/side_category.ejs","hash":"8a7a6e42d3e745c3235d119ba0c63bbbc83cd106","modified":1656994547992},{"_id":"themes/hexo-theme-bamboo/layout/_partial/side/side_recent_post.ejs","hash":"a961783a1b2f04d433faedd0755b66e927ebc1ba","modified":1656994547992},{"_id":"themes/hexo-theme-bamboo/layout/_partial/side/side_tagcloud.ejs","hash":"5fa40c2b4b6643a2769331f00013fb27dc6ee2c4","modified":1656994547992},{"_id":"themes/hexo-theme-bamboo/layout/_partial/side/widget_library_sticky.ejs","hash":"fe6e8c25240d2d90626b07d47e8b557c27098713","modified":1656994547993},{"_id":"themes/hexo-theme-bamboo/layout/_partial/side/side_webinfo.ejs","hash":"dc4cc97a41f8e1c8a206781b0db7fa3131a6b68f","modified":1656994547992},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/btn.styl","hash":"28687a92bff27dc52de51c638431c9eeaa920d9f","modified":1656994548018},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/circle.styl","hash":"8fea937dc6ffb22aa2a435862ce8e06308df5965","modified":1656994548019},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/checkbox.styl","hash":"26647f72de70e61778893887c34080f5d0c3bf64","modified":1656994548019},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/gallery.styl","hash":"6368e1dcfbf565de7007a498370cf5a7d358f761","modified":1656994548020},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/folding.styl","hash":"0a93551470fd093d14f6980650617f61cbe358c0","modified":1656994548019},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/galleryGroup.styl","hash":"3f706ce94300dc0705c5b51152e4981215d7d58d","modified":1656994548020},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/ghcard.styl","hash":"5f31f99c880d775131297507b2b04943ca2e3772","modified":1656994548021},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/image.styl","hash":"3806a855d0654b2e31e286884f97c58c4dc35a35","modified":1656994548022},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/inline-label.styl","hash":"1731022ae2dd1e5bf44eca5fc2a4fde5d3e19826","modified":1656994548022},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/link.styl","hash":"8c8dd27de491f43831b3662a69c0d3729da9c3c4","modified":1656994548022},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/media.styl","hash":"5e3e064e46db84536e6f8c83db138a63fbadc232","modified":1656994548022},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/note.styl","hash":"b78ab3f2c95666d6521001b84e92f59707e50d10","modified":1656994548022},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/progress.styl","hash":"a16479bdd1d3e4371d91b4d05bfe6153861851ec","modified":1656994548023},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/span.styl","hash":"6a7734904c4818bc8b379d44642c4bcf1f9798f8","modified":1656994548023},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/site-card.styl","hash":"a6d1e9c1cb501e6d9e241ab97d2184e229e36187","modified":1656994548023},{"_id":"themes/hexo-theme-bamboo/source/css/_defines/variable.styl","hash":"da63b1d9672a38d88d948f84dbbb64dc2200f012","modified":1656994548008},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/tabs.styl","hash":"bfde345bf9e0e5d1366934a5e25e852bd12853e7","modified":1656994548024},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/about.styl","hash":"fae254919a6cfed9d827ee580bdb5d5fc13c9bc7","modified":1656994548008},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/timeline.styl","hash":"23044f0a93ab8a54686b5472d9d6ac56eaf56da2","modified":1656994548024},{"_id":"themes/hexo-theme-bamboo/source/css/_tag/title.styl","hash":"66ba7f092e20c377429fb9a7fe80d852c5bc8578","modified":1656994548024},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/base.styl","hash":"9ffa74669ee8feff6221a785ab16172cdf5f5223","modified":1656994548009},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/categories.styl","hash":"875d2a9965ee79ac1cea25e3144e5c4244881178","modified":1656994548010},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/category.styl","hash":"4900ee2088b9fccec0f7189bb0b3f9fc43e012f5","modified":1656994548010},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/archive.styl","hash":"ed9418bfe7ae436c9003296167a87cd7aacdaeab","modified":1656994548009},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/comment.styl","hash":"18c8d8acb28565068c3daca2ae68cf31ff47d9a6","modified":1656994548010},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/copyRyght.styl","hash":"21623bb44c7fb00ebde18b9b4673457c86851ce7","modified":1656994548010},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/custom.styl","hash":"84f84a1ae189c1febec63454be00d65ba69e3773","modified":1656994548011},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/danmu.styl","hash":"87406be8f0be56862b77803bd86b3d9f342435ac","modified":1656994548011},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/dark.styl","hash":"05b8cb10179430224ebab94f56806d8c5349254a","modified":1656994548011},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/donate.styl","hash":"06afbf560ae3caf9d48fe02c8b3d82bca2cebb22","modified":1656994548012},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/drawer.styl","hash":"47a82cc350cd512399f8d97063499c414eb4662c","modified":1656994548012},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/footer.styl","hash":"b7e81f1c8d69bd29d611f1b0376a2f185d454a44","modified":1656994548012},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/goTop.styl","hash":"3173d9ff5ad3bc312796d56ab59027e122f14119","modified":1656994548013},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/friends.styl","hash":"e22e29d448f0c9d54e383562c6b05349f3bd4ba6","modified":1656994548012},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/header.styl","hash":"5a3d73abbf70498b18d272cd493e910bafb069ef","modified":1656994548013},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/highlight.styl","hash":"842df9d58886fe2ef5eb5d5f97e6d44e7ba78ab5","modified":1656994548013},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/home.styl","hash":"b0ae441448c6c7a51518d502722c166efd000f9e","modified":1656994548013},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/lantern.styl","hash":"2603683ee15aca0933e4e15577be45e1032ef332","modified":1656994548014},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/motto.styl","hash":"23347c6275cfb599b19bd7fa258b899ef62751e3","modified":1656994548014},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/notice.styl","hash":"57e333bad7ef2983ebe8a8e486827b829249b2e8","modified":1656994548014},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/pace.styl","hash":"ea1f51d95a935cbbf5b64ea760cbfc79e4890e4f","modified":1656994548014},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/paginator.styl","hash":"058d7d7e95169aa22ebd6033722dfa1a73217fcc","modified":1656994548015},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/post-detail-header.styl","hash":"a5e0356fc85de276edd990c7ed9a52b73bcfd79f","modified":1656994548015},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/post-nav.styl","hash":"066c66b5ddc6e71c8e90571951bab8a0f06dbf43","modified":1656994548015},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/post.styl","hash":"fddc394b78bea0e400f576f90fbaa6434f1d1038","modified":1656994548016},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/posts.styl","hash":"4c9655fb7c23385d572e37534a36922573c0d87f","modified":1656994548016},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/search.styl","hash":"db2fd6f8471a415fb9ae38b470233b35ba9a22a8","modified":1656994548016},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/side.styl","hash":"a97cb9889214d3f906e3e9f110798db7e59e0c98","modified":1656994548016},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/tag.styl","hash":"81e504f102ecaae91d5d4353fa88f32c8c819b5f","modified":1656994548017},{"_id":"themes/hexo-theme-bamboo/source/js/aplayer/APlayer@1.10.1.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1656994548025},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/tags.styl","hash":"60951ef669b9a4568ff83b2b5bca69b7d6e3894d","modified":1656994548017},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/transition.styl","hash":"893476822b8011c6efc2d4822c237debb1d2752a","modified":1656994548017},{"_id":"themes/hexo-theme-bamboo/source/css/_plugins/mathjax.styl","hash":"84140a2367b3e2166846a88101e2c2d2180cfe29","modified":1656994548018},{"_id":"themes/hexo-theme-bamboo/source/css/_plugins/pjaxanimate.styl","hash":"75dcb005e509cc352ffc809ef559da19d6c583bf","modified":1656994548018},{"_id":"themes/hexo-theme-bamboo/source/css/_partial/topArticle.styl","hash":"6a3d84770cba2e39533725a1db85367139a80203","modified":1656994548017},{"_id":"themes/hexo-theme-bamboo/source/js/clipboard/clipboard.min.js","hash":"6371ec0a8e242395c7d4d008d2b98e472c9dcc52","modified":1656994548028},{"_id":"themes/hexo-theme-bamboo/source/js/bubble/homeBubble.js","hash":"a8635136621c8c54c04462932192a94f314942cb","modified":1656994548027},{"_id":"themes/hexo-theme-bamboo/source/js/bubble/bubble.js","hash":"40cbc57f98407216ba6dc412e2b75e18c036240f","modified":1656994548027},{"_id":"themes/hexo-theme-bamboo/source/medias/cursor/Horizontal.cur","hash":"c3c5e8485a67b7ab16079a96b53aff7ff52de756","modified":1656994548068},{"_id":"themes/hexo-theme-bamboo/source/js/cursor/text.js","hash":"a015017310e601f1e544cbc4b08c35b8e547c939","modified":1656994548029},{"_id":"themes/hexo-theme-bamboo/source/js/cursor/clicklove.js","hash":"9e8e79d69ad8338761272f86fe5cad0ad5e503cc","modified":1656994548028},{"_id":"themes/hexo-theme-bamboo/source/js/cursor/fireworks.js","hash":"6e1e9206549a6a1a4f5a8672a2dc5044a8f691bd","modified":1656994548029},{"_id":"themes/hexo-theme-bamboo/source/js/cursor/explosion.min.js","hash":"ed2d0a5ad306a2745b7c8180b69e36b78d4b0698","modified":1656994548029},{"_id":"themes/hexo-theme-bamboo/source/js/danmu/barrager.css","hash":"3691efec6dd3d554b4a3dd20ef04836459f151a8","modified":1656994548030},{"_id":"themes/hexo-theme-bamboo/source/js/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1656994548032},{"_id":"themes/hexo-theme-bamboo/source/js/falling/snow.js","hash":"6f4ef88304f874ef8bb8ea54f79b5d97f5a8f2f6","modified":1656994548031},{"_id":"themes/hexo-theme-bamboo/source/js/issues/index.js","hash":"e5f7b37f9dd8e966c7a63b8b6da27d53510eddeb","modified":1656994548033},{"_id":"themes/hexo-theme-bamboo/source/js/loaded/index.css","hash":"6ffc29024687d49fda0d474dd4a94fc706b8d7fc","modified":1656994548034},{"_id":"themes/hexo-theme-bamboo/source/js/danmu/close.png","hash":"2c3ed4345f91dc1b74a57b6dcd1e1efa9e279dbb","modified":1656994548030},{"_id":"themes/hexo-theme-bamboo/source/js/danmu/jquery.barrager.js","hash":"305d6e93f3de102b5e1e9b1373821c849d8f54cb","modified":1656994548030},{"_id":"themes/hexo-theme-bamboo/source/js/falling/sakura.js","hash":"ab41921e8f6ea1bedfcc348924574dc0caa20858","modified":1656994548031},{"_id":"themes/hexo-theme-bamboo/source/js/pjax@0.2.8/index.js","hash":"c9b1e349203e558dbe43665353e88c6eafc7dbcd","modified":1656994548035},{"_id":"themes/hexo-theme-bamboo/source/js/prism/prism-dark.min.css","hash":"a3f604a19e9a46f83a2fde49dfb45782748957ca","modified":1656994548036},{"_id":"themes/hexo-theme-bamboo/source/js/prism/prism-okaidia.min.css","hash":"50be6cc15d883ff3fa5d0885fed47241695a986c","modified":1656994548037},{"_id":"themes/hexo-theme-bamboo/source/js/shareJs/font.css","hash":"9d909397e4e94f696b7dd90a16481b50cf170362","modified":1656994548039},{"_id":"themes/hexo-theme-bamboo/source/js/prism/prism-coy.min.css","hash":"fe1246de39c25eaa7ad1b0c997ee530dbdd39ad8","modified":1656994548036},{"_id":"themes/hexo-theme-bamboo/source/js/prism/prism-line-numbers.css","hash":"3b64b50b73729de943ec894c1d6f19115fa81624","modified":1656994548037},{"_id":"themes/hexo-theme-bamboo/source/js/prism/prism-funky.min.css","hash":"0220f68ccda78c2b5d1109e58f3879674c93b587","modified":1656994548036},{"_id":"themes/hexo-theme-bamboo/source/js/shareJs/share.min.css","hash":"573c7dddb465efd5f5a9337bd50a1ed3f8e82cff","modified":1656994548041},{"_id":"themes/hexo-theme-bamboo/source/js/prism/prism.min.css","hash":"aa405e2bcb571595c822a80f5482454c1536fa52","modified":1656994548038},{"_id":"themes/hexo-theme-bamboo/source/js/prism/prism-twilight.min.css","hash":"ff4a6e3c4f1cb9bb59ec061656eacb750d238c15","modified":1656994548038},{"_id":"themes/hexo-theme-bamboo/source/js/prism/prism-tomorrow.min.css","hash":"7b4247bc4d3b719afe5957779d0e5c8fb716c8ea","modified":1656994548038},{"_id":"themes/hexo-theme-bamboo/source/js/shareJs/social-share.min.js","hash":"efdfa6b695ac6f0dd04cd8153d3e3a1a1edd90c2","modified":1656994548042},{"_id":"themes/hexo-theme-bamboo/source/js/swiper/swiper.animate1.0.3.min.js","hash":"d26f0ff85f5fea9b0e46bdfc1a4c4b202bc88619","modified":1656994548042},{"_id":"themes/hexo-theme-bamboo/source/js/prism/prism-solarizedlight.min.css","hash":"927b757cd8030d12953b5c0fa6eed5de15dda8ad","modified":1656994548038},{"_id":"themes/hexo-theme-bamboo/source/js/tocbot/tocbot.css","hash":"45e469dffa7b9ebc03f99fd09fb97274cdc5e9b4","modified":1656994548044},{"_id":"themes/hexo-theme-bamboo/source/js/swiper/swiper@5.4.1.min.css","hash":"de2263f82e7bf0778f31fd05c53000799f60701a","modified":1656994548044},{"_id":"themes/hexo-theme-bamboo/source/js/swiper/vue-awesome-swiper.js","hash":"b7a1ab21dfc58272009bfb5cb7ab87b79f5df573","modified":1656994548044},{"_id":"themes/hexo-theme-bamboo/source/js/tocbot/tocbot.min.js","hash":"bc45d3586a21f7e364cd6efe58844932c00cf11c","modified":1656994548045},{"_id":"themes/hexo-theme-bamboo/source/js/utils/index.js","hash":"54c66b0a396cc3743884cdb979e5c400218613ce","modified":1656994548048},{"_id":"themes/hexo-theme-bamboo/source/js/vue-seamless-scroll/index.js","hash":"f2aaf3f9b1ab7362f7cc158e5360cb1d62a57172","modified":1656994548049},{"_id":"themes/hexo-theme-bamboo/source/js/twikoo/twikoo.all.min.js.LICENSE.txt","hash":"1e286a31ef472fb864fe2b9502e87df9242df56b","modified":1656994548047},{"_id":"themes/hexo-theme-bamboo/source/js/vue-typed-js/index.css","hash":"36a1d2f61d11ab328e349d6a523dd9dea2ec7ee1","modified":1656994548050},{"_id":"themes/hexo-theme-bamboo/source/js/vue-typed-js/index.js","hash":"0d80f25135de943ccdfdebec23275bd82712fae1","modified":1656994548050},{"_id":"themes/hexo-theme-bamboo/scripts/z-lazyload/lib/process.js","hash":"e6883b90fbc7c5194ace34f3258f69d411ef25ff","modified":1656994548007},{"_id":"themes/hexo-theme-bamboo/layout/_partial/comment/gitalk/layout.ejs","hash":"6e79a6febb328f25672a30562f42bae83b660d43","modified":1656994547967},{"_id":"themes/hexo-theme-bamboo/layout/_partial/comment/changyan/layout.ejs","hash":"b90f7f7e2f77be536f4b97d52419a2f794bdbaec","modified":1656994547966},{"_id":"themes/hexo-theme-bamboo/layout/_partial/comment/gitalk/script.ejs","hash":"0d9ca1cf699ca0833314d200a3c443a169628c27","modified":1656994547967},{"_id":"themes/hexo-theme-bamboo/layout/_partial/comment/changyan/script.ejs","hash":"03e325fae6afbdf97b6248718da6ae55c7f9713f","modified":1656994547966},{"_id":"themes/hexo-theme-bamboo/layout/_partial/comment/twikoo/layout.ejs","hash":"d0730213e2a736c39a3ca519405c799dfc37311b","modified":1656994547969},{"_id":"themes/hexo-theme-bamboo/layout/_partial/comment/gitment/layout.ejs","hash":"25133b120d294dc7bf195ddc175a808970902922","modified":1656994547968},{"_id":"themes/hexo-theme-bamboo/layout/_partial/comment/gitment/script.ejs","hash":"f1b1e86772b919f51439ee9f2a1457f1c72b48f6","modified":1656994547968},{"_id":"themes/hexo-theme-bamboo/layout/_partial/comment/twikoo/script.ejs","hash":"b35bf06fb2e8bc1b08b8a26e1f967fab398d0945","modified":1656994547969},{"_id":"themes/hexo-theme-bamboo/layout/_partial/comment/utterance/layout.ejs","hash":"b9d45f3cc83931c766283e9ad9aab62578d20370","modified":1656994547969},{"_id":"themes/hexo-theme-bamboo/layout/_partial/comment/livere/script.ejs","hash":"a6d632f39a6252b7647d97fb756d424f5cdab5c2","modified":1656994547968},{"_id":"themes/hexo-theme-bamboo/layout/_partial/comment/livere/layout.ejs","hash":"5986303fce163c62598a036d4366f3371537d714","modified":1656994547968},{"_id":"themes/hexo-theme-bamboo/layout/_partial/comment/utterance/script.ejs","hash":"b533a20a77fd9f85bd05abe1eb32fdb96d62b10e","modified":1656994547970},{"_id":"themes/hexo-theme-bamboo/layout/_partial/comment/waline/script.ejs","hash":"45e64391a7baef0c8e025640f49a9bdbfac1a756","modified":1656994547973},{"_id":"themes/hexo-theme-bamboo/layout/_partial/comment/waline/layout.ejs","hash":"b26e5ea3f5553b65117dc0d260c8a8e91929741c","modified":1656994547973},{"_id":"themes/hexo-theme-bamboo/layout/_partial/comment/valine/layout.ejs","hash":"fa5f2280e3159ece2e3185536c2338f30a442d08","modified":1656994547972},{"_id":"themes/hexo-theme-bamboo/layout/_partial/comment/valine/script.ejs","hash":"686825b876be14a69f8a81e575b8ff873c6473bb","modified":1656994547972},{"_id":"themes/hexo-theme-bamboo/source/js/shareJs/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1656994548040},{"_id":"themes/hexo-theme-bamboo/source/js/shareJs/fonts/iconfont.svg","hash":"f0a1b849868a6bf351ff98dc3924a4e7254eb88b","modified":1656994548040},{"_id":"themes/hexo-theme-bamboo/source/js/shareJs/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1656994548041},{"_id":"themes/hexo-theme-bamboo/source/js/shareJs/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1656994548041},{"_id":"themes/hexo-theme-bamboo/source/medias/11.jpg","hash":"08ced9cb84cd05bad13859ab3231983cd2fdd8d4","modified":1656994548055},{"_id":"themes/hexo-theme-bamboo/source/medias/12.jpg","hash":"fe65ad1a71794c32196bb774c1a140754278dc58","modified":1656994548056},{"_id":"themes/hexo-theme-bamboo/source/medias/10.jpg","hash":"b31de74f3649118f60b02c7a5993f6b318351d93","modified":1656994548055},{"_id":"themes/hexo-theme-bamboo/source/medias/14.jpg","hash":"cd2fa3e7a2e958818fbb90d947260ea192795920","modified":1656994548058},{"_id":"themes/hexo-theme-bamboo/source/medias/13.jpg","hash":"302a8d12b56952cd67c225aaf6557af5d2a95d8c","modified":1656994548057},{"_id":"themes/hexo-theme-bamboo/source/medias/15.jpg","hash":"ac0c174181f8baf5f9acb8d04d4dd99313eba24a","modified":1656994548058},{"_id":"themes/hexo-theme-bamboo/source/medias/3.jpg","hash":"0bd5e5dad1296c3d9551c1a869eaa7db251f52af","modified":1656994548060},{"_id":"themes/hexo-theme-bamboo/source/medias/7.jpg","hash":"0db93ed9af4a13108ea4f2156b7b0fab9df3b894","modified":1656994548062},{"_id":"themes/hexo-theme-bamboo/source/medias/8.jpg","hash":"af5399f3b054d17ac0c41cccf7af80447a39e402","modified":1656994548062},{"_id":"themes/hexo-theme-bamboo/source/medias/6.jpg","hash":"a9701435f9d204bfece97e192f4603d615ec8ee4","modified":1656994548061},{"_id":"themes/hexo-theme-bamboo/source/medias/9.jpg","hash":"ce467516ff86f6bc9231aa10a9755329e6e82a57","modified":1656994548063},{"_id":"themes/hexo-theme-bamboo/source/medias/archive.jpg","hash":"146e7c6cd85a1c5940c74945b1951f517884c59b","modified":1656994548064},{"_id":"themes/hexo-theme-bamboo/source/medias/categoryDetail.jpg","hash":"0077d896369408ef41f26203e7c792ccd8d95840","modified":1656994548066},{"_id":"themes/hexo-theme-bamboo/source/medias/comment2.jpg","hash":"0d1febd222dd098e070e6ccd732b56f93e2d3963","modified":1656994548068},{"_id":"themes/hexo-theme-bamboo/source/medias/friend.jpg","hash":"33f48add3cc93b05b22d4bd933c69dd1dc4164c9","modified":1656994548069},{"_id":"themes/hexo-theme-bamboo/source/js/jquery3.5.1.js","hash":"d2cc8d43ce1c854b1172e42b1209502ad563db83","modified":1656994548034},{"_id":"themes/hexo-theme-bamboo/source/js/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1656994548032},{"_id":"themes/hexo-theme-bamboo/source/medias/categories.jpg","hash":"6fd5bd2172bbe414d4853399d7f8538e41b9573f","modified":1656994548065},{"_id":"themes/hexo-theme-bamboo/source/medias/comment-bg.gif","hash":"ca30cad50a1e3c723f12c24db62aa9d9fbac4da4","modified":1656994548067},{"_id":"themes/hexo-theme-bamboo/source/medias/tagDetail.jpg","hash":"f6b3a4f16ac95ebdcfcc6ac107419c22ad12706f","modified":1656994548071},{"_id":"themes/hexo-theme-bamboo/source/js/swiper/swiper.min.js","hash":"a2fe3c0df9196597c283b2f6ffecc1d4d8702245","modified":1656994548043},{"_id":"themes/hexo-theme-bamboo/source/js/valine/index.js","hash":"8809117760e0a7ce8dcc3f14b6421a4d415284a6","modified":1656994548049},{"_id":"themes/hexo-theme-bamboo/source/js/waline/waline.min.js","hash":"94f70e622e2a1ab05adb205033a9ddf371c61534","modified":1656994548053},{"_id":"themes/hexo-theme-bamboo/source/medias/about.jpg","hash":"24c7657d2a6830d5238daf2b917f71a9545e95ef","modified":1656994548063},{"_id":"themes/hexo-theme-bamboo/source/medias/tag.jpg","hash":"1d9ca36570c4c9545c06eac243c9513214a56d72","modified":1656994548070},{"_id":"themes/hexo-theme-bamboo/source/js/vue2.6.11.js","hash":"e793aa33ef33150eaba3bc02b07455a231f053ad","modified":1656994548052},{"_id":"themes/hexo-theme-bamboo/source/js/twikoo/twikoo.all.min.js","hash":"c3f5f0a69b7864e7ef5bbf99fc774bec37947d7c","modified":1656994548047},{"_id":"public/widget/bubbly-bg/bubbly.css","hash":"4aad9ea49095fcacfc4506eabe032e4eb313787a","modified":1657590099068},{"_id":"public/widget/bubbly-bg/index.js","hash":"f005191d2e736c55322863854f79bc24b4115292","modified":1657590099068},{"_id":"public/widget/bli/index.css","hash":"b5f6a93ede347ba4c16282e9867b7c7514a14498","modified":1657590099068},{"_id":"public/widget/bubbly-bg/bubbly.js","hash":"e51b5c3ab7862cd262034e34840f007d726afb34","modified":1657590099068},{"_id":"public/widget/bli/index.js","hash":"14db75cf2fe1908a72045ff244e53f811146a29e","modified":1657590099068},{"_id":"public/widget/historyToday/index.js","hash":"8bfad970a18cf30ec02b54960c0d73293000bafc","modified":1657590099068},{"_id":"public/widget/githubcalendar/index.js","hash":"e2c478827947c355e3d60df0b58b1101e4051a16","modified":1657590099068},{"_id":"public/widget/love/index.js","hash":"1ba03fae498da13d2b4646b56bac6fb08f31b62f","modified":1657590099068},{"_id":"public/widget/mySwiper/index.js","hash":"f2cde266dbe967ffc254c2fe1c26891f333de396","modified":1657590099068},{"_id":"public/widget/mySwiper/index.css","hash":"85f393898c2647ec874e2739886e1ea05356e38e","modified":1657590099068},{"_id":"public/widget/weibo/index.css","hash":"b249784a69e1cdda115d309f01c65a4aba416eac","modified":1657590099068},{"_id":"public/widget/weibo/index.js","hash":"5b7025e2b7f36367902eb74110f34c6b52b3c0f5","modified":1657590099068},{"_id":"public/atom.xml","hash":"a06878b0608fe47e73dfd5fb7f848c051c11f982","modified":1657590099068},{"_id":"public/search.xml","hash":"3d3cc1d5f329fe217841ba74f7e2fafd4cd9e6ec","modified":1657590099068},{"_id":"public/about/index.html","hash":"0b9fa42035e098c7b5280534075f7047d7928461","modified":1657590099068},{"_id":"public/friends/index.html","hash":"485d3d2bdc79e4a2cdfa1f210995e7750c7cb73a","modified":1657590099068},{"_id":"public/archives/index.html","hash":"456949674ab7dcd910a276db341ccf06c2ca1f06","modified":1657590099068},{"_id":"public/2019/01/20/hello-world/index.html","hash":"21934d9cfdc9c21b91ffd8124a419cdfff261d8b","modified":1657590099068},{"_id":"public/archives/2019/01/index.html","hash":"fdb1cc0593c0fd6b991463be92442cf3738c59e8","modified":1657590099068},{"_id":"public/archives/2019/index.html","hash":"16e363a922b0edb3b29bc066d3a6e6d128b4941c","modified":1657590099068},{"_id":"public/index.html","hash":"c4c48989b83cb16bf0084e23944e986f0b4a76d2","modified":1657590099068},{"_id":"public/favicon.ico","hash":"3983ed3008cb9dba62b1e861019e5b711deaeaea","modified":1657590099068},{"_id":"public/medias/1.jpg","hash":"8be56e3deb39033e1e3e1bfcdd2053931b0d7bb5","modified":1657590099068},{"_id":"public/medias/2.jpg","hash":"bc25752d286c7638b2c82eae897c3bbfd1281f51","modified":1657590099068},{"_id":"public/medias/4.jpg","hash":"b48ad74a85834f7cc354de6f0e29885d8406a0bf","modified":1657590099068},{"_id":"public/medias/5.jpg","hash":"b40c58fa6ceaa48ea139b0ef96ba1d7a9ab2b618","modified":1657590099068},{"_id":"public/medias/comment.jpg","hash":"d0e27cf8623d6bf743b5d099dfc2916bcab4e4d7","modified":1657590099068},{"_id":"public/medias/logo.png","hash":"3983ed3008cb9dba62b1e861019e5b711deaeaea","modified":1657590099068},{"_id":"public/medias/cursor/Horizontal.cur","hash":"c3c5e8485a67b7ab16079a96b53aff7ff52de756","modified":1657590099068},{"_id":"public/js/danmu/close.png","hash":"2c3ed4345f91dc1b74a57b6dcd1e1efa9e279dbb","modified":1657590099068},{"_id":"public/js/twikoo/twikoo.all.min.js.LICENSE.txt","hash":"1e286a31ef472fb864fe2b9502e87df9242df56b","modified":1657590099068},{"_id":"public/js/shareJs/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1657590099068},{"_id":"public/js/shareJs/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1657590099068},{"_id":"public/js/shareJs/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1657590099068},{"_id":"public/js/shareJs/fonts/iconfont.svg","hash":"f0a1b849868a6bf351ff98dc3924a4e7254eb88b","modified":1657590099068},{"_id":"public/medias/10.jpg","hash":"b31de74f3649118f60b02c7a5993f6b318351d93","modified":1657590099068},{"_id":"public/medias/11.jpg","hash":"08ced9cb84cd05bad13859ab3231983cd2fdd8d4","modified":1657590099068},{"_id":"public/medias/12.jpg","hash":"fe65ad1a71794c32196bb774c1a140754278dc58","modified":1657590099068},{"_id":"public/medias/14.jpg","hash":"cd2fa3e7a2e958818fbb90d947260ea192795920","modified":1657590099068},{"_id":"public/medias/13.jpg","hash":"302a8d12b56952cd67c225aaf6557af5d2a95d8c","modified":1657590099068},{"_id":"public/medias/3.jpg","hash":"0bd5e5dad1296c3d9551c1a869eaa7db251f52af","modified":1657590099068},{"_id":"public/medias/15.jpg","hash":"ac0c174181f8baf5f9acb8d04d4dd99313eba24a","modified":1657590099068},{"_id":"public/medias/6.jpg","hash":"a9701435f9d204bfece97e192f4603d615ec8ee4","modified":1657590099068},{"_id":"public/medias/7.jpg","hash":"0db93ed9af4a13108ea4f2156b7b0fab9df3b894","modified":1657590099068},{"_id":"public/medias/8.jpg","hash":"af5399f3b054d17ac0c41cccf7af80447a39e402","modified":1657590099068},{"_id":"public/medias/9.jpg","hash":"ce467516ff86f6bc9231aa10a9755329e6e82a57","modified":1657590099068},{"_id":"public/medias/archive.jpg","hash":"146e7c6cd85a1c5940c74945b1951f517884c59b","modified":1657590099068},{"_id":"public/medias/categoryDetail.jpg","hash":"0077d896369408ef41f26203e7c792ccd8d95840","modified":1657590099068},{"_id":"public/medias/comment2.jpg","hash":"0d1febd222dd098e070e6ccd732b56f93e2d3963","modified":1657590099068},{"_id":"public/medias/friend.jpg","hash":"33f48add3cc93b05b22d4bd933c69dd1dc4164c9","modified":1657590099068},{"_id":"public/js/activate-power-mode.js","hash":"3d02584da9dd820d1d9a454c5a93a2c37a8e4e42","modified":1657590099068},{"_id":"public/js/app.js","hash":"38e8d7ce69449ee7fc28db92f6be88ae26e708b2","modified":1657590099068},{"_id":"public/js/local_search.js","hash":"475dc0727cb85c22f15f86701dd93c4bf449a438","modified":1657590099068},{"_id":"public/js/ribbon.min.js","hash":"3c8e4d717ca107f3723def1795c8ed62a5f1a8d0","modified":1657590099068},{"_id":"public/js/goTop.js","hash":"dfcbf8a70cfb4465d0afabf5153bd069771a6a1c","modified":1657590099068},{"_id":"public/js/wrapImage.js","hash":"4b3cbceda7950c3fb2a17c4e169c4fdbc023ceab","modified":1657590099068},{"_id":"public/js/aplayer/APlayer@1.10.1.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1657590099068},{"_id":"public/js/clipboard/clipboard.min.js","hash":"6371ec0a8e242395c7d4d008d2b98e472c9dcc52","modified":1657590099068},{"_id":"public/js/bubble/homeBubble.js","hash":"a8635136621c8c54c04462932192a94f314942cb","modified":1657590099068},{"_id":"public/js/bubble/bubble.js","hash":"40cbc57f98407216ba6dc412e2b75e18c036240f","modified":1657590099068},{"_id":"public/js/cursor/clicklove.js","hash":"9e8e79d69ad8338761272f86fe5cad0ad5e503cc","modified":1657590099068},{"_id":"public/js/cursor/explosion.min.js","hash":"ed2d0a5ad306a2745b7c8180b69e36b78d4b0698","modified":1657590099068},{"_id":"public/js/falling/snow.js","hash":"6f4ef88304f874ef8bb8ea54f79b5d97f5a8f2f6","modified":1657590099068},{"_id":"public/js/cursor/fireworks.js","hash":"6e1e9206549a6a1a4f5a8672a2dc5044a8f691bd","modified":1657590099068},{"_id":"public/js/cursor/text.js","hash":"a015017310e601f1e544cbc4b08c35b8e547c939","modified":1657590099068},{"_id":"public/js/danmu/barrager.css","hash":"3691efec6dd3d554b4a3dd20ef04836459f151a8","modified":1657590099068},{"_id":"public/js/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1657590099068},{"_id":"public/js/danmu/jquery.barrager.js","hash":"305d6e93f3de102b5e1e9b1373821c849d8f54cb","modified":1657590099068},{"_id":"public/js/issues/index.js","hash":"e5f7b37f9dd8e966c7a63b8b6da27d53510eddeb","modified":1657590099068},{"_id":"public/js/loaded/index.css","hash":"6ffc29024687d49fda0d474dd4a94fc706b8d7fc","modified":1657590099068},{"_id":"public/js/prism/prism-coy.min.css","hash":"fe1246de39c25eaa7ad1b0c997ee530dbdd39ad8","modified":1657590099068},{"_id":"public/js/prism/prism-dark.min.css","hash":"a3f604a19e9a46f83a2fde49dfb45782748957ca","modified":1657590099068},{"_id":"public/js/prism/prism-funky.min.css","hash":"0220f68ccda78c2b5d1109e58f3879674c93b587","modified":1657590099068},{"_id":"public/js/prism/prism-tomorrow.min.css","hash":"7b4247bc4d3b719afe5957779d0e5c8fb716c8ea","modified":1657590099068},{"_id":"public/js/shareJs/font.css","hash":"9d909397e4e94f696b7dd90a16481b50cf170362","modified":1657590099068},{"_id":"public/js/prism/prism-okaidia.min.css","hash":"50be6cc15d883ff3fa5d0885fed47241695a986c","modified":1657590099068},{"_id":"public/js/prism/prism-twilight.min.css","hash":"ff4a6e3c4f1cb9bb59ec061656eacb750d238c15","modified":1657590099068},{"_id":"public/js/prism/prism-solarizedlight.min.css","hash":"927b757cd8030d12953b5c0fa6eed5de15dda8ad","modified":1657590099068},{"_id":"public/js/shareJs/share.min.css","hash":"573c7dddb465efd5f5a9337bd50a1ed3f8e82cff","modified":1657590099068},{"_id":"public/js/prism/prism.min.css","hash":"aa405e2bcb571595c822a80f5482454c1536fa52","modified":1657590099068},{"_id":"public/js/prism/prism-line-numbers.css","hash":"3b64b50b73729de943ec894c1d6f19115fa81624","modified":1657590099068},{"_id":"public/js/swiper/swiper.animate1.0.3.min.js","hash":"0e48f180ca2f18b787e4b7b6e55ee3b0c6067691","modified":1657590099068},{"_id":"public/js/swiper/swiper@5.4.1.min.css","hash":"de2263f82e7bf0778f31fd05c53000799f60701a","modified":1657590099068},{"_id":"public/js/tocbot/tocbot.css","hash":"45e469dffa7b9ebc03f99fd09fb97274cdc5e9b4","modified":1657590099068},{"_id":"public/js/utils/index.js","hash":"54c66b0a396cc3743884cdb979e5c400218613ce","modified":1657590099068},{"_id":"public/js/tocbot/tocbot.min.js","hash":"bc45d3586a21f7e364cd6efe58844932c00cf11c","modified":1657590099068},{"_id":"public/js/vue-seamless-scroll/index.js","hash":"f2aaf3f9b1ab7362f7cc158e5360cb1d62a57172","modified":1657590099068},{"_id":"public/js/vue-typed-js/index.css","hash":"36a1d2f61d11ab328e349d6a523dd9dea2ec7ee1","modified":1657590099068},{"_id":"public/css/style.css","hash":"d0d79a33354ad3466a2806ed9bf2e57010e4f6fe","modified":1657590099068},{"_id":"public/css/animate.min.css","hash":"8411c1c0418521c96d07bcca0d9dbce7e832ccc9","modified":1657590099068},{"_id":"public/js/jquery3.5.1.js","hash":"d2cc8d43ce1c854b1172e42b1209502ad563db83","modified":1657590099068},{"_id":"public/js/falling/sakura.js","hash":"ab41921e8f6ea1bedfcc348924574dc0caa20858","modified":1657590099068},{"_id":"public/js/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1657590099068},{"_id":"public/js/pjax@0.2.8/index.js","hash":"c9b1e349203e558dbe43665353e88c6eafc7dbcd","modified":1657590099068},{"_id":"public/js/vue2.6.11.js","hash":"e793aa33ef33150eaba3bc02b07455a231f053ad","modified":1657590099068},{"_id":"public/js/shareJs/social-share.min.js","hash":"efdfa6b695ac6f0dd04cd8153d3e3a1a1edd90c2","modified":1657590099068},{"_id":"public/js/swiper/vue-awesome-swiper.js","hash":"b7a1ab21dfc58272009bfb5cb7ab87b79f5df573","modified":1657590099068},{"_id":"public/js/swiper/swiper.min.js","hash":"a2fe3c0df9196597c283b2f6ffecc1d4d8702245","modified":1657590099068},{"_id":"public/js/vue-typed-js/index.js","hash":"0d80f25135de943ccdfdebec23275bd82712fae1","modified":1657590099068},{"_id":"public/js/valine/index.js","hash":"8809117760e0a7ce8dcc3f14b6421a4d415284a6","modified":1657590099068},{"_id":"public/js/waline/waline.min.js","hash":"94f70e622e2a1ab05adb205033a9ddf371c61534","modified":1657590099068},{"_id":"public/js/twikoo/twikoo.all.min.js","hash":"c3f5f0a69b7864e7ef5bbf99fc774bec37947d7c","modified":1657590099068},{"_id":"public/medias/categories.jpg","hash":"6fd5bd2172bbe414d4853399d7f8538e41b9573f","modified":1657590099068},{"_id":"public/medias/comment-bg.gif","hash":"ca30cad50a1e3c723f12c24db62aa9d9fbac4da4","modified":1657590099068},{"_id":"public/medias/tagDetail.jpg","hash":"f6b3a4f16ac95ebdcfcc6ac107419c22ad12706f","modified":1657590099068},{"_id":"public/medias/about.jpg","hash":"24c7657d2a6830d5238daf2b917f71a9545e95ef","modified":1657590099068},{"_id":"public/medias/tag.jpg","hash":"1d9ca36570c4c9545c06eac243c9513214a56d72","modified":1657590099068},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1656994243491},{"_id":"themes/landscape/_config.yml","hash":"79ac6b9ed6a4de5a21ea53fc3f5a3de92e2475ff","modified":1656994243691},{"_id":"themes/landscape/.npmignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1656994243436},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1656994243614},{"_id":"themes/landscape/README.md","hash":"37fae88639ef60d63bd0de22314d7cc4c5d94b07","modified":1656994243644},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1656994243696},{"_id":"themes/landscape/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":1656994243636},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1656994243693},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1656994243694},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1656994243697},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1656994243695},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1656994243699},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1656994243698},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1656994243700},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1656994243702},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1656994243703},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1656994243701},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1656994243552},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1656994243704},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1656994243566},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1656994243544},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1656994243611},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1656994243581},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1656994243573},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1656994243572},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1656994243533},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"d0d753d39038284d52b10e5075979cc97db9cd20","modified":1656994243531},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1656994243568},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1656994243546},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"950ddd91db8718153b329b96dc14439ab8463ba5","modified":1656994243535},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1656994243556},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1656994243569},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":1656994243560},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1656994243562},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"5abf77aec957d9445fc71a8310252f0013c84578","modified":1656994243563},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"7e749050be126eadbc42decfbea75124ae430413","modified":1656994243565},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1656994243541},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1656994243656},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1656994243550},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1656994243576},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1656994243582},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1656994243575},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1656994243593},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1656994243594},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1656994243579},{"_id":"themes/landscape/source/css/_variables.styl","hash":"628e307579ea46b5928424313993f17b8d729e92","modified":1656994243657},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1656994243596},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1656994243675},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1656994243651},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1656994243654},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1656994243653},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1656994243527},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1656994243631},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1656994243549},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1656994243554},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1656994243629},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1656994243571},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1656994243627},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1656994243558},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1656994243584},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1656994243660},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1656994243577},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1656994243662},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1656994243667},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1656994243664},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1656994243661},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1656994243671},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1656994243670},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1656994243668},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1656994243672},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1656994243673},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1656994243669},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1656994243666},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1656994243650},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1656994243689},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1656994243591},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1656994243650},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1656994243514},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1656994243518},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1656994243622},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1656994243623},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1656994243687},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1656994243625},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1656994243684},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1656994243605},{"_id":"source/_drafts/群晖下-gitea-drone-harbor实现CI-CD-发布到云服务器.md","hash":"1b8ef1c79751bf766081a12ccd586616c2ef2cb9","modified":1657165494696},{"_id":"source/images/pasted-0.png","hash":"49a0ee33e5562e850e83e8522ed730f12f88ff02","modified":1657162080743},{"_id":"source/images/pasted-1.png","hash":"4060d64cb1f4672f997c612c19aca6bb9a2a354c","modified":1657162090918},{"_id":"source/images/pasted-2.png","hash":"3bd9096c1a29f0cd82419c1fb0aadf3bd8ae56c6","modified":1657162101177},{"_id":"source/images/pasted-3.png","hash":"334fe972de1087b23066e1d49704ef3d86871c45","modified":1657162109611},{"_id":"source/images/pasted-4.png","hash":"45666a0f9bc6b6dcee4850e3d3135a3e71a7e942","modified":1657162158942},{"_id":"source/images/pasted-5.png","hash":"edf6b99ddd659a5dd84272c5536496f6b9b0c910","modified":1657162179390},{"_id":"source/images/pasted-6.png","hash":"6f6e13c0d45357cc368ce6fbb6238aceb9d2a10e","modified":1657162185238},{"_id":"source/images/pasted-7.png","hash":"54c699ce0a04f22324686c1762024bed3b826a5b","modified":1657162190546},{"_id":"source/images/pasted-8.png","hash":"a1c84160194fefed32cab3fc653a69075a50c0d9","modified":1657162197411},{"_id":"source/images/pasted-9.png","hash":"3418a35be72ead4c0c08b28e04b45255e6841c80","modified":1657162216372},{"_id":"source/images/pasted-10.png","hash":"d5f34ff35fa6227fb5386450f2d8b218088097bc","modified":1657162227232},{"_id":"source/_posts/群晖下-gitea-drone-harbor实现CI-CD-发布到云服务器.md","hash":"6124d5866f366a9e66a9823f0d5fe189c6296657","modified":1657186130461},{"_id":"source/images/pasted-11.png","hash":"aba28fb05092d1e581818c99865356b844a15d18","modified":1657164406504},{"_id":"source/images/pasted-12.png","hash":"e4b9faee7c51962e808eecc75accfe255e873788","modified":1657165136338},{"_id":"source/images/pasted-13.png","hash":"f9fca4695fc5c99f8ef5c6245c9f8a80026a75cb","modified":1657165235040},{"_id":"source/images/pasted-14.png","hash":"900c366a5f1faa4d24fcfb96967a624b5a8f04a3","modified":1657165305295},{"_id":"public/archives/2022/index.html","hash":"b42c8478bdb4cd663bd737903d319dd0c1e85aad","modified":1657590099068},{"_id":"public/archives/2022/07/index.html","hash":"a208201761d6feaaf3eea1e38c413efed8c1b4ac","modified":1657590099068},{"_id":"public/2022/07/07/qun-hui-xia-gitea-drone-harbor-shi-xian-ci-cd-fa-bu-dao-yun-fu-wu-qi/index.html","hash":"3c13a1d50aeba415915e80d661cd18ce259418d3","modified":1657442282896},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1657590099068},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1657590099068},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1657590099068},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1657590099068},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1657590099068},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1657590099068},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1657590099068},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1657590099068},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1657590099068},{"_id":"public/images/pasted-0.png","hash":"49a0ee33e5562e850e83e8522ed730f12f88ff02","modified":1657442282896},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1657590099068},{"_id":"public/images/pasted-1.png","hash":"4060d64cb1f4672f997c612c19aca6bb9a2a354c","modified":1657442282896},{"_id":"public/images/pasted-3.png","hash":"334fe972de1087b23066e1d49704ef3d86871c45","modified":1657442282896},{"_id":"public/images/pasted-2.png","hash":"3bd9096c1a29f0cd82419c1fb0aadf3bd8ae56c6","modified":1657442282896},{"_id":"public/images/pasted-5.png","hash":"edf6b99ddd659a5dd84272c5536496f6b9b0c910","modified":1657442282896},{"_id":"public/images/pasted-6.png","hash":"6f6e13c0d45357cc368ce6fbb6238aceb9d2a10e","modified":1657442282896},{"_id":"public/images/pasted-9.png","hash":"3418a35be72ead4c0c08b28e04b45255e6841c80","modified":1657442282896},{"_id":"public/images/pasted-8.png","hash":"a1c84160194fefed32cab3fc653a69075a50c0d9","modified":1657442282896},{"_id":"public/images/pasted-10.png","hash":"d5f34ff35fa6227fb5386450f2d8b218088097bc","modified":1657442282896},{"_id":"public/images/pasted-11.png","hash":"aba28fb05092d1e581818c99865356b844a15d18","modified":1657442282896},{"_id":"public/images/pasted-13.png","hash":"f9fca4695fc5c99f8ef5c6245c9f8a80026a75cb","modified":1657442282896},{"_id":"public/images/pasted-12.png","hash":"e4b9faee7c51962e808eecc75accfe255e873788","modified":1657442282896},{"_id":"public/images/pasted-14.png","hash":"900c366a5f1faa4d24fcfb96967a624b5a8f04a3","modified":1657442282896},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1657590099068},{"_id":"public/images/pasted-4.png","hash":"45666a0f9bc6b6dcee4850e3d3135a3e71a7e942","modified":1657442282896},{"_id":"public/images/pasted-7.png","hash":"54c699ce0a04f22324686c1762024bed3b826a5b","modified":1657442282896},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1657590099068},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1657590099068},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1657590099068},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1657590099068},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1657590099068},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1657590099068},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1657590099068},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1657590099068},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1657590099068},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1657590099068},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1657590099068},{"_id":"source/images/pasted-15.png","hash":"256310352489a51a98b7b5e930561cca608cb9e2","modified":1657165487487},{"_id":"source/_drafts/使用hexo-admin写博客.md","hash":"38dfab15a0936f14b6c2276c0ce0e103799d9087","modified":1657167864049},{"_id":"source/_posts/使用hexo-admin写博客.md","hash":"686b39abbdd958ddc4c1d66beb0aae48aa46d3d4","modified":1657186060104},{"_id":"source/categories/index.md","hash":"fb578b3be8aac5625848089567c1ab3d07043906","modified":1657185407525},{"_id":"source/medias/alipay.jpg","hash":"fbced403ef16f2079d671a4a163e4d12d7a94b00","modified":1657179045862},{"_id":"source/medias/logo.png","hash":"3983ed3008cb9dba62b1e861019e5b711deaeaea","modified":1657179045863},{"_id":"source/tags/index.md","hash":"f56b9ec94143f80dc235246dbf462aff1169dbed","modified":1657185394547},{"_id":"source/medias/wechatpay.jpg","hash":"c36a49c5bd560f51c3c062e730d7cb42a6fc48b8","modified":1657179045863},{"_id":"themes/hexo-theme-bamboo/source/medias/alipay.jpg","hash":"fbced403ef16f2079d671a4a163e4d12d7a94b00","modified":1657179045862},{"_id":"themes/hexo-theme-bamboo/source/medias/wechatpay.jpg","hash":"c36a49c5bd560f51c3c062e730d7cb42a6fc48b8","modified":1657179045863},{"_id":"source/_drafts/oracle删除超过N天数据脚本.md","hash":"d84b24c3053b30441041a8a7a6053e1a0a04ed39","modified":1657241246123},{"_id":"source/cnblogs/11175665/11175665.md","hash":"f51d4286a21fcec4046503f4aee42d0fc8cd6d9e","modified":1657437100269},{"_id":"source/cnblogs/11102764/11102764.md","hash":"81b8145bb8aa0f3c13997f8be1270e8c441a7902","modified":1657437100586},{"_id":"source/cnblogs/11103547/11103547.md","hash":"640b8adbcc42834a7be1292d632b3b0688e36aa6","modified":1657437100359},{"_id":"source/cnblogs/12430453/12430453.md","hash":"b3f5f1da68e6e31b68c6694b94076d8bbabb5974","modified":1657437100109},{"_id":"source/cnblogs/12530605/12530605.md","hash":"e7734f9b664447ef9e2514d24bf8f3278bdd3e40","modified":1657437099764},{"_id":"source/cnblogs/12397911/12397911.md","hash":"c2717f7d75b5d13a7e74015a0964fdae9032ced9","modified":1657437100189},{"_id":"source/cnblogs/12525540/12525540.md","hash":"fe9e273259696d522c55cfe340bfa72a4bf17f1c","modified":1657437099933},{"_id":"source/cnblogs/12490995/12490995.md","hash":"21e31efecce80567280ec33f7de23a90d64516e3","modified":1657437100029},{"_id":"source/cnblogs/13081247/13081247.md","hash":"f0b931dc6d97a156066318fbd57a53cb8dbeb943","modified":1657437099375},{"_id":"source/cnblogs/12833014/12833014.md","hash":"2646b7d1d47c863f09daa6049f9a37dfd16b8ba9","modified":1657437099569},{"_id":"source/cnblogs/13040338/13040338.md","hash":"f8ce4868e77b42cf4d0265d2a4d703d295eafa70","modified":1657437099483},{"_id":"source/cnblogs/12700974/12700974.md","hash":"a3994dd4dd4980ff46e0ea8e85ed1997833e35a7","modified":1657437099681},{"_id":"source/cnblogs/13089690/13089690.md","hash":"02b52f31660286b3e3400d8f04a0f97936e226d7","modified":1657437099305},{"_id":"source/cnblogs/13137930/13137930.md","hash":"a62134c7aa54554cdd6887e3c0d60660ece43aae","modified":1657437099017},{"_id":"source/cnblogs/15614159/15614159.md","hash":"39a7a6e030b915d4d392cbecf31ea7929d69a7d0","modified":1657437098323},{"_id":"source/cnblogs/15571172/15571172.md","hash":"6ef3b6515ef288c2b897f8375e3e89038594e311","modified":1657437098396},{"_id":"source/cnblogs/14366411/14366411.md","hash":"ccf98ad33654023933a781e8f4672fcb363e2d01","modified":1657437098555},{"_id":"source/cnblogs/15892850/15892850.md","hash":"ce9828e5196a5196994bdbf00806268a31de5b49","modified":1657437097851},{"_id":"source/cnblogs/15668914/15668914.md","hash":"97b4ff34a8290714e37a3ce4d7f8a2c91951d0fc","modified":1657437098049},{"_id":"source/cnblogs/15692108/15692108.md","hash":"5ed68433feb54aec017819870b2438bc9ae1f752","modified":1657437097933},{"_id":"source/cnblogs/15939761/15939761.md","hash":"17b056ef7a5f78c43632dc843e8ee4104e694d72","modified":1657437097765},{"_id":"source/cnblogs/15614177/15614177.md","hash":"7a5f0aa34d32682a58ff8cb061467a39b6497e16","modified":1657437098140},{"_id":"source/cnblogs/15944641/15944641.md","hash":"472f155547ffc7504ec31e53853deba5717b3a3c","modified":1657437097692},{"_id":"source/cnblogs/15193971/15193971.md","hash":"7a53a0c7fee765950c84dbc05baffad48eeded95","modified":1657437098239},{"_id":"source/cnblogs/6096502/6096502.md","hash":"ac81e64314d1c097a699749863780eaafac51484","modified":1657437100733},{"_id":"source/cnblogs/7170210/7170210.md","hash":"da250cd77f50e7d5b86168b1f552dcfa066c8444","modified":1657437100652},{"_id":"source/cnblogs/16284709/16284709.md","hash":"4dffbec3a30488be191fbd8c4eda634a45a833ff","modified":1657437097624},{"_id":"source/cnblogs/5085021/5085021.md","hash":"350e74e47eae1f559490722c23504ba7aa23af72","modified":1657437100879},{"_id":"source/cnblogs/11103355/11103355.md","hash":"d349d9124e87b8a83bcfddd386771fbc50fa34e5","modified":1657437100509},{"_id":"source/cnblogs/13096427/13096427.md","hash":"7d9a2be095fbbdab8c30ba52d393053267c1b38f","modified":1657437099205},{"_id":"source/cnblogs/13596927/13596927.md","hash":"0a41630885d8b57c90d21fb24d211edd06a21fff","modified":1657437098923},{"_id":"source/_posts/cnblogs/11102764/11102764.md","hash":"19c5e44a3afc3ad0f25db6f4e5a6baef91139851","modified":1657439280374},{"_id":"source/_posts/cnblogs/11103547/11103547.md","hash":"ab989a22fe8f322268c74771425631c7f0ac2f9a","modified":1657439280220},{"_id":"source/_posts/cnblogs/11175665/11175665.md","hash":"411df4b777aee9970300eab979a3d74b09f3baf8","modified":1657439280151},{"_id":"source/_posts/cnblogs/12397911/12397911.md","hash":"f5f6109bee9ed7fa1eec9a6dd75964493547c746","modified":1657439280083},{"_id":"source/_posts/cnblogs/12430453/12430453.md","hash":"2dd7abeb2223399a6b56a448293acf362efd4641","modified":1657439280015},{"_id":"source/_posts/cnblogs/12490995/12490995.md","hash":"5657267c84309d316257ad377ee87f61b020537d","modified":1657439279946},{"_id":"source/_posts/cnblogs/12525540/12525540.md","hash":"a8f9012b1b6da83b2331eb58edd1975ec64cf26a","modified":1657439279867},{"_id":"source/_posts/cnblogs/12700974/12700974.md","hash":"3f44fa6dc8aea2f65b686ad4192796932281faf5","modified":1657439279677},{"_id":"source/_posts/cnblogs/12833014/12833014.md","hash":"071f99738be508b4a3dd9c891b2a625245074c6e","modified":1657439279604},{"_id":"source/_posts/cnblogs/12530605/12530605.md","hash":"d7bbd2cb555e1235d20520d1a465d01fca8c95c2","modified":1657439279742},{"_id":"source/_posts/cnblogs/13040338/13040338.md","hash":"2253bd1fc241387f27930022500e1b1dbd3a8f4f","modified":1657439279519},{"_id":"source/_posts/cnblogs/13081247/13081247.md","hash":"e2698b794b893d0fce5f09ec2af1054fd5bbbabb","modified":1657439279437},{"_id":"source/_posts/cnblogs/13089690/13089690.md","hash":"dc0dfcaf4ae91b41dae7817a6cf3f545c14ecede","modified":1657439279378},{"_id":"source/_posts/cnblogs/13137930/13137930.md","hash":"aa07ee5f037e772bef906bc79ea91a45babe0739","modified":1657439279195},{"_id":"source/_posts/cnblogs/14366411/14366411.md","hash":"c08e266e4f6849e6e6d5eb178e4a31ab64c8b527","modified":1657439278953},{"_id":"source/_posts/cnblogs/15193971/15193971.md","hash":"76925034516f0e522c59c2df49bc09cbf4133348","modified":1657443274687},{"_id":"source/_posts/cnblogs/15571172/15571172.md","hash":"2a7edae3390038118b11273843d2a6c1e412957b","modified":1657443275254},{"_id":"source/_posts/cnblogs/15614159/15614159.md","hash":"772233931aec362b67eba09a5cb8a185d4e01c48","modified":1657443274938},{"_id":"source/_posts/cnblogs/15614177/15614177.md","hash":"74e3e79b747827676bfd77c62964b19d92fafa93","modified":1657443274535},{"_id":"source/_posts/cnblogs/15668914/15668914.md","hash":"6b1bc737949bf5d1d1b6796724c10801b43dd341","modified":1657439278551},{"_id":"source/_posts/cnblogs/15692108/15692108.md","hash":"c791fa34eee75a52d22e31c3b7da0a7dbe4b7a9b","modified":1657443274323},{"_id":"source/_posts/cnblogs/15939761/15939761.md","hash":"ee890af9ac5e28c823fd09ae1b7bfb9dd6519c1c","modified":1657443273036},{"_id":"source/_posts/cnblogs/15892850/15892850.md","hash":"e79ed50f6e1cf27aea8a43735996b203c7fe7cf7","modified":1657439278368},{"_id":"source/_posts/cnblogs/15944641/15944641.md","hash":"0319d8ce68ba9608fde4648e216e6c16e0791bf0","modified":1657439278242},{"_id":"source/_posts/cnblogs/5085021/5085021.md","hash":"0677aec06122627cd450f097ca440fc878aff366","modified":1657439280626},{"_id":"source/_posts/cnblogs/6096502/6096502.md","hash":"2b3a311a5797ce49a4995c5110227167df4ea0c4","modified":1657439280511},{"_id":"source/_posts/cnblogs/16284709/16284709.md","hash":"e85cd4500d0cad4c737417b0cf879f8707e0685d","modified":1657443272861},{"_id":"source/_posts/cnblogs/7170210/7170210.md","hash":"ea39ea5245e5200e31fbe7dc1e0740ef8538ddef","modified":1657439280437},{"_id":"source/_posts/cnblogs/11103355/11103355.md","hash":"1b0b6c4d0e2c74e110fdf9b55ebca67ccfcb34b9","modified":1657439280311},{"_id":"source/_posts/cnblogs/13096427/13096427.md","hash":"e47f76831cd48d57787486e07c9d7f2517f7ebd0","modified":1657439279302},{"_id":"source/_posts/cnblogs/13596927/13596927.md","hash":"85786e0b6f67304ae02722355c9359c8223c712d","modified":1657439279111},{"_id":"source/_posts/downmyblogs.go","hash":"68137a7394c35a2c2c558a4598815ec4e052451c","modified":1657458055466},{"_id":"source/cnblogs/16284709/789895-20220517111756488-2065442884.png","hash":"773cef19a52d6055f50302226b82c552ac31cb47","modified":1657442188855},{"_id":"source/cnblogs/15939761/789895-20220226164638139-2008783301.png","hash":"5ce5a3aac26a4c98f2f7fc514a47a09c1ba75ec7","modified":1657442189543},{"_id":"source/cnblogs/15692108/789895-20211215112128412-1674811.png","hash":"1d6afd1d672d83d82baa970725570f120dd8202d","modified":1657442189856},{"_id":"source/cnblogs/15614177/789895-20211128011722252-460488491.png","hash":"68885f49bb49cb61a2623ec289b83df28ddf69ba","modified":1657442190354},{"_id":"source/cnblogs/15193971/789895-20210827144401834-1665510685.png","hash":"d8cab19d8f32876e02503a79c9c040c70bd35458","modified":1657442190495},{"_id":"source/cnblogs/15614159/789895-20211128000729936-492119129.png","hash":"b14b6f519629b9ad0823fc46c5d7b1509dead069","modified":1657442190908},{"_id":"source/cnblogs/15571172/789895-20211118103746539-355562978.png","hash":"84cc3ded1230a05cd6d22affbb74293cc460fbbe","modified":1657442191185},{"_id":"source/cnblogs/15193971/789895-20210827151210561-965213108.png","hash":"325c39231e8bbec5247f5f6a1b04116156bd194d","modified":1657442190755},{"_id":"source/cnblogs/15193971/789895-20210827151048567-1226899289.png","hash":"6a940bcb6b1c5d36a101c0fd3d5530b98feaef03","modified":1657442190642},{"_id":"source/cnblogs/15571172/789895-20211118103547205-905835845.png","hash":"111889fe308858d3d85828528e015fbdda1ffa4b","modified":1657442191238},{"_id":"source/cnblogs/15571172/789895-20211118103220257-1533204017.png","hash":"03dd7bf9403b9df56774b2fc1ed84a6f56c476fe","modified":1657442191349},{"_id":"source/cnblogs/15193971/789895-20210827152813941-141137389.png","hash":"997e4648a19e6ba55ea8076b93e00717edee96bd","modified":1657442190598},{"_id":"source/cnblogs/15571172/789895-20211118103607570-913262409.png","hash":"652ffe59c9700826b83993148889a55cf6205898","modified":1657442191322},{"_id":"source/cnblogs/16284709/789895-20220517111813678-1694156337.png","hash":"4fdb0e3ee1e937b8f62425adbcae50a430ed9758","modified":1657442188876},{"_id":"source/cnblogs/15692108/789895-20211220155923883-682805455.png","hash":"e6a8118ba942c95ac5125730e7f58dd3d7f21f08","modified":1657442190151},{"_id":"source/cnblogs/15692108/789895-20211215122523232-1554137109.png","hash":"9328d45e83d5d531e0bddb78025fda1b3c581c87","modified":1657442190083},{"_id":"source/cnblogs/16284709/789895-20220517111832836-992205237.png","hash":"75bc581c7796d0ddb596752d0626c74fbfe68eb8","modified":1657442188927},{"_id":"source/cnblogs/16284709/789895-20220517114752421-658892608.png","hash":"53782045eeef563e4b65c6e8ad637eb277e4949e","modified":1657442189087},{"_id":"source/cnblogs/16284709/789895-20220517111854548-1820389538.png","hash":"bf109e5e479ea4aeb97084354681ebcaec131259","modified":1657442188944},{"_id":"source/cnblogs/15939761/789895-20220226164746450-1643262002.png","hash":"2b2c4770893492a6dd900f82c4f852997096c51a","modified":1657442189604},{"_id":"source/cnblogs/16284709/789895-20220517131720760-1485029732.png","hash":"0f00d8509e2236b4a842b568586afab301235e9d","modified":1657442189299},{"_id":"source/cnblogs/16284709/789895-20220517130635925-523477370.png","hash":"3e553a823ce8f8a505bfae3181ecbf33ef90cd4c","modified":1657442189136},{"_id":"source/cnblogs/16284709/789895-20220517130352970-2011761276.png","hash":"aa4de3ead1f4054041770acc18552549a17c7b01","modified":1657442189250},{"_id":"source/cnblogs/15939761/789895-20220226164817702-919307590.png","hash":"83cd84dc29d7b8d7440af6a112a3cea0147cf977","modified":1657442189618},{"_id":"source/cnblogs/15939761/789895-20220226164847500-536945200.png","hash":"04e8670a0fa3853241821c8b8d9e2e28bfe5fe92","modified":1657442189562},{"_id":"source/cnblogs/15692108/789895-20211215114236385-1487974069.png","hash":"2946f6b7919fb2d7154214b254a08b7cf795c81a","modified":1657442189982},{"_id":"source/cnblogs/16284709/789895-20220517112425303-1331896187.png","hash":"fb9e7fd8c26b0f60099e9c9664a6055bec4151fb","modified":1657442189040},{"_id":"source/cnblogs/16284709/789895-20220517130240740-1674070652.png","hash":"ca91a8d14590bc8d84f65c87950f7044f37b05b1","modified":1657442189212},{"_id":"source/cnblogs/16284709/789895-20220517132043920-686434640.png","hash":"4223adc1f628ab80b49d1d32488cf60f7b9ba8c1","modified":1657442189365},{"_id":"source/cnblogs/15614159/789895-20211128000828555-1801882487.png","hash":"4d573470f4a8b15e5f137b55f1bccabcf61a1415","modified":1657442190975},{"_id":"source/cnblogs/15614159/789895-20211128005756655-1385421355.png","hash":"55c6d96e71abc83b50ffb967541ffe6fb18d29e6","modified":1657442191035},{"_id":"public/categories/index.html","hash":"1747775f4d2067a4bf74d8d8bfe17e84445d7ffd","modified":1657590099068},{"_id":"public/tags/index.html","hash":"5a11d0d3c3e38c3314cf39011b8a6e0df8d6f8d4","modified":1657590099068},{"_id":"public/2022/07/07/shi-yong-hexo-admin-xie-bo-ke/index.html","hash":"a1d9cb3107af4d6fd4f588f70e310aeca9b3dfa8","modified":1657590099068},{"_id":"public/2022/05/19/cnblogs/16284709/16284709/index.html","hash":"0565b12437c3ae8a50de997eb0bb97f80edaa779","modified":1657442282896},{"_id":"public/2022/02/28/cnblogs/15944641/15944641/index.html","hash":"8e005b4dd96a2fab5f3f6e68f53a47be53f9ba17","modified":1657442282896},{"_id":"public/2022/02/26/cnblogs/15939761/15939761/index.html","hash":"eddffc8120668275ea006e6dab7e2b22fa45b279","modified":1657442282896},{"_id":"public/2022/02/14/cnblogs/15892850/15892850/index.html","hash":"a8825c03a7b5aa0831a14d4894297a75c1499436","modified":1657442282896},{"_id":"public/2021/12/15/cnblogs/15692108/15692108/index.html","hash":"36a22808b3344f6d01f24f9729a3b1819004594b","modified":1657442282896},{"_id":"public/2021/12/09/cnblogs/15668914/15668914/index.html","hash":"c9d9770c179bfda961535514d43b82adf94c3b9b","modified":1657442282896},{"_id":"public/2021/11/28/cnblogs/15614177/15614177/index.html","hash":"8af29510bc64f77294bb2c413ee725d03a34d6aa","modified":1657442282896},{"_id":"public/2021/11/28/cnblogs/15193971/15193971/index.html","hash":"fd0112cb25c57e3234a80eac0b16e2a381abd7eb","modified":1657442282896},{"_id":"public/2021/11/28/cnblogs/15614159/15614159/index.html","hash":"c64f27ed86e6e6ff181cd47b1f43a128edb8d796","modified":1657442282896},{"_id":"public/2021/11/18/cnblogs/15571172/15571172/index.html","hash":"1038c30147df7a713a0f7f95eeafc54fd58c4e36","modified":1657442282896},{"_id":"public/page/2/index.html","hash":"2c720228847c4625f2fe4710123f5f526f362cf6","modified":1657590099068},{"_id":"public/categories/前端/index.html","hash":"e24dcc5192dea16742ad2ece9bac6b4547945beb","modified":1657590099068},{"_id":"public/categories/CI-CD/index.html","hash":"c94ec8bc6cfbee15a52c80b4fe1ea204f78f91d7","modified":1657442282896},{"_id":"public/tags/hexo/index.html","hash":"1b481e745e8779a7d4b3a52393a2ec27f9adae08","modified":1657590099068},{"_id":"public/tags/hexo-admin/index.html","hash":"727da8a5e71a654327c5cac7c8310ae8a9a85e9d","modified":1657590099068},{"_id":"public/tags/gitea/index.html","hash":"910e29fa4f8f117d20d47ac1ecfb2f0b7facf324","modified":1657590099068},{"_id":"public/tags/drone/index.html","hash":"0afa6f6547bbdba8bf7a9a1416a939b55ff07256","modified":1657590099068},{"_id":"public/tags/harbor/index.html","hash":"10962c45aadaf7385dbace24f1b1994f809c8fea","modified":1657590099068},{"_id":"public/tags/群晖/index.html","hash":"37e8aa1eafa1da6d6d6e023126d1d628aef6ef52","modified":1657590099068},{"_id":"public/tags/rabbitmq/index.html","hash":"f64f06949fcc131959c5f1f287fd67fd0e367433","modified":1657590099068},{"_id":"public/tags/k8s/index.html","hash":"70f7592a2e309cd1c02637532ad8d63f22061053","modified":1657590099068},{"_id":"public/tags/go/index.html","hash":"bb1a183fc780388b9123b5d6f1327892adb7ff6e","modified":1657590099068},{"_id":"public/tags/go文件下载/index.html","hash":"c1e516c25c05ce82599979af36b347380972c2c8","modified":1657590099068},{"_id":"public/tags/dnspod/index.html","hash":"82b3ca351b3eaaf95152a3a2b61728548d1ee37c","modified":1657590099068},{"_id":"public/tags/域名解析记录/index.html","hash":"46331e953579093727075cf370050036d3b992e7","modified":1657590099068},{"_id":"public/tags/k3s/index.html","hash":"464351fbe69bb4eb18bf4068c8e8aa85e0ad9486","modified":1657590099068},{"_id":"public/tags/ubuntu/index.html","hash":"22e54a1876749ec5ef4ec69087ca6d7eafaabbb7","modified":1657590099068},{"_id":"public/tags/docker/index.html","hash":"fcc4535f89badc58aff81fbce9b2e4db5418694f","modified":1657590099068},{"_id":"public/tags/ubuntu内核升级/index.html","hash":"dce54db28397ee7d643943e1c877e4fdf4d3561b","modified":1657590099068},{"_id":"public/tags/压测/index.html","hash":"c97c303c8cdb7312e598ae0cddd7631089bc9802","modified":1657590099068},{"_id":"public/tags/net6/index.html","hash":"ccf64370ba1b52bc9018cae4b2e5325d03e47809","modified":1657590099068},{"_id":"public/archives/page/2/index.html","hash":"314996a1d20a1e73f2a0e1018eb14d9c05c45245","modified":1657590099068},{"_id":"public/archives/2021/index.html","hash":"bc93a17e551cb0e2c72e4727ca387704f58e2b75","modified":1657590099068},{"_id":"public/archives/2021/11/index.html","hash":"7369ea476c7458e478014082e5e6e45744ccac35","modified":1657590099068},{"_id":"public/archives/2021/12/index.html","hash":"de1bf3130839fc7de3e284a2f446237e129ae119","modified":1657590099068},{"_id":"public/archives/2022/02/index.html","hash":"47afae3de31ae491791c93ad891f2f0de5c8c795","modified":1657590099068},{"_id":"public/archives/2022/05/index.html","hash":"794faa2ea0d1713f32750afff94afc5d5f66bb0c","modified":1657590099068},{"_id":"public/cnblogs/16284709/789895-20220517111813678-1694156337.png","hash":"4fdb0e3ee1e937b8f62425adbcae50a430ed9758","modified":1657590099068},{"_id":"public/cnblogs/16284709/789895-20220517111854548-1820389538.png","hash":"bf109e5e479ea4aeb97084354681ebcaec131259","modified":1657590099068},{"_id":"public/cnblogs/16284709/789895-20220517111756488-2065442884.png","hash":"773cef19a52d6055f50302226b82c552ac31cb47","modified":1657590099068},{"_id":"public/cnblogs/16284709/789895-20220517111832836-992205237.png","hash":"75bc581c7796d0ddb596752d0626c74fbfe68eb8","modified":1657590099068},{"_id":"public/cnblogs/16284709/789895-20220517114752421-658892608.png","hash":"53782045eeef563e4b65c6e8ad637eb277e4949e","modified":1657590099068},{"_id":"public/cnblogs/16284709/789895-20220517130635925-523477370.png","hash":"3e553a823ce8f8a505bfae3181ecbf33ef90cd4c","modified":1657590099068},{"_id":"public/cnblogs/15939761/789895-20220226164638139-2008783301.png","hash":"5ce5a3aac26a4c98f2f7fc514a47a09c1ba75ec7","modified":1657590099068},{"_id":"public/cnblogs/16284709/789895-20220517130352970-2011761276.png","hash":"aa4de3ead1f4054041770acc18552549a17c7b01","modified":1657590099068},{"_id":"public/cnblogs/16284709/789895-20220517131720760-1485029732.png","hash":"0f00d8509e2236b4a842b568586afab301235e9d","modified":1657590099068},{"_id":"public/cnblogs/15939761/789895-20220226164817702-919307590.png","hash":"83cd84dc29d7b8d7440af6a112a3cea0147cf977","modified":1657590099068},{"_id":"public/cnblogs/15939761/789895-20220226164847500-536945200.png","hash":"04e8670a0fa3853241821c8b8d9e2e28bfe5fe92","modified":1657590099068},{"_id":"public/cnblogs/15692108/789895-20211215112128412-1674811.png","hash":"1d6afd1d672d83d82baa970725570f120dd8202d","modified":1657590099068},{"_id":"public/cnblogs/15692108/789895-20211215122523232-1554137109.png","hash":"9328d45e83d5d531e0bddb78025fda1b3c581c87","modified":1657590099068},{"_id":"public/cnblogs/15939761/789895-20220226164746450-1643262002.png","hash":"2b2c4770893492a6dd900f82c4f852997096c51a","modified":1657590099068},{"_id":"public/cnblogs/15692108/789895-20211220155923883-682805455.png","hash":"e6a8118ba942c95ac5125730e7f58dd3d7f21f08","modified":1657590099068},{"_id":"public/cnblogs/15193971/789895-20210827151048567-1226899289.png","hash":"6a940bcb6b1c5d36a101c0fd3d5530b98feaef03","modified":1657590099068},{"_id":"public/cnblogs/15614177/789895-20211128011722252-460488491.png","hash":"68885f49bb49cb61a2623ec289b83df28ddf69ba","modified":1657590099068},{"_id":"public/cnblogs/15193971/789895-20210827152813941-141137389.png","hash":"997e4648a19e6ba55ea8076b93e00717edee96bd","modified":1657590099068},{"_id":"public/cnblogs/15193971/789895-20210827151210561-965213108.png","hash":"325c39231e8bbec5247f5f6a1b04116156bd194d","modified":1657590099068},{"_id":"public/cnblogs/15571172/789895-20211118103607570-913262409.png","hash":"652ffe59c9700826b83993148889a55cf6205898","modified":1657590099068},{"_id":"public/cnblogs/15571172/789895-20211118103746539-355562978.png","hash":"84cc3ded1230a05cd6d22affbb74293cc460fbbe","modified":1657590099068},{"_id":"public/cnblogs/15571172/789895-20211118103220257-1533204017.png","hash":"03dd7bf9403b9df56774b2fc1ed84a6f56c476fe","modified":1657590099068},{"_id":"public/cnblogs/15571172/789895-20211118103547205-905835845.png","hash":"111889fe308858d3d85828528e015fbdda1ffa4b","modified":1657590099068},{"_id":"public/medias/alipay.jpg","hash":"fbced403ef16f2079d671a4a163e4d12d7a94b00","modified":1657590099068},{"_id":"public/medias/wechatpay.jpg","hash":"c36a49c5bd560f51c3c062e730d7cb42a6fc48b8","modified":1657590099068},{"_id":"public/images/pasted-15.png","hash":"256310352489a51a98b7b5e930561cca608cb9e2","modified":1657442282896},{"_id":"public/cnblogs/16284709/789895-20220517112425303-1331896187.png","hash":"fb9e7fd8c26b0f60099e9c9664a6055bec4151fb","modified":1657590099068},{"_id":"public/cnblogs/16284709/789895-20220517132043920-686434640.png","hash":"4223adc1f628ab80b49d1d32488cf60f7b9ba8c1","modified":1657590099068},{"_id":"public/cnblogs/16284709/789895-20220517130240740-1674070652.png","hash":"ca91a8d14590bc8d84f65c87950f7044f37b05b1","modified":1657590099068},{"_id":"public/cnblogs/15692108/789895-20211215114236385-1487974069.png","hash":"2946f6b7919fb2d7154214b254a08b7cf795c81a","modified":1657590099068},{"_id":"public/cnblogs/15614159/789895-20211128000729936-492119129.png","hash":"b14b6f519629b9ad0823fc46c5d7b1509dead069","modified":1657590099068},{"_id":"public/cnblogs/15193971/789895-20210827144401834-1665510685.png","hash":"d8cab19d8f32876e02503a79c9c040c70bd35458","modified":1657590099068},{"_id":"public/cnblogs/15614159/789895-20211128000828555-1801882487.png","hash":"4d573470f4a8b15e5f137b55f1bccabcf61a1415","modified":1657590099068},{"_id":"public/cnblogs/15614159/789895-20211128005756655-1385421355.png","hash":"55c6d96e71abc83b50ffb967541ffe6fb18d29e6","modified":1657590099068},{"_id":"source/_posts/cnblogs/15614159.md","hash":"772233931aec362b67eba09a5cb8a185d4e01c48","modified":1657443843607},{"_id":"source/_posts/cnblogs/15193971.md","hash":"76925034516f0e522c59c2df49bc09cbf4133348","modified":1657443843426},{"_id":"source/_posts/cnblogs/15571172.md","hash":"2a7edae3390038118b11273843d2a6c1e412957b","modified":1657443843884},{"_id":"source/_posts/cnblogs/15614177.md","hash":"74e3e79b747827676bfd77c62964b19d92fafa93","modified":1657443843183},{"_id":"source/_posts/cnblogs/15668914.md","hash":"6b1bc737949bf5d1d1b6796724c10801b43dd341","modified":1657443843096},{"_id":"source/_posts/cnblogs/15692108.md","hash":"c791fa34eee75a52d22e31c3b7da0a7dbe4b7a9b","modified":1657443842986},{"_id":"source/_posts/cnblogs/15939761.md","hash":"ee890af9ac5e28c823fd09ae1b7bfb9dd6519c1c","modified":1657443842493},{"_id":"source/_posts/cnblogs/15944641.md","hash":"0319d8ce68ba9608fde4648e216e6c16e0791bf0","modified":1657443842261},{"_id":"source/_posts/cnblogs/16284709.md","hash":"e85cd4500d0cad4c737417b0cf879f8707e0685d","modified":1657443842187},{"_id":"source/_posts/cnblogs/15892850.md","hash":"e79ed50f6e1cf27aea8a43735996b203c7fe7cf7","modified":1657443842571},{"_id":"source/cnblogs/13596927/789895-20200901161634167-1622109568.png","hash":"db0f00c5852c1040f19b92f8eb216e36f8aaf90b","modified":1657450976485},{"_id":"source/cnblogs/13096427/789895-20200611210551368-1414077737.png","hash":"acb8c8c9e5ecd5fc4c44a52224590875f984fa5b","modified":1657450977675},{"_id":"source/cnblogs/13089690/789895-20200610195839215-1000464738.png","hash":"150b08862cb0d05d7df397a6cbeda981303f807c","modified":1657458071903},{"_id":"source/cnblogs/13081247/789895-20200609201430814-1116404017.png","hash":"021f4c48576566fc64409b7e277b05ae0bcaf052","modified":1657450982964},{"_id":"source/cnblogs/13040338/789895-20200603213817384-989892636.png","hash":"ee5f7f813a36e3e611e09d5dd93488794c5ec8ed","modified":1657458073217},{"_id":"source/cnblogs/12833014/789895-20200505211512224-1873232722.png","hash":"0dda97ab3d10d913d154548bba2d2b85a03f6d62","modified":1657450984231},{"_id":"source/cnblogs/12700974/789895-20200414202950686-1257092366.png","hash":"aa3e256effc7c78d43fb01af8e6f848365cf2979","modified":1657450984666},{"_id":"source/cnblogs/12525540/789895-20200319163629002-354206810.png","hash":"289542c1d355b1b64c45a98c65da8e4f6104eaad","modified":1657450985337},{"_id":"source/cnblogs/12490995/789895-20200314103719008-486099808.png","hash":"6cf85a6e072e2d781feeeb18ab9402b4f3ed9560","modified":1657450988440},{"_id":"source/cnblogs/12430453/789895-20200306195120995-807700091.png","hash":"f35b36af02f0c86dddada17011ac0f440dbc83f9","modified":1657450990667},{"_id":"source/cnblogs/11175665/789895-20190712135006227-2107371641.png","hash":"2d04bed74b0cdf8ed99978f0a0196beb902a6c37","modified":1657458080075},{"_id":"source/_posts/cnblogs/11102764.md","hash":"c5072f55f7ec84def0ee17e8675e2b3aa7915155","modified":1657458084907},{"_id":"source/_posts/cnblogs/11103547.md","hash":"56ca6b2bbf5c874a93ce70bb8195e230188241ac","modified":1657458084467},{"_id":"source/_posts/cnblogs/11175665.md","hash":"ae35c2b034ca4fad9141024e9f88e563d71a7603","modified":1657458084377},{"_id":"source/_posts/cnblogs/12430453.md","hash":"b144d83a28a6f845f5e4b67296af0c2307ae4093","modified":1657458079613},{"_id":"source/_posts/cnblogs/12397911.md","hash":"f5f6109bee9ed7fa1eec9a6dd75964493547c746","modified":1657458079694},{"_id":"source/_posts/cnblogs/12490995.md","hash":"3e05c74fb0326dd2020cf784cab687fadb2c167f","modified":1657458077490},{"_id":"source/_posts/cnblogs/12700974.md","hash":"493b1996e3b379f55847428a9456d0d66f4fddd6","modified":1657458073461},{"_id":"source/_posts/cnblogs/12530605.md","hash":"d7bbd2cb555e1235d20520d1a465d01fca8c95c2","modified":1657458073624},{"_id":"source/_posts/cnblogs/12525540.md","hash":"2e8a5a66cf253e09aaa041fa3868ec9bd2561a46","modified":1657458074500},{"_id":"source/_posts/cnblogs/12833014.md","hash":"7fb110370bedcbc9cc9e0bd629fd9adf8bd15ec4","modified":1657458073341},{"_id":"source/_posts/cnblogs/13081247.md","hash":"646157a1350c8fe65dac2e3bac345604b1492566","modified":1657458073064},{"_id":"source/_posts/cnblogs/13089690.md","hash":"643796835db587f3200960a6c1435a1bdfa2809f","modified":1657458072022},{"_id":"source/_posts/cnblogs/14366411.md","hash":"c08e266e4f6849e6e6d5eb178e4a31ab64c8b527","modified":1657458065489},{"_id":"source/_posts/cnblogs/5085021.md","hash":"25e6c464e16e73dbbfaadb1e5237e549fde2807e","modified":1657458086717},{"_id":"source/_posts/cnblogs/6096502.md","hash":"2b3a311a5797ce49a4995c5110227167df4ea0c4","modified":1657458085717},{"_id":"source/_posts/cnblogs/13040338.md","hash":"d7405c2888d768f27fdd5b00be23e9aa83ac6cb0","modified":1657458073222},{"_id":"source/cnblogs/12430453/789895-20200306195431746-1019534379.png","hash":"d44f45504d02466251a073f186fc724f35998226","modified":1657458078028},{"_id":"source/_posts/cnblogs/7170210.md","hash":"52d20b4d7ad86696ccccb300b0147084a14abd99","modified":1657458084988},{"_id":"source/cnblogs/12430453/789895-20200306195519061-1807506073.png","hash":"ad177c8d8fe19e1b43dc25b02354df8107b30641","modified":1657458079611},{"_id":"source/_posts/cnblogs/16463506.md","hash":"719c40852b642e6cd354093ef9950ea6559650cf","modified":1657458062874},{"_id":"source/cnblogs/12490995/1730174-20190723172447650-1888406330.png","hash":"cc7f7835ab0e5cbf07dcf51cb1204dcc4381d912","modified":1657458076976},{"_id":"source/cnblogs/12490995/1730174-20190723172615004-1777913221.png","hash":"a1279e49537069194d8b1f3ba286fa462d6a3c52","modified":1657458077195},{"_id":"source/cnblogs/12490995/1730174-20190723172640897-1725389911.png","hash":"23ec51b081d702dcd7454cb86f494dd415ab1676","modified":1657458077311},{"_id":"source/cnblogs/12490995/789895-20200314103608996-226690568.png","hash":"e669e8a005b2e7b84101a293ea905e6e3a2fbe18","modified":1657458074948},{"_id":"source/cnblogs/12490995/789895-20200314103742076-1506683442.png","hash":"14a7d7001653026d10e32d1d82ea8baec12b0777","modified":1657458075156},{"_id":"source/cnblogs/12490995/789895-20200314103659453-1423707822.png","hash":"fc33cbfa477178f1aa07f0b7af25e5eac5bc12f3","modified":1657458074866},{"_id":"source/cnblogs/12490995/789895-20200314111035435-454576915.png","hash":"6a363c620a8eaa29f6355d78fbba05c559939e4b","modified":1657458075853},{"_id":"source/cnblogs/12490995/789895-20200314111742266-166098681.png","hash":"84ed7712b0380dd80527ee570c7d8a259ed1af2a","modified":1657458076897},{"_id":"source/cnblogs/12490995/789895-20200314111255378-1900099054.png","hash":"54d6a67529039af21505b82af814b4ba165a7fe0","modified":1657458075932},{"_id":"source/cnblogs/12490995/789895-20200314111407787-1937103574.png","hash":"695b18b9a16bcfbfd63440cc1387a2d31a2eff69","modified":1657458076668},{"_id":"source/cnblogs/12490995/789895-20200314111330497-1914185865.png","hash":"f836141569359e1d5e3023e977563311f94ae620","modified":1657458076014},{"_id":"source/cnblogs/12490995/789895-20200315140044551-1148857260.png","hash":"3e5ae206696488fc4f6927108db30db2773c9cce","modified":1657458077487},{"_id":"source/cnblogs/12490995/789895-20200315144855769-1157086710.png","hash":"f6c199c21d66d97f2b38ba4126a8cac323077c03","modified":1657458077457},{"_id":"source/cnblogs/12490995/789895-20200314111825524-170131346.png","hash":"9c77f3dc9d241df960217c90df26d63beda72e35","modified":1657458077053},{"_id":"source/cnblogs/12525540/789895-20200319163732934-1485815953.png","hash":"27adf37795be878671da173f54fd5c222713d966","modified":1657458073819},{"_id":"source/cnblogs/12525540/789895-20200319164038644-1263763272.png","hash":"03b66189deb277216208f689acad45f23507441f","modified":1657458073887},{"_id":"source/cnblogs/12525540/789895-20200319164325337-719717806.png","hash":"c818995205d156df8189f45d35a06abf73dc2334","modified":1657458073985},{"_id":"source/cnblogs/12525540/789895-20200319164725210-1272652233.png","hash":"e94260db1b2b48aa2cd9c7e7ad0e57b908574441","modified":1657458074180},{"_id":"source/cnblogs/12525540/789895-20200319173859759-522955515.png","hash":"3f704c08ac0cdf157fbb8163d78f5870f142237f","modified":1657458074233},{"_id":"source/cnblogs/12490995/789895-20200315144745201-372259132.png","hash":"781740d718167d18843ac2e8c4001bcf40a99c40","modified":1657458077413},{"_id":"source/cnblogs/12525540/789895-20200321141834541-429866891.png","hash":"c96742d5298ef6060c09016455f9418ad83376b4","modified":1657458073951},{"_id":"source/cnblogs/12525540/789895-20200319164432955-318576517.png","hash":"fc9830997cecece4e39483b6943d55376b68a15c","modified":1657458074051},{"_id":"source/cnblogs/12525540/789895-20200319164451725-1925277368.png","hash":"3faac9caa72ee218ab61668bbc0131b5ebbfc100","modified":1657458074144},{"_id":"source/cnblogs/12525540/789895-20200319175139996-1452396882.png","hash":"4361708cc137f11863a6af9527369113559e1f32","modified":1657458074497},{"_id":"source/cnblogs/12525540/789895-20200321142847608-345165120.png","hash":"f1ef29ce51009855e586eafbb4a0c58bbb8617d4","modified":1657458074276},{"_id":"source/cnblogs/13081247/789895-20200609201521232-1545417003.png","hash":"a507475297c7f6263428d58a273f673e7b9cf973","modified":1657458072340},{"_id":"source/cnblogs/13081247/789895-20200609212852714-221170698.png","hash":"d07e923188c29654f798790927e5029d9e042466","modified":1657458072871},{"_id":"source/cnblogs/13081247/789895-20200609201648005-480300466.png","hash":"4bd5cc98f065b3d1b3ef64032ddbb52a9145f651","modified":1657458072697},{"_id":"source/cnblogs/13081247/789895-20200609213336194-886524168.png","hash":"b0b2fb2a9231ce048335219b1b2ae0832fd9df5f","modified":1657458072769},{"_id":"source/cnblogs/13081247/789895-20200609212654759-830200327.png","hash":"fe05d59fb15e60d77489889af77b40843f9ef7c5","modified":1657458072826},{"_id":"source/cnblogs/13081247/789895-20200609213136622-1683985688.png","hash":"39cd4c8c64c9fa950af5a3050fe4676d4d9d8304","modified":1657458073004},{"_id":"source/cnblogs/13096427/789895-20200613120436495-1821816057.png","hash":"8c4732b62c6dd36f7539d51caab0b1e1608f0f19","modified":1657458067578},{"_id":"source/cnblogs/13096427/789895-20200611210653597-521335150.png","hash":"755e41e35e2a5a96c2931790b7e4ad3fbd8b927c","modified":1657458068499},{"_id":"source/cnblogs/13096427/789895-20200613122549077-374827601.png","hash":"b7684c0e2b5a38d8d875b816ca6e451fb1278cdf","modified":1657458070036},{"_id":"source/cnblogs/13096427/789895-20200613122433371-1340406219.png","hash":"bd06336f0a64ec5f42845d31b594da70f93814e4","modified":1657458069219},{"_id":"source/cnblogs/13096427/789895-20200613152628601-193312193.png","hash":"b7a457cc8386404551bf6e926880525a48fa2fcb","modified":1657458071592},{"_id":"source/cnblogs/13096427/789895-20200613152221722-277186366.png","hash":"926a3e8551afa79f79c033cdbf2f7a0eac9ce544","modified":1657458071555},{"_id":"source/cnblogs/13096427/789895-20200613155431331-1058862470.png","hash":"d9b2f3158bed3626fd4e7f306c9f47445a802518","modified":1657458071639},{"_id":"source/cnblogs/13096427/789895-20200613175433971-1845076483.png","hash":"6f70107a0916b4a60ce8694dc736d849ebafff2c","modified":1657458071752},{"_id":"source/cnblogs/13096427/789895-20200613164737035-1698740974.png","hash":"0e9ade16ff279ba2be7fb751332b72f02505bac2","modified":1657458071674},{"_id":"source/_posts/cnblogs/11103355.md","hash":"1b0b6c4d0e2c74e110fdf9b55ebca67ccfcb34b9","modified":1657458084834},{"_id":"source/cnblogs/12430453/789895-20200306195442560-1506252793.png","hash":"0aeccb091d6f6bdeaa9b421aa2d126862c5216ed","modified":1657458078083},{"_id":"source/_posts/cnblogs/13096427.md","hash":"faf06b37cc9ef20db4bfbeb2a6ef6897f2061653","modified":1657458071765},{"_id":"source/cnblogs/12430453/789895-20200306195506353-591684384.png","hash":"afccc06e4fa52a05c5fa966f132c625df04294da","modified":1657458078639},{"_id":"source/cnblogs/12490995/789895-20200314104017330-12695127.png","hash":"53882e62c4a1d560763f1433ab1cdfde9c80fedf","modified":1657458075736},{"_id":"source/cnblogs/13089690/789895-20200610200454121-120495896.png","hash":"33ca089c639ba5f81c19eb74ae12a5741bbe6f76","modified":1657458071946},{"_id":"source/cnblogs/13089690/789895-20200610220532137-1721821016.png","hash":"35cc9f7a0f0230b4c7cc7fbfdd62b897b82bb078","modified":1657458072016},{"_id":"source/cnblogs/13081247/789895-20200609214928185-1737504330.png","hash":"cecc4fced7cbec268017eb19364c7353b2d8b102","modified":1657458073062},{"_id":"source/cnblogs/13096427/789895-20200613131507643-1916575069.png","hash":"7cb824209117a5f31a768136eb42d3e9a91eb80e","modified":1657458070773},{"_id":"source/cnblogs/13096427/789895-20200613131544727-322024248.png","hash":"429960c8e46ebe0b3ca8381f34f2fcaaac3b98cc","modified":1657458070459},{"_id":"source/cnblogs/13081247/789895-20200609213009479-1523421599.png","hash":"65fe053d8d66a18f32fe6ee5e127635735e32bfd","modified":1657458072922},{"_id":"source/cnblogs/13096427/789895-20200613151834645-748331091.png","hash":"f5f6a3d520e9f44c68e4c70270f7ec1e888769ca","modified":1657458071335},{"_id":"source/cnblogs/13096427/789895-20200613151852573-1477272883.png","hash":"8ccfbf64303d0668da96ad4ed2e7e42c7b73248b","modified":1657458071471},{"_id":"source/_posts/cnblogs/13596927.md","hash":"1e2c70d5109858126ffa4020fe9be687a8ac4869","modified":1657458066591},{"_id":"source/cnblogs/12490995/1730174-20190723172533547-1436305325.png","hash":"950660184fef1313025d7d4aab01cc8ff58542b7","modified":1657458077119},{"_id":"source/cnblogs/12490995/789895-20200314103935434-15938096.png","hash":"4abeb3e067eefe4184c85c8e9663d14783984294","modified":1657458075204},{"_id":"source/cnblogs/12490995/789895-20200314103515432-233460820.png","hash":"d28301af326eeff823b04833541b1753a6f5f332","modified":1657458075104},{"_id":"source/cnblogs/12490995/789895-20200314112146960-1975346260.png","hash":"77964b402144bed5c463cbdb887b816ef2a9c51f","modified":1657458077360},{"_id":"source/cnblogs/12490995/789895-20200314103531976-1657277194.png","hash":"765636ea32bcf257c16f65db69b002d7f3191b17","modified":1657458075022},{"_id":"source/cnblogs/12490995/789895-20200314104005087-1747405802.png","hash":"2f51696fa597f27939dc3f14a18e9f02c6a6dcd7","modified":1657458075261},{"_id":"source/cnblogs/11175665/789895-20190712135205933-637885315.png","hash":"31352d496704304f93fe073938cfe60b147277fe","modified":1657458082257},{"_id":"source/cnblogs/11175665/789895-20190712135246919-1887689710.png","hash":"ab0565fb9d63a113795ec7e04f53aadd5c8e6f58","modified":1657458082819},{"_id":"source/cnblogs/11175665/789895-20190712135227098-2050240776.png","hash":"1b39f0a86d4b74cee1bdec32de2345299e09db21","modified":1657458082364},{"_id":"source/cnblogs/11175665/789895-20190712135307144-1229518040.png","hash":"deebfed0da7fb8c3264e4a920e7f75362164cd73","modified":1657458084374},{"_id":"source/cnblogs/12525540/789895-20200321144900449-1370390112.png","hash":"0eb55c2c0fcb6693f42ce7ab83bcaeaefa31df16","modified":1657458074443},{"_id":"public/2022/07/10/cnblogs/16463506/index.html","hash":"559c81eec50ed51baef8f3011792202a7a9abaf2","modified":1657590099068},{"_id":"public/2022/02/28/cnblogs/15944641/index.html","hash":"52e4b615e7746d7479c67f3ee09ca12f5e394d8a","modified":1657590099068},{"_id":"public/2022/05/19/cnblogs/16284709/index.html","hash":"f2e0a0af0757d0da968e6113d65bf04157ae2814","modified":1657590099068},{"_id":"public/2022/02/26/cnblogs/15939761/index.html","hash":"8fd17fe6fd963b6208a739fdfa25ad04441eca6e","modified":1657590099068},{"_id":"public/2022/02/14/cnblogs/15892850/index.html","hash":"e471cb5f328c93dc3b78ee010b695e7bda214630","modified":1657590099068},{"_id":"public/2021/11/28/cnblogs/15614177/index.html","hash":"cc0b4a3ab6b579f5297675c83d1f6f9630ca07ec","modified":1657590099068},{"_id":"public/2021/12/15/cnblogs/15692108/index.html","hash":"79cf4e3bfc850c040c65ae884bfdc3a1bb040877","modified":1657590099068},{"_id":"public/2021/11/28/cnblogs/15193971/index.html","hash":"023add86f8b681ef4c9049145a5249141bea82f4","modified":1657590099068},{"_id":"public/2021/11/28/cnblogs/15614159/index.html","hash":"17175a442b7e440f5fe42229b077543391ae5e9b","modified":1657590099068},{"_id":"public/2021/11/18/cnblogs/15571172/index.html","hash":"95010d10f6bb12504850fcf021ec5b152e55f7ed","modified":1657590099068},{"_id":"public/2021/02/03/cnblogs/14366411/index.html","hash":"e4dfbc586a306541f27acbcadb4f2b9661520b23","modified":1657590099068},{"_id":"public/2020/09/01/cnblogs/13596927/index.html","hash":"719ab8c0b5478039e94af3f67582289e65036504","modified":1657590099068},{"_id":"public/2020/06/15/cnblogs/13137930/index.html","hash":"13b85f2fd8ddd1adffff6d5698f99a1cd1d12c4a","modified":1657590099068},{"_id":"public/2020/06/13/cnblogs/13096427/index.html","hash":"9bfba3812c7e9629240a7a4df75bb9a5397a4eb9","modified":1657590099068},{"_id":"public/2020/06/12/cnblogs/13089690/index.html","hash":"cb69c6dbbe094df23fbb0742407c6cf1861d0c22","modified":1657590099068},{"_id":"public/2020/06/09/cnblogs/13081247/index.html","hash":"cb0f0c2937de5a4e618123a5639bd5340bd3f932","modified":1657590099068},{"_id":"public/2020/06/03/cnblogs/13040338/index.html","hash":"3b00f4ad388673e59362ce340b02b632cd85b9fc","modified":1657590099068},{"_id":"public/2020/05/06/cnblogs/12833014/index.html","hash":"6c20ad0dbc74eb18634eee4f86d16d0507c72497","modified":1657590099068},{"_id":"public/2020/04/14/cnblogs/12700974/index.html","hash":"d40f964cf621bdca31b7a079aa77916b7ae63504","modified":1657590099068},{"_id":"public/2020/03/20/cnblogs/12530605/index.html","hash":"33882ffcde4f4602f7793fe94b687e3cf9d6b4b8","modified":1657590099068},{"_id":"public/2020/03/20/cnblogs/12525540/index.html","hash":"88e6c6e03c4c73c8204e53018aa4099959d03a7c","modified":1657590099068},{"_id":"public/2020/03/14/cnblogs/12490995/index.html","hash":"b81842bf26d538621de3861b696891e087aaee66","modified":1657590099068},{"_id":"public/2020/03/06/cnblogs/12430453/index.html","hash":"20aecaccc46c76689fffdfba27b39f6b2f107c76","modified":1657590099068},{"_id":"public/2020/03/02/cnblogs/12397911/index.html","hash":"4a36021a03908061983950d8dd1072651dd16452","modified":1657590099068},{"_id":"public/2019/07/12/cnblogs/11175665/index.html","hash":"8c31ff1f224aac8f0d16fb05a13ba27a9db44066","modified":1657590099068},{"_id":"public/2019/06/28/cnblogs/11103547/index.html","hash":"445cc5e378dfdddf6ce1f7a5b5d761fe6af10e9b","modified":1657590099068},{"_id":"public/2019/06/28/cnblogs/11102764/index.html","hash":"388c3288a7ded800ad52cad47e16520195a1dc24","modified":1657590099068},{"_id":"public/2019/06/28/cnblogs/11103355/index.html","hash":"ad0b59ecf8907918ccb505029166184adb8ecf6d","modified":1657590099068},{"_id":"public/2017/07/14/cnblogs/7170210/index.html","hash":"da0bc5e4630c4673af7943b02dce5c5c1be54e85","modified":1657590099068},{"_id":"public/2016/11/24/cnblogs/6096502/index.html","hash":"338ef31b4cf364222c43fb084dff06acb6aa68a0","modified":1657590099068},{"_id":"public/2015/12/29/cnblogs/5085021/index.html","hash":"3eb0ed0dcdb72b604f8ba430860d864603475249","modified":1657590099068},{"_id":"public/archives/page/3/index.html","hash":"f1d32007eadc9cbb6209dbedd8b19d4c634cbc4c","modified":1657590099068},{"_id":"public/archives/2015/index.html","hash":"034a23125aafe6f96a528761f5a67d40ba141e44","modified":1657590099068},{"_id":"public/archives/page/4/index.html","hash":"c097d3f11e328f00bdb64d99e79e98e90d9ddcce","modified":1657590099068},{"_id":"public/archives/2015/12/index.html","hash":"f4da84966fd94d6c8db185a9a140fc2a513b39ca","modified":1657590099068},{"_id":"public/archives/2016/index.html","hash":"9f9cd1e26981e85753294678314508c398999563","modified":1657590099068},{"_id":"public/archives/2016/11/index.html","hash":"a6f7259aa19a10f0e51b9a573cea90b1eba75d6f","modified":1657590099068},{"_id":"public/archives/2017/index.html","hash":"f42ba9b936f83ec4e60fa515a00708e8f7d2f193","modified":1657590099068},{"_id":"public/archives/2017/07/index.html","hash":"2bb8665c96e3ebaedf013dd8c9177caf3d48ae39","modified":1657590099068},{"_id":"public/archives/2019/06/index.html","hash":"bddaac571476cbd14af87e7cb3e0424ff528ba04","modified":1657590099068},{"_id":"public/archives/2019/07/index.html","hash":"78d516a90e6b1acb4c9881ec1db07e74a85558ef","modified":1657590099068},{"_id":"public/archives/2020/page/2/index.html","hash":"6d63e6eaa7b8c06009600df7dcae66d70b00693b","modified":1657590099068},{"_id":"public/archives/2020/index.html","hash":"2ba81267cae49ab4eef0584f35942b76c2ea7035","modified":1657590099068},{"_id":"public/archives/2020/03/index.html","hash":"f2efaec439110e2cc3c8d846dd27e7bcfd259521","modified":1657590099068},{"_id":"public/archives/2020/04/index.html","hash":"8efb476bd6d6299bf2d4daf90c6e0c70b3020cbc","modified":1657590099068},{"_id":"public/archives/2020/05/index.html","hash":"82bc4b81cc39a0ac0fe91e9263384ff3209324a7","modified":1657590099068},{"_id":"public/archives/2020/06/index.html","hash":"90c931d4be2e3a95a8f44ca8be6250037d02e227","modified":1657590099068},{"_id":"public/archives/2020/09/index.html","hash":"0719be1e3603ccdb1d4a1e7fd85db2a84244ed45","modified":1657590099068},{"_id":"public/archives/2021/02/index.html","hash":"9ca695c16557c93b2402877b9294bf98fe661233","modified":1657590099068},{"_id":"public/tags/Net-Core-2-2/index.html","hash":"120a5084704cecfeec6ccd4e7fa7df4775827bfa","modified":1657590099068},{"_id":"public/tags/mysql/index.html","hash":"f66a7b2012108a9bd713b929f907f36ddef1857d","modified":1657590099068},{"_id":"public/tags/linux/index.html","hash":"0fc8b9b89bb10d07a7c3368dfd873516322097f0","modified":1657590099068},{"_id":"public/tags/abp/index.html","hash":"c0dd3851574aacbecde1ecf812e03243006ce033","modified":1657590099068},{"_id":"public/tags/netcore/index.html","hash":"f2543e70908e61649da0dacc19c71d817143d236","modified":1657590099068},{"_id":"public/tags/定制化/index.html","hash":"c106ad48cce2d2070928abd0ead28ecb04ffcbca","modified":1657590099068},{"_id":"public/tags/appsettings-json/index.html","hash":"7b013efd6e40554831d7491f25711f2b59eac6c3","modified":1657590099068},{"_id":"public/tags/html/index.html","hash":"9c7ae03b459daec4bb01a99add58db4cb2b76844","modified":1657590099068},{"_id":"public/tags/reactnative/index.html","hash":"0e7e83b8269a9e53abcc337f8da3c60d470b01dc","modified":1657590099068},{"_id":"public/tags/FlatList/index.html","hash":"2aec241a956402116a369d577a1edf73dc0ff34f","modified":1657590099068},{"_id":"public/tags/上拉加载/index.html","hash":"f04fb0c3df96aaff35346dd9d54927befa971898","modified":1657590099068},{"_id":"public/tags/ASCII/index.html","hash":"7176130d1bea04b517196d9958c398d14ea449ca","modified":1657590099068},{"_id":"public/tags/数字转换字母/index.html","hash":"ac6fce89b010fdce75e751017538105bd38332c9","modified":1657590099068},{"_id":"public/page/4/index.html","hash":"e9f89074c7f2e9dba4c0ddf77c67ef8da39c1735","modified":1657590099068},{"_id":"public/page/3/index.html","hash":"d816f1893638f2c311c0984aafdfd5c0251c786a","modified":1657590099068},{"_id":"public/cnblogs/13096427/789895-20200611210551368-1414077737.png","hash":"acb8c8c9e5ecd5fc4c44a52224590875f984fa5b","modified":1657590099068},{"_id":"public/cnblogs/13096427/789895-20200613120436495-1821816057.png","hash":"8c4732b62c6dd36f7539d51caab0b1e1608f0f19","modified":1657590099068},{"_id":"public/cnblogs/13596927/789895-20200901161634167-1622109568.png","hash":"db0f00c5852c1040f19b92f8eb216e36f8aaf90b","modified":1657590099068},{"_id":"public/cnblogs/13096427/789895-20200611210653597-521335150.png","hash":"755e41e35e2a5a96c2931790b7e4ad3fbd8b927c","modified":1657590099068},{"_id":"public/cnblogs/13096427/789895-20200613122433371-1340406219.png","hash":"bd06336f0a64ec5f42845d31b594da70f93814e4","modified":1657590099068},{"_id":"public/cnblogs/13096427/789895-20200613122549077-374827601.png","hash":"b7684c0e2b5a38d8d875b816ca6e451fb1278cdf","modified":1657590099068},{"_id":"public/cnblogs/13096427/789895-20200613152221722-277186366.png","hash":"926a3e8551afa79f79c033cdbf2f7a0eac9ce544","modified":1657590099068},{"_id":"public/cnblogs/13096427/789895-20200613152628601-193312193.png","hash":"b7a457cc8386404551bf6e926880525a48fa2fcb","modified":1657590099068},{"_id":"public/cnblogs/13096427/789895-20200613164737035-1698740974.png","hash":"0e9ade16ff279ba2be7fb751332b72f02505bac2","modified":1657590099068},{"_id":"public/cnblogs/13096427/789895-20200613155431331-1058862470.png","hash":"d9b2f3158bed3626fd4e7f306c9f47445a802518","modified":1657590099068},{"_id":"public/cnblogs/13081247/789895-20200609201430814-1116404017.png","hash":"021f4c48576566fc64409b7e277b05ae0bcaf052","modified":1657590099068},{"_id":"public/cnblogs/13096427/789895-20200613175433971-1845076483.png","hash":"6f70107a0916b4a60ce8694dc736d849ebafff2c","modified":1657590099068},{"_id":"public/cnblogs/13081247/789895-20200609201648005-480300466.png","hash":"4bd5cc98f065b3d1b3ef64032ddbb52a9145f651","modified":1657590099068},{"_id":"public/cnblogs/13081247/789895-20200609201521232-1545417003.png","hash":"a507475297c7f6263428d58a273f673e7b9cf973","modified":1657590099068},{"_id":"public/cnblogs/13081247/789895-20200609213336194-886524168.png","hash":"b0b2fb2a9231ce048335219b1b2ae0832fd9df5f","modified":1657590099068},{"_id":"public/cnblogs/13081247/789895-20200609212852714-221170698.png","hash":"d07e923188c29654f798790927e5029d9e042466","modified":1657590099068},{"_id":"public/cnblogs/13081247/789895-20200609212654759-830200327.png","hash":"fe05d59fb15e60d77489889af77b40843f9ef7c5","modified":1657590099068},{"_id":"public/cnblogs/13081247/789895-20200609213136622-1683985688.png","hash":"39cd4c8c64c9fa950af5a3050fe4676d4d9d8304","modified":1657590099068},{"_id":"public/cnblogs/12700974/789895-20200414202950686-1257092366.png","hash":"aa3e256effc7c78d43fb01af8e6f848365cf2979","modified":1657590099068},{"_id":"public/cnblogs/12525540/789895-20200319163732934-1485815953.png","hash":"27adf37795be878671da173f54fd5c222713d966","modified":1657590099068},{"_id":"public/cnblogs/12525540/789895-20200319164038644-1263763272.png","hash":"03b66189deb277216208f689acad45f23507441f","modified":1657590099068},{"_id":"public/cnblogs/12525540/789895-20200319163629002-354206810.png","hash":"289542c1d355b1b64c45a98c65da8e4f6104eaad","modified":1657590099068},{"_id":"public/cnblogs/12833014/789895-20200505211512224-1873232722.png","hash":"0dda97ab3d10d913d154548bba2d2b85a03f6d62","modified":1657590099068},{"_id":"public/cnblogs/12525540/789895-20200319164325337-719717806.png","hash":"c818995205d156df8189f45d35a06abf73dc2334","modified":1657590099068},{"_id":"public/cnblogs/12525540/789895-20200319164432955-318576517.png","hash":"fc9830997cecece4e39483b6943d55376b68a15c","modified":1657590099068},{"_id":"public/cnblogs/12525540/789895-20200321141834541-429866891.png","hash":"c96742d5298ef6060c09016455f9418ad83376b4","modified":1657590099068},{"_id":"public/cnblogs/12525540/789895-20200319164725210-1272652233.png","hash":"e94260db1b2b48aa2cd9c7e7ad0e57b908574441","modified":1657590099068},{"_id":"public/cnblogs/12525540/789895-20200319164451725-1925277368.png","hash":"3faac9caa72ee218ab61668bbc0131b5ebbfc100","modified":1657590099068},{"_id":"public/cnblogs/12525540/789895-20200319173859759-522955515.png","hash":"3f704c08ac0cdf157fbb8163d78f5870f142237f","modified":1657590099068},{"_id":"public/cnblogs/12525540/789895-20200321142847608-345165120.png","hash":"f1ef29ce51009855e586eafbb4a0c58bbb8617d4","modified":1657590099068},{"_id":"public/cnblogs/12490995/789895-20200314103719008-486099808.png","hash":"6cf85a6e072e2d781feeeb18ab9402b4f3ed9560","modified":1657590099068},{"_id":"public/cnblogs/12525540/789895-20200319175139996-1452396882.png","hash":"4361708cc137f11863a6af9527369113559e1f32","modified":1657590099068},{"_id":"public/cnblogs/12490995/789895-20200314103608996-226690568.png","hash":"e669e8a005b2e7b84101a293ea905e6e3a2fbe18","modified":1657590099068},{"_id":"public/cnblogs/12490995/789895-20200314103659453-1423707822.png","hash":"fc33cbfa477178f1aa07f0b7af25e5eac5bc12f3","modified":1657590099068},{"_id":"public/cnblogs/12490995/789895-20200314103742076-1506683442.png","hash":"14a7d7001653026d10e32d1d82ea8baec12b0777","modified":1657590099068},{"_id":"public/cnblogs/12490995/789895-20200314111035435-454576915.png","hash":"6a363c620a8eaa29f6355d78fbba05c559939e4b","modified":1657590099068},{"_id":"public/cnblogs/12490995/789895-20200314111255378-1900099054.png","hash":"54d6a67529039af21505b82af814b4ba165a7fe0","modified":1657590099068},{"_id":"public/cnblogs/12490995/789895-20200314111330497-1914185865.png","hash":"f836141569359e1d5e3023e977563311f94ae620","modified":1657590099068},{"_id":"public/cnblogs/12490995/789895-20200314111742266-166098681.png","hash":"84ed7712b0380dd80527ee570c7d8a259ed1af2a","modified":1657590099068},{"_id":"public/cnblogs/12490995/789895-20200314111407787-1937103574.png","hash":"695b18b9a16bcfbfd63440cc1387a2d31a2eff69","modified":1657590099068},{"_id":"public/cnblogs/12490995/1730174-20190723172447650-1888406330.png","hash":"cc7f7835ab0e5cbf07dcf51cb1204dcc4381d912","modified":1657590099068},{"_id":"public/cnblogs/12490995/789895-20200314111825524-170131346.png","hash":"9c77f3dc9d241df960217c90df26d63beda72e35","modified":1657590099068},{"_id":"public/cnblogs/12490995/1730174-20190723172615004-1777913221.png","hash":"a1279e49537069194d8b1f3ba286fa462d6a3c52","modified":1657590099068},{"_id":"public/cnblogs/12490995/1730174-20190723172640897-1725389911.png","hash":"23ec51b081d702dcd7454cb86f494dd415ab1676","modified":1657590099068},{"_id":"public/cnblogs/12430453/789895-20200306195120995-807700091.png","hash":"f35b36af02f0c86dddada17011ac0f440dbc83f9","modified":1657590099068},{"_id":"public/cnblogs/12430453/789895-20200306195431746-1019534379.png","hash":"d44f45504d02466251a073f186fc724f35998226","modified":1657590099068},{"_id":"public/cnblogs/12490995/789895-20200315144745201-372259132.png","hash":"781740d718167d18843ac2e8c4001bcf40a99c40","modified":1657590099068},{"_id":"public/cnblogs/12430453/789895-20200306195519061-1807506073.png","hash":"ad177c8d8fe19e1b43dc25b02354df8107b30641","modified":1657590099068},{"_id":"public/cnblogs/12490995/789895-20200315144855769-1157086710.png","hash":"f6c199c21d66d97f2b38ba4126a8cac323077c03","modified":1657590099068},{"_id":"public/cnblogs/12490995/789895-20200315140044551-1148857260.png","hash":"3e5ae206696488fc4f6927108db30db2773c9cce","modified":1657590099068},{"_id":"public/cnblogs/13096427/789895-20200613131544727-322024248.png","hash":"429960c8e46ebe0b3ca8381f34f2fcaaac3b98cc","modified":1657590099068},{"_id":"public/cnblogs/13096427/789895-20200613131507643-1916575069.png","hash":"7cb824209117a5f31a768136eb42d3e9a91eb80e","modified":1657590099068},{"_id":"public/cnblogs/13096427/789895-20200613151834645-748331091.png","hash":"f5f6a3d520e9f44c68e4c70270f7ec1e888769ca","modified":1657590099068},{"_id":"public/cnblogs/13096427/789895-20200613151852573-1477272883.png","hash":"8ccfbf64303d0668da96ad4ed2e7e42c7b73248b","modified":1657590099068},{"_id":"public/cnblogs/13089690/789895-20200610200454121-120495896.png","hash":"33ca089c639ba5f81c19eb74ae12a5741bbe6f76","modified":1657590099068},{"_id":"public/cnblogs/13089690/789895-20200610195839215-1000464738.png","hash":"150b08862cb0d05d7df397a6cbeda981303f807c","modified":1657590099068},{"_id":"public/cnblogs/13089690/789895-20200610220532137-1721821016.png","hash":"35cc9f7a0f0230b4c7cc7fbfdd62b897b82bb078","modified":1657590099068},{"_id":"public/cnblogs/13081247/789895-20200609213009479-1523421599.png","hash":"65fe053d8d66a18f32fe6ee5e127635735e32bfd","modified":1657590099068},{"_id":"public/cnblogs/13081247/789895-20200609214928185-1737504330.png","hash":"cecc4fced7cbec268017eb19364c7353b2d8b102","modified":1657590099068},{"_id":"public/cnblogs/13040338/789895-20200603213817384-989892636.png","hash":"ee5f7f813a36e3e611e09d5dd93488794c5ec8ed","modified":1657590099068},{"_id":"public/cnblogs/12490995/789895-20200314104017330-12695127.png","hash":"53882e62c4a1d560763f1433ab1cdfde9c80fedf","modified":1657590099068},{"_id":"public/cnblogs/12430453/789895-20200306195442560-1506252793.png","hash":"0aeccb091d6f6bdeaa9b421aa2d126862c5216ed","modified":1657590099068},{"_id":"public/cnblogs/12430453/789895-20200306195506353-591684384.png","hash":"afccc06e4fa52a05c5fa966f132c625df04294da","modified":1657590099068},{"_id":"public/cnblogs/12490995/789895-20200314103935434-15938096.png","hash":"4abeb3e067eefe4184c85c8e9663d14783984294","modified":1657590099068},{"_id":"public/cnblogs/12490995/789895-20200314103515432-233460820.png","hash":"d28301af326eeff823b04833541b1753a6f5f332","modified":1657590099068},{"_id":"public/cnblogs/12490995/789895-20200314112146960-1975346260.png","hash":"77964b402144bed5c463cbdb887b816ef2a9c51f","modified":1657590099068},{"_id":"public/cnblogs/12490995/1730174-20190723172533547-1436305325.png","hash":"950660184fef1313025d7d4aab01cc8ff58542b7","modified":1657590099068},{"_id":"public/cnblogs/12490995/789895-20200314104005087-1747405802.png","hash":"2f51696fa597f27939dc3f14a18e9f02c6a6dcd7","modified":1657590099068},{"_id":"public/cnblogs/12490995/789895-20200314103531976-1657277194.png","hash":"765636ea32bcf257c16f65db69b002d7f3191b17","modified":1657590099068},{"_id":"public/cnblogs/11175665/789895-20190712135205933-637885315.png","hash":"31352d496704304f93fe073938cfe60b147277fe","modified":1657590099068},{"_id":"public/cnblogs/11175665/789895-20190712135006227-2107371641.png","hash":"2d04bed74b0cdf8ed99978f0a0196beb902a6c37","modified":1657590099068},{"_id":"public/cnblogs/11175665/789895-20190712135246919-1887689710.png","hash":"ab0565fb9d63a113795ec7e04f53aadd5c8e6f58","modified":1657590099068},{"_id":"public/cnblogs/11175665/789895-20190712135227098-2050240776.png","hash":"1b39f0a86d4b74cee1bdec32de2345299e09db21","modified":1657590099068},{"_id":"public/cnblogs/11175665/789895-20190712135307144-1229518040.png","hash":"deebfed0da7fb8c3264e4a920e7f75362164cd73","modified":1657590099068},{"_id":"public/cnblogs/12525540/789895-20200321144900449-1370390112.png","hash":"0eb55c2c0fcb6693f42ce7ab83bcaeaefa31df16","modified":1657590099068}],"Category":[{"name":"前端","_id":"cl5atsd4n0000d8un5ifbhf2h"},{"name":"drone","_id":"cl5atsx1k0006d8un8cy07iju"},{"name":"CI/CD","_id":"cl5atu22g0000jsune8f43gum"}],"Data":[{"_id":"widget","data":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"spatxos","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/spatxos","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}],"Page":[{"title":"about","date":"2022-07-05T07:30:30.000Z","type":"about","layout":"about","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2022-07-05 15:30:30 # 时间随便写\ntype: \"about\"\nlayout: \"about\"\n---","updated":"2022-07-05T04:32:09.958Z","path":"about/index.html","comments":1,"_id":"cl591oifv0000cgung8s6eboc","content":"","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"wangpengzong","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/wangpengzong","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":""},{"title":"friends","date":"2022-07-05T07:30:30.000Z","onlyTitle":true,"toc":false,"_content":"\n{% issues sites | api=https://api.github.com/repos/spatxos/friends/issues?sort=updated&state=open&page=1&per_page=1000&labels=active %}\n","source":"friends/index.md","raw":"---\ntitle: friends\ndate: 2022-07-05 15:30:30\nonlyTitle: true # 只显示title\ntoc: false # 不显示文章目录\n# type: \"friends\" # 这个不要了\n# layout: \"friends\" # 这个不要了\n---\n\n{% issues sites | api=https://api.github.com/repos/spatxos/friends/issues?sort=updated&state=open&page=1&per_page=1000&labels=active %}\n","updated":"2022-07-11T07:09:38.837Z","path":"friends/index.html","_id":"cl591oig60001cgunesadeanz","comments":1,"layout":"page","content":"<div class=\"issues-api sites\"api=\"https://api.github.com/repos/spatxos/friends/issues?sort=updated&state=open&page=1&per_page=1000&labels=active\"></div>\n","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"spatxos","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/spatxos","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"<div class=\"issues-api sites\"api=\"https://api.github.com/repos/spatxos/friends/issues?sort=updated&state=open&page=1&per_page=1000&labels=active\"></div>\n"},{"_content":"document.addEventListener(\"DOMContentLoaded\", function () { // 这个表示在html加载完成后执行\n    bubbly({\n        colorStart: '#fff4e6',\n        colorStop: '#ffe9e4',\n        blur:1,\n        compose: 'source-over',\n        bubbleFunc:() => `hsla(${Math.random() * 50}, 100%, 50%, .3)`\n      });\n})","source":"widget/bubbly-bg/index.js","raw":"document.addEventListener(\"DOMContentLoaded\", function () { // 这个表示在html加载完成后执行\n    bubbly({\n        colorStart: '#fff4e6',\n        colorStop: '#ffe9e4',\n        blur:1,\n        compose: 'source-over',\n        bubbleFunc:() => `hsla(${Math.random() * 50}, 100%, 50%, .3)`\n      });\n})","date":"2022-07-06T01:11:38.798Z","updated":"2022-07-06T01:11:38.798Z","path":"widget/bubbly-bg/index.js","layout":"false","title":"","comments":1,"_id":"cl591oig70002cgun1svrf7ro","content":"document.addEventListener(\"DOMContentLoaded\", function () { // 这个表示在html加载完成后执行\n    bubbly({\n        colorStart: '#fff4e6',\n        colorStop: '#ffe9e4',\n        blur:1,\n        compose: 'source-over',\n        bubbleFunc:() => `hsla(${Math.random() * 50}, 100%, 50%, .3)`\n      });\n})","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"wangpengzong","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/wangpengzong","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"document.addEventListener(\"DOMContentLoaded\", function () { // 这个表示在html加载完成后执行\n    bubbly({\n        colorStart: '#fff4e6',\n        colorStop: '#ffe9e4',\n        blur:1,\n        compose: 'source-over',\n        bubbleFunc:() => `hsla(${Math.random() * 50}, 100%, 50%, .3)`\n      });\n})"},{"_content":"/* 动态背景--变暗   1最亮，数值越小越暗*/\n.bubbly-bg-canvas {\n    filter: brightness(0.8);\n}\n/* 暗黑模式下 */\n.darkModel .bubbly-bg-canvas {\n    filter: brightness(0.3);\n}","source":"widget/bubbly-bg/bubbly.css","raw":"/* 动态背景--变暗   1最亮，数值越小越暗*/\n.bubbly-bg-canvas {\n    filter: brightness(0.8);\n}\n/* 暗黑模式下 */\n.darkModel .bubbly-bg-canvas {\n    filter: brightness(0.3);\n}","date":"2022-07-06T01:11:51.550Z","updated":"2022-07-06T01:11:51.550Z","path":"widget/bubbly-bg/bubbly.css","layout":"false","title":"","comments":1,"_id":"cl591oig80003cgun6v4a7fyg","content":"/* 动态背景--变暗   1最亮，数值越小越暗*/\n.bubbly-bg-canvas {\n    filter: brightness(0.8);\n}\n/* 暗黑模式下 */\n.darkModel .bubbly-bg-canvas {\n    filter: brightness(0.3);\n}","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"wangpengzong","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/wangpengzong","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"/* 动态背景--变暗   1最亮，数值越小越暗*/\n.bubbly-bg-canvas {\n    filter: brightness(0.8);\n}\n/* 暗黑模式下 */\n.darkModel .bubbly-bg-canvas {\n    filter: brightness(0.3);\n}"},{"_content":"#myBli .warp {\n    width: 100%;\n    height: 120px;\n    margin: 0 auto;\n    overflow: hidden;\n  }\n  #myBli .warp ul {\n    list-style: none;\n    padding: 0;\n    margin: 0 auto;\n  }\n  #myBli .warp ul.ul-item {\n    display: flex;\n  }\n  #myBli .warp ul.ul-item .li-item {\n    width: 120px;\n    display: block;\n    height: 120px;\n    margin-right: 10px;\n    line-height: 120px;\n    background-color: #999;\n    color: #fff;\n    text-align: center;\n    font-size: 30px;\n  }\n  \n  #myBli .warp ul.ul-item img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }","source":"widget/bli/index.css","raw":"#myBli .warp {\n    width: 100%;\n    height: 120px;\n    margin: 0 auto;\n    overflow: hidden;\n  }\n  #myBli .warp ul {\n    list-style: none;\n    padding: 0;\n    margin: 0 auto;\n  }\n  #myBli .warp ul.ul-item {\n    display: flex;\n  }\n  #myBli .warp ul.ul-item .li-item {\n    width: 120px;\n    display: block;\n    height: 120px;\n    margin-right: 10px;\n    line-height: 120px;\n    background-color: #999;\n    color: #fff;\n    text-align: center;\n    font-size: 30px;\n  }\n  \n  #myBli .warp ul.ul-item img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }","date":"2022-07-06T01:32:29.463Z","updated":"2022-07-06T01:32:29.463Z","path":"widget/bli/index.css","layout":"false","title":"","comments":1,"_id":"cl591oig80004cguneoem1prg","content":"#myBli .warp {\n    width: 100%;\n    height: 120px;\n    margin: 0 auto;\n    overflow: hidden;\n  }\n  #myBli .warp ul {\n    list-style: none;\n    padding: 0;\n    margin: 0 auto;\n  }\n  #myBli .warp ul.ul-item {\n    display: flex;\n  }\n  #myBli .warp ul.ul-item .li-item {\n    width: 120px;\n    display: block;\n    height: 120px;\n    margin-right: 10px;\n    line-height: 120px;\n    background-color: #999;\n    color: #fff;\n    text-align: center;\n    font-size: 30px;\n  }\n  \n  #myBli .warp ul.ul-item img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"wangpengzong","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/wangpengzong","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"#myBli .warp {\n    width: 100%;\n    height: 120px;\n    margin: 0 auto;\n    overflow: hidden;\n  }\n  #myBli .warp ul {\n    list-style: none;\n    padding: 0;\n    margin: 0 auto;\n  }\n  #myBli .warp ul.ul-item {\n    display: flex;\n  }\n  #myBli .warp ul.ul-item .li-item {\n    width: 120px;\n    display: block;\n    height: 120px;\n    margin-right: 10px;\n    line-height: 120px;\n    background-color: #999;\n    color: #fff;\n    text-align: center;\n    font-size: 30px;\n  }\n  \n  #myBli .warp ul.ul-item img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }"},{"_content":"\"use strict\";\nwindow.bubbly = function (t) {\n  var n = t || {},\n    o = function () {\n      return Math.random();\n    },\n    r = n.canvas || document.createElement(\"canvas\"),\n    e = r.width,\n    a = r.height;\n    r.className = 'bubbly-bg-canvas';\n  null === r.parentNode &&\n    (r.setAttribute(\n      \"style\",\n      \"position:fixed;z-index:-1;left:0;top:0;min-width:100vw;min-height:100vh;\"\n    ),\n    (e = r.width = window.innerWidth),\n    (a = r.height = window.innerHeight),\n    document.body.appendChild(r));\n  var i = r.getContext(\"2d\");\n  (i.shadowColor = n.shadowColor || \"#fff\"), (i.shadowBlur = n.blur || 4);\n  var l = i.createLinearGradient(0, 0, e, a);\n  l.addColorStop(0, n.colorStart || \"#2AE\"),\n    l.addColorStop(1, n.colorStop || \"#17B\");\n  for (\n    var c = n.bubbles || Math.floor(0.02 * (e + a)), u = [], d = 0;\n    d < c;\n    d++\n  )\n    u.push({\n      f: (\n        n.bubbleFunc ||\n        function () {\n          return \"hsla(0, 0%, 100%, \" + 0.1 * o() + \")\";\n        }\n      ).call(),\n      x: o() * e,\n      y: o() * a,\n      r: (\n        n.radiusFunc ||\n        function () {\n          return 4 + (o() * e) / 25;\n        }\n      ).call(),\n      a: (\n        n.angleFunc ||\n        function () {\n          return o() * Math.PI * 2;\n        }\n      ).call(),\n      v: (\n        n.velocityFunc ||\n        function () {\n          return 0.1 + 0.5 * o();\n        }\n      ).call(),\n    });\n  !(function t() {\n    if (null === r.parentNode) return cancelAnimationFrame(t);\n    !1 !== n.animate && requestAnimationFrame(t),\n      (i.globalCompositeOperation = \"source-over\"),\n      (i.fillStyle = l),\n      i.fillRect(0, 0, e, a),\n      (i.globalCompositeOperation = n.compose || \"lighter\"),\n      u.forEach(function (t) {\n        i.beginPath(),\n          i.arc(t.x, t.y, t.r, 0, 2 * Math.PI),\n          (i.fillStyle = t.f),\n          i.fill(),\n          (t.x += Math.cos(t.a) * t.v),\n          (t.y += Math.sin(t.a) * t.v),\n          t.x - t.r > e && (t.x = -t.r),\n          t.x + t.r < 0 && (t.x = e + t.r),\n          t.y - t.r > a && (t.y = -t.r),\n          t.y + t.r < 0 && (t.y = a + t.r);\n      });\n  })();\n};","source":"widget/bubbly-bg/bubbly.js","raw":"\"use strict\";\nwindow.bubbly = function (t) {\n  var n = t || {},\n    o = function () {\n      return Math.random();\n    },\n    r = n.canvas || document.createElement(\"canvas\"),\n    e = r.width,\n    a = r.height;\n    r.className = 'bubbly-bg-canvas';\n  null === r.parentNode &&\n    (r.setAttribute(\n      \"style\",\n      \"position:fixed;z-index:-1;left:0;top:0;min-width:100vw;min-height:100vh;\"\n    ),\n    (e = r.width = window.innerWidth),\n    (a = r.height = window.innerHeight),\n    document.body.appendChild(r));\n  var i = r.getContext(\"2d\");\n  (i.shadowColor = n.shadowColor || \"#fff\"), (i.shadowBlur = n.blur || 4);\n  var l = i.createLinearGradient(0, 0, e, a);\n  l.addColorStop(0, n.colorStart || \"#2AE\"),\n    l.addColorStop(1, n.colorStop || \"#17B\");\n  for (\n    var c = n.bubbles || Math.floor(0.02 * (e + a)), u = [], d = 0;\n    d < c;\n    d++\n  )\n    u.push({\n      f: (\n        n.bubbleFunc ||\n        function () {\n          return \"hsla(0, 0%, 100%, \" + 0.1 * o() + \")\";\n        }\n      ).call(),\n      x: o() * e,\n      y: o() * a,\n      r: (\n        n.radiusFunc ||\n        function () {\n          return 4 + (o() * e) / 25;\n        }\n      ).call(),\n      a: (\n        n.angleFunc ||\n        function () {\n          return o() * Math.PI * 2;\n        }\n      ).call(),\n      v: (\n        n.velocityFunc ||\n        function () {\n          return 0.1 + 0.5 * o();\n        }\n      ).call(),\n    });\n  !(function t() {\n    if (null === r.parentNode) return cancelAnimationFrame(t);\n    !1 !== n.animate && requestAnimationFrame(t),\n      (i.globalCompositeOperation = \"source-over\"),\n      (i.fillStyle = l),\n      i.fillRect(0, 0, e, a),\n      (i.globalCompositeOperation = n.compose || \"lighter\"),\n      u.forEach(function (t) {\n        i.beginPath(),\n          i.arc(t.x, t.y, t.r, 0, 2 * Math.PI),\n          (i.fillStyle = t.f),\n          i.fill(),\n          (t.x += Math.cos(t.a) * t.v),\n          (t.y += Math.sin(t.a) * t.v),\n          t.x - t.r > e && (t.x = -t.r),\n          t.x + t.r < 0 && (t.x = e + t.r),\n          t.y - t.r > a && (t.y = -t.r),\n          t.y + t.r < 0 && (t.y = a + t.r);\n      });\n  })();\n};","date":"2022-07-06T01:11:20.745Z","updated":"2022-07-06T01:11:20.745Z","path":"widget/bubbly-bg/bubbly.js","layout":"false","title":"","comments":1,"_id":"cl591oig90005cgun590b32ql","content":"\"use strict\";\nwindow.bubbly = function (t) {\n  var n = t || {},\n    o = function () {\n      return Math.random();\n    },\n    r = n.canvas || document.createElement(\"canvas\"),\n    e = r.width,\n    a = r.height;\n    r.className = 'bubbly-bg-canvas';\n  null === r.parentNode &&\n    (r.setAttribute(\n      \"style\",\n      \"position:fixed;z-index:-1;left:0;top:0;min-width:100vw;min-height:100vh;\"\n    ),\n    (e = r.width = window.innerWidth),\n    (a = r.height = window.innerHeight),\n    document.body.appendChild(r));\n  var i = r.getContext(\"2d\");\n  (i.shadowColor = n.shadowColor || \"#fff\"), (i.shadowBlur = n.blur || 4);\n  var l = i.createLinearGradient(0, 0, e, a);\n  l.addColorStop(0, n.colorStart || \"#2AE\"),\n    l.addColorStop(1, n.colorStop || \"#17B\");\n  for (\n    var c = n.bubbles || Math.floor(0.02 * (e + a)), u = [], d = 0;\n    d < c;\n    d++\n  )\n    u.push({\n      f: (\n        n.bubbleFunc ||\n        function () {\n          return \"hsla(0, 0%, 100%, \" + 0.1 * o() + \")\";\n        }\n      ).call(),\n      x: o() * e,\n      y: o() * a,\n      r: (\n        n.radiusFunc ||\n        function () {\n          return 4 + (o() * e) / 25;\n        }\n      ).call(),\n      a: (\n        n.angleFunc ||\n        function () {\n          return o() * Math.PI * 2;\n        }\n      ).call(),\n      v: (\n        n.velocityFunc ||\n        function () {\n          return 0.1 + 0.5 * o();\n        }\n      ).call(),\n    });\n  !(function t() {\n    if (null === r.parentNode) return cancelAnimationFrame(t);\n    !1 !== n.animate && requestAnimationFrame(t),\n      (i.globalCompositeOperation = \"source-over\"),\n      (i.fillStyle = l),\n      i.fillRect(0, 0, e, a),\n      (i.globalCompositeOperation = n.compose || \"lighter\"),\n      u.forEach(function (t) {\n        i.beginPath(),\n          i.arc(t.x, t.y, t.r, 0, 2 * Math.PI),\n          (i.fillStyle = t.f),\n          i.fill(),\n          (t.x += Math.cos(t.a) * t.v),\n          (t.y += Math.sin(t.a) * t.v),\n          t.x - t.r > e && (t.x = -t.r),\n          t.x + t.r < 0 && (t.x = e + t.r),\n          t.y - t.r > a && (t.y = -t.r),\n          t.y + t.r < 0 && (t.y = a + t.r);\n      });\n  })();\n};","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"wangpengzong","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/wangpengzong","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"\"use strict\";\nwindow.bubbly = function (t) {\n  var n = t || {},\n    o = function () {\n      return Math.random();\n    },\n    r = n.canvas || document.createElement(\"canvas\"),\n    e = r.width,\n    a = r.height;\n    r.className = 'bubbly-bg-canvas';\n  null === r.parentNode &&\n    (r.setAttribute(\n      \"style\",\n      \"position:fixed;z-index:-1;left:0;top:0;min-width:100vw;min-height:100vh;\"\n    ),\n    (e = r.width = window.innerWidth),\n    (a = r.height = window.innerHeight),\n    document.body.appendChild(r));\n  var i = r.getContext(\"2d\");\n  (i.shadowColor = n.shadowColor || \"#fff\"), (i.shadowBlur = n.blur || 4);\n  var l = i.createLinearGradient(0, 0, e, a);\n  l.addColorStop(0, n.colorStart || \"#2AE\"),\n    l.addColorStop(1, n.colorStop || \"#17B\");\n  for (\n    var c = n.bubbles || Math.floor(0.02 * (e + a)), u = [], d = 0;\n    d < c;\n    d++\n  )\n    u.push({\n      f: (\n        n.bubbleFunc ||\n        function () {\n          return \"hsla(0, 0%, 100%, \" + 0.1 * o() + \")\";\n        }\n      ).call(),\n      x: o() * e,\n      y: o() * a,\n      r: (\n        n.radiusFunc ||\n        function () {\n          return 4 + (o() * e) / 25;\n        }\n      ).call(),\n      a: (\n        n.angleFunc ||\n        function () {\n          return o() * Math.PI * 2;\n        }\n      ).call(),\n      v: (\n        n.velocityFunc ||\n        function () {\n          return 0.1 + 0.5 * o();\n        }\n      ).call(),\n    });\n  !(function t() {\n    if (null === r.parentNode) return cancelAnimationFrame(t);\n    !1 !== n.animate && requestAnimationFrame(t),\n      (i.globalCompositeOperation = \"source-over\"),\n      (i.fillStyle = l),\n      i.fillRect(0, 0, e, a),\n      (i.globalCompositeOperation = n.compose || \"lighter\"),\n      u.forEach(function (t) {\n        i.beginPath(),\n          i.arc(t.x, t.y, t.r, 0, 2 * Math.PI),\n          (i.fillStyle = t.f),\n          i.fill(),\n          (t.x += Math.cos(t.a) * t.v),\n          (t.y += Math.sin(t.a) * t.v),\n          t.x - t.r > e && (t.x = -t.r),\n          t.x + t.r < 0 && (t.x = e + t.r),\n          t.y - t.r > a && (t.y = -t.r),\n          t.y + t.r < 0 && (t.y = a + t.r);\n      });\n  })();\n};"},{"_content":"// 主题已经默认cdn引入了vue-seamless-scroll插件\n// https://chenxuan0000.github.io/vue-seamless-scroll/zh/guide/01-basic.html\nnew Vue({\n    el: \"#myBli\", // el不要是最外面的id_name，应该是html: ''里的div的id\n    data: function () {\n      return {\n        content: [],\n        listData: [1, 2, 3, 4, 5, 6],\n        classOption: {\n          limitMoveNum: 2,\n          direction: 3,\n        },\n      };\n    },\n    methods: {},\n  });","source":"widget/bli/index.js","raw":"// 主题已经默认cdn引入了vue-seamless-scroll插件\n// https://chenxuan0000.github.io/vue-seamless-scroll/zh/guide/01-basic.html\nnew Vue({\n    el: \"#myBli\", // el不要是最外面的id_name，应该是html: ''里的div的id\n    data: function () {\n      return {\n        content: [],\n        listData: [1, 2, 3, 4, 5, 6],\n        classOption: {\n          limitMoveNum: 2,\n          direction: 3,\n        },\n      };\n    },\n    methods: {},\n  });","date":"2022-07-06T01:32:22.537Z","updated":"2022-07-06T01:32:22.537Z","path":"widget/bli/index.js","layout":"false","title":"","comments":1,"_id":"cl591oig90006cgun4ekr883e","content":"// 主题已经默认cdn引入了vue-seamless-scroll插件\n// https://chenxuan0000.github.io/vue-seamless-scroll/zh/guide/01-basic.html\nnew Vue({\n    el: \"#myBli\", // el不要是最外面的id_name，应该是html: ''里的div的id\n    data: function () {\n      return {\n        content: [],\n        listData: [1, 2, 3, 4, 5, 6],\n        classOption: {\n          limitMoveNum: 2,\n          direction: 3,\n        },\n      };\n    },\n    methods: {},\n  });","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"wangpengzong","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/wangpengzong","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"// 主题已经默认cdn引入了vue-seamless-scroll插件\n// https://chenxuan0000.github.io/vue-seamless-scroll/zh/guide/01-basic.html\nnew Vue({\n    el: \"#myBli\", // el不要是最外面的id_name，应该是html: ''里的div的id\n    data: function () {\n      return {\n        content: [],\n        listData: [1, 2, 3, 4, 5, 6],\n        classOption: {\n          limitMoveNum: 2,\n          direction: 3,\n        },\n      };\n    },\n    methods: {},\n  });"},{"_content":"var github_canlendar = (git_user, git_color) => {\n    var git_githubapiurl = \"https://python-github-calendar-api.vercel.app/api?\" + git_user;\n    var git_fixed = 'fixed';\n    var git_px = 'px';\n    var git_month = ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'];\n    var git_monthchange = [];\n    var git_oneyearbeforeday = '';\n    var git_thisday = '';\n    var git_amonthago = '';\n    var git_aweekago = '';\n    var git_weekdatacore = 0;\n    var git_datacore = 0;\n    var git_total = 0;\n    var git_datadate = '';\n    var git_git_data = [];\n    var git_positionplusdata = [];\n    var git_firstweek = [];\n    var git_lastweek = [];\n    var git_beforeweek = [];\n    var git_thisweekdatacore = 0;\n    var git_mounthbeforeday = 0;\n    var git_mounthfirstindex = 0;\n    var git_crispedges = 'crispedges';\n    var git_thisdayindex = 0;\n    var git_amonthagoindex = 0;\n    var git_amonthagoweek = [];\n    var git_firstdate = [];\n    var git_first2date = [];\n    var git_montharrbefore = [];\n    var git_monthindex = 0;\n    var retinaCanvas = (canvas, context, ratio) => {\n        if (ratio > 1) {\n            var canvasWidth = canvas.width;\n            var canvasHeight = canvas.height;\n            canvas.width = canvasWidth * ratio;\n            canvas.height = canvasHeight * ratio;\n            canvas.style.width = '100%';\n            canvas.style.height = canvasHeight + 'px';\n            context.scale(ratio, ratio);\n        }\n    };\n    function responsiveChart() {\n        var ratio = window.devicePixelRatio || 1\n        var git_tooltip_container = document.getElementById('git_tooltip_container');\n        var git_x = '';\n        var git_y = '';\n        var git_span1 = '';\n        var git_span2 = '';\n        var c = document.getElementById(\"gitcanvas\");\n        c.style.width = '100%';\n        c.style.height = '';\n        var cmessage = document.getElementById(\"gitmessage\");\n        var ctx = c.getContext(\"2d\");\n        width = c.width = document.getElementById(\"gitcalendarcanvasbox\").offsetWidth;\n        height = c.height = 9 * 0.96 * c.width / git_data.length;\n        retinaCanvas(c,ctx, ratio)\n        var linemaxwitdh = height/ 9;\n        var lineminwitdh = 0.8 * linemaxwitdh;\n        var setposition = {x: 0.02 * width, y: 0.025 * width};\n        for (var week in git_data) {\n            weekdata = git_data[week];\n            for (var day in weekdata) {\n                var dataitem = {date: \"\", count: \"\", x: 0, y: 0};\n                git_positionplusdata.push(dataitem);\n                ctx.fillStyle = git_thiscolor(git_color, weekdata[day].count);\n                setposition.y = Math.round(setposition.y * 100) / 100;\n                dataitem.date = weekdata[day].date;\n                dataitem.count = weekdata[day].count;\n                dataitem.x = setposition.x;\n                dataitem.y = setposition.y;\n                ctx.fillRect(setposition.x, setposition.y, lineminwitdh, lineminwitdh);\n                setposition.y = setposition.y + linemaxwitdh\n            }\n            setposition.y = 0.025 * width;\n            setposition.x = setposition.x + linemaxwitdh\n        }\n        if (document.body.clientWidth > 700) {\n            ctx.font = \"600  Arial\";\n            ctx.fillStyle = '#aaa';\n            ctx.fillText(\"日\", 0, 1.9 * linemaxwitdh);\n            ctx.fillText(\"二\", 0, 3.9 * linemaxwitdh);\n            ctx.fillText(\"四\", 0, 5.9 * linemaxwitdh);\n            ctx.fillText(\"六\", 0, 7.9 * linemaxwitdh);\n            var monthindexlist = width / 24;\n            for (var index in git_monthchange) {\n                ctx.fillText(git_monthchange[index], monthindexlist, 0.7 * linemaxwitdh);\n                monthindexlist = monthindexlist + width / 12\n            }\n        }\n        c.onmousemove = function (event) {\n            if (document.querySelector('.gitmessage')) {\n                git_tooltip_container.innerHTML = \"\"\n            }\n            getMousePos(c, event)\n        };\n        git_tooltip_container.onmousemove = function (event) {\n            if (document.querySelector('.gitmessage')) {\n                git_tooltip_container.innerHTML = \"\"\n            }\n        };\n\n        function getMousePos(canvas, event) {\n            var rect = canvas.getBoundingClientRect();\n            var x = event.clientX - rect.left * (canvas.width / rect.width);\n            var y = event.clientY - rect.top * (canvas.height / rect.height);\n            for (var item of git_positionplusdata) {\n                var lenthx = x - item.x;\n                var lenthy = y - item.y;\n                if (0 < lenthx && lenthx < lineminwitdh) {\n                    if (0 < lenthy && lenthy < lineminwitdh) {\n                        git_span1 = item.date;\n                        git_span2 = item.count;\n                        git_x = event.clientX - 100;\n                        git_y = event.clientY - 60;\n                        html = tooltip_html(git_x, git_y, git_span1, git_span2);\n                        append_div_gitcalendar(git_tooltip_container, html)\n                    }\n                }\n            }\n        }\n    }\n\n    function addlastmonth() {\n        if (git_thisdayindex === 0) {\n            thisweekcore(52);\n            thisweekcore(51);\n            thisweekcore(50);\n            thisweekcore(49);\n            thisweekcore(48);\n            git_thisweekdatacore += git_firstdate[6].count;\n            git_amonthago = git_firstdate[6].date\n        } else {\n            thisweekcore(52);\n            thisweekcore(51);\n            thisweekcore(50);\n            thisweekcore(49);\n            thisweek2core();\n            git_amonthago = git_first2date[git_thisdayindex - 1].date\n        }\n    }\n\n    function thisweek2core() {\n        for (var i = git_thisdayindex - 1; i < git_first2date.length; i++) {\n            git_thisweekdatacore += git_first2date[i].count\n        }\n    }\n\n    function thisweekcore(index) {\n        for (var item of git_data[index]) {\n            git_thisweekdatacore += item.count\n        }\n    }\n\n    function addlastweek() {\n        for (var item of git_lastweek) {\n            git_weekdatacore += item.count\n        }\n    }\n\n    function addbeforeweek() {\n        for (var i = git_thisdayindex; i < git_beforeweek.length; i++) {\n            git_weekdatacore += git_beforeweek[i].count\n        }\n    }\n\n    function addweek(data) {\n        if (git_thisdayindex === 6) {\n            git_aweekago = git_lastweek[0].date;\n            addlastweek()\n        } else {\n            lastweek = data.contributions[51];\n            git_aweekago = lastweek[git_thisdayindex + 1].date;\n            addlastweek();\n            addbeforeweek()\n        }\n    }\n\n    fetch(git_githubapiurl).then(data => data.json()).then(data => {\n        git_data = data.contributions;\n        git_total = data.total;\n        git_first2date = git_data[48];\n        git_firstdate = git_data[47];\n        git_firstweek = data.contributions[0];\n        git_lastweek = data.contributions[52];\n        git_beforeweek = data.contributions[51];\n        git_thisdayindex = git_lastweek.length - 1;\n        git_thisday = git_lastweek[git_thisdayindex].date;\n        git_oneyearbeforeday = git_firstweek[0].date;\n        git_monthindex = git_thisday.substring(5, 7) * 1;\n        git_montharrbefore = git_month.splice(git_monthindex, 12 - git_monthindex);\n        git_monthchange = git_montharrbefore.concat(git_month);\n        addweek(data);\n        addlastmonth();\n        var html = github_main_box(git_monthchange, git_data, git_user, git_color, git_total, git_thisweekdatacore, git_weekdatacore, git_oneyearbeforeday, git_thisday, git_aweekago, git_amonthago);\n        append_div_gitcalendar(github_container, html);\n        if(document.getElementById('github_loading')){\n            document.getElementById('github_loading').remove()};\n        responsiveChart()\n    }).catch(function (error) {\n        console.log(error)\n    });\n      window.addEventListener('resize', function () {\n          if (document.getElementById('gitcanvas')) {\n            responsiveChart()\n          }\n    })\n    window.addEventListener('scroll', function () {\n      if (document.querySelector('.gitmessage')) {\n        git_tooltip_container.innerHTML = \"\"\n    }\n    })\n    var git_thiscolor = (color, x) => {\n        if (x === 0) {\n            var i = parseInt(x / 2);\n            return color[0]\n        } else if (x < 2) {\n            return color[1]\n        } else if (x < 20) {\n            var i = parseInt(x / 2);\n            return color[i]\n        } else {\n            return color[9]\n        }\n    };\n    var tooltip_html = (x, y, span1, span2) => {\n        var html = '';\n        html += '<div class=\"gitmessage\" style=\"top:' + y + 'px;left:' + x + 'px;position: fixed;z-index:9999\"><div class=\"angle-wrapper\" style=\"display:block;\"><span>' + span1 + '&nbsp;</span><span>' + span2 + ' 次上传</span></div></div>';\n        return html\n    };\n    var github_canvas_box = () => {\n        var html = '<div id=\"gitcalendarcanvasbox\"> <canvas id=\"gitcanvas\" style=\"animation: none;\"></canvas></div>';\n        return html\n    };\n    var github_info_box = (user, color) => {\n        var html = '';\n        html += '<div id=\"git_tooltip_container\"></div><div class=\"contrib-footer clearfix mt-1 mx-3 px-3 pb-1\"><div class=\"float-left text-gray\">数据来源 <a href=\"https://github.com/' + user + '\" target=\"blank\">@' + user + '</a></div><div class=\"contrib-legend text-gray\">Less <ul class=\"legend\"><li style=\"background-color:' + color[0] + '\"></li><li style=\"background-color:' + color[2] + '\"></li><li style=\"background-color:' + color[4] + '\"></li><li style=\"background-color:' + color[6] + '\"></li><li style=\"background-color:' + color[8] + '\"></li></ul>More </div></div>';\n        return html\n    };\n    var github_main_box = (monthchange, git_data, user, color, total, thisweekdatacore, weekdatacore, oneyearbeforeday, thisday, aweekago, amonthago) => {\n        var html = '';\n        var canvasbox = github_canvas_box();\n        var infobox = github_info_box(user, color);\n        var style = github_main_style();\n        html += '<div class=\"position-relative\"><div class=\"border py-2 graph-before-activity-overview\"><div class=\"js-gitcalendar-graph mx-md-2 mx-3 d-flex flex-column flex-items-end flex-xl-items-center overflow-hidden pt-1 is-graph-loading graph-canvas gitcalendar-graph height-full text-center\">' + canvasbox + '</div>' + infobox + '</div></div>';\n        html += '<div style=\"display:flex;width:100%\"><div class=\"contrib-column contrib-column-first table-column\"><span class=\"text-muted\">过去一年提交</span><span class=\"contrib-number\">' + total + '</span><span class=\"text-muted\">' + oneyearbeforeday + '&nbsp;-&nbsp;' + thisday + '</span></div><div class=\"contrib-column table-column\"><span class=\"text-muted\">最近一月提交</span><span class=\"contrib-number\">' + thisweekdatacore + '</span><span class=\"text-muted\">' + amonthago + '&nbsp;-&nbsp;' + thisday + '</span></div><div class=\"contrib-column table-column\"><span class=\"text-muted\">最近一周提交</span><span class=\"contrib-number\">' + weekdatacore + '</span><span class=\"text-muted\">' + aweekago + '&nbsp;-&nbsp;' + thisday + '</span></div></div>' + style;\n        return html\n    };\n    var github_main_style = () => {\n        style = '<style>#github_container{text-align:center;margin:0 auto;width:100%;display:flex;display:-webkit-flex;justify-content:center;align-items:center;flex-wrap:wrap;}.gitcalendar-graph text.wday,.gitcalendar-graph text.month{font-size:10px;fill:#aaa;}.contrib-legend{text-align:right;padding:0 14px 10px 0;display:inline-block;float:right;}.contrib-legend .legend{display:inline-block;list-style:none;margin:0 5px;position:relative;bottom:-1px;padding:0;}.contrib-legend .legend li{display:inline-block;width:10px;height:10px;}.text-small{font-size:12px;color:#767676;}.gitcalendar-graph{padding:15px 0 0;text-align:center;}.contrib-column{text-align:center;border-left:1px solid #ddd;border-top:1px solid #ddd;font-size:11px;}.contrib-column-first{border-left:0;}.table-column{padding:10px;display:table-cell;flex:1;vertical-align:top;}.contrib-number{font-weight:300;line-height:1.3em;font-size:24px;display:block;}.gitcalendar img.spinner{width:70px;margin-top:50px;min-height:70px;}.monospace{text-align:center;color:#000;font-family:monospace;}.monospace a{color:#1D75AB;text-decoration:none;}.contrib-footer{font-size:11px;padding:0 10px 12px;text-align:left;width:100%;box-sizing:border-box;height:26px;}.left.text-muted{float:left;margin-left:9px;color:#767676;}.left.text-muted a{color:#4078c0;text-decoration:none;}.left.text-muted a:hover,.monospace a:hover{text-decoration:underline;}h2.f4.text-normal.mb-3{display:none;}.float-left.text-gray{float:left;}#user-activity-overview{display:none;}.day-tooltip{white-space:nowrap;position:absolute;z-index:99999;padding:10px;font-size:12px;color:#959da5;text-align:center;background:rgba(0,0,0,.85);border-radius:3px;display:none;pointer-events:none;}.day-tooltip strong{color:#dfe2e5;}.day-tooltip.is-visible{display:block;}.day-tooltip:after{position:absolute;bottom:-10px;left:50%;width:5px;height:5px;box-sizing:border-box;margin:0 0 0 -5px;content:\" \";border:5px solid transparent;border-top-color:rgba(0,0,0,.85)}.position-relative{width:100%;}@media screen and (max-width:650px){.contrib-column{display:none}}.angle-wrapper{z-index:9999;display:inline;width:200px;height:40px;position:relative;padding:5px 0;background:rgba(0,0,0,0.8);border-radius:8px;text-align:center;color:white;}.angle-box{position:fixed;padding:10px}.angle-wrapper span{padding-bottom:1em;}.angle-wrapper:before{content:\"\";width:0;height:0;border:10px solid transparent;border-top-color:rgba(0,0,0,0.8);position:absolute;left:47.5%;top:100%;}</style>';\n        return style\n    }\n};\nvar append_div_gitcalendar = (parent, text) => {\n    if (typeof text === 'string') {\n        var temp = document.createElement('div');\n        temp.innerHTML = text;\n        var frag = document.createDocumentFragment();\n        while (temp.firstChild) {\n            frag.appendChild(temp.firstChild)\n        }\n        parent.appendChild(frag)\n    } else {\n        parent.appendChild(text)\n    }\n};\nvar loading_git = (color) => {\n    loading = '<div id=\"github_loading\" style=\"width:10%;height:100%;margin:0 auto;display: block\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"  viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50\" xml:space=\"preserve\"><path fill=\"' + color + '\" d=\"M25.251,6.461c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615V6.461z\" transform=\"rotate(275.098 25 25)\"><animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 25 25\" to=\"360 25 25\" dur=\"0.6s\" repeatCount=\"indefinite\"></animateTransform></path></svg></div>';\n    return loading\n};\n\n(function(){\n    var git_user = 'wangpengzong';\n    var github_container = document.getElementById('github_container');\n    var github_loading = document.getElementById('github_loading');\n    var git_purple = ['#ebedf0', '#fdcdec', '#fc9bd9', '#fa6ac5', '#f838b2', '#f5089f', '#c4067e', '#92055e', '#540336', '#48022f', '#30021f',];\n    var git_green = ['#ebedf0', '#f0fff4', '#dcffe4', '#bef5cb', '#85e89d', '#34d058', '#28a745', '#22863a', '#176f2c', '#165c26', '#144620'];\n    var git_blue = ['#ebedf0', '#f1f8ff', '#dbedff', '#c8e1ff', '#79b8ff', '#2188ff', '#0366d6', '#005cc5', '#044289', '#032f62', '#05264c',];\n    var git_color = git_green;\n    if (github_container) {\n      append_div_gitcalendar(github_container, loading_git(git_color[4]));\n      github_canlendar(git_user, git_color)\n    } else {\n      console.log('nonono');\n    }\n    \n})()\n    \n    ","source":"widget/githubcalendar/index.js","raw":"var github_canlendar = (git_user, git_color) => {\n    var git_githubapiurl = \"https://python-github-calendar-api.vercel.app/api?\" + git_user;\n    var git_fixed = 'fixed';\n    var git_px = 'px';\n    var git_month = ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'];\n    var git_monthchange = [];\n    var git_oneyearbeforeday = '';\n    var git_thisday = '';\n    var git_amonthago = '';\n    var git_aweekago = '';\n    var git_weekdatacore = 0;\n    var git_datacore = 0;\n    var git_total = 0;\n    var git_datadate = '';\n    var git_git_data = [];\n    var git_positionplusdata = [];\n    var git_firstweek = [];\n    var git_lastweek = [];\n    var git_beforeweek = [];\n    var git_thisweekdatacore = 0;\n    var git_mounthbeforeday = 0;\n    var git_mounthfirstindex = 0;\n    var git_crispedges = 'crispedges';\n    var git_thisdayindex = 0;\n    var git_amonthagoindex = 0;\n    var git_amonthagoweek = [];\n    var git_firstdate = [];\n    var git_first2date = [];\n    var git_montharrbefore = [];\n    var git_monthindex = 0;\n    var retinaCanvas = (canvas, context, ratio) => {\n        if (ratio > 1) {\n            var canvasWidth = canvas.width;\n            var canvasHeight = canvas.height;\n            canvas.width = canvasWidth * ratio;\n            canvas.height = canvasHeight * ratio;\n            canvas.style.width = '100%';\n            canvas.style.height = canvasHeight + 'px';\n            context.scale(ratio, ratio);\n        }\n    };\n    function responsiveChart() {\n        var ratio = window.devicePixelRatio || 1\n        var git_tooltip_container = document.getElementById('git_tooltip_container');\n        var git_x = '';\n        var git_y = '';\n        var git_span1 = '';\n        var git_span2 = '';\n        var c = document.getElementById(\"gitcanvas\");\n        c.style.width = '100%';\n        c.style.height = '';\n        var cmessage = document.getElementById(\"gitmessage\");\n        var ctx = c.getContext(\"2d\");\n        width = c.width = document.getElementById(\"gitcalendarcanvasbox\").offsetWidth;\n        height = c.height = 9 * 0.96 * c.width / git_data.length;\n        retinaCanvas(c,ctx, ratio)\n        var linemaxwitdh = height/ 9;\n        var lineminwitdh = 0.8 * linemaxwitdh;\n        var setposition = {x: 0.02 * width, y: 0.025 * width};\n        for (var week in git_data) {\n            weekdata = git_data[week];\n            for (var day in weekdata) {\n                var dataitem = {date: \"\", count: \"\", x: 0, y: 0};\n                git_positionplusdata.push(dataitem);\n                ctx.fillStyle = git_thiscolor(git_color, weekdata[day].count);\n                setposition.y = Math.round(setposition.y * 100) / 100;\n                dataitem.date = weekdata[day].date;\n                dataitem.count = weekdata[day].count;\n                dataitem.x = setposition.x;\n                dataitem.y = setposition.y;\n                ctx.fillRect(setposition.x, setposition.y, lineminwitdh, lineminwitdh);\n                setposition.y = setposition.y + linemaxwitdh\n            }\n            setposition.y = 0.025 * width;\n            setposition.x = setposition.x + linemaxwitdh\n        }\n        if (document.body.clientWidth > 700) {\n            ctx.font = \"600  Arial\";\n            ctx.fillStyle = '#aaa';\n            ctx.fillText(\"日\", 0, 1.9 * linemaxwitdh);\n            ctx.fillText(\"二\", 0, 3.9 * linemaxwitdh);\n            ctx.fillText(\"四\", 0, 5.9 * linemaxwitdh);\n            ctx.fillText(\"六\", 0, 7.9 * linemaxwitdh);\n            var monthindexlist = width / 24;\n            for (var index in git_monthchange) {\n                ctx.fillText(git_monthchange[index], monthindexlist, 0.7 * linemaxwitdh);\n                monthindexlist = monthindexlist + width / 12\n            }\n        }\n        c.onmousemove = function (event) {\n            if (document.querySelector('.gitmessage')) {\n                git_tooltip_container.innerHTML = \"\"\n            }\n            getMousePos(c, event)\n        };\n        git_tooltip_container.onmousemove = function (event) {\n            if (document.querySelector('.gitmessage')) {\n                git_tooltip_container.innerHTML = \"\"\n            }\n        };\n\n        function getMousePos(canvas, event) {\n            var rect = canvas.getBoundingClientRect();\n            var x = event.clientX - rect.left * (canvas.width / rect.width);\n            var y = event.clientY - rect.top * (canvas.height / rect.height);\n            for (var item of git_positionplusdata) {\n                var lenthx = x - item.x;\n                var lenthy = y - item.y;\n                if (0 < lenthx && lenthx < lineminwitdh) {\n                    if (0 < lenthy && lenthy < lineminwitdh) {\n                        git_span1 = item.date;\n                        git_span2 = item.count;\n                        git_x = event.clientX - 100;\n                        git_y = event.clientY - 60;\n                        html = tooltip_html(git_x, git_y, git_span1, git_span2);\n                        append_div_gitcalendar(git_tooltip_container, html)\n                    }\n                }\n            }\n        }\n    }\n\n    function addlastmonth() {\n        if (git_thisdayindex === 0) {\n            thisweekcore(52);\n            thisweekcore(51);\n            thisweekcore(50);\n            thisweekcore(49);\n            thisweekcore(48);\n            git_thisweekdatacore += git_firstdate[6].count;\n            git_amonthago = git_firstdate[6].date\n        } else {\n            thisweekcore(52);\n            thisweekcore(51);\n            thisweekcore(50);\n            thisweekcore(49);\n            thisweek2core();\n            git_amonthago = git_first2date[git_thisdayindex - 1].date\n        }\n    }\n\n    function thisweek2core() {\n        for (var i = git_thisdayindex - 1; i < git_first2date.length; i++) {\n            git_thisweekdatacore += git_first2date[i].count\n        }\n    }\n\n    function thisweekcore(index) {\n        for (var item of git_data[index]) {\n            git_thisweekdatacore += item.count\n        }\n    }\n\n    function addlastweek() {\n        for (var item of git_lastweek) {\n            git_weekdatacore += item.count\n        }\n    }\n\n    function addbeforeweek() {\n        for (var i = git_thisdayindex; i < git_beforeweek.length; i++) {\n            git_weekdatacore += git_beforeweek[i].count\n        }\n    }\n\n    function addweek(data) {\n        if (git_thisdayindex === 6) {\n            git_aweekago = git_lastweek[0].date;\n            addlastweek()\n        } else {\n            lastweek = data.contributions[51];\n            git_aweekago = lastweek[git_thisdayindex + 1].date;\n            addlastweek();\n            addbeforeweek()\n        }\n    }\n\n    fetch(git_githubapiurl).then(data => data.json()).then(data => {\n        git_data = data.contributions;\n        git_total = data.total;\n        git_first2date = git_data[48];\n        git_firstdate = git_data[47];\n        git_firstweek = data.contributions[0];\n        git_lastweek = data.contributions[52];\n        git_beforeweek = data.contributions[51];\n        git_thisdayindex = git_lastweek.length - 1;\n        git_thisday = git_lastweek[git_thisdayindex].date;\n        git_oneyearbeforeday = git_firstweek[0].date;\n        git_monthindex = git_thisday.substring(5, 7) * 1;\n        git_montharrbefore = git_month.splice(git_monthindex, 12 - git_monthindex);\n        git_monthchange = git_montharrbefore.concat(git_month);\n        addweek(data);\n        addlastmonth();\n        var html = github_main_box(git_monthchange, git_data, git_user, git_color, git_total, git_thisweekdatacore, git_weekdatacore, git_oneyearbeforeday, git_thisday, git_aweekago, git_amonthago);\n        append_div_gitcalendar(github_container, html);\n        if(document.getElementById('github_loading')){\n            document.getElementById('github_loading').remove()};\n        responsiveChart()\n    }).catch(function (error) {\n        console.log(error)\n    });\n      window.addEventListener('resize', function () {\n          if (document.getElementById('gitcanvas')) {\n            responsiveChart()\n          }\n    })\n    window.addEventListener('scroll', function () {\n      if (document.querySelector('.gitmessage')) {\n        git_tooltip_container.innerHTML = \"\"\n    }\n    })\n    var git_thiscolor = (color, x) => {\n        if (x === 0) {\n            var i = parseInt(x / 2);\n            return color[0]\n        } else if (x < 2) {\n            return color[1]\n        } else if (x < 20) {\n            var i = parseInt(x / 2);\n            return color[i]\n        } else {\n            return color[9]\n        }\n    };\n    var tooltip_html = (x, y, span1, span2) => {\n        var html = '';\n        html += '<div class=\"gitmessage\" style=\"top:' + y + 'px;left:' + x + 'px;position: fixed;z-index:9999\"><div class=\"angle-wrapper\" style=\"display:block;\"><span>' + span1 + '&nbsp;</span><span>' + span2 + ' 次上传</span></div></div>';\n        return html\n    };\n    var github_canvas_box = () => {\n        var html = '<div id=\"gitcalendarcanvasbox\"> <canvas id=\"gitcanvas\" style=\"animation: none;\"></canvas></div>';\n        return html\n    };\n    var github_info_box = (user, color) => {\n        var html = '';\n        html += '<div id=\"git_tooltip_container\"></div><div class=\"contrib-footer clearfix mt-1 mx-3 px-3 pb-1\"><div class=\"float-left text-gray\">数据来源 <a href=\"https://github.com/' + user + '\" target=\"blank\">@' + user + '</a></div><div class=\"contrib-legend text-gray\">Less <ul class=\"legend\"><li style=\"background-color:' + color[0] + '\"></li><li style=\"background-color:' + color[2] + '\"></li><li style=\"background-color:' + color[4] + '\"></li><li style=\"background-color:' + color[6] + '\"></li><li style=\"background-color:' + color[8] + '\"></li></ul>More </div></div>';\n        return html\n    };\n    var github_main_box = (monthchange, git_data, user, color, total, thisweekdatacore, weekdatacore, oneyearbeforeday, thisday, aweekago, amonthago) => {\n        var html = '';\n        var canvasbox = github_canvas_box();\n        var infobox = github_info_box(user, color);\n        var style = github_main_style();\n        html += '<div class=\"position-relative\"><div class=\"border py-2 graph-before-activity-overview\"><div class=\"js-gitcalendar-graph mx-md-2 mx-3 d-flex flex-column flex-items-end flex-xl-items-center overflow-hidden pt-1 is-graph-loading graph-canvas gitcalendar-graph height-full text-center\">' + canvasbox + '</div>' + infobox + '</div></div>';\n        html += '<div style=\"display:flex;width:100%\"><div class=\"contrib-column contrib-column-first table-column\"><span class=\"text-muted\">过去一年提交</span><span class=\"contrib-number\">' + total + '</span><span class=\"text-muted\">' + oneyearbeforeday + '&nbsp;-&nbsp;' + thisday + '</span></div><div class=\"contrib-column table-column\"><span class=\"text-muted\">最近一月提交</span><span class=\"contrib-number\">' + thisweekdatacore + '</span><span class=\"text-muted\">' + amonthago + '&nbsp;-&nbsp;' + thisday + '</span></div><div class=\"contrib-column table-column\"><span class=\"text-muted\">最近一周提交</span><span class=\"contrib-number\">' + weekdatacore + '</span><span class=\"text-muted\">' + aweekago + '&nbsp;-&nbsp;' + thisday + '</span></div></div>' + style;\n        return html\n    };\n    var github_main_style = () => {\n        style = '<style>#github_container{text-align:center;margin:0 auto;width:100%;display:flex;display:-webkit-flex;justify-content:center;align-items:center;flex-wrap:wrap;}.gitcalendar-graph text.wday,.gitcalendar-graph text.month{font-size:10px;fill:#aaa;}.contrib-legend{text-align:right;padding:0 14px 10px 0;display:inline-block;float:right;}.contrib-legend .legend{display:inline-block;list-style:none;margin:0 5px;position:relative;bottom:-1px;padding:0;}.contrib-legend .legend li{display:inline-block;width:10px;height:10px;}.text-small{font-size:12px;color:#767676;}.gitcalendar-graph{padding:15px 0 0;text-align:center;}.contrib-column{text-align:center;border-left:1px solid #ddd;border-top:1px solid #ddd;font-size:11px;}.contrib-column-first{border-left:0;}.table-column{padding:10px;display:table-cell;flex:1;vertical-align:top;}.contrib-number{font-weight:300;line-height:1.3em;font-size:24px;display:block;}.gitcalendar img.spinner{width:70px;margin-top:50px;min-height:70px;}.monospace{text-align:center;color:#000;font-family:monospace;}.monospace a{color:#1D75AB;text-decoration:none;}.contrib-footer{font-size:11px;padding:0 10px 12px;text-align:left;width:100%;box-sizing:border-box;height:26px;}.left.text-muted{float:left;margin-left:9px;color:#767676;}.left.text-muted a{color:#4078c0;text-decoration:none;}.left.text-muted a:hover,.monospace a:hover{text-decoration:underline;}h2.f4.text-normal.mb-3{display:none;}.float-left.text-gray{float:left;}#user-activity-overview{display:none;}.day-tooltip{white-space:nowrap;position:absolute;z-index:99999;padding:10px;font-size:12px;color:#959da5;text-align:center;background:rgba(0,0,0,.85);border-radius:3px;display:none;pointer-events:none;}.day-tooltip strong{color:#dfe2e5;}.day-tooltip.is-visible{display:block;}.day-tooltip:after{position:absolute;bottom:-10px;left:50%;width:5px;height:5px;box-sizing:border-box;margin:0 0 0 -5px;content:\" \";border:5px solid transparent;border-top-color:rgba(0,0,0,.85)}.position-relative{width:100%;}@media screen and (max-width:650px){.contrib-column{display:none}}.angle-wrapper{z-index:9999;display:inline;width:200px;height:40px;position:relative;padding:5px 0;background:rgba(0,0,0,0.8);border-radius:8px;text-align:center;color:white;}.angle-box{position:fixed;padding:10px}.angle-wrapper span{padding-bottom:1em;}.angle-wrapper:before{content:\"\";width:0;height:0;border:10px solid transparent;border-top-color:rgba(0,0,0,0.8);position:absolute;left:47.5%;top:100%;}</style>';\n        return style\n    }\n};\nvar append_div_gitcalendar = (parent, text) => {\n    if (typeof text === 'string') {\n        var temp = document.createElement('div');\n        temp.innerHTML = text;\n        var frag = document.createDocumentFragment();\n        while (temp.firstChild) {\n            frag.appendChild(temp.firstChild)\n        }\n        parent.appendChild(frag)\n    } else {\n        parent.appendChild(text)\n    }\n};\nvar loading_git = (color) => {\n    loading = '<div id=\"github_loading\" style=\"width:10%;height:100%;margin:0 auto;display: block\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"  viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50\" xml:space=\"preserve\"><path fill=\"' + color + '\" d=\"M25.251,6.461c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615V6.461z\" transform=\"rotate(275.098 25 25)\"><animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 25 25\" to=\"360 25 25\" dur=\"0.6s\" repeatCount=\"indefinite\"></animateTransform></path></svg></div>';\n    return loading\n};\n\n(function(){\n    var git_user = 'wangpengzong';\n    var github_container = document.getElementById('github_container');\n    var github_loading = document.getElementById('github_loading');\n    var git_purple = ['#ebedf0', '#fdcdec', '#fc9bd9', '#fa6ac5', '#f838b2', '#f5089f', '#c4067e', '#92055e', '#540336', '#48022f', '#30021f',];\n    var git_green = ['#ebedf0', '#f0fff4', '#dcffe4', '#bef5cb', '#85e89d', '#34d058', '#28a745', '#22863a', '#176f2c', '#165c26', '#144620'];\n    var git_blue = ['#ebedf0', '#f1f8ff', '#dbedff', '#c8e1ff', '#79b8ff', '#2188ff', '#0366d6', '#005cc5', '#044289', '#032f62', '#05264c',];\n    var git_color = git_green;\n    if (github_container) {\n      append_div_gitcalendar(github_container, loading_git(git_color[4]));\n      github_canlendar(git_user, git_color)\n    } else {\n      console.log('nonono');\n    }\n    \n})()\n    \n    ","date":"2022-07-06T01:16:04.701Z","updated":"2022-07-06T01:16:04.701Z","path":"widget/githubcalendar/index.js","layout":"false","title":"","comments":1,"_id":"cl591oig90007cgunfu738a3j","content":"var github_canlendar = (git_user, git_color) => {\n    var git_githubapiurl = \"https://python-github-calendar-api.vercel.app/api?\" + git_user;\n    var git_fixed = 'fixed';\n    var git_px = 'px';\n    var git_month = ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'];\n    var git_monthchange = [];\n    var git_oneyearbeforeday = '';\n    var git_thisday = '';\n    var git_amonthago = '';\n    var git_aweekago = '';\n    var git_weekdatacore = 0;\n    var git_datacore = 0;\n    var git_total = 0;\n    var git_datadate = '';\n    var git_git_data = [];\n    var git_positionplusdata = [];\n    var git_firstweek = [];\n    var git_lastweek = [];\n    var git_beforeweek = [];\n    var git_thisweekdatacore = 0;\n    var git_mounthbeforeday = 0;\n    var git_mounthfirstindex = 0;\n    var git_crispedges = 'crispedges';\n    var git_thisdayindex = 0;\n    var git_amonthagoindex = 0;\n    var git_amonthagoweek = [];\n    var git_firstdate = [];\n    var git_first2date = [];\n    var git_montharrbefore = [];\n    var git_monthindex = 0;\n    var retinaCanvas = (canvas, context, ratio) => {\n        if (ratio > 1) {\n            var canvasWidth = canvas.width;\n            var canvasHeight = canvas.height;\n            canvas.width = canvasWidth * ratio;\n            canvas.height = canvasHeight * ratio;\n            canvas.style.width = '100%';\n            canvas.style.height = canvasHeight + 'px';\n            context.scale(ratio, ratio);\n        }\n    };\n    function responsiveChart() {\n        var ratio = window.devicePixelRatio || 1\n        var git_tooltip_container = document.getElementById('git_tooltip_container');\n        var git_x = '';\n        var git_y = '';\n        var git_span1 = '';\n        var git_span2 = '';\n        var c = document.getElementById(\"gitcanvas\");\n        c.style.width = '100%';\n        c.style.height = '';\n        var cmessage = document.getElementById(\"gitmessage\");\n        var ctx = c.getContext(\"2d\");\n        width = c.width = document.getElementById(\"gitcalendarcanvasbox\").offsetWidth;\n        height = c.height = 9 * 0.96 * c.width / git_data.length;\n        retinaCanvas(c,ctx, ratio)\n        var linemaxwitdh = height/ 9;\n        var lineminwitdh = 0.8 * linemaxwitdh;\n        var setposition = {x: 0.02 * width, y: 0.025 * width};\n        for (var week in git_data) {\n            weekdata = git_data[week];\n            for (var day in weekdata) {\n                var dataitem = {date: \"\", count: \"\", x: 0, y: 0};\n                git_positionplusdata.push(dataitem);\n                ctx.fillStyle = git_thiscolor(git_color, weekdata[day].count);\n                setposition.y = Math.round(setposition.y * 100) / 100;\n                dataitem.date = weekdata[day].date;\n                dataitem.count = weekdata[day].count;\n                dataitem.x = setposition.x;\n                dataitem.y = setposition.y;\n                ctx.fillRect(setposition.x, setposition.y, lineminwitdh, lineminwitdh);\n                setposition.y = setposition.y + linemaxwitdh\n            }\n            setposition.y = 0.025 * width;\n            setposition.x = setposition.x + linemaxwitdh\n        }\n        if (document.body.clientWidth > 700) {\n            ctx.font = \"600  Arial\";\n            ctx.fillStyle = '#aaa';\n            ctx.fillText(\"日\", 0, 1.9 * linemaxwitdh);\n            ctx.fillText(\"二\", 0, 3.9 * linemaxwitdh);\n            ctx.fillText(\"四\", 0, 5.9 * linemaxwitdh);\n            ctx.fillText(\"六\", 0, 7.9 * linemaxwitdh);\n            var monthindexlist = width / 24;\n            for (var index in git_monthchange) {\n                ctx.fillText(git_monthchange[index], monthindexlist, 0.7 * linemaxwitdh);\n                monthindexlist = monthindexlist + width / 12\n            }\n        }\n        c.onmousemove = function (event) {\n            if (document.querySelector('.gitmessage')) {\n                git_tooltip_container.innerHTML = \"\"\n            }\n            getMousePos(c, event)\n        };\n        git_tooltip_container.onmousemove = function (event) {\n            if (document.querySelector('.gitmessage')) {\n                git_tooltip_container.innerHTML = \"\"\n            }\n        };\n\n        function getMousePos(canvas, event) {\n            var rect = canvas.getBoundingClientRect();\n            var x = event.clientX - rect.left * (canvas.width / rect.width);\n            var y = event.clientY - rect.top * (canvas.height / rect.height);\n            for (var item of git_positionplusdata) {\n                var lenthx = x - item.x;\n                var lenthy = y - item.y;\n                if (0 < lenthx && lenthx < lineminwitdh) {\n                    if (0 < lenthy && lenthy < lineminwitdh) {\n                        git_span1 = item.date;\n                        git_span2 = item.count;\n                        git_x = event.clientX - 100;\n                        git_y = event.clientY - 60;\n                        html = tooltip_html(git_x, git_y, git_span1, git_span2);\n                        append_div_gitcalendar(git_tooltip_container, html)\n                    }\n                }\n            }\n        }\n    }\n\n    function addlastmonth() {\n        if (git_thisdayindex === 0) {\n            thisweekcore(52);\n            thisweekcore(51);\n            thisweekcore(50);\n            thisweekcore(49);\n            thisweekcore(48);\n            git_thisweekdatacore += git_firstdate[6].count;\n            git_amonthago = git_firstdate[6].date\n        } else {\n            thisweekcore(52);\n            thisweekcore(51);\n            thisweekcore(50);\n            thisweekcore(49);\n            thisweek2core();\n            git_amonthago = git_first2date[git_thisdayindex - 1].date\n        }\n    }\n\n    function thisweek2core() {\n        for (var i = git_thisdayindex - 1; i < git_first2date.length; i++) {\n            git_thisweekdatacore += git_first2date[i].count\n        }\n    }\n\n    function thisweekcore(index) {\n        for (var item of git_data[index]) {\n            git_thisweekdatacore += item.count\n        }\n    }\n\n    function addlastweek() {\n        for (var item of git_lastweek) {\n            git_weekdatacore += item.count\n        }\n    }\n\n    function addbeforeweek() {\n        for (var i = git_thisdayindex; i < git_beforeweek.length; i++) {\n            git_weekdatacore += git_beforeweek[i].count\n        }\n    }\n\n    function addweek(data) {\n        if (git_thisdayindex === 6) {\n            git_aweekago = git_lastweek[0].date;\n            addlastweek()\n        } else {\n            lastweek = data.contributions[51];\n            git_aweekago = lastweek[git_thisdayindex + 1].date;\n            addlastweek();\n            addbeforeweek()\n        }\n    }\n\n    fetch(git_githubapiurl).then(data => data.json()).then(data => {\n        git_data = data.contributions;\n        git_total = data.total;\n        git_first2date = git_data[48];\n        git_firstdate = git_data[47];\n        git_firstweek = data.contributions[0];\n        git_lastweek = data.contributions[52];\n        git_beforeweek = data.contributions[51];\n        git_thisdayindex = git_lastweek.length - 1;\n        git_thisday = git_lastweek[git_thisdayindex].date;\n        git_oneyearbeforeday = git_firstweek[0].date;\n        git_monthindex = git_thisday.substring(5, 7) * 1;\n        git_montharrbefore = git_month.splice(git_monthindex, 12 - git_monthindex);\n        git_monthchange = git_montharrbefore.concat(git_month);\n        addweek(data);\n        addlastmonth();\n        var html = github_main_box(git_monthchange, git_data, git_user, git_color, git_total, git_thisweekdatacore, git_weekdatacore, git_oneyearbeforeday, git_thisday, git_aweekago, git_amonthago);\n        append_div_gitcalendar(github_container, html);\n        if(document.getElementById('github_loading')){\n            document.getElementById('github_loading').remove()};\n        responsiveChart()\n    }).catch(function (error) {\n        console.log(error)\n    });\n      window.addEventListener('resize', function () {\n          if (document.getElementById('gitcanvas')) {\n            responsiveChart()\n          }\n    })\n    window.addEventListener('scroll', function () {\n      if (document.querySelector('.gitmessage')) {\n        git_tooltip_container.innerHTML = \"\"\n    }\n    })\n    var git_thiscolor = (color, x) => {\n        if (x === 0) {\n            var i = parseInt(x / 2);\n            return color[0]\n        } else if (x < 2) {\n            return color[1]\n        } else if (x < 20) {\n            var i = parseInt(x / 2);\n            return color[i]\n        } else {\n            return color[9]\n        }\n    };\n    var tooltip_html = (x, y, span1, span2) => {\n        var html = '';\n        html += '<div class=\"gitmessage\" style=\"top:' + y + 'px;left:' + x + 'px;position: fixed;z-index:9999\"><div class=\"angle-wrapper\" style=\"display:block;\"><span>' + span1 + '&nbsp;</span><span>' + span2 + ' 次上传</span></div></div>';\n        return html\n    };\n    var github_canvas_box = () => {\n        var html = '<div id=\"gitcalendarcanvasbox\"> <canvas id=\"gitcanvas\" style=\"animation: none;\"></canvas></div>';\n        return html\n    };\n    var github_info_box = (user, color) => {\n        var html = '';\n        html += '<div id=\"git_tooltip_container\"></div><div class=\"contrib-footer clearfix mt-1 mx-3 px-3 pb-1\"><div class=\"float-left text-gray\">数据来源 <a href=\"https://github.com/' + user + '\" target=\"blank\">@' + user + '</a></div><div class=\"contrib-legend text-gray\">Less <ul class=\"legend\"><li style=\"background-color:' + color[0] + '\"></li><li style=\"background-color:' + color[2] + '\"></li><li style=\"background-color:' + color[4] + '\"></li><li style=\"background-color:' + color[6] + '\"></li><li style=\"background-color:' + color[8] + '\"></li></ul>More </div></div>';\n        return html\n    };\n    var github_main_box = (monthchange, git_data, user, color, total, thisweekdatacore, weekdatacore, oneyearbeforeday, thisday, aweekago, amonthago) => {\n        var html = '';\n        var canvasbox = github_canvas_box();\n        var infobox = github_info_box(user, color);\n        var style = github_main_style();\n        html += '<div class=\"position-relative\"><div class=\"border py-2 graph-before-activity-overview\"><div class=\"js-gitcalendar-graph mx-md-2 mx-3 d-flex flex-column flex-items-end flex-xl-items-center overflow-hidden pt-1 is-graph-loading graph-canvas gitcalendar-graph height-full text-center\">' + canvasbox + '</div>' + infobox + '</div></div>';\n        html += '<div style=\"display:flex;width:100%\"><div class=\"contrib-column contrib-column-first table-column\"><span class=\"text-muted\">过去一年提交</span><span class=\"contrib-number\">' + total + '</span><span class=\"text-muted\">' + oneyearbeforeday + '&nbsp;-&nbsp;' + thisday + '</span></div><div class=\"contrib-column table-column\"><span class=\"text-muted\">最近一月提交</span><span class=\"contrib-number\">' + thisweekdatacore + '</span><span class=\"text-muted\">' + amonthago + '&nbsp;-&nbsp;' + thisday + '</span></div><div class=\"contrib-column table-column\"><span class=\"text-muted\">最近一周提交</span><span class=\"contrib-number\">' + weekdatacore + '</span><span class=\"text-muted\">' + aweekago + '&nbsp;-&nbsp;' + thisday + '</span></div></div>' + style;\n        return html\n    };\n    var github_main_style = () => {\n        style = '<style>#github_container{text-align:center;margin:0 auto;width:100%;display:flex;display:-webkit-flex;justify-content:center;align-items:center;flex-wrap:wrap;}.gitcalendar-graph text.wday,.gitcalendar-graph text.month{font-size:10px;fill:#aaa;}.contrib-legend{text-align:right;padding:0 14px 10px 0;display:inline-block;float:right;}.contrib-legend .legend{display:inline-block;list-style:none;margin:0 5px;position:relative;bottom:-1px;padding:0;}.contrib-legend .legend li{display:inline-block;width:10px;height:10px;}.text-small{font-size:12px;color:#767676;}.gitcalendar-graph{padding:15px 0 0;text-align:center;}.contrib-column{text-align:center;border-left:1px solid #ddd;border-top:1px solid #ddd;font-size:11px;}.contrib-column-first{border-left:0;}.table-column{padding:10px;display:table-cell;flex:1;vertical-align:top;}.contrib-number{font-weight:300;line-height:1.3em;font-size:24px;display:block;}.gitcalendar img.spinner{width:70px;margin-top:50px;min-height:70px;}.monospace{text-align:center;color:#000;font-family:monospace;}.monospace a{color:#1D75AB;text-decoration:none;}.contrib-footer{font-size:11px;padding:0 10px 12px;text-align:left;width:100%;box-sizing:border-box;height:26px;}.left.text-muted{float:left;margin-left:9px;color:#767676;}.left.text-muted a{color:#4078c0;text-decoration:none;}.left.text-muted a:hover,.monospace a:hover{text-decoration:underline;}h2.f4.text-normal.mb-3{display:none;}.float-left.text-gray{float:left;}#user-activity-overview{display:none;}.day-tooltip{white-space:nowrap;position:absolute;z-index:99999;padding:10px;font-size:12px;color:#959da5;text-align:center;background:rgba(0,0,0,.85);border-radius:3px;display:none;pointer-events:none;}.day-tooltip strong{color:#dfe2e5;}.day-tooltip.is-visible{display:block;}.day-tooltip:after{position:absolute;bottom:-10px;left:50%;width:5px;height:5px;box-sizing:border-box;margin:0 0 0 -5px;content:\" \";border:5px solid transparent;border-top-color:rgba(0,0,0,.85)}.position-relative{width:100%;}@media screen and (max-width:650px){.contrib-column{display:none}}.angle-wrapper{z-index:9999;display:inline;width:200px;height:40px;position:relative;padding:5px 0;background:rgba(0,0,0,0.8);border-radius:8px;text-align:center;color:white;}.angle-box{position:fixed;padding:10px}.angle-wrapper span{padding-bottom:1em;}.angle-wrapper:before{content:\"\";width:0;height:0;border:10px solid transparent;border-top-color:rgba(0,0,0,0.8);position:absolute;left:47.5%;top:100%;}</style>';\n        return style\n    }\n};\nvar append_div_gitcalendar = (parent, text) => {\n    if (typeof text === 'string') {\n        var temp = document.createElement('div');\n        temp.innerHTML = text;\n        var frag = document.createDocumentFragment();\n        while (temp.firstChild) {\n            frag.appendChild(temp.firstChild)\n        }\n        parent.appendChild(frag)\n    } else {\n        parent.appendChild(text)\n    }\n};\nvar loading_git = (color) => {\n    loading = '<div id=\"github_loading\" style=\"width:10%;height:100%;margin:0 auto;display: block\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"  viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50\" xml:space=\"preserve\"><path fill=\"' + color + '\" d=\"M25.251,6.461c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615V6.461z\" transform=\"rotate(275.098 25 25)\"><animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 25 25\" to=\"360 25 25\" dur=\"0.6s\" repeatCount=\"indefinite\"></animateTransform></path></svg></div>';\n    return loading\n};\n\n(function(){\n    var git_user = 'wangpengzong';\n    var github_container = document.getElementById('github_container');\n    var github_loading = document.getElementById('github_loading');\n    var git_purple = ['#ebedf0', '#fdcdec', '#fc9bd9', '#fa6ac5', '#f838b2', '#f5089f', '#c4067e', '#92055e', '#540336', '#48022f', '#30021f',];\n    var git_green = ['#ebedf0', '#f0fff4', '#dcffe4', '#bef5cb', '#85e89d', '#34d058', '#28a745', '#22863a', '#176f2c', '#165c26', '#144620'];\n    var git_blue = ['#ebedf0', '#f1f8ff', '#dbedff', '#c8e1ff', '#79b8ff', '#2188ff', '#0366d6', '#005cc5', '#044289', '#032f62', '#05264c',];\n    var git_color = git_green;\n    if (github_container) {\n      append_div_gitcalendar(github_container, loading_git(git_color[4]));\n      github_canlendar(git_user, git_color)\n    } else {\n      console.log('nonono');\n    }\n    \n})()\n    \n    ","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"wangpengzong","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/wangpengzong","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"var github_canlendar = (git_user, git_color) => {\n    var git_githubapiurl = \"https://python-github-calendar-api.vercel.app/api?\" + git_user;\n    var git_fixed = 'fixed';\n    var git_px = 'px';\n    var git_month = ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'];\n    var git_monthchange = [];\n    var git_oneyearbeforeday = '';\n    var git_thisday = '';\n    var git_amonthago = '';\n    var git_aweekago = '';\n    var git_weekdatacore = 0;\n    var git_datacore = 0;\n    var git_total = 0;\n    var git_datadate = '';\n    var git_git_data = [];\n    var git_positionplusdata = [];\n    var git_firstweek = [];\n    var git_lastweek = [];\n    var git_beforeweek = [];\n    var git_thisweekdatacore = 0;\n    var git_mounthbeforeday = 0;\n    var git_mounthfirstindex = 0;\n    var git_crispedges = 'crispedges';\n    var git_thisdayindex = 0;\n    var git_amonthagoindex = 0;\n    var git_amonthagoweek = [];\n    var git_firstdate = [];\n    var git_first2date = [];\n    var git_montharrbefore = [];\n    var git_monthindex = 0;\n    var retinaCanvas = (canvas, context, ratio) => {\n        if (ratio > 1) {\n            var canvasWidth = canvas.width;\n            var canvasHeight = canvas.height;\n            canvas.width = canvasWidth * ratio;\n            canvas.height = canvasHeight * ratio;\n            canvas.style.width = '100%';\n            canvas.style.height = canvasHeight + 'px';\n            context.scale(ratio, ratio);\n        }\n    };\n    function responsiveChart() {\n        var ratio = window.devicePixelRatio || 1\n        var git_tooltip_container = document.getElementById('git_tooltip_container');\n        var git_x = '';\n        var git_y = '';\n        var git_span1 = '';\n        var git_span2 = '';\n        var c = document.getElementById(\"gitcanvas\");\n        c.style.width = '100%';\n        c.style.height = '';\n        var cmessage = document.getElementById(\"gitmessage\");\n        var ctx = c.getContext(\"2d\");\n        width = c.width = document.getElementById(\"gitcalendarcanvasbox\").offsetWidth;\n        height = c.height = 9 * 0.96 * c.width / git_data.length;\n        retinaCanvas(c,ctx, ratio)\n        var linemaxwitdh = height/ 9;\n        var lineminwitdh = 0.8 * linemaxwitdh;\n        var setposition = {x: 0.02 * width, y: 0.025 * width};\n        for (var week in git_data) {\n            weekdata = git_data[week];\n            for (var day in weekdata) {\n                var dataitem = {date: \"\", count: \"\", x: 0, y: 0};\n                git_positionplusdata.push(dataitem);\n                ctx.fillStyle = git_thiscolor(git_color, weekdata[day].count);\n                setposition.y = Math.round(setposition.y * 100) / 100;\n                dataitem.date = weekdata[day].date;\n                dataitem.count = weekdata[day].count;\n                dataitem.x = setposition.x;\n                dataitem.y = setposition.y;\n                ctx.fillRect(setposition.x, setposition.y, lineminwitdh, lineminwitdh);\n                setposition.y = setposition.y + linemaxwitdh\n            }\n            setposition.y = 0.025 * width;\n            setposition.x = setposition.x + linemaxwitdh\n        }\n        if (document.body.clientWidth > 700) {\n            ctx.font = \"600  Arial\";\n            ctx.fillStyle = '#aaa';\n            ctx.fillText(\"日\", 0, 1.9 * linemaxwitdh);\n            ctx.fillText(\"二\", 0, 3.9 * linemaxwitdh);\n            ctx.fillText(\"四\", 0, 5.9 * linemaxwitdh);\n            ctx.fillText(\"六\", 0, 7.9 * linemaxwitdh);\n            var monthindexlist = width / 24;\n            for (var index in git_monthchange) {\n                ctx.fillText(git_monthchange[index], monthindexlist, 0.7 * linemaxwitdh);\n                monthindexlist = monthindexlist + width / 12\n            }\n        }\n        c.onmousemove = function (event) {\n            if (document.querySelector('.gitmessage')) {\n                git_tooltip_container.innerHTML = \"\"\n            }\n            getMousePos(c, event)\n        };\n        git_tooltip_container.onmousemove = function (event) {\n            if (document.querySelector('.gitmessage')) {\n                git_tooltip_container.innerHTML = \"\"\n            }\n        };\n\n        function getMousePos(canvas, event) {\n            var rect = canvas.getBoundingClientRect();\n            var x = event.clientX - rect.left * (canvas.width / rect.width);\n            var y = event.clientY - rect.top * (canvas.height / rect.height);\n            for (var item of git_positionplusdata) {\n                var lenthx = x - item.x;\n                var lenthy = y - item.y;\n                if (0 < lenthx && lenthx < lineminwitdh) {\n                    if (0 < lenthy && lenthy < lineminwitdh) {\n                        git_span1 = item.date;\n                        git_span2 = item.count;\n                        git_x = event.clientX - 100;\n                        git_y = event.clientY - 60;\n                        html = tooltip_html(git_x, git_y, git_span1, git_span2);\n                        append_div_gitcalendar(git_tooltip_container, html)\n                    }\n                }\n            }\n        }\n    }\n\n    function addlastmonth() {\n        if (git_thisdayindex === 0) {\n            thisweekcore(52);\n            thisweekcore(51);\n            thisweekcore(50);\n            thisweekcore(49);\n            thisweekcore(48);\n            git_thisweekdatacore += git_firstdate[6].count;\n            git_amonthago = git_firstdate[6].date\n        } else {\n            thisweekcore(52);\n            thisweekcore(51);\n            thisweekcore(50);\n            thisweekcore(49);\n            thisweek2core();\n            git_amonthago = git_first2date[git_thisdayindex - 1].date\n        }\n    }\n\n    function thisweek2core() {\n        for (var i = git_thisdayindex - 1; i < git_first2date.length; i++) {\n            git_thisweekdatacore += git_first2date[i].count\n        }\n    }\n\n    function thisweekcore(index) {\n        for (var item of git_data[index]) {\n            git_thisweekdatacore += item.count\n        }\n    }\n\n    function addlastweek() {\n        for (var item of git_lastweek) {\n            git_weekdatacore += item.count\n        }\n    }\n\n    function addbeforeweek() {\n        for (var i = git_thisdayindex; i < git_beforeweek.length; i++) {\n            git_weekdatacore += git_beforeweek[i].count\n        }\n    }\n\n    function addweek(data) {\n        if (git_thisdayindex === 6) {\n            git_aweekago = git_lastweek[0].date;\n            addlastweek()\n        } else {\n            lastweek = data.contributions[51];\n            git_aweekago = lastweek[git_thisdayindex + 1].date;\n            addlastweek();\n            addbeforeweek()\n        }\n    }\n\n    fetch(git_githubapiurl).then(data => data.json()).then(data => {\n        git_data = data.contributions;\n        git_total = data.total;\n        git_first2date = git_data[48];\n        git_firstdate = git_data[47];\n        git_firstweek = data.contributions[0];\n        git_lastweek = data.contributions[52];\n        git_beforeweek = data.contributions[51];\n        git_thisdayindex = git_lastweek.length - 1;\n        git_thisday = git_lastweek[git_thisdayindex].date;\n        git_oneyearbeforeday = git_firstweek[0].date;\n        git_monthindex = git_thisday.substring(5, 7) * 1;\n        git_montharrbefore = git_month.splice(git_monthindex, 12 - git_monthindex);\n        git_monthchange = git_montharrbefore.concat(git_month);\n        addweek(data);\n        addlastmonth();\n        var html = github_main_box(git_monthchange, git_data, git_user, git_color, git_total, git_thisweekdatacore, git_weekdatacore, git_oneyearbeforeday, git_thisday, git_aweekago, git_amonthago);\n        append_div_gitcalendar(github_container, html);\n        if(document.getElementById('github_loading')){\n            document.getElementById('github_loading').remove()};\n        responsiveChart()\n    }).catch(function (error) {\n        console.log(error)\n    });\n      window.addEventListener('resize', function () {\n          if (document.getElementById('gitcanvas')) {\n            responsiveChart()\n          }\n    })\n    window.addEventListener('scroll', function () {\n      if (document.querySelector('.gitmessage')) {\n        git_tooltip_container.innerHTML = \"\"\n    }\n    })\n    var git_thiscolor = (color, x) => {\n        if (x === 0) {\n            var i = parseInt(x / 2);\n            return color[0]\n        } else if (x < 2) {\n            return color[1]\n        } else if (x < 20) {\n            var i = parseInt(x / 2);\n            return color[i]\n        } else {\n            return color[9]\n        }\n    };\n    var tooltip_html = (x, y, span1, span2) => {\n        var html = '';\n        html += '<div class=\"gitmessage\" style=\"top:' + y + 'px;left:' + x + 'px;position: fixed;z-index:9999\"><div class=\"angle-wrapper\" style=\"display:block;\"><span>' + span1 + '&nbsp;</span><span>' + span2 + ' 次上传</span></div></div>';\n        return html\n    };\n    var github_canvas_box = () => {\n        var html = '<div id=\"gitcalendarcanvasbox\"> <canvas id=\"gitcanvas\" style=\"animation: none;\"></canvas></div>';\n        return html\n    };\n    var github_info_box = (user, color) => {\n        var html = '';\n        html += '<div id=\"git_tooltip_container\"></div><div class=\"contrib-footer clearfix mt-1 mx-3 px-3 pb-1\"><div class=\"float-left text-gray\">数据来源 <a href=\"https://github.com/' + user + '\" target=\"blank\">@' + user + '</a></div><div class=\"contrib-legend text-gray\">Less <ul class=\"legend\"><li style=\"background-color:' + color[0] + '\"></li><li style=\"background-color:' + color[2] + '\"></li><li style=\"background-color:' + color[4] + '\"></li><li style=\"background-color:' + color[6] + '\"></li><li style=\"background-color:' + color[8] + '\"></li></ul>More </div></div>';\n        return html\n    };\n    var github_main_box = (monthchange, git_data, user, color, total, thisweekdatacore, weekdatacore, oneyearbeforeday, thisday, aweekago, amonthago) => {\n        var html = '';\n        var canvasbox = github_canvas_box();\n        var infobox = github_info_box(user, color);\n        var style = github_main_style();\n        html += '<div class=\"position-relative\"><div class=\"border py-2 graph-before-activity-overview\"><div class=\"js-gitcalendar-graph mx-md-2 mx-3 d-flex flex-column flex-items-end flex-xl-items-center overflow-hidden pt-1 is-graph-loading graph-canvas gitcalendar-graph height-full text-center\">' + canvasbox + '</div>' + infobox + '</div></div>';\n        html += '<div style=\"display:flex;width:100%\"><div class=\"contrib-column contrib-column-first table-column\"><span class=\"text-muted\">过去一年提交</span><span class=\"contrib-number\">' + total + '</span><span class=\"text-muted\">' + oneyearbeforeday + '&nbsp;-&nbsp;' + thisday + '</span></div><div class=\"contrib-column table-column\"><span class=\"text-muted\">最近一月提交</span><span class=\"contrib-number\">' + thisweekdatacore + '</span><span class=\"text-muted\">' + amonthago + '&nbsp;-&nbsp;' + thisday + '</span></div><div class=\"contrib-column table-column\"><span class=\"text-muted\">最近一周提交</span><span class=\"contrib-number\">' + weekdatacore + '</span><span class=\"text-muted\">' + aweekago + '&nbsp;-&nbsp;' + thisday + '</span></div></div>' + style;\n        return html\n    };\n    var github_main_style = () => {\n        style = '<style>#github_container{text-align:center;margin:0 auto;width:100%;display:flex;display:-webkit-flex;justify-content:center;align-items:center;flex-wrap:wrap;}.gitcalendar-graph text.wday,.gitcalendar-graph text.month{font-size:10px;fill:#aaa;}.contrib-legend{text-align:right;padding:0 14px 10px 0;display:inline-block;float:right;}.contrib-legend .legend{display:inline-block;list-style:none;margin:0 5px;position:relative;bottom:-1px;padding:0;}.contrib-legend .legend li{display:inline-block;width:10px;height:10px;}.text-small{font-size:12px;color:#767676;}.gitcalendar-graph{padding:15px 0 0;text-align:center;}.contrib-column{text-align:center;border-left:1px solid #ddd;border-top:1px solid #ddd;font-size:11px;}.contrib-column-first{border-left:0;}.table-column{padding:10px;display:table-cell;flex:1;vertical-align:top;}.contrib-number{font-weight:300;line-height:1.3em;font-size:24px;display:block;}.gitcalendar img.spinner{width:70px;margin-top:50px;min-height:70px;}.monospace{text-align:center;color:#000;font-family:monospace;}.monospace a{color:#1D75AB;text-decoration:none;}.contrib-footer{font-size:11px;padding:0 10px 12px;text-align:left;width:100%;box-sizing:border-box;height:26px;}.left.text-muted{float:left;margin-left:9px;color:#767676;}.left.text-muted a{color:#4078c0;text-decoration:none;}.left.text-muted a:hover,.monospace a:hover{text-decoration:underline;}h2.f4.text-normal.mb-3{display:none;}.float-left.text-gray{float:left;}#user-activity-overview{display:none;}.day-tooltip{white-space:nowrap;position:absolute;z-index:99999;padding:10px;font-size:12px;color:#959da5;text-align:center;background:rgba(0,0,0,.85);border-radius:3px;display:none;pointer-events:none;}.day-tooltip strong{color:#dfe2e5;}.day-tooltip.is-visible{display:block;}.day-tooltip:after{position:absolute;bottom:-10px;left:50%;width:5px;height:5px;box-sizing:border-box;margin:0 0 0 -5px;content:\" \";border:5px solid transparent;border-top-color:rgba(0,0,0,.85)}.position-relative{width:100%;}@media screen and (max-width:650px){.contrib-column{display:none}}.angle-wrapper{z-index:9999;display:inline;width:200px;height:40px;position:relative;padding:5px 0;background:rgba(0,0,0,0.8);border-radius:8px;text-align:center;color:white;}.angle-box{position:fixed;padding:10px}.angle-wrapper span{padding-bottom:1em;}.angle-wrapper:before{content:\"\";width:0;height:0;border:10px solid transparent;border-top-color:rgba(0,0,0,0.8);position:absolute;left:47.5%;top:100%;}</style>';\n        return style\n    }\n};\nvar append_div_gitcalendar = (parent, text) => {\n    if (typeof text === 'string') {\n        var temp = document.createElement('div');\n        temp.innerHTML = text;\n        var frag = document.createDocumentFragment();\n        while (temp.firstChild) {\n            frag.appendChild(temp.firstChild)\n        }\n        parent.appendChild(frag)\n    } else {\n        parent.appendChild(text)\n    }\n};\nvar loading_git = (color) => {\n    loading = '<div id=\"github_loading\" style=\"width:10%;height:100%;margin:0 auto;display: block\"><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"  viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50\" xml:space=\"preserve\"><path fill=\"' + color + '\" d=\"M25.251,6.461c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615V6.461z\" transform=\"rotate(275.098 25 25)\"><animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 25 25\" to=\"360 25 25\" dur=\"0.6s\" repeatCount=\"indefinite\"></animateTransform></path></svg></div>';\n    return loading\n};\n\n(function(){\n    var git_user = 'wangpengzong';\n    var github_container = document.getElementById('github_container');\n    var github_loading = document.getElementById('github_loading');\n    var git_purple = ['#ebedf0', '#fdcdec', '#fc9bd9', '#fa6ac5', '#f838b2', '#f5089f', '#c4067e', '#92055e', '#540336', '#48022f', '#30021f',];\n    var git_green = ['#ebedf0', '#f0fff4', '#dcffe4', '#bef5cb', '#85e89d', '#34d058', '#28a745', '#22863a', '#176f2c', '#165c26', '#144620'];\n    var git_blue = ['#ebedf0', '#f1f8ff', '#dbedff', '#c8e1ff', '#79b8ff', '#2188ff', '#0366d6', '#005cc5', '#044289', '#032f62', '#05264c',];\n    var git_color = git_green;\n    if (github_container) {\n      append_div_gitcalendar(github_container, loading_git(git_color[4]));\n      github_canlendar(git_user, git_color)\n    } else {\n      console.log('nonono');\n    }\n    \n})()\n    \n    "},{"_content":"// 如果想变换轮播方式等，进阶的话，可以看这个 https://github.surmon.me/vue-awesome-swiper/\n// 当然你也可以引入jquery插件，都可以的, 不只是轮播图，其他特效也可以\nnew Vue({\n    el: \"#myHistorySwiper\", // el不要是最外面的id_name，应该是html: ''里的div的id\n    data: function () {\n      return {\n        swiperOption: {\n          effect: \"cube\", // 轮播特效\n          loop: true, // 循环\n          autoplay: {\n            delay: 2500,\n            disableOnInteraction: false,\n          },\n        },\n        content: [],\n      };\n    },\n    computed: {\n      swiper() {\n        return this.$refs.myhistoryswiper.$swiper;\n      },\n    },\n    created() {\n      this.getHistoryList();\n    },\n    methods: {\n      // 鼠标移入停止轮播\n      stopAutoPlay() {\n        this.swiperOption.autoplay && this.swiper.autoplay.stop();\n      },\n      // 鼠标移出开始轮播\n      startAutoPlay() {\n        this.swiperOption.autoplay && this.swiper.autoplay.start();\n      },\n      // 请求开源api, 获取历史上的今天数据\n      getHistoryList() {\n        fetch(\"https://tenapi.cn/lishi/?format=json\", {\n          method: \"GET\", // *GET, POST, PUT, DELETE, etc.\n        })\n          .then((res) => {\n            return res.json();\n          })\n          .then((data) => {\n            this.content = data.content;\n          })\n          .catch((err) => {\n            console.log(\"err\", err);\n          });\n      },\n    },\n  });","source":"widget/historyToday/index.js","raw":"// 如果想变换轮播方式等，进阶的话，可以看这个 https://github.surmon.me/vue-awesome-swiper/\n// 当然你也可以引入jquery插件，都可以的, 不只是轮播图，其他特效也可以\nnew Vue({\n    el: \"#myHistorySwiper\", // el不要是最外面的id_name，应该是html: ''里的div的id\n    data: function () {\n      return {\n        swiperOption: {\n          effect: \"cube\", // 轮播特效\n          loop: true, // 循环\n          autoplay: {\n            delay: 2500,\n            disableOnInteraction: false,\n          },\n        },\n        content: [],\n      };\n    },\n    computed: {\n      swiper() {\n        return this.$refs.myhistoryswiper.$swiper;\n      },\n    },\n    created() {\n      this.getHistoryList();\n    },\n    methods: {\n      // 鼠标移入停止轮播\n      stopAutoPlay() {\n        this.swiperOption.autoplay && this.swiper.autoplay.stop();\n      },\n      // 鼠标移出开始轮播\n      startAutoPlay() {\n        this.swiperOption.autoplay && this.swiper.autoplay.start();\n      },\n      // 请求开源api, 获取历史上的今天数据\n      getHistoryList() {\n        fetch(\"https://tenapi.cn/lishi/?format=json\", {\n          method: \"GET\", // *GET, POST, PUT, DELETE, etc.\n        })\n          .then((res) => {\n            return res.json();\n          })\n          .then((data) => {\n            this.content = data.content;\n          })\n          .catch((err) => {\n            console.log(\"err\", err);\n          });\n      },\n    },\n  });","date":"2022-07-06T01:27:17.057Z","updated":"2022-07-06T01:27:17.057Z","path":"widget/historyToday/index.js","layout":"false","title":"","comments":1,"_id":"cl591oiga0008cgune433600s","content":"// 如果想变换轮播方式等，进阶的话，可以看这个 https://github.surmon.me/vue-awesome-swiper/\n// 当然你也可以引入jquery插件，都可以的, 不只是轮播图，其他特效也可以\nnew Vue({\n    el: \"#myHistorySwiper\", // el不要是最外面的id_name，应该是html: ''里的div的id\n    data: function () {\n      return {\n        swiperOption: {\n          effect: \"cube\", // 轮播特效\n          loop: true, // 循环\n          autoplay: {\n            delay: 2500,\n            disableOnInteraction: false,\n          },\n        },\n        content: [],\n      };\n    },\n    computed: {\n      swiper() {\n        return this.$refs.myhistoryswiper.$swiper;\n      },\n    },\n    created() {\n      this.getHistoryList();\n    },\n    methods: {\n      // 鼠标移入停止轮播\n      stopAutoPlay() {\n        this.swiperOption.autoplay && this.swiper.autoplay.stop();\n      },\n      // 鼠标移出开始轮播\n      startAutoPlay() {\n        this.swiperOption.autoplay && this.swiper.autoplay.start();\n      },\n      // 请求开源api, 获取历史上的今天数据\n      getHistoryList() {\n        fetch(\"https://tenapi.cn/lishi/?format=json\", {\n          method: \"GET\", // *GET, POST, PUT, DELETE, etc.\n        })\n          .then((res) => {\n            return res.json();\n          })\n          .then((data) => {\n            this.content = data.content;\n          })\n          .catch((err) => {\n            console.log(\"err\", err);\n          });\n      },\n    },\n  });","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"wangpengzong","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/wangpengzong","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"// 如果想变换轮播方式等，进阶的话，可以看这个 https://github.surmon.me/vue-awesome-swiper/\n// 当然你也可以引入jquery插件，都可以的, 不只是轮播图，其他特效也可以\nnew Vue({\n    el: \"#myHistorySwiper\", // el不要是最外面的id_name，应该是html: ''里的div的id\n    data: function () {\n      return {\n        swiperOption: {\n          effect: \"cube\", // 轮播特效\n          loop: true, // 循环\n          autoplay: {\n            delay: 2500,\n            disableOnInteraction: false,\n          },\n        },\n        content: [],\n      };\n    },\n    computed: {\n      swiper() {\n        return this.$refs.myhistoryswiper.$swiper;\n      },\n    },\n    created() {\n      this.getHistoryList();\n    },\n    methods: {\n      // 鼠标移入停止轮播\n      stopAutoPlay() {\n        this.swiperOption.autoplay && this.swiper.autoplay.stop();\n      },\n      // 鼠标移出开始轮播\n      startAutoPlay() {\n        this.swiperOption.autoplay && this.swiper.autoplay.start();\n      },\n      // 请求开源api, 获取历史上的今天数据\n      getHistoryList() {\n        fetch(\"https://tenapi.cn/lishi/?format=json\", {\n          method: \"GET\", // *GET, POST, PUT, DELETE, etc.\n        })\n          .then((res) => {\n            return res.json();\n          })\n          .then((data) => {\n            this.content = data.content;\n          })\n          .catch((err) => {\n            console.log(\"err\", err);\n          });\n      },\n    },\n  });"},{"_content":"var htmer_time = document.getElementById(\"htmer_time\");\nvar htmer_time_time = null;\n\nfunction setTime() {\n  var create_time = Math.round(\n    new Date(Date.UTC(2018, 10, 26, 6, 45, 0)).getTime() / 1000\n  );\n  var timestamp = Math.round(\n    (new Date().getTime() + 8 * 60 * 60 * 1000) / 1000\n  );\n  currentTime = secondToDate(timestamp - create_time);\n  currentTimeHtml =\n    currentTime[0] +\n    \" 年 \" +\n    currentTime[1] +\n    \" 天 \" +\n    currentTime[2] +\n    \" 时 \" +\n    currentTime[3] +\n    \" 分 \" +\n    currentTime[4] +\n    \" 秒\";\n  htmer_time.innerHTML = currentTimeHtml;\n}\nfunction secondToDate(second) {\n  if (!second) {\n    return 0;\n  }\n  var time = new Array(0, 0, 0, 0, 0);\n  if (second >= 365 * 24 * 3600) {\n    time[0] = parseInt(second / (365 * 24 * 3600));\n    second %= 365 * 24 * 3600;\n  }\n  if (second >= 24 * 3600) {\n    time[1] = parseInt(second / (24 * 3600));\n    second %= 24 * 3600;\n  }\n  if (second >= 3600) {\n    time[2] = parseInt(second / 3600);\n    second %= 3600;\n  }\n  if (second >= 60) {\n    time[3] = parseInt(second / 60);\n    second %= 60;\n  }\n  if (second > 0) {\n    time[4] = second;\n  }\n  return time;\n}\n\nif (htmer_time) {\n  htmer_time_time = setInterval(setTime, 1000);\n} else {\n  clearInterval(htmer_time_time);\n}","source":"widget/love/index.js","raw":"var htmer_time = document.getElementById(\"htmer_time\");\nvar htmer_time_time = null;\n\nfunction setTime() {\n  var create_time = Math.round(\n    new Date(Date.UTC(2018, 10, 26, 6, 45, 0)).getTime() / 1000\n  );\n  var timestamp = Math.round(\n    (new Date().getTime() + 8 * 60 * 60 * 1000) / 1000\n  );\n  currentTime = secondToDate(timestamp - create_time);\n  currentTimeHtml =\n    currentTime[0] +\n    \" 年 \" +\n    currentTime[1] +\n    \" 天 \" +\n    currentTime[2] +\n    \" 时 \" +\n    currentTime[3] +\n    \" 分 \" +\n    currentTime[4] +\n    \" 秒\";\n  htmer_time.innerHTML = currentTimeHtml;\n}\nfunction secondToDate(second) {\n  if (!second) {\n    return 0;\n  }\n  var time = new Array(0, 0, 0, 0, 0);\n  if (second >= 365 * 24 * 3600) {\n    time[0] = parseInt(second / (365 * 24 * 3600));\n    second %= 365 * 24 * 3600;\n  }\n  if (second >= 24 * 3600) {\n    time[1] = parseInt(second / (24 * 3600));\n    second %= 24 * 3600;\n  }\n  if (second >= 3600) {\n    time[2] = parseInt(second / 3600);\n    second %= 3600;\n  }\n  if (second >= 60) {\n    time[3] = parseInt(second / 60);\n    second %= 60;\n  }\n  if (second > 0) {\n    time[4] = second;\n  }\n  return time;\n}\n\nif (htmer_time) {\n  htmer_time_time = setInterval(setTime, 1000);\n} else {\n  clearInterval(htmer_time_time);\n}","date":"2022-07-06T01:27:40.503Z","updated":"2022-07-06T01:27:40.503Z","path":"widget/love/index.js","layout":"false","title":"","comments":1,"_id":"cl591oiga0009cgun9g7ifzkr","content":"var htmer_time = document.getElementById(\"htmer_time\");\nvar htmer_time_time = null;\n\nfunction setTime() {\n  var create_time = Math.round(\n    new Date(Date.UTC(2018, 10, 26, 6, 45, 0)).getTime() / 1000\n  );\n  var timestamp = Math.round(\n    (new Date().getTime() + 8 * 60 * 60 * 1000) / 1000\n  );\n  currentTime = secondToDate(timestamp - create_time);\n  currentTimeHtml =\n    currentTime[0] +\n    \" 年 \" +\n    currentTime[1] +\n    \" 天 \" +\n    currentTime[2] +\n    \" 时 \" +\n    currentTime[3] +\n    \" 分 \" +\n    currentTime[4] +\n    \" 秒\";\n  htmer_time.innerHTML = currentTimeHtml;\n}\nfunction secondToDate(second) {\n  if (!second) {\n    return 0;\n  }\n  var time = new Array(0, 0, 0, 0, 0);\n  if (second >= 365 * 24 * 3600) {\n    time[0] = parseInt(second / (365 * 24 * 3600));\n    second %= 365 * 24 * 3600;\n  }\n  if (second >= 24 * 3600) {\n    time[1] = parseInt(second / (24 * 3600));\n    second %= 24 * 3600;\n  }\n  if (second >= 3600) {\n    time[2] = parseInt(second / 3600);\n    second %= 3600;\n  }\n  if (second >= 60) {\n    time[3] = parseInt(second / 60);\n    second %= 60;\n  }\n  if (second > 0) {\n    time[4] = second;\n  }\n  return time;\n}\n\nif (htmer_time) {\n  htmer_time_time = setInterval(setTime, 1000);\n} else {\n  clearInterval(htmer_time_time);\n}","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"wangpengzong","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/wangpengzong","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"var htmer_time = document.getElementById(\"htmer_time\");\nvar htmer_time_time = null;\n\nfunction setTime() {\n  var create_time = Math.round(\n    new Date(Date.UTC(2018, 10, 26, 6, 45, 0)).getTime() / 1000\n  );\n  var timestamp = Math.round(\n    (new Date().getTime() + 8 * 60 * 60 * 1000) / 1000\n  );\n  currentTime = secondToDate(timestamp - create_time);\n  currentTimeHtml =\n    currentTime[0] +\n    \" 年 \" +\n    currentTime[1] +\n    \" 天 \" +\n    currentTime[2] +\n    \" 时 \" +\n    currentTime[3] +\n    \" 分 \" +\n    currentTime[4] +\n    \" 秒\";\n  htmer_time.innerHTML = currentTimeHtml;\n}\nfunction secondToDate(second) {\n  if (!second) {\n    return 0;\n  }\n  var time = new Array(0, 0, 0, 0, 0);\n  if (second >= 365 * 24 * 3600) {\n    time[0] = parseInt(second / (365 * 24 * 3600));\n    second %= 365 * 24 * 3600;\n  }\n  if (second >= 24 * 3600) {\n    time[1] = parseInt(second / (24 * 3600));\n    second %= 24 * 3600;\n  }\n  if (second >= 3600) {\n    time[2] = parseInt(second / 3600);\n    second %= 3600;\n  }\n  if (second >= 60) {\n    time[3] = parseInt(second / 60);\n    second %= 60;\n  }\n  if (second > 0) {\n    time[4] = second;\n  }\n  return time;\n}\n\nif (htmer_time) {\n  htmer_time_time = setInterval(setTime, 1000);\n} else {\n  clearInterval(htmer_time_time);\n}"},{"_content":"// 如果想变换轮播方式等，进阶的话，可以看这个 https://github.surmon.me/vue-awesome-swiper/\n// 当然你也可以引入jquery插件，都可以的, 不只是轮播图，其他特效也可以\nnew Vue({\n    el: \"#mySwiper\",\n    data: function () {\n      return {\n        swiperOption: {\n          direction: \"vertical\", // 这个是竖着的\n          slidesPerView: 1,\n          spaceBetween: 30,\n          mousewheel: true,\n          // 注释上面的四个，则水平方向轮播\n          pagination: {\n            el: \".swiper-pagination\",\n            clickable: true,\n          },\n          // 注释掉上面这个，则不显示小点点\n          loop: true, // 循环\n          autoplay: {\n            delay: 2500,\n            disableOnInteraction: false,\n          }, // 自动播放,注释掉则不自动播放\n          on: {\n            init: function () {\n              swiperAnimateCache(this); //隐藏动画元素\n              swiperAnimate(this); //初始化完成开始动画\n            },\n            slideChangeTransitionEnd: function () {\n              swiperAnimate(this); //每个slide切换结束时也运行当前slide动画\n            },\n          },\n          // or data-swiper-parallax=\"-100\"\n          // 上面是文字动画效果，注释则取消文字动画，动画效果参见 https://www.swiper.com.cn/usage/animate/index.html\n        },\n      };\n    },\n    computed: {\n      swiper() {\n        return this.$refs.myswiper.$swiper;\n      },\n    },\n    methods: {\n      // 鼠标移入停止轮播\n      stopAutoPlay() {\n        this.swiperOption.autoplay && this.swiper.autoplay.stop();\n      },\n      // 鼠标移出开始轮播\n      startAutoPlay() {\n        this.swiperOption.autoplay && this.swiper.autoplay.start();\n      },\n    },\n  });","source":"widget/mySwiper/index.js","raw":"// 如果想变换轮播方式等，进阶的话，可以看这个 https://github.surmon.me/vue-awesome-swiper/\n// 当然你也可以引入jquery插件，都可以的, 不只是轮播图，其他特效也可以\nnew Vue({\n    el: \"#mySwiper\",\n    data: function () {\n      return {\n        swiperOption: {\n          direction: \"vertical\", // 这个是竖着的\n          slidesPerView: 1,\n          spaceBetween: 30,\n          mousewheel: true,\n          // 注释上面的四个，则水平方向轮播\n          pagination: {\n            el: \".swiper-pagination\",\n            clickable: true,\n          },\n          // 注释掉上面这个，则不显示小点点\n          loop: true, // 循环\n          autoplay: {\n            delay: 2500,\n            disableOnInteraction: false,\n          }, // 自动播放,注释掉则不自动播放\n          on: {\n            init: function () {\n              swiperAnimateCache(this); //隐藏动画元素\n              swiperAnimate(this); //初始化完成开始动画\n            },\n            slideChangeTransitionEnd: function () {\n              swiperAnimate(this); //每个slide切换结束时也运行当前slide动画\n            },\n          },\n          // or data-swiper-parallax=\"-100\"\n          // 上面是文字动画效果，注释则取消文字动画，动画效果参见 https://www.swiper.com.cn/usage/animate/index.html\n        },\n      };\n    },\n    computed: {\n      swiper() {\n        return this.$refs.myswiper.$swiper;\n      },\n    },\n    methods: {\n      // 鼠标移入停止轮播\n      stopAutoPlay() {\n        this.swiperOption.autoplay && this.swiper.autoplay.stop();\n      },\n      // 鼠标移出开始轮播\n      startAutoPlay() {\n        this.swiperOption.autoplay && this.swiper.autoplay.start();\n      },\n    },\n  });","date":"2022-07-06T01:25:57.137Z","updated":"2022-07-06T01:25:57.137Z","path":"widget/mySwiper/index.js","layout":"false","title":"","comments":1,"_id":"cl591oigb000acgun1vrfgkqr","content":"// 如果想变换轮播方式等，进阶的话，可以看这个 https://github.surmon.me/vue-awesome-swiper/\n// 当然你也可以引入jquery插件，都可以的, 不只是轮播图，其他特效也可以\nnew Vue({\n    el: \"#mySwiper\",\n    data: function () {\n      return {\n        swiperOption: {\n          direction: \"vertical\", // 这个是竖着的\n          slidesPerView: 1,\n          spaceBetween: 30,\n          mousewheel: true,\n          // 注释上面的四个，则水平方向轮播\n          pagination: {\n            el: \".swiper-pagination\",\n            clickable: true,\n          },\n          // 注释掉上面这个，则不显示小点点\n          loop: true, // 循环\n          autoplay: {\n            delay: 2500,\n            disableOnInteraction: false,\n          }, // 自动播放,注释掉则不自动播放\n          on: {\n            init: function () {\n              swiperAnimateCache(this); //隐藏动画元素\n              swiperAnimate(this); //初始化完成开始动画\n            },\n            slideChangeTransitionEnd: function () {\n              swiperAnimate(this); //每个slide切换结束时也运行当前slide动画\n            },\n          },\n          // or data-swiper-parallax=\"-100\"\n          // 上面是文字动画效果，注释则取消文字动画，动画效果参见 https://www.swiper.com.cn/usage/animate/index.html\n        },\n      };\n    },\n    computed: {\n      swiper() {\n        return this.$refs.myswiper.$swiper;\n      },\n    },\n    methods: {\n      // 鼠标移入停止轮播\n      stopAutoPlay() {\n        this.swiperOption.autoplay && this.swiper.autoplay.stop();\n      },\n      // 鼠标移出开始轮播\n      startAutoPlay() {\n        this.swiperOption.autoplay && this.swiper.autoplay.start();\n      },\n    },\n  });","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"wangpengzong","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/wangpengzong","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"// 如果想变换轮播方式等，进阶的话，可以看这个 https://github.surmon.me/vue-awesome-swiper/\n// 当然你也可以引入jquery插件，都可以的, 不只是轮播图，其他特效也可以\nnew Vue({\n    el: \"#mySwiper\",\n    data: function () {\n      return {\n        swiperOption: {\n          direction: \"vertical\", // 这个是竖着的\n          slidesPerView: 1,\n          spaceBetween: 30,\n          mousewheel: true,\n          // 注释上面的四个，则水平方向轮播\n          pagination: {\n            el: \".swiper-pagination\",\n            clickable: true,\n          },\n          // 注释掉上面这个，则不显示小点点\n          loop: true, // 循环\n          autoplay: {\n            delay: 2500,\n            disableOnInteraction: false,\n          }, // 自动播放,注释掉则不自动播放\n          on: {\n            init: function () {\n              swiperAnimateCache(this); //隐藏动画元素\n              swiperAnimate(this); //初始化完成开始动画\n            },\n            slideChangeTransitionEnd: function () {\n              swiperAnimate(this); //每个slide切换结束时也运行当前slide动画\n            },\n          },\n          // or data-swiper-parallax=\"-100\"\n          // 上面是文字动画效果，注释则取消文字动画，动画效果参见 https://www.swiper.com.cn/usage/animate/index.html\n        },\n      };\n    },\n    computed: {\n      swiper() {\n        return this.$refs.myswiper.$swiper;\n      },\n    },\n    methods: {\n      // 鼠标移入停止轮播\n      stopAutoPlay() {\n        this.swiperOption.autoplay && this.swiper.autoplay.stop();\n      },\n      // 鼠标移出开始轮播\n      startAutoPlay() {\n        this.swiperOption.autoplay && this.swiper.autoplay.start();\n      },\n    },\n  });"},{"_content":"\n.myswiper .swiper-slide {\n    position: relative;\n}\n\n.myswiper .swiper-slide p {\n    position: absolute;\n    font-size: 18px;\n    top: 50px;\n    left: 10px;\n    z-index: 9999;\n    color: #fff;\n}\n.myswiper .swiper-slide a.toPath {\n    display: block;\n    width: 100%;\n    height: 100%;\n}\n.myswiper .swiper-slide h2 {\n    position: absolute;\n    top: 10px;\n    left: 10px;\n    z-index: 9999;\n    color: #fff;\n    font-size: 24px;\n}\n.myswiper .swiper-slide img {\n    filter: brightness(0.8); /* 图片变暗 ,字体看得清 */\n}\n.myswiper.swiper-container-vertical .swiper-pagination-bullet-active {\n    height: 30px;\n    border-radius: 10px;\n    transition: all 0.3s;\n}\n\n/* 暗黑模式样式在  .darkModel { }  类下 */\n/* 例如 \n    .darkModel .aaa {\n        color: #c9d1d9;\n    }\n} */","source":"widget/mySwiper/index.css","raw":"\n.myswiper .swiper-slide {\n    position: relative;\n}\n\n.myswiper .swiper-slide p {\n    position: absolute;\n    font-size: 18px;\n    top: 50px;\n    left: 10px;\n    z-index: 9999;\n    color: #fff;\n}\n.myswiper .swiper-slide a.toPath {\n    display: block;\n    width: 100%;\n    height: 100%;\n}\n.myswiper .swiper-slide h2 {\n    position: absolute;\n    top: 10px;\n    left: 10px;\n    z-index: 9999;\n    color: #fff;\n    font-size: 24px;\n}\n.myswiper .swiper-slide img {\n    filter: brightness(0.8); /* 图片变暗 ,字体看得清 */\n}\n.myswiper.swiper-container-vertical .swiper-pagination-bullet-active {\n    height: 30px;\n    border-radius: 10px;\n    transition: all 0.3s;\n}\n\n/* 暗黑模式样式在  .darkModel { }  类下 */\n/* 例如 \n    .darkModel .aaa {\n        color: #c9d1d9;\n    }\n} */","date":"2022-07-06T01:26:03.400Z","updated":"2022-07-06T01:26:03.400Z","path":"widget/mySwiper/index.css","layout":"false","title":"","comments":1,"_id":"cl591oigc000bcgunfng1bc34","content":"\n.myswiper .swiper-slide {\n    position: relative;\n}\n\n.myswiper .swiper-slide p {\n    position: absolute;\n    font-size: 18px;\n    top: 50px;\n    left: 10px;\n    z-index: 9999;\n    color: #fff;\n}\n.myswiper .swiper-slide a.toPath {\n    display: block;\n    width: 100%;\n    height: 100%;\n}\n.myswiper .swiper-slide h2 {\n    position: absolute;\n    top: 10px;\n    left: 10px;\n    z-index: 9999;\n    color: #fff;\n    font-size: 24px;\n}\n.myswiper .swiper-slide img {\n    filter: brightness(0.8); /* 图片变暗 ,字体看得清 */\n}\n.myswiper.swiper-container-vertical .swiper-pagination-bullet-active {\n    height: 30px;\n    border-radius: 10px;\n    transition: all 0.3s;\n}\n\n/* 暗黑模式样式在  .darkModel { }  类下 */\n/* 例如 \n    .darkModel .aaa {\n        color: #c9d1d9;\n    }\n} */","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"wangpengzong","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/wangpengzong","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"\n.myswiper .swiper-slide {\n    position: relative;\n}\n\n.myswiper .swiper-slide p {\n    position: absolute;\n    font-size: 18px;\n    top: 50px;\n    left: 10px;\n    z-index: 9999;\n    color: #fff;\n}\n.myswiper .swiper-slide a.toPath {\n    display: block;\n    width: 100%;\n    height: 100%;\n}\n.myswiper .swiper-slide h2 {\n    position: absolute;\n    top: 10px;\n    left: 10px;\n    z-index: 9999;\n    color: #fff;\n    font-size: 24px;\n}\n.myswiper .swiper-slide img {\n    filter: brightness(0.8); /* 图片变暗 ,字体看得清 */\n}\n.myswiper.swiper-container-vertical .swiper-pagination-bullet-active {\n    height: 30px;\n    border-radius: 10px;\n    transition: all 0.3s;\n}\n\n/* 暗黑模式样式在  .darkModel { }  类下 */\n/* 例如 \n    .darkModel .aaa {\n        color: #c9d1d9;\n    }\n} */"},{"_content":".weibo-container {\n    width: 100%;\n    line-height: 30px;\n    display: flex;\n    justify-content: space-between;\n    font-size: 12px;\n    height: 30px;\n}\n.weibo-container .left {\n    display: flex;\n}\n.weibo-container .name {\n    margin-left: 5px;\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 1;\n    overflow: hidden;\n}\n#myWeibo .warp {\n    height: 300px;\n    width: 100%;\n    margin: 0 auto;\n    overflow: hidden;\n}\n.weibo-container .order {\n    color: #fe962e;\n}\n.weibo-container .name a{\n    color: black;\n}\n.weibo-container .name a:hover {\n    text-decoration: underline;\n    color: red;\n}\n.weibo-container .red {\n    color: red;\n}","source":"widget/weibo/index.css","raw":".weibo-container {\n    width: 100%;\n    line-height: 30px;\n    display: flex;\n    justify-content: space-between;\n    font-size: 12px;\n    height: 30px;\n}\n.weibo-container .left {\n    display: flex;\n}\n.weibo-container .name {\n    margin-left: 5px;\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 1;\n    overflow: hidden;\n}\n#myWeibo .warp {\n    height: 300px;\n    width: 100%;\n    margin: 0 auto;\n    overflow: hidden;\n}\n.weibo-container .order {\n    color: #fe962e;\n}\n.weibo-container .name a{\n    color: black;\n}\n.weibo-container .name a:hover {\n    text-decoration: underline;\n    color: red;\n}\n.weibo-container .red {\n    color: red;\n}","date":"2022-07-06T01:26:58.787Z","updated":"2022-07-06T01:26:58.787Z","path":"widget/weibo/index.css","layout":"false","title":"","comments":1,"_id":"cl591oigc000ccgun6frd7jfb","content":".weibo-container {\n    width: 100%;\n    line-height: 30px;\n    display: flex;\n    justify-content: space-between;\n    font-size: 12px;\n    height: 30px;\n}\n.weibo-container .left {\n    display: flex;\n}\n.weibo-container .name {\n    margin-left: 5px;\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 1;\n    overflow: hidden;\n}\n#myWeibo .warp {\n    height: 300px;\n    width: 100%;\n    margin: 0 auto;\n    overflow: hidden;\n}\n.weibo-container .order {\n    color: #fe962e;\n}\n.weibo-container .name a{\n    color: black;\n}\n.weibo-container .name a:hover {\n    text-decoration: underline;\n    color: red;\n}\n.weibo-container .red {\n    color: red;\n}","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"wangpengzong","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/wangpengzong","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":".weibo-container {\n    width: 100%;\n    line-height: 30px;\n    display: flex;\n    justify-content: space-between;\n    font-size: 12px;\n    height: 30px;\n}\n.weibo-container .left {\n    display: flex;\n}\n.weibo-container .name {\n    margin-left: 5px;\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 1;\n    overflow: hidden;\n}\n#myWeibo .warp {\n    height: 300px;\n    width: 100%;\n    margin: 0 auto;\n    overflow: hidden;\n}\n.weibo-container .order {\n    color: #fe962e;\n}\n.weibo-container .name a{\n    color: black;\n}\n.weibo-container .name a:hover {\n    text-decoration: underline;\n    color: red;\n}\n.weibo-container .red {\n    color: red;\n}"},{"_content":"new Vue({\n    el: \"#myWeibo\", // el不要是最外面的id_name，应该是html: ''里的div的id\n    data: function () {\n      return {\n        content: [],\n        classOption: {\n          singleHeight: 30,\n        },\n      };\n    },\n    created() {\n      this.getWeiboList();\n    },\n    methods: {\n      // 请求开源api, 获取历史上的今天数据\n      getWeiboList() {\n        fetch(\"https://tenapi.cn/resou/\", {\n          method: \"GET\", // *GET, POST, PUT, DELETE, etc.\n        })\n          .then((res) => {\n            return res.json();\n          })\n          .then((data) => {\n            this.content = data.list;\n          })\n          .catch((err) => {\n            console.log(\"err\", err);\n          });\n      },\n    },\n  });","source":"widget/weibo/index.js","raw":"new Vue({\n    el: \"#myWeibo\", // el不要是最外面的id_name，应该是html: ''里的div的id\n    data: function () {\n      return {\n        content: [],\n        classOption: {\n          singleHeight: 30,\n        },\n      };\n    },\n    created() {\n      this.getWeiboList();\n    },\n    methods: {\n      // 请求开源api, 获取历史上的今天数据\n      getWeiboList() {\n        fetch(\"https://tenapi.cn/resou/\", {\n          method: \"GET\", // *GET, POST, PUT, DELETE, etc.\n        })\n          .then((res) => {\n            return res.json();\n          })\n          .then((data) => {\n            this.content = data.list;\n          })\n          .catch((err) => {\n            console.log(\"err\", err);\n          });\n      },\n    },\n  });","date":"2022-07-06T01:26:52.274Z","updated":"2022-07-06T01:26:52.274Z","path":"widget/weibo/index.js","layout":"false","title":"","comments":1,"_id":"cl591oigc000dcgun4q9q6cr8","content":"new Vue({\n    el: \"#myWeibo\", // el不要是最外面的id_name，应该是html: ''里的div的id\n    data: function () {\n      return {\n        content: [],\n        classOption: {\n          singleHeight: 30,\n        },\n      };\n    },\n    created() {\n      this.getWeiboList();\n    },\n    methods: {\n      // 请求开源api, 获取历史上的今天数据\n      getWeiboList() {\n        fetch(\"https://tenapi.cn/resou/\", {\n          method: \"GET\", // *GET, POST, PUT, DELETE, etc.\n        })\n          .then((res) => {\n            return res.json();\n          })\n          .then((data) => {\n            this.content = data.list;\n          })\n          .catch((err) => {\n            console.log(\"err\", err);\n          });\n      },\n    },\n  });","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"wangpengzong","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/wangpengzong","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"new Vue({\n    el: \"#myWeibo\", // el不要是最外面的id_name，应该是html: ''里的div的id\n    data: function () {\n      return {\n        content: [],\n        classOption: {\n          singleHeight: 30,\n        },\n      };\n    },\n    created() {\n      this.getWeiboList();\n    },\n    methods: {\n      // 请求开源api, 获取历史上的今天数据\n      getWeiboList() {\n        fetch(\"https://tenapi.cn/resou/\", {\n          method: \"GET\", // *GET, POST, PUT, DELETE, etc.\n        })\n          .then((res) => {\n            return res.json();\n          })\n          .then((data) => {\n            this.content = data.list;\n          })\n          .catch((err) => {\n            console.log(\"err\", err);\n          });\n      },\n    },\n  });"},{"title":"categories","date":"2022-07-07T05:05:29.000Z","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2022-07-07 13:05:29\ntype: \"categories\"\nlayout: \"categories\"\n---\n","updated":"2022-07-07T09:16:47.525Z","path":"categories/index.html","_id":"cl5apo4p70000pgun3zf1c3gw","comments":1,"content":"","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"wangpengzong","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/wangpengzong","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":""},{"title":"tags","date":"2022-07-07T05:05:39.000Z","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2022-07-07 13:05:39\ntype: \"tags\"\nlayout: \"tags\"\n---\n","updated":"2022-07-07T09:16:34.547Z","path":"tags/index.html","_id":"cl5apo4pj0001pgundl8tfcug","comments":1,"content":"","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"wangpengzong","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/wangpengzong","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":""}],"Post":[{"title":"Hello World","date":"2019-01-20T13:11:00.000Z","swiper":true,"swiperImg":"https://ssyerv1.oss-cn-hangzhou.aliyuncs.com/picture/c080ff4434354e35af9dab0a3ee1b9f7.jpg!sswm","swiperDesc":"我是文章在轮播图中的摘要","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2019-01-20 21:11\nswiper: true\nswiperImg: 'https://ssyerv1.oss-cn-hangzhou.aliyuncs.com/picture/c080ff4434354e35af9dab0a3ee1b9f7.jpg!sswm'\nswiperDesc: '我是文章在轮播图中的摘要'\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"updated":"2022-07-05T04:43:37.508Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl591oigp000ecgun5cnf88ye","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo new <span class=\"token string\">\"My New Post\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo server<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo generate<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo deploy<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"wangpengzong","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/wangpengzong","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo new <span class=\"token string\">\"My New Post\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo server<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo generate<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo deploy<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"使用hexo admin写博客","author":"spatxos","date":"2022-07-07T04:17:04.000Z","swiper":true,"_content":"## 安装hexo admin\n1. 安装hexo并初始化一个博客\n```\nnpm install -g hexo\ncd ~/\nhexo init my-blog\ncd my-blog\nnpm install\n```\n2. 安装hexo admin并运行\n```\nnpm install --save hexo-admin\nhexo server -d\nopen http://localhost:4000/admin/\n```\n3.实际上安装之后的hexo admin在图片粘贴进去时，图片的路径出现了问题，我们找到`\\node_modules\\hexo-admin\\api.js`，进行替换\n```\nvar imagePath = '/images' 替换成 var imagePath = 'images'\n在\nhexo.source.process().then(function () { \n这一行前添加一行\nvar imageSrc = path.join(hexo.config.root + filename).replace(/\\\\/g, '/').replace('.png\\/', '.png')\n然后将\nres.done({\n          src: path.join(hexo.config.root + filename),\n          msg: msg\n})\n替换成\nres.done({\n          src: imageSrc,\n          msg: msg\n})\n```\n这样发不出来的图片就不会出现裂图了","source":"_posts/使用hexo-admin写博客.md","raw":"title: 使用hexo admin写博客\nauthor: spatxos\ndate: 2022-07-07 12:17:04\nswiper: true # 将改文章放入轮播图中\ncategories: ['前端']\ntags: ['hexo', 'hexo-admin']\n---\n## 安装hexo admin\n1. 安装hexo并初始化一个博客\n```\nnpm install -g hexo\ncd ~/\nhexo init my-blog\ncd my-blog\nnpm install\n```\n2. 安装hexo admin并运行\n```\nnpm install --save hexo-admin\nhexo server -d\nopen http://localhost:4000/admin/\n```\n3.实际上安装之后的hexo admin在图片粘贴进去时，图片的路径出现了问题，我们找到`\\node_modules\\hexo-admin\\api.js`，进行替换\n```\nvar imagePath = '/images' 替换成 var imagePath = 'images'\n在\nhexo.source.process().then(function () { \n这一行前添加一行\nvar imageSrc = path.join(hexo.config.root + filename).replace(/\\\\/g, '/').replace('.png\\/', '.png')\n然后将\nres.done({\n          src: path.join(hexo.config.root + filename),\n          msg: msg\n})\n替换成\nres.done({\n          src: imageSrc,\n          msg: msg\n})\n```\n这样发不出来的图片就不会出现裂图了","slug":"使用hexo-admin写博客","published":1,"updated":"2022-07-07T09:27:40.104Z","_id":"cl5aiolxs00004gunf7x72eqz","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"安装hexo-admin\"><a href=\"#安装hexo-admin\" class=\"headerlink\" title=\"安装hexo admin\"></a>安装hexo admin</h2><ol>\n<li>安装hexo并初始化一个博客<pre class=\"line-numbers language-none\"><code class=\"language-none\">npm install -g hexo\ncd ~&#x2F;\nhexo init my-blog\ncd my-blog\nnpm install<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li>安装hexo admin并运行<pre class=\"line-numbers language-none\"><code class=\"language-none\">npm install --save hexo-admin\nhexo server -d\nopen http:&#x2F;&#x2F;localhost:4000&#x2F;admin&#x2F;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n<li>实际上安装之后的hexo admin在图片粘贴进去时，图片的路径出现了问题，我们找到<code>\\node_modules\\hexo-admin\\api.js</code>，进行替换<pre class=\"line-numbers language-none\"><code class=\"language-none\">var imagePath &#x3D; &#39;&#x2F;images&#39; 替换成 var imagePath &#x3D; &#39;images&#39;\n在\nhexo.source.process().then(function () &#123; \n这一行前添加一行\nvar imageSrc &#x3D; path.join(hexo.config.root + filename).replace(&#x2F;\\\\&#x2F;g, &#39;&#x2F;&#39;).replace(&#39;.png\\&#x2F;&#39;, &#39;.png&#39;)\n然后将\nres.done(&#123;\n          src: path.join(hexo.config.root + filename),\n          msg: msg\n&#125;)\n替换成\nres.done(&#123;\n          src: imageSrc,\n          msg: msg\n&#125;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n这样发不出来的图片就不会出现裂图了</li>\n</ol>\n","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"wangpengzong","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/wangpengzong","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"<h2 id=\"安装hexo-admin\"><a href=\"#安装hexo-admin\" class=\"headerlink\" title=\"安装hexo admin\"></a>安装hexo admin</h2><ol>\n<li>安装hexo并初始化一个博客<pre class=\"line-numbers language-none\"><code class=\"language-none\">npm install -g hexo\ncd ~&#x2F;\nhexo init my-blog\ncd my-blog\nnpm install<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li>安装hexo admin并运行<pre class=\"line-numbers language-none\"><code class=\"language-none\">npm install --save hexo-admin\nhexo server -d\nopen http:&#x2F;&#x2F;localhost:4000&#x2F;admin&#x2F;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></li>\n<li>实际上安装之后的hexo admin在图片粘贴进去时，图片的路径出现了问题，我们找到<code>\\node_modules\\hexo-admin\\api.js</code>，进行替换<pre class=\"line-numbers language-none\"><code class=\"language-none\">var imagePath &#x3D; &#39;&#x2F;images&#39; 替换成 var imagePath &#x3D; &#39;images&#39;\n在\nhexo.source.process().then(function () &#123; \n这一行前添加一行\nvar imageSrc &#x3D; path.join(hexo.config.root + filename).replace(&#x2F;\\\\&#x2F;g, &#39;&#x2F;&#39;).replace(&#39;.png\\&#x2F;&#39;, &#39;.png&#39;)\n然后将\nres.done(&#123;\n          src: path.join(hexo.config.root + filename),\n          msg: msg\n&#125;)\n替换成\nres.done(&#123;\n          src: imageSrc,\n          msg: msg\n&#125;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n这样发不出来的图片就不会出现裂图了</li>\n</ol>\n"},{"title":"oracle删除超过N天数据脚本","author":"spatxos","_content":"","source":"_drafts/oracle删除超过N天数据脚本.md","raw":"---\ntitle: oracle删除超过N天数据脚本\nauthor: spatxos\ntags:\n---\n","slug":"oracle删除超过N天数据脚本","published":0,"date":"2022-07-08T00:47:26.123Z","updated":"2022-07-08T00:47:26.123Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl5eze7ol00015cunbgg19yz1","content":"","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"wangpengzong","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/wangpengzong","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":""},{"title":"windows版本rabbitmq安装及日志level设置","date":"2021-11-18T02:40:00.000Z","author":"wpzblog","_content":"<p>1.DirectX Repair 安装缺失的C++组件，不安装缺失的组件会造成第二部安装erl文件夹缺少bin文件夹<br />2.安装otp_win64_23.1</p>\n<p><img src=\"/cnblogs/15571172/789895-20211118103746539-355562978.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp; &nbsp; &nbsp; 1.配置 ERLANG_HOME；地址为Erlang安装的地址如：C:\\Program Files\\erl-23.1<br />&nbsp; &nbsp; &nbsp; 2. 配置 Path路径； 新建变量%ERLANG_HOME%\\bin<br />&nbsp; &nbsp; &nbsp; 3. cmd 》输入 erl；可以看见版本号<br />3.安装rabbitmq-server-3.8.9<br />   cmd=&gt;cd C:\\Program Files\\RabbitMQ Server\\rabbitmq_server-3.8.9\\sbin=&gt;输入回车 rabbitmq-plugins enable rabbitmq_management</p>\n<p><img src=\"/cnblogs/15571172/789895-20211118103547205-905835845.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>4.http://localhost:15672/#/  guest  guest</p>\n<p>一般情况下rabbitma的日志是按照info及以上来进行保存的，但是如果数据量过大，rabbitmq日志会暴增所以执行下一步<br />5.在第3步打开的cmd窗口输入：rabbitmqctl -n rabbit@target-host set_log_level error （target-host替换成第4步Overview=&gt;Nodes里面的Name），本方法来源 https://juejin.cn/post/6844904061829939208</p>\n<p><img src=\"/cnblogs/15571172/789895-20211118103607570-913262409.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p><img src=\"/cnblogs/15571172/789895-20211118103220257-1533204017.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>附上网盘链接 https://1drv.ms/u/s!AiLMO0Q8SzKLkJNczbNv6zYK9gEw6w?e=yc8XoI</p>\n<p>&nbsp;</p>","source":"_posts/cnblogs/15571172.md","raw":"---\ntitle: windows版本rabbitmq安装及日志level设置\ndate: 2021-11-18T10:40:00\nauthor: wpzblog\ntags: [\"rabbitmq\"]\n---\n<p>1.DirectX Repair 安装缺失的C++组件，不安装缺失的组件会造成第二部安装erl文件夹缺少bin文件夹<br />2.安装otp_win64_23.1</p>\n<p><img src=\"/cnblogs/15571172/789895-20211118103746539-355562978.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp; &nbsp; &nbsp; 1.配置 ERLANG_HOME；地址为Erlang安装的地址如：C:\\Program Files\\erl-23.1<br />&nbsp; &nbsp; &nbsp; 2. 配置 Path路径； 新建变量%ERLANG_HOME%\\bin<br />&nbsp; &nbsp; &nbsp; 3. cmd 》输入 erl；可以看见版本号<br />3.安装rabbitmq-server-3.8.9<br />   cmd=&gt;cd C:\\Program Files\\RabbitMQ Server\\rabbitmq_server-3.8.9\\sbin=&gt;输入回车 rabbitmq-plugins enable rabbitmq_management</p>\n<p><img src=\"/cnblogs/15571172/789895-20211118103547205-905835845.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>4.http://localhost:15672/#/  guest  guest</p>\n<p>一般情况下rabbitma的日志是按照info及以上来进行保存的，但是如果数据量过大，rabbitmq日志会暴增所以执行下一步<br />5.在第3步打开的cmd窗口输入：rabbitmqctl -n rabbit@target-host set_log_level error （target-host替换成第4步Overview=&gt;Nodes里面的Name），本方法来源 https://juejin.cn/post/6844904061829939208</p>\n<p><img src=\"/cnblogs/15571172/789895-20211118103607570-913262409.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p><img src=\"/cnblogs/15571172/789895-20211118103220257-1533204017.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>附上网盘链接 https://1drv.ms/u/s!AiLMO0Q8SzKLkJNczbNv6zYK9gEw6w?e=yc8XoI</p>\n<p>&nbsp;</p>","slug":"cnblogs/15571172","published":1,"updated":"2022-07-10T11:02:55.990Z","_id":"cl5f3a2cz0000c0un5z9fhahx","comments":1,"layout":"post","photos":[],"link":"","content":"<p>1.DirectX Repair 安装缺失的C++组件，不安装缺失的组件会造成第二部安装erl文件夹缺少bin文件夹<br />2.安装otp_win64_23.1</p>\n<p><img src=\"/cnblogs/15571172/789895-20211118103746539-355562978.png\" class=\"lazyload placeholder\" data-srcset=\"/cnblogs/15571172/789895-20211118103746539-355562978.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp; &nbsp; &nbsp; 1.配置 ERLANG_HOME；地址为Erlang安装的地址如：C:\\Program Files\\erl-23.1<br />&nbsp; &nbsp; &nbsp; 2. 配置 Path路径； 新建变量%ERLANG_HOME%\\bin<br />&nbsp; &nbsp; &nbsp; 3. cmd 》输入 erl；可以看见版本号<br />3.安装rabbitmq-server-3.8.9<br />   cmd=&gt;cd C:\\Program Files\\RabbitMQ Server\\rabbitmq_server-3.8.9\\sbin=&gt;输入回车 rabbitmq-plugins enable rabbitmq_management</p>\n<p><img src=\"/cnblogs/15571172/789895-20211118103547205-905835845.png\" class=\"lazyload placeholder\" data-srcset=\"/cnblogs/15571172/789895-20211118103547205-905835845.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"\" loading=\"lazy\" /></p>\n<p>4.http://localhost:15672/#/  guest  guest</p>\n<p>一般情况下rabbitma的日志是按照info及以上来进行保存的，但是如果数据量过大，rabbitmq日志会暴增所以执行下一步<br />5.在第3步打开的cmd窗口输入：rabbitmqctl -n rabbit@target-host set_log_level error （target-host替换成第4步Overview=&gt;Nodes里面的Name），本方法来源 https://juejin.cn/post/6844904061829939208</p>\n<p><img src=\"/cnblogs/15571172/789895-20211118103607570-913262409.png\" class=\"lazyload placeholder\" data-srcset=\"/cnblogs/15571172/789895-20211118103607570-913262409.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p><img src=\"/cnblogs/15571172/789895-20211118103220257-1533204017.png\" class=\"lazyload placeholder\" data-srcset=\"/cnblogs/15571172/789895-20211118103220257-1533204017.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>附上网盘链接 https://1drv.ms/u/s!AiLMO0Q8SzKLkJNczbNv6zYK9gEw6w?e=yc8XoI</p>\n<p>&nbsp;</p>","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"wangpengzong","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/wangpengzong","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"<p>1.DirectX Repair 安装缺失的C++组件，不安装缺失的组件会造成第二部安装erl文件夹缺少bin文件夹<br />2.安装otp_win64_23.1</p>\n<p><img src=\"/cnblogs/15571172/789895-20211118103746539-355562978.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp; &nbsp; &nbsp; 1.配置 ERLANG_HOME；地址为Erlang安装的地址如：C:\\Program Files\\erl-23.1<br />&nbsp; &nbsp; &nbsp; 2. 配置 Path路径； 新建变量%ERLANG_HOME%\\bin<br />&nbsp; &nbsp; &nbsp; 3. cmd 》输入 erl；可以看见版本号<br />3.安装rabbitmq-server-3.8.9<br />   cmd=&gt;cd C:\\Program Files\\RabbitMQ Server\\rabbitmq_server-3.8.9\\sbin=&gt;输入回车 rabbitmq-plugins enable rabbitmq_management</p>\n<p><img src=\"/cnblogs/15571172/789895-20211118103547205-905835845.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>4.http://localhost:15672/#/  guest  guest</p>\n<p>一般情况下rabbitma的日志是按照info及以上来进行保存的，但是如果数据量过大，rabbitmq日志会暴增所以执行下一步<br />5.在第3步打开的cmd窗口输入：rabbitmqctl -n rabbit@target-host set_log_level error （target-host替换成第4步Overview=&gt;Nodes里面的Name），本方法来源 https://juejin.cn/post/6844904061829939208</p>\n<p><img src=\"/cnblogs/15571172/789895-20211118103607570-913262409.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p><img src=\"/cnblogs/15571172/789895-20211118103220257-1533204017.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>附上网盘链接 https://1drv.ms/u/s!AiLMO0Q8SzKLkJNczbNv6zYK9gEw6w?e=yc8XoI</p>\n<p>&nbsp;</p>"},{"title":"搭建一个完整的K8S集群-------基于CentOS 8系统","date":"2021-11-27T17:27:00.000Z","author":"wpzblog","_content":"<p>创建三个centos节点：</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #800080;\">192.168</span>.<span style=\"color: #800080;\">5.141</span> k8s-<span style=\"color: #000000;\">master\n</span><span style=\"color: #800080;\">192.168</span>.<span style=\"color: #800080;\">5.142</span> k8s-<span style=\"color: #000000;\">nnode1\n</span><span style=\"color: #800080;\">192.168</span>.<span style=\"color: #800080;\">5.143</span> k8s-nnode2</pre>\n</div>\n<p>查看centos系统版本</p>\n<div class=\"cnblogs_code\">\n<pre># cat /etc/centos-<span style=\"color: #000000;\">release\nCentOS Linux release 8.2.2004 (Core)&nbsp;<br /></span></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>备注：第1步~<span style=\"color: #000000;\">第8步，所有的节点都要操作，第9、10步Master节点操作，第11步Node节点操作。\n如果第9、</span><span style=\"color: #800080;\">10</span>、11步操作失败，可以通过 kubeadm reset 命令来清理环境重新安装。</pre>\n</div>\n<h4><span style=\"color: blue;\">1.关闭防火墙</span></h4>\n<div class=\"cnblogs_code\">\n<pre>#&nbsp;systemctl stop firewalld</pre>\n</div>\n<h4><span style=\"color: blue;\">2.关闭selinux</span></h4>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre>#&nbsp;setenforce <span style=\"color: #800080;\">0</span></pre>\n</div>\n<p>&nbsp;</p>\n<h4><span style=\"color: blue;\">3.关闭swap</span></h4>\n<div class=\"cnblogs_code\">\n<p># nano /etc/fstab ，注释掉swap挂载这一行可以永久关闭swap分区</p>\n<p>备注：k8s运行必须关闭掉swap分区</p>\n<p># swapoff -a</p>\n</div>\n<p>&nbsp;</p>\n<h4><span style=\"color: blue;\">4.添加主机名与IP对应的关系</span></h4>\n<div class=\"cnblogs_code\">\n<pre># nano /etc/<span style=\"color: #000000;\">hosts 添加如下内容：\n\n</span></pre>\n<pre>192.168.5.141 k8s-<span>master\n192.168.5.142 k8s-<span>nnode1\n192.168.5.143 k8s-nnode2</span></span></pre>\n</div>\n<h4><span style=\"color: blue;\">5.将桥接的IPV4流量传递到iptables 的链</span></h4>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre>#&nbsp;cat &gt; /etc/sysctl.d/k8s.conf &lt;&lt;<span style=\"color: #000000;\"> EOF\nnet.bridge.bridge</span>-nf-call-ip6tables = <span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">\nnet.bridge.bridge</span>-nf-call-iptables = <span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">\nEOF\n\n\n# sysctl </span>--system</pre>\n</div>\n<p>&nbsp;</p>\n<h4><span style=\"color: blue;\">6.安装docker</span></h4>\n<p><span style=\"color: blue;\">&nbsp;</span></p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">卸载旧的docker:\n\n#&nbsp;sudo yum remove docker \\\n                  docker</span>-<span style=\"color: #000000;\">client \\\n                  docker</span>-client-<span style=\"color: #000000;\">latest \\\n                  docker</span>-<span style=\"color: #000000;\">common \\\n                  docker</span>-<span style=\"color: #000000;\">latest \\\n                  docker</span>-latest-<span style=\"color: #000000;\">logrotate \\\n                  docker</span>-<span style=\"color: #000000;\">logrotate \\\n                  docker</span>-engine</pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>#&nbsp;sudo yum install -y yum-<span style=\"color: #000000;\">utils \\\n  device</span>-mapper-persistent-<span style=\"color: #000000;\">data \\\n  lvm2</span></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>#&nbsp;sudo yum-config-<span style=\"color: #000000;\">manager \\\n    </span>--add-<span style=\"color: #000000;\">repo \\\n    https:</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">download.docker.com/linux/centos/docker-ce.repo</span></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre># sudo yum install -y docker-ce-<span style=\"color: #800080;\">3</span>:<span style=\"color: #800080;\">19.03</span>.<span style=\"color: #800080;\">15</span>-<span style=\"color: #800080;\">3</span>.el8 docker-ce-cli-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">19.03</span>.<span style=\"color: #800080;\">15</span>-<span style=\"color: #800080;\">3</span>.el8 containerd.io-<span style=\"color: #800080;\">1.3</span>.<span style=\"color: #800080;\">9</span>-<span style=\"color: #800080;\">3.1</span>.el8</pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre># docker --<span style=\"color: #000000;\">version\nDocker version </span><span style=\"color: #800080;\">19.03</span>.<span style=\"color: #800080;\">15</span>, build 99e3ed8919</pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">修改Cgroupfs 为 Systemd(docker文件驱动默认由cgroupfs 改成 systemd，与k8s保持一致避免conflict)：\n# cd </span>/etc/<span style=\"color: #000000;\">\n# mkdir docker<br /># cd docker\n# nano daemon.json<br />或 # cd /etc/ &amp;&amp; mkdir docker &amp;&amp; cd docker &amp;&amp; nano daemon.json </span></pre>\n<pre><span style=\"color: #000000;\">#写入\n{\n  </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">exec-opts</span><span style=\"color: #800000;\">\"</span>: [<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">native.cgroupdriver=systemd</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">]\n}</span></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">设置开机启动：\n\n# systemctl enable docker </span>&amp;&amp; systemctl start docker</pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre></pre>\n<p>&nbsp; 查看文件驱动：</p>\n<p># docker info | grep Driver<br /> Storage Driver: overlay2<br /> Logging Driver: json-file<br /> Cgroup Driver: cgroupfs</p>\n\n\n\n\n\n\n\n\n\n\n</div>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\"> 安装tc\n# yum install tc </span>-y</pre>\n</div>\n<h4><span style=\"color: blue;\">7.Kubernetes yum源配置：</span></h4>\n<div class=\"cnblogs_code\">\n<pre># nano /etc/yum.repos.d/kubernetes.repo，添加文件内容如下：</pre>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">[kubernetes]\n\nname</span>=<span style=\"color: #000000;\">Kubernetes Repo\n\nbaseurl</span>=https:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">mirrors.tuna.tsinghua.edu.cn/kubernetes/yum/repos/kubernetes-el7-x86_64/</span>\n<span style=\"color: #000000;\">\ngpgcheck</span>=<span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">\n\nenabled</span>=<span style=\"color: #800080;\">1</span></pre>\n</div>\n<p>&nbsp;</p>\n</div>\n<h4><span style=\"color: blue;\">8.安装k8s</span></h4>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre>yum -y install kubelet-<span style=\"color: #800080;\">1.18</span>.<span style=\"color: #800080;\">5</span> kubeadm-<span style=\"color: #800080;\">1.18</span>.<span style=\"color: #800080;\">5</span> kubectl-<span style=\"color: #800080;\">1.18</span>.<span style=\"color: #800080;\">5</span> --disableexcludes=kubernetes</pre>\n</div>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">设置k8s开机启动\n\n# systemctl enable kubelet\n\n启动k8s后台daemon\n\n# systemctl start kubelet</span></pre>\n</div>\n<h4><span style=\"color: blue;\">9.部署Kubernetes Master</span></h4>\n<p>&nbsp;</p>\n<p>从DockerHub的其它仓库拉取<br />网上搜了半天，很多人说从别的仓库一个一个拉取再改名，但是这些教程仓库名称不一，有的教程已经很老了，仓库很多年没更新，这里直接授之以渔，自己学怎么找仓库。<br />并且一个一个拉取改名太累了，可以写个脚本。</p>\n<p>&nbsp;</p>\n<p>过程如下：</p>\n<p>&nbsp;</p>\n<p>首先使用下面的命令获取需要的docker镜像名称：</p>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre># kubeadm config images list</pre>\n<p>k8s.gcr.io/kube-apiserver:v1.18.20<br />k8s.gcr.io/kube-controller-manager:v1.18.20<br />k8s.gcr.io/kube-scheduler:v1.18.20<br />k8s.gcr.io/kube-proxy:v1.18.20<br />k8s.gcr.io/pause:3.2<br />k8s.gcr.io/etcd:3.4.3-0<br />k8s.gcr.io/coredns:1.6.7</p>\n\n\n\n\n\n\n\n\n\n\n</div>\n<p>注意：新版本的coredns改名了，变成了coredns/coredns，记得在images里面改一下</p>\n<p>&nbsp;</p>\n<p>首先要看看该在哪个地方拉取，可以去docker hub搜一搜哪里有kube-proxy之类的组件<br />进入dockerhub搜索：<br />https://hub.docker.com/search?q=kube-proxy&amp;type=image<br />按照最近更新排序，结果如下，可以发现一个下载次数10k+，更新也很频繁的仓库：</p>\n<p>&nbsp;</p>\n<p><img src=\"/cnblogs/15193971/789895-20210827144401834-1665510685.png\" alt=\"\" width=\"615\" height=\"310\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>然后开始编写脚本：</p>\n<div class=\"cnblogs_code\">\n<pre># cd /etc/<span style=\"color: #000000;\">\n# mkdir k8s\n# cd k8s\n# nano pull_k8s_images.sh<br />或 cd /etc/ &amp;&amp; mkdir k8s &amp;&amp; cd k8s &amp;&amp; nano pull_k8s_images.sh</span></pre>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #0000ff;\">set</span> -<span style=\"color: #000000;\">o errexit\n</span><span style=\"color: #0000ff;\">set</span> -<span style=\"color: #000000;\">o nounset\n</span><span style=\"color: #0000ff;\">set</span> -<span style=\"color: #000000;\">o pipefail\n\n##这里定义版本，按照上面得到的列表自己改一下版本号\n\nKUBE_VERSION</span>=v1.<span style=\"color: #800080;\">18.5</span><span style=\"color: #000000;\">\nKUBE_PAUSE_VERSION</span>=<span style=\"color: #800080;\">3.2</span><span style=\"color: #000000;\">\nETCD_VERSION</span>=<span style=\"color: #800080;\">3.4</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">\nDNS_VERSION</span>=<span style=\"color: #800080;\">1.6</span>.<span style=\"color: #800080;\">7</span><span style=\"color: #000000;\">\n\n##这是原始仓库名，最后需要改名成这个\nGCR_URL</span>=<span style=\"color: #000000;\">k8s.gcr.io\n\n##这里就是写你要使用的仓库\nDOCKERHUB_URL</span>=<span style=\"color: #000000;\">gotok8s\n\n##这里是镜像列表，新版本要把coredns改成coredns</span>/<span style=\"color: #000000;\">coredns\nimages</span>=<span style=\"color: #000000;\">(\nkube</span>-<span style=\"color: #000000;\">proxy:${KUBE_VERSION}\nkube</span>-<span style=\"color: #000000;\">scheduler:${KUBE_VERSION}\nkube</span>-controller-<span style=\"color: #000000;\">manager:${KUBE_VERSION}\nkube</span>-<span style=\"color: #000000;\">apiserver:${KUBE_VERSION}\npause:${KUBE_PAUSE_VERSION}\netcd:${ETCD_VERSION}\ncoredns:${DNS_VERSION}\n)\n\n##这里是拉取和改名的循环语句\n</span><span style=\"color: #0000ff;\">for</span> imageName <span style=\"color: #0000ff;\">in</span> ${images[@]} ; <span style=\"color: #0000ff;\">do</span><span style=\"color: #000000;\">\n  docker pull $DOCKERHUB_URL</span>/<span style=\"color: #000000;\">$imageName\n  docker tag $DOCKERHUB_URL</span>/$imageName $GCR_URL/<span style=\"color: #000000;\">$imageName\n  docker rmi $DOCKERHUB_URL</span>/<span style=\"color: #000000;\">$imageName\ndone</span></pre>\n</div>\n</div>\n<p>然后授予执行权限</p>\n<div class=\"cnblogs_code\">\n<pre># chmod +x ./pull_k8s_images.sh</pre>\n</div>\n<p>执行</p>\n<div class=\"cnblogs_code\">\n<pre>./pull_k8s_images.sh</pre>\n</div>\n<pre class=\"prettyprint\">执行初始化</pre>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">kubeadm init  \\\n </span>--kubernetes-version=<span style=\"color: #800080;\">1.18</span>.<span style=\"color: #800080;\">5</span><span style=\"color: #000000;\">  \\\n </span>--apiserver-advertise-address=<span style=\"color: #800080;\">192.168</span>.<span style=\"color: #800080;\">5.141</span><span style=\"color: #000000;\">   \\\n </span>--service-cidr=<span style=\"color: #800080;\">10.10</span>.<span style=\"color: #800080;\">0.0</span>/<span style=\"color: #800080;\">16</span> --pod-network-cidr=<span style=\"color: #800080;\">10.122</span>.<span style=\"color: #800080;\">0.0</span>/<span style=\"color: #800080;\">16</span></pre>\n</div>\n<p>执行命令之后可以拿到，记录生成的最后部分内容，此内容需要在其它节点加入Kubernetes集群之前就执行。</p>\n<div class=\"cnblogs_code\">\n<p>&nbsp; kubeadm join 192.168.5.141:6443 --token n1anmw.ubhpjr33jdncdg5b \\<br />&nbsp; &nbsp; &nbsp;--discovery-token-ca-cert-hash sha256:372c1db40560d9abc307f3882718cfd66d2773bcb377ea60d6cd60eb52717122 </p>\n\n\n\n</div>\n<p>根据init后的提示，</p>\n<p>增加一个名为k8s的普通系统用户，并设置为可以免密sudo<br />执行kubeadm初始化master配置时提示的kubectl配置方法</p>\n<div class=\"cnblogs_code\">\n<pre># mkdir -p $HOME/<span style=\"color: #000000;\">.kube\n# sudo cp </span>-i /etc/kubernetes/admin.conf $HOME/.kube/<span style=\"color: #000000;\">config\n# sudo chown $(id </span>-u):$(id -g) $HOME/.kube/config</pre>\n</div>\n<p>查看docker镜像：</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\"># docker images\nREPOSITORY                           TAG                 IMAGE ID            CREATED             SIZE\nk8s.gcr.io</span>/kube-proxy                v1.<span style=\"color: #800080;\">18.5</span>             a1daed4e2b60        <span style=\"color: #800080;\">14</span><span style=\"color: #000000;\"> months ago       117MB\nk8s.gcr.io</span>/kube-controller-manager   v1.<span style=\"color: #800080;\">18.5</span>             8d69eaf196dc        <span style=\"color: #800080;\">14</span><span style=\"color: #000000;\"> months ago       162MB\nk8s.gcr.io</span>/kube-apiserver            v1.<span style=\"color: #800080;\">18.5</span>             08ca24f16874        <span style=\"color: #800080;\">14</span><span style=\"color: #000000;\"> months ago       173MB\nk8s.gcr.io</span>/kube-scheduler            v1.<span style=\"color: #800080;\">18.5</span>             39d887c6621d        <span style=\"color: #800080;\">14</span> months ago       <span style=\"color: #800080;\">95</span><span style=\"color: #000000;\">.3MB\nk8s.gcr.io</span>/pause                     <span style=\"color: #800080;\">3.2</span>                 80d28bedfe5d        <span style=\"color: #800080;\">18</span><span style=\"color: #000000;\"> months ago       683kB\nk8s.gcr.io</span>/coredns                   <span style=\"color: #800080;\">1.6</span>.<span style=\"color: #800080;\">7</span>               67da37a9a360        <span style=\"color: #800080;\">19</span> months ago       <span style=\"color: #800080;\">43</span><span style=\"color: #000000;\">.8MB\nk8s.gcr.io</span>/etcd                      <span style=\"color: #800080;\">3.4</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">0</span>             303ce5db0e90        <span style=\"color: #800080;\">22</span> months ago       288MB</pre>\n</div>\n<p>由于kube-apiserver默认只启动安全访问接口6443，而不启动非安装访问接口8080，kubectl是通过8080端口访问k8s kubelet的，所以要修改配置文件，使其支持8080端口访问：</p>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre># nano /etc/kubernetes/manifests/kube-<span style=\"color: #000000;\">apiserver.yaml\n把&ndash;insecure</span>-port=<span style=\"color: #000000;\">0修改为：\n&ndash;insecure</span>-port=<span style=\"color: #800080;\">8080<br />增加或修改<br />-insecure-bind-address=0.0.0.0<br /><br /></span></pre>\n<p><span style=\"color: #800080;\">&nbsp; #&nbsp;systemctl restart kubelet</span></p>\n<p><span style=\"color: #800080;\">&nbsp; # sysctl net.bridge.bridge-nf-call-iptables=1<br />&nbsp; #&nbsp;kubectl get node<br /></span></p>\n<p>NAME&nbsp; &nbsp; &nbsp; &nbsp;STATUS&nbsp; &nbsp;ROLES&nbsp; AGE VERSION<br />k8s-master   NotReady   master   11m   v1.18.5</p>\n\n\n\n\n\n\n\n\n\n\n</div>\n<h4><span style=\"color: blue;\"><img src=\"/cnblogs/15193971/789895-20210827152813941-141137389.png\" alt=\"\" loading=\"lazy\" /></span></h4>\n<p>&nbsp;</p>\n<h4>&nbsp;</h4>\n<p>&nbsp;</p>\n<h4>&nbsp;</h4>\n<h4><span style=\"color: blue;\">10.安装calico网络</span></h4>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre># yum install -y wget<br /># wget http://download.zhufunin.com/k8s_1.18/calico.yaml<br /># kubectl apply -f calico.yaml</pre>\n<p><span style=\"color: #008000;\">&nbsp; #&nbsp;kubectl get pods -n kube-system 隔一段时间看一下，STATUS变为ContainerCreating或者Running<br /></span></p>\n\n\n\n\n\n\n\n\n\n\n</div>\n<p>&nbsp;</p>\n<p><img src=\"/cnblogs/15193971/789895-20210827151048567-1226899289.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;再执行</p>\n<div class=\"cnblogs_code\">\n<pre># kubectl <span style=\"color: #0000ff;\">get</span> node，此时状态变为Ready</pre>\n</div>\n<p><img src=\"/cnblogs/15193971/789895-20210827151210561-965213108.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>至此，k8s master节点创建完毕。</p>\n<p>&nbsp;</p>\n<h4><span style=\"color: blue;\">11.Node节点加入集群(在k8s-nnode1和k8s-nnode2)</span></h4>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre># yum install -<span style=\"color: #000000;\">y wget\n# wget http:</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">download.zhufunin.com/k8s_1.18/1-18-pause.tar.gz</span>\n# wget http:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">download.zhufunin.com/k8s_1.18/1-18-kube-proxy.tar.gz</span>\n# docker load -i   <span style=\"color: #800080;\">1</span>-<span style=\"color: #800080;\">18</span>-<span style=\"color: #000000;\">pause.tar.gz\n# docker load </span>-i <span style=\"color: #800080;\">1</span>-<span style=\"color: #800080;\">18</span>-kube-proxy.tar.gz</pre>\n</div>\n<p>&nbsp;</p>\n<p><span style=\"color: blue;\">&nbsp;</span>向集群添加新节点，执行在kubeadm init输出的kubeadm join命令：<br />复制上面命令，在node节点上执行<br />在k8s-nnode1和k8s-nnode2都执行刚才拿到的：</p>\n<div class=\"cnblogs_code\">\n<pre># &nbsp; kubeadm join 192.168.5.141:6443 --token n1anmw.ubhpjr33jdncdg5b \\<br />&nbsp; &nbsp; &nbsp;--discovery-token-ca-cert-hash sha256:372c1db40560d9abc307f3882718cfd66d2773bcb377ea60d6cd60eb52717122</pre>\n</div>\n<p>&nbsp;</p>\n<p>然后都执行：</p>\n<div class=\"cnblogs_code\">\n<pre>kubectl -s http:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">192.168.5.138:8080 get nodes</span></pre>\n</div>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">mater查看pod<br /><br />kubectl get pods&nbsp; kube-proxy-7jmxj&nbsp; -n kube-system -o wide<br />kubectl get pods -n kube-system -o wide<br /><br />node查看连接日志\n\njournalctl </span>-f -u kubelet<br /><br />如果Node的状态是NotReady，并且日志输出出现Unable to update cni config: No networks found in /etc/cni/net.d</pre>\n<p>&nbsp; 执行&nbsp;scp -r 192.168.5.141:/etc/cni /etc/cni</p>\n</div>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre>iptables --<span style=\"color: #000000;\">flush\niptables </span>-tnat --<span style=\"color: #000000;\">flush\nsystemctl stop firewalld\nsystemctl disable firewalld\nsystemctl restart docker\nsystemctl restart kubelet</span></pre>\n</div>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<pre class=\"prettyprint\"></pre>\n<pre class=\"prettyprint\"></pre>","source":"_posts/cnblogs/15193971.md","raw":"---\ntitle: 搭建一个完整的K8S集群-------基于CentOS 8系统\ndate: 2021-11-28T01:27:00\nauthor: wpzblog\ntags: [\"k8s\"]\n---\n<p>创建三个centos节点：</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #800080;\">192.168</span>.<span style=\"color: #800080;\">5.141</span> k8s-<span style=\"color: #000000;\">master\n</span><span style=\"color: #800080;\">192.168</span>.<span style=\"color: #800080;\">5.142</span> k8s-<span style=\"color: #000000;\">nnode1\n</span><span style=\"color: #800080;\">192.168</span>.<span style=\"color: #800080;\">5.143</span> k8s-nnode2</pre>\n</div>\n<p>查看centos系统版本</p>\n<div class=\"cnblogs_code\">\n<pre># cat /etc/centos-<span style=\"color: #000000;\">release\nCentOS Linux release 8.2.2004 (Core)&nbsp;<br /></span></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>备注：第1步~<span style=\"color: #000000;\">第8步，所有的节点都要操作，第9、10步Master节点操作，第11步Node节点操作。\n如果第9、</span><span style=\"color: #800080;\">10</span>、11步操作失败，可以通过 kubeadm reset 命令来清理环境重新安装。</pre>\n</div>\n<h4><span style=\"color: blue;\">1.关闭防火墙</span></h4>\n<div class=\"cnblogs_code\">\n<pre>#&nbsp;systemctl stop firewalld</pre>\n</div>\n<h4><span style=\"color: blue;\">2.关闭selinux</span></h4>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre>#&nbsp;setenforce <span style=\"color: #800080;\">0</span></pre>\n</div>\n<p>&nbsp;</p>\n<h4><span style=\"color: blue;\">3.关闭swap</span></h4>\n<div class=\"cnblogs_code\">\n<p># nano /etc/fstab ，注释掉swap挂载这一行可以永久关闭swap分区</p>\n<p>备注：k8s运行必须关闭掉swap分区</p>\n<p># swapoff -a</p>\n</div>\n<p>&nbsp;</p>\n<h4><span style=\"color: blue;\">4.添加主机名与IP对应的关系</span></h4>\n<div class=\"cnblogs_code\">\n<pre># nano /etc/<span style=\"color: #000000;\">hosts 添加如下内容：\n\n</span></pre>\n<pre>192.168.5.141 k8s-<span>master\n192.168.5.142 k8s-<span>nnode1\n192.168.5.143 k8s-nnode2</span></span></pre>\n</div>\n<h4><span style=\"color: blue;\">5.将桥接的IPV4流量传递到iptables 的链</span></h4>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre>#&nbsp;cat &gt; /etc/sysctl.d/k8s.conf &lt;&lt;<span style=\"color: #000000;\"> EOF\nnet.bridge.bridge</span>-nf-call-ip6tables = <span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">\nnet.bridge.bridge</span>-nf-call-iptables = <span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">\nEOF\n\n\n# sysctl </span>--system</pre>\n</div>\n<p>&nbsp;</p>\n<h4><span style=\"color: blue;\">6.安装docker</span></h4>\n<p><span style=\"color: blue;\">&nbsp;</span></p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">卸载旧的docker:\n\n#&nbsp;sudo yum remove docker \\\n                  docker</span>-<span style=\"color: #000000;\">client \\\n                  docker</span>-client-<span style=\"color: #000000;\">latest \\\n                  docker</span>-<span style=\"color: #000000;\">common \\\n                  docker</span>-<span style=\"color: #000000;\">latest \\\n                  docker</span>-latest-<span style=\"color: #000000;\">logrotate \\\n                  docker</span>-<span style=\"color: #000000;\">logrotate \\\n                  docker</span>-engine</pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>#&nbsp;sudo yum install -y yum-<span style=\"color: #000000;\">utils \\\n  device</span>-mapper-persistent-<span style=\"color: #000000;\">data \\\n  lvm2</span></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>#&nbsp;sudo yum-config-<span style=\"color: #000000;\">manager \\\n    </span>--add-<span style=\"color: #000000;\">repo \\\n    https:</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">download.docker.com/linux/centos/docker-ce.repo</span></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre># sudo yum install -y docker-ce-<span style=\"color: #800080;\">3</span>:<span style=\"color: #800080;\">19.03</span>.<span style=\"color: #800080;\">15</span>-<span style=\"color: #800080;\">3</span>.el8 docker-ce-cli-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">19.03</span>.<span style=\"color: #800080;\">15</span>-<span style=\"color: #800080;\">3</span>.el8 containerd.io-<span style=\"color: #800080;\">1.3</span>.<span style=\"color: #800080;\">9</span>-<span style=\"color: #800080;\">3.1</span>.el8</pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre># docker --<span style=\"color: #000000;\">version\nDocker version </span><span style=\"color: #800080;\">19.03</span>.<span style=\"color: #800080;\">15</span>, build 99e3ed8919</pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">修改Cgroupfs 为 Systemd(docker文件驱动默认由cgroupfs 改成 systemd，与k8s保持一致避免conflict)：\n# cd </span>/etc/<span style=\"color: #000000;\">\n# mkdir docker<br /># cd docker\n# nano daemon.json<br />或 # cd /etc/ &amp;&amp; mkdir docker &amp;&amp; cd docker &amp;&amp; nano daemon.json </span></pre>\n<pre><span style=\"color: #000000;\">#写入\n{\n  </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">exec-opts</span><span style=\"color: #800000;\">\"</span>: [<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">native.cgroupdriver=systemd</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">]\n}</span></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">设置开机启动：\n\n# systemctl enable docker </span>&amp;&amp; systemctl start docker</pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre></pre>\n<p>&nbsp; 查看文件驱动：</p>\n<p># docker info | grep Driver<br /> Storage Driver: overlay2<br /> Logging Driver: json-file<br /> Cgroup Driver: cgroupfs</p>\n\n\n\n\n\n\n\n\n\n\n</div>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\"> 安装tc\n# yum install tc </span>-y</pre>\n</div>\n<h4><span style=\"color: blue;\">7.Kubernetes yum源配置：</span></h4>\n<div class=\"cnblogs_code\">\n<pre># nano /etc/yum.repos.d/kubernetes.repo，添加文件内容如下：</pre>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">[kubernetes]\n\nname</span>=<span style=\"color: #000000;\">Kubernetes Repo\n\nbaseurl</span>=https:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">mirrors.tuna.tsinghua.edu.cn/kubernetes/yum/repos/kubernetes-el7-x86_64/</span>\n<span style=\"color: #000000;\">\ngpgcheck</span>=<span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">\n\nenabled</span>=<span style=\"color: #800080;\">1</span></pre>\n</div>\n<p>&nbsp;</p>\n</div>\n<h4><span style=\"color: blue;\">8.安装k8s</span></h4>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre>yum -y install kubelet-<span style=\"color: #800080;\">1.18</span>.<span style=\"color: #800080;\">5</span> kubeadm-<span style=\"color: #800080;\">1.18</span>.<span style=\"color: #800080;\">5</span> kubectl-<span style=\"color: #800080;\">1.18</span>.<span style=\"color: #800080;\">5</span> --disableexcludes=kubernetes</pre>\n</div>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">设置k8s开机启动\n\n# systemctl enable kubelet\n\n启动k8s后台daemon\n\n# systemctl start kubelet</span></pre>\n</div>\n<h4><span style=\"color: blue;\">9.部署Kubernetes Master</span></h4>\n<p>&nbsp;</p>\n<p>从DockerHub的其它仓库拉取<br />网上搜了半天，很多人说从别的仓库一个一个拉取再改名，但是这些教程仓库名称不一，有的教程已经很老了，仓库很多年没更新，这里直接授之以渔，自己学怎么找仓库。<br />并且一个一个拉取改名太累了，可以写个脚本。</p>\n<p>&nbsp;</p>\n<p>过程如下：</p>\n<p>&nbsp;</p>\n<p>首先使用下面的命令获取需要的docker镜像名称：</p>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre># kubeadm config images list</pre>\n<p>k8s.gcr.io/kube-apiserver:v1.18.20<br />k8s.gcr.io/kube-controller-manager:v1.18.20<br />k8s.gcr.io/kube-scheduler:v1.18.20<br />k8s.gcr.io/kube-proxy:v1.18.20<br />k8s.gcr.io/pause:3.2<br />k8s.gcr.io/etcd:3.4.3-0<br />k8s.gcr.io/coredns:1.6.7</p>\n\n\n\n\n\n\n\n\n\n\n</div>\n<p>注意：新版本的coredns改名了，变成了coredns/coredns，记得在images里面改一下</p>\n<p>&nbsp;</p>\n<p>首先要看看该在哪个地方拉取，可以去docker hub搜一搜哪里有kube-proxy之类的组件<br />进入dockerhub搜索：<br />https://hub.docker.com/search?q=kube-proxy&amp;type=image<br />按照最近更新排序，结果如下，可以发现一个下载次数10k+，更新也很频繁的仓库：</p>\n<p>&nbsp;</p>\n<p><img src=\"/cnblogs/15193971/789895-20210827144401834-1665510685.png\" alt=\"\" width=\"615\" height=\"310\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>然后开始编写脚本：</p>\n<div class=\"cnblogs_code\">\n<pre># cd /etc/<span style=\"color: #000000;\">\n# mkdir k8s\n# cd k8s\n# nano pull_k8s_images.sh<br />或 cd /etc/ &amp;&amp; mkdir k8s &amp;&amp; cd k8s &amp;&amp; nano pull_k8s_images.sh</span></pre>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #0000ff;\">set</span> -<span style=\"color: #000000;\">o errexit\n</span><span style=\"color: #0000ff;\">set</span> -<span style=\"color: #000000;\">o nounset\n</span><span style=\"color: #0000ff;\">set</span> -<span style=\"color: #000000;\">o pipefail\n\n##这里定义版本，按照上面得到的列表自己改一下版本号\n\nKUBE_VERSION</span>=v1.<span style=\"color: #800080;\">18.5</span><span style=\"color: #000000;\">\nKUBE_PAUSE_VERSION</span>=<span style=\"color: #800080;\">3.2</span><span style=\"color: #000000;\">\nETCD_VERSION</span>=<span style=\"color: #800080;\">3.4</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">\nDNS_VERSION</span>=<span style=\"color: #800080;\">1.6</span>.<span style=\"color: #800080;\">7</span><span style=\"color: #000000;\">\n\n##这是原始仓库名，最后需要改名成这个\nGCR_URL</span>=<span style=\"color: #000000;\">k8s.gcr.io\n\n##这里就是写你要使用的仓库\nDOCKERHUB_URL</span>=<span style=\"color: #000000;\">gotok8s\n\n##这里是镜像列表，新版本要把coredns改成coredns</span>/<span style=\"color: #000000;\">coredns\nimages</span>=<span style=\"color: #000000;\">(\nkube</span>-<span style=\"color: #000000;\">proxy:${KUBE_VERSION}\nkube</span>-<span style=\"color: #000000;\">scheduler:${KUBE_VERSION}\nkube</span>-controller-<span style=\"color: #000000;\">manager:${KUBE_VERSION}\nkube</span>-<span style=\"color: #000000;\">apiserver:${KUBE_VERSION}\npause:${KUBE_PAUSE_VERSION}\netcd:${ETCD_VERSION}\ncoredns:${DNS_VERSION}\n)\n\n##这里是拉取和改名的循环语句\n</span><span style=\"color: #0000ff;\">for</span> imageName <span style=\"color: #0000ff;\">in</span> ${images[@]} ; <span style=\"color: #0000ff;\">do</span><span style=\"color: #000000;\">\n  docker pull $DOCKERHUB_URL</span>/<span style=\"color: #000000;\">$imageName\n  docker tag $DOCKERHUB_URL</span>/$imageName $GCR_URL/<span style=\"color: #000000;\">$imageName\n  docker rmi $DOCKERHUB_URL</span>/<span style=\"color: #000000;\">$imageName\ndone</span></pre>\n</div>\n</div>\n<p>然后授予执行权限</p>\n<div class=\"cnblogs_code\">\n<pre># chmod +x ./pull_k8s_images.sh</pre>\n</div>\n<p>执行</p>\n<div class=\"cnblogs_code\">\n<pre>./pull_k8s_images.sh</pre>\n</div>\n<pre class=\"prettyprint\">执行初始化</pre>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">kubeadm init  \\\n </span>--kubernetes-version=<span style=\"color: #800080;\">1.18</span>.<span style=\"color: #800080;\">5</span><span style=\"color: #000000;\">  \\\n </span>--apiserver-advertise-address=<span style=\"color: #800080;\">192.168</span>.<span style=\"color: #800080;\">5.141</span><span style=\"color: #000000;\">   \\\n </span>--service-cidr=<span style=\"color: #800080;\">10.10</span>.<span style=\"color: #800080;\">0.0</span>/<span style=\"color: #800080;\">16</span> --pod-network-cidr=<span style=\"color: #800080;\">10.122</span>.<span style=\"color: #800080;\">0.0</span>/<span style=\"color: #800080;\">16</span></pre>\n</div>\n<p>执行命令之后可以拿到，记录生成的最后部分内容，此内容需要在其它节点加入Kubernetes集群之前就执行。</p>\n<div class=\"cnblogs_code\">\n<p>&nbsp; kubeadm join 192.168.5.141:6443 --token n1anmw.ubhpjr33jdncdg5b \\<br />&nbsp; &nbsp; &nbsp;--discovery-token-ca-cert-hash sha256:372c1db40560d9abc307f3882718cfd66d2773bcb377ea60d6cd60eb52717122 </p>\n\n\n\n</div>\n<p>根据init后的提示，</p>\n<p>增加一个名为k8s的普通系统用户，并设置为可以免密sudo<br />执行kubeadm初始化master配置时提示的kubectl配置方法</p>\n<div class=\"cnblogs_code\">\n<pre># mkdir -p $HOME/<span style=\"color: #000000;\">.kube\n# sudo cp </span>-i /etc/kubernetes/admin.conf $HOME/.kube/<span style=\"color: #000000;\">config\n# sudo chown $(id </span>-u):$(id -g) $HOME/.kube/config</pre>\n</div>\n<p>查看docker镜像：</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\"># docker images\nREPOSITORY                           TAG                 IMAGE ID            CREATED             SIZE\nk8s.gcr.io</span>/kube-proxy                v1.<span style=\"color: #800080;\">18.5</span>             a1daed4e2b60        <span style=\"color: #800080;\">14</span><span style=\"color: #000000;\"> months ago       117MB\nk8s.gcr.io</span>/kube-controller-manager   v1.<span style=\"color: #800080;\">18.5</span>             8d69eaf196dc        <span style=\"color: #800080;\">14</span><span style=\"color: #000000;\"> months ago       162MB\nk8s.gcr.io</span>/kube-apiserver            v1.<span style=\"color: #800080;\">18.5</span>             08ca24f16874        <span style=\"color: #800080;\">14</span><span style=\"color: #000000;\"> months ago       173MB\nk8s.gcr.io</span>/kube-scheduler            v1.<span style=\"color: #800080;\">18.5</span>             39d887c6621d        <span style=\"color: #800080;\">14</span> months ago       <span style=\"color: #800080;\">95</span><span style=\"color: #000000;\">.3MB\nk8s.gcr.io</span>/pause                     <span style=\"color: #800080;\">3.2</span>                 80d28bedfe5d        <span style=\"color: #800080;\">18</span><span style=\"color: #000000;\"> months ago       683kB\nk8s.gcr.io</span>/coredns                   <span style=\"color: #800080;\">1.6</span>.<span style=\"color: #800080;\">7</span>               67da37a9a360        <span style=\"color: #800080;\">19</span> months ago       <span style=\"color: #800080;\">43</span><span style=\"color: #000000;\">.8MB\nk8s.gcr.io</span>/etcd                      <span style=\"color: #800080;\">3.4</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">0</span>             303ce5db0e90        <span style=\"color: #800080;\">22</span> months ago       288MB</pre>\n</div>\n<p>由于kube-apiserver默认只启动安全访问接口6443，而不启动非安装访问接口8080，kubectl是通过8080端口访问k8s kubelet的，所以要修改配置文件，使其支持8080端口访问：</p>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre># nano /etc/kubernetes/manifests/kube-<span style=\"color: #000000;\">apiserver.yaml\n把&ndash;insecure</span>-port=<span style=\"color: #000000;\">0修改为：\n&ndash;insecure</span>-port=<span style=\"color: #800080;\">8080<br />增加或修改<br />-insecure-bind-address=0.0.0.0<br /><br /></span></pre>\n<p><span style=\"color: #800080;\">&nbsp; #&nbsp;systemctl restart kubelet</span></p>\n<p><span style=\"color: #800080;\">&nbsp; # sysctl net.bridge.bridge-nf-call-iptables=1<br />&nbsp; #&nbsp;kubectl get node<br /></span></p>\n<p>NAME&nbsp; &nbsp; &nbsp; &nbsp;STATUS&nbsp; &nbsp;ROLES&nbsp; AGE VERSION<br />k8s-master   NotReady   master   11m   v1.18.5</p>\n\n\n\n\n\n\n\n\n\n\n</div>\n<h4><span style=\"color: blue;\"><img src=\"/cnblogs/15193971/789895-20210827152813941-141137389.png\" alt=\"\" loading=\"lazy\" /></span></h4>\n<p>&nbsp;</p>\n<h4>&nbsp;</h4>\n<p>&nbsp;</p>\n<h4>&nbsp;</h4>\n<h4><span style=\"color: blue;\">10.安装calico网络</span></h4>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre># yum install -y wget<br /># wget http://download.zhufunin.com/k8s_1.18/calico.yaml<br /># kubectl apply -f calico.yaml</pre>\n<p><span style=\"color: #008000;\">&nbsp; #&nbsp;kubectl get pods -n kube-system 隔一段时间看一下，STATUS变为ContainerCreating或者Running<br /></span></p>\n\n\n\n\n\n\n\n\n\n\n</div>\n<p>&nbsp;</p>\n<p><img src=\"/cnblogs/15193971/789895-20210827151048567-1226899289.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;再执行</p>\n<div class=\"cnblogs_code\">\n<pre># kubectl <span style=\"color: #0000ff;\">get</span> node，此时状态变为Ready</pre>\n</div>\n<p><img src=\"/cnblogs/15193971/789895-20210827151210561-965213108.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>至此，k8s master节点创建完毕。</p>\n<p>&nbsp;</p>\n<h4><span style=\"color: blue;\">11.Node节点加入集群(在k8s-nnode1和k8s-nnode2)</span></h4>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre># yum install -<span style=\"color: #000000;\">y wget\n# wget http:</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">download.zhufunin.com/k8s_1.18/1-18-pause.tar.gz</span>\n# wget http:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">download.zhufunin.com/k8s_1.18/1-18-kube-proxy.tar.gz</span>\n# docker load -i   <span style=\"color: #800080;\">1</span>-<span style=\"color: #800080;\">18</span>-<span style=\"color: #000000;\">pause.tar.gz\n# docker load </span>-i <span style=\"color: #800080;\">1</span>-<span style=\"color: #800080;\">18</span>-kube-proxy.tar.gz</pre>\n</div>\n<p>&nbsp;</p>\n<p><span style=\"color: blue;\">&nbsp;</span>向集群添加新节点，执行在kubeadm init输出的kubeadm join命令：<br />复制上面命令，在node节点上执行<br />在k8s-nnode1和k8s-nnode2都执行刚才拿到的：</p>\n<div class=\"cnblogs_code\">\n<pre># &nbsp; kubeadm join 192.168.5.141:6443 --token n1anmw.ubhpjr33jdncdg5b \\<br />&nbsp; &nbsp; &nbsp;--discovery-token-ca-cert-hash sha256:372c1db40560d9abc307f3882718cfd66d2773bcb377ea60d6cd60eb52717122</pre>\n</div>\n<p>&nbsp;</p>\n<p>然后都执行：</p>\n<div class=\"cnblogs_code\">\n<pre>kubectl -s http:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">192.168.5.138:8080 get nodes</span></pre>\n</div>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">mater查看pod<br /><br />kubectl get pods&nbsp; kube-proxy-7jmxj&nbsp; -n kube-system -o wide<br />kubectl get pods -n kube-system -o wide<br /><br />node查看连接日志\n\njournalctl </span>-f -u kubelet<br /><br />如果Node的状态是NotReady，并且日志输出出现Unable to update cni config: No networks found in /etc/cni/net.d</pre>\n<p>&nbsp; 执行&nbsp;scp -r 192.168.5.141:/etc/cni /etc/cni</p>\n</div>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre>iptables --<span style=\"color: #000000;\">flush\niptables </span>-tnat --<span style=\"color: #000000;\">flush\nsystemctl stop firewalld\nsystemctl disable firewalld\nsystemctl restart docker\nsystemctl restart kubelet</span></pre>\n</div>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<pre class=\"prettyprint\"></pre>\n<pre class=\"prettyprint\"></pre>","slug":"cnblogs/15193971","published":1,"updated":"2022-07-10T11:02:55.382Z","_id":"cl5f3a2d40001c0un669d07f1","comments":1,"layout":"post","photos":[],"link":"","content":"<p>创建三个centos节点：</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #800080;\">192.168</span>.<span style=\"color: #800080;\">5.141</span> k8s-<span style=\"color: #000000;\">master\n</span><span style=\"color: #800080;\">192.168</span>.<span style=\"color: #800080;\">5.142</span> k8s-<span style=\"color: #000000;\">nnode1\n</span><span style=\"color: #800080;\">192.168</span>.<span style=\"color: #800080;\">5.143</span> k8s-nnode2</pre>\n</div>\n<p>查看centos系统版本</p>\n<div class=\"cnblogs_code\">\n<pre># cat /etc/centos-<span style=\"color: #000000;\">release\nCentOS Linux release 8.2.2004 (Core)&nbsp;<br /></span></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>备注：第1步~<span style=\"color: #000000;\">第8步，所有的节点都要操作，第9、10步Master节点操作，第11步Node节点操作。\n如果第9、</span><span style=\"color: #800080;\">10</span>、11步操作失败，可以通过 kubeadm reset 命令来清理环境重新安装。</pre>\n</div>\n<h4><span style=\"color: blue;\">1.关闭防火墙</span></h4>\n<div class=\"cnblogs_code\">\n<pre>#&nbsp;systemctl stop firewalld</pre>\n</div>\n<h4><span style=\"color: blue;\">2.关闭selinux</span></h4>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre>#&nbsp;setenforce <span style=\"color: #800080;\">0</span></pre>\n</div>\n<p>&nbsp;</p>\n<h4><span style=\"color: blue;\">3.关闭swap</span></h4>\n<div class=\"cnblogs_code\">\n<p># nano /etc/fstab ，注释掉swap挂载这一行可以永久关闭swap分区</p>\n<p>备注：k8s运行必须关闭掉swap分区</p>\n<p># swapoff -a</p>\n</div>\n<p>&nbsp;</p>\n<h4><span style=\"color: blue;\">4.添加主机名与IP对应的关系</span></h4>\n<div class=\"cnblogs_code\">\n<pre># nano /etc/<span style=\"color: #000000;\">hosts 添加如下内容：\n\n<p></span></pre></p>\n<pre>192.168.5.141 k8s-<span>master\n192.168.5.142 k8s-<span>nnode1\n192.168.5.143 k8s-nnode2</span></span></pre>\n</div>\n<h4><span style=\"color: blue;\">5.将桥接的IPV4流量传递到iptables 的链</span></h4>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre>#&nbsp;cat &gt; /etc/sysctl.d/k8s.conf &lt;&lt;<span style=\"color: #000000;\"> EOF\nnet.bridge.bridge</span>-nf-call-ip6tables = <span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">\nnet.bridge.bridge</span>-nf-call-iptables = <span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">\nEOF\n\n\n<h1 id=\"sysctl-–system\"><a href=\"#sysctl-–system\" class=\"headerlink\" title=\"sysctl –system\"></a>sysctl </span>–system</pre></h1></div>\n<p>&nbsp;</p>\n<h4><span style=\"color: blue;\">6.安装docker</span></h4>\n<p><span style=\"color: blue;\">&nbsp;</span></p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">卸载旧的docker:\n\n<p>#&nbsp;sudo yum remove docker <br>                  docker</span>-<span style=\"color: #000000;\">client <br>                  docker</span>-client-<span style=\"color: #000000;\">latest <br>                  docker</span>-<span style=\"color: #000000;\">common <br>                  docker</span>-<span style=\"color: #000000;\">latest <br>                  docker</span>-latest-<span style=\"color: #000000;\">logrotate <br>                  docker</span>-<span style=\"color: #000000;\">logrotate <br>                  docker</span>-engine</pre></p>\n</div>\n<div class=\"cnblogs_code\">\n<pre>#&nbsp;sudo yum install -y yum-<span style=\"color: #000000;\">utils \\\n  device</span>-mapper-persistent-<span style=\"color: #000000;\">data \\\n  lvm2</span></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>#&nbsp;sudo yum-config-<span style=\"color: #000000;\">manager \\\n    </span>--add-<span style=\"color: #000000;\">repo \\\n    https:</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">download.docker.com/linux/centos/docker-ce.repo</span></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre># sudo yum install -y docker-ce-<span style=\"color: #800080;\">3</span>:<span style=\"color: #800080;\">19.03</span>.<span style=\"color: #800080;\">15</span>-<span style=\"color: #800080;\">3</span>.el8 docker-ce-cli-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">19.03</span>.<span style=\"color: #800080;\">15</span>-<span style=\"color: #800080;\">3</span>.el8 containerd.io-<span style=\"color: #800080;\">1.3</span>.<span style=\"color: #800080;\">9</span>-<span style=\"color: #800080;\">3.1</span>.el8</pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre># docker --<span style=\"color: #000000;\">version\nDocker version </span><span style=\"color: #800080;\">19.03</span>.<span style=\"color: #800080;\">15</span>, build 99e3ed8919</pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">修改Cgroupfs 为 Systemd(docker文件驱动默认由cgroupfs 改成 systemd，与k8s保持一致避免conflict)：\n# cd </span>/etc/<span style=\"color: #000000;\">\n# mkdir docker<br /># cd docker\n# nano daemon.json<br />或 # cd /etc/ &amp;&amp; mkdir docker &amp;&amp; cd docker &amp;&amp; nano daemon.json </span></pre>\n<pre><span style=\"color: #000000;\">#写入\n{\n  </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">exec-opts</span><span style=\"color: #800000;\">\"</span>: [<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">native.cgroupdriver=systemd</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">]\n}</span></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">设置开机启动：\n\n<h1 id=\"systemctl-enable-docker-amp-amp-systemctl-start-docker\"><a href=\"#systemctl-enable-docker-amp-amp-systemctl-start-docker\" class=\"headerlink\" title=\"systemctl enable docker &amp;&amp; systemctl start docker\"></a>systemctl enable docker </span>&amp;&amp; systemctl start docker</pre></h1></div>\n<div class=\"cnblogs_code\">\n<pre></pre>\n<p>&nbsp; 查看文件驱动：</p>\n<p># docker info | grep Driver<br /> Storage Driver: overlay2<br /> Logging Driver: json-file<br /> Cgroup Driver: cgroupfs</p>\n\n\n\n\n\n\n\n\n\n\n</div>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\"> 安装tc\n# yum install tc </span>-y</pre>\n</div>\n<h4><span style=\"color: blue;\">7.Kubernetes yum源配置：</span></h4>\n<div class=\"cnblogs_code\">\n<pre># nano /etc/yum.repos.d/kubernetes.repo，添加文件内容如下：</pre>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">[kubernetes]\n\n<p>name</span>=<span style=\"color: #000000;\">Kubernetes Repo</p>\n<p>baseurl</span>=https:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">mirrors.tuna.tsinghua.edu.cn/kubernetes/yum/repos/kubernetes-el7-x86_64/</span><br><span style=\"color: #000000;\"><br>gpgcheck</span>=<span style=\"color: #800080;\">0</span><span style=\"color: #000000;\"></p>\n<p>enabled</span>=<span style=\"color: #800080;\">1</span></pre></p>\n</div>\n<p>&nbsp;</p>\n</div>\n<h4><span style=\"color: blue;\">8.安装k8s</span></h4>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre>yum -y install kubelet-<span style=\"color: #800080;\">1.18</span>.<span style=\"color: #800080;\">5</span> kubeadm-<span style=\"color: #800080;\">1.18</span>.<span style=\"color: #800080;\">5</span> kubectl-<span style=\"color: #800080;\">1.18</span>.<span style=\"color: #800080;\">5</span> --disableexcludes=kubernetes</pre>\n</div>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">设置k8s开机启动\n\n<h1 id=\"systemctl-enable-kubelet\"><a href=\"#systemctl-enable-kubelet\" class=\"headerlink\" title=\"systemctl enable kubelet\"></a>systemctl enable kubelet</h1><p>启动k8s后台daemon</p>\n<h1 id=\"systemctl-start-kubelet\"><a href=\"#systemctl-start-kubelet\" class=\"headerlink\" title=\"systemctl start kubelet\"></a>systemctl start kubelet</span></pre></h1></div>\n<h4><span style=\"color: blue;\">9.部署Kubernetes Master</span></h4>\n<p>&nbsp;</p>\n<p>从DockerHub的其它仓库拉取<br />网上搜了半天，很多人说从别的仓库一个一个拉取再改名，但是这些教程仓库名称不一，有的教程已经很老了，仓库很多年没更新，这里直接授之以渔，自己学怎么找仓库。<br />并且一个一个拉取改名太累了，可以写个脚本。</p>\n<p>&nbsp;</p>\n<p>过程如下：</p>\n<p>&nbsp;</p>\n<p>首先使用下面的命令获取需要的docker镜像名称：</p>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre># kubeadm config images list</pre>\n<p>k8s.gcr.io/kube-apiserver:v1.18.20<br />k8s.gcr.io/kube-controller-manager:v1.18.20<br />k8s.gcr.io/kube-scheduler:v1.18.20<br />k8s.gcr.io/kube-proxy:v1.18.20<br />k8s.gcr.io/pause:3.2<br />k8s.gcr.io/etcd:3.4.3-0<br />k8s.gcr.io/coredns:1.6.7</p>\n\n\n\n\n\n\n\n\n\n\n</div>\n<p>注意：新版本的coredns改名了，变成了coredns/coredns，记得在images里面改一下</p>\n<p>&nbsp;</p>\n<p>首先要看看该在哪个地方拉取，可以去docker hub搜一搜哪里有kube-proxy之类的组件<br />进入dockerhub搜索：<br />https://hub.docker.com/search?q=kube-proxy&amp;type=image<br />按照最近更新排序，结果如下，可以发现一个下载次数10k+，更新也很频繁的仓库：</p>\n<p>&nbsp;</p>\n<p><img src=\"/cnblogs/15193971/789895-20210827144401834-1665510685.png\" class=\"lazyload placeholder\" data-srcset=\"/cnblogs/15193971/789895-20210827144401834-1665510685.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"\" width=\"615\" height=\"310\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>然后开始编写脚本：</p>\n<div class=\"cnblogs_code\">\n<pre># cd /etc/<span style=\"color: #000000;\">\n# mkdir k8s\n# cd k8s\n# nano pull_k8s_images.sh<br />或 cd /etc/ &amp;&amp; mkdir k8s &amp;&amp; cd k8s &amp;&amp; nano pull_k8s_images.sh</span></pre>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #0000ff;\">set</span> -<span style=\"color: #000000;\">o errexit\n</span><span style=\"color: #0000ff;\">set</span> -<span style=\"color: #000000;\">o nounset\n</span><span style=\"color: #0000ff;\">set</span> -<span style=\"color: #000000;\">o pipefail\n\n<p>##这里定义版本，按照上面得到的列表自己改一下版本号</p>\n<p>KUBE_VERSION</span>=v1.<span style=\"color: #800080;\">18.5</span><span style=\"color: #000000;\"><br>KUBE_PAUSE_VERSION</span>=<span style=\"color: #800080;\">3.2</span><span style=\"color: #000000;\"><br>ETCD_VERSION</span>=<span style=\"color: #800080;\">3.4</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">0</span><span style=\"color: #000000;\"><br>DNS_VERSION</span>=<span style=\"color: #800080;\">1.6</span>.<span style=\"color: #800080;\">7</span><span style=\"color: #000000;\"></p>\n<p>##这是原始仓库名，最后需要改名成这个<br>GCR_URL</span>=<span style=\"color: #000000;\">k8s.gcr.io</p>\n<p>##这里就是写你要使用的仓库<br>DOCKERHUB_URL</span>=<span style=\"color: #000000;\">gotok8s</p>\n<p>##这里是镜像列表，新版本要把coredns改成coredns</span>/<span style=\"color: #000000;\">coredns<br>images</span>=<span style=\"color: #000000;\">(<br>kube</span>-<span style=\"color: #000000;\">proxy:${KUBE_VERSION}<br>kube</span>-<span style=\"color: #000000;\">scheduler:${KUBE_VERSION}<br>kube</span>-controller-<span style=\"color: #000000;\">manager:${KUBE_VERSION}<br>kube</span>-<span style=\"color: #000000;\">apiserver:${KUBE_VERSION}<br>pause:${KUBE_PAUSE_VERSION}<br>etcd:${ETCD_VERSION}<br>coredns:${DNS_VERSION}<br>)</p>\n<p>##这里是拉取和改名的循环语句<br></span><span style=\"color: #0000ff;\">for</span> imageName <span style=\"color: #0000ff;\">in</span> ${images[@]} ; <span style=\"color: #0000ff;\">do</span><span style=\"color: #000000;\"><br>  docker pull $DOCKERHUB_URL</span>/<span style=\"color: #000000;\">$imageName<br>  docker tag $DOCKERHUB_URL</span>/$imageName $GCR_URL/<span style=\"color: #000000;\">$imageName<br>  docker rmi $DOCKERHUB_URL</span>/<span style=\"color: #000000;\">$imageName<br>done</span></pre></p>\n</div>\n</div>\n<p>然后授予执行权限</p>\n<div class=\"cnblogs_code\">\n<pre># chmod +x ./pull_k8s_images.sh</pre>\n</div>\n<p>执行</p>\n<div class=\"cnblogs_code\">\n<pre>./pull_k8s_images.sh</pre>\n</div>\n<pre class=\"prettyprint\">执行初始化</pre>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">kubeadm init  \\\n </span>--kubernetes-version=<span style=\"color: #800080;\">1.18</span>.<span style=\"color: #800080;\">5</span><span style=\"color: #000000;\">  \\\n </span>--apiserver-advertise-address=<span style=\"color: #800080;\">192.168</span>.<span style=\"color: #800080;\">5.141</span><span style=\"color: #000000;\">   \\\n </span>--service-cidr=<span style=\"color: #800080;\">10.10</span>.<span style=\"color: #800080;\">0.0</span>/<span style=\"color: #800080;\">16</span> --pod-network-cidr=<span style=\"color: #800080;\">10.122</span>.<span style=\"color: #800080;\">0.0</span>/<span style=\"color: #800080;\">16</span></pre>\n</div>\n<p>执行命令之后可以拿到，记录生成的最后部分内容，此内容需要在其它节点加入Kubernetes集群之前就执行。</p>\n<div class=\"cnblogs_code\">\n<p>&nbsp; kubeadm join 192.168.5.141:6443 --token n1anmw.ubhpjr33jdncdg5b \\<br />&nbsp; &nbsp; &nbsp;--discovery-token-ca-cert-hash sha256:372c1db40560d9abc307f3882718cfd66d2773bcb377ea60d6cd60eb52717122 </p>\n\n\n\n</div>\n<p>根据init后的提示，</p>\n<p>增加一个名为k8s的普通系统用户，并设置为可以免密sudo<br />执行kubeadm初始化master配置时提示的kubectl配置方法</p>\n<div class=\"cnblogs_code\">\n<pre># mkdir -p $HOME/<span style=\"color: #000000;\">.kube\n# sudo cp </span>-i /etc/kubernetes/admin.conf $HOME/.kube/<span style=\"color: #000000;\">config\n# sudo chown $(id </span>-u):$(id -g) $HOME/.kube/config</pre>\n</div>\n<p>查看docker镜像：</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\"># docker images\nREPOSITORY                           TAG                 IMAGE ID            CREATED             SIZE\nk8s.gcr.io</span>/kube-proxy                v1.<span style=\"color: #800080;\">18.5</span>             a1daed4e2b60        <span style=\"color: #800080;\">14</span><span style=\"color: #000000;\"> months ago       117MB\nk8s.gcr.io</span>/kube-controller-manager   v1.<span style=\"color: #800080;\">18.5</span>             8d69eaf196dc        <span style=\"color: #800080;\">14</span><span style=\"color: #000000;\"> months ago       162MB\nk8s.gcr.io</span>/kube-apiserver            v1.<span style=\"color: #800080;\">18.5</span>             08ca24f16874        <span style=\"color: #800080;\">14</span><span style=\"color: #000000;\"> months ago       173MB\nk8s.gcr.io</span>/kube-scheduler            v1.<span style=\"color: #800080;\">18.5</span>             39d887c6621d        <span style=\"color: #800080;\">14</span> months ago       <span style=\"color: #800080;\">95</span><span style=\"color: #000000;\">.3MB\nk8s.gcr.io</span>/pause                     <span style=\"color: #800080;\">3.2</span>                 80d28bedfe5d        <span style=\"color: #800080;\">18</span><span style=\"color: #000000;\"> months ago       683kB\nk8s.gcr.io</span>/coredns                   <span style=\"color: #800080;\">1.6</span>.<span style=\"color: #800080;\">7</span>               67da37a9a360        <span style=\"color: #800080;\">19</span> months ago       <span style=\"color: #800080;\">43</span><span style=\"color: #000000;\">.8MB\nk8s.gcr.io</span>/etcd                      <span style=\"color: #800080;\">3.4</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">0</span>             303ce5db0e90        <span style=\"color: #800080;\">22</span> months ago       288MB</pre>\n</div>\n<p>由于kube-apiserver默认只启动安全访问接口6443，而不启动非安装访问接口8080，kubectl是通过8080端口访问k8s kubelet的，所以要修改配置文件，使其支持8080端口访问：</p>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre># nano /etc/kubernetes/manifests/kube-<span style=\"color: #000000;\">apiserver.yaml\n把&ndash;insecure</span>-port=<span style=\"color: #000000;\">0修改为：\n&ndash;insecure</span>-port=<span style=\"color: #800080;\">8080<br />增加或修改<br />-insecure-bind-address=0.0.0.0<br /><br /></span></pre>\n<p><span style=\"color: #800080;\">&nbsp; #&nbsp;systemctl restart kubelet</span></p>\n<p><span style=\"color: #800080;\">&nbsp; # sysctl net.bridge.bridge-nf-call-iptables=1<br />&nbsp; #&nbsp;kubectl get node<br /></span></p>\n<p>NAME&nbsp; &nbsp; &nbsp; &nbsp;STATUS&nbsp; &nbsp;ROLES&nbsp; AGE VERSION<br />k8s-master   NotReady   master   11m   v1.18.5</p>\n\n\n\n\n\n\n\n\n\n\n</div>\n<h4><span style=\"color: blue;\"><img src=\"/cnblogs/15193971/789895-20210827152813941-141137389.png\" class=\"lazyload placeholder\" data-srcset=\"/cnblogs/15193971/789895-20210827152813941-141137389.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"\" loading=\"lazy\" /></span></h4>\n<p>&nbsp;</p>\n<h4>&nbsp;</h4>\n<p>&nbsp;</p>\n<h4>&nbsp;</h4>\n<h4><span style=\"color: blue;\">10.安装calico网络</span></h4>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre># yum install -y wget<br /># wget http://download.zhufunin.com/k8s_1.18/calico.yaml<br /># kubectl apply -f calico.yaml</pre>\n<p><span style=\"color: #008000;\">&nbsp; #&nbsp;kubectl get pods -n kube-system 隔一段时间看一下，STATUS变为ContainerCreating或者Running<br /></span></p>\n\n\n\n\n\n\n\n\n\n\n</div>\n<p>&nbsp;</p>\n<p><img src=\"/cnblogs/15193971/789895-20210827151048567-1226899289.png\" class=\"lazyload placeholder\" data-srcset=\"/cnblogs/15193971/789895-20210827151048567-1226899289.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;再执行</p>\n<div class=\"cnblogs_code\">\n<pre># kubectl <span style=\"color: #0000ff;\">get</span> node，此时状态变为Ready</pre>\n</div>\n<p><img src=\"/cnblogs/15193971/789895-20210827151210561-965213108.png\" class=\"lazyload placeholder\" data-srcset=\"/cnblogs/15193971/789895-20210827151210561-965213108.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>至此，k8s master节点创建完毕。</p>\n<p>&nbsp;</p>\n<h4><span style=\"color: blue;\">11.Node节点加入集群(在k8s-nnode1和k8s-nnode2)</span></h4>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre># yum install -<span style=\"color: #000000;\">y wget\n# wget http:</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">download.zhufunin.com/k8s_1.18/1-18-pause.tar.gz</span>\n# wget http:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">download.zhufunin.com/k8s_1.18/1-18-kube-proxy.tar.gz</span>\n# docker load -i   <span style=\"color: #800080;\">1</span>-<span style=\"color: #800080;\">18</span>-<span style=\"color: #000000;\">pause.tar.gz\n# docker load </span>-i <span style=\"color: #800080;\">1</span>-<span style=\"color: #800080;\">18</span>-kube-proxy.tar.gz</pre>\n</div>\n<p>&nbsp;</p>\n<p><span style=\"color: blue;\">&nbsp;</span>向集群添加新节点，执行在kubeadm init输出的kubeadm join命令：<br />复制上面命令，在node节点上执行<br />在k8s-nnode1和k8s-nnode2都执行刚才拿到的：</p>\n<div class=\"cnblogs_code\">\n<pre># &nbsp; kubeadm join 192.168.5.141:6443 --token n1anmw.ubhpjr33jdncdg5b \\<br />&nbsp; &nbsp; &nbsp;--discovery-token-ca-cert-hash sha256:372c1db40560d9abc307f3882718cfd66d2773bcb377ea60d6cd60eb52717122</pre>\n</div>\n<p>&nbsp;</p>\n<p>然后都执行：</p>\n<div class=\"cnblogs_code\">\n<pre>kubectl -s http:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">192.168.5.138:8080 get nodes</span></pre>\n</div>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">mater查看pod<br /><br />kubectl get pods&nbsp; kube-proxy-7jmxj&nbsp; -n kube-system -o wide<br />kubectl get pods -n kube-system -o wide<br /><br />node查看连接日志\n\n<p>journalctl </span>-f -u kubelet<br /><br />如果Node的状态是NotReady，并且日志输出出现Unable to update cni config: No networks found in /etc/cni/net.d</pre></p>\n<p>&nbsp; 执行&nbsp;scp -r 192.168.5.141:/etc/cni /etc/cni</p>\n</div>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre>iptables --<span style=\"color: #000000;\">flush\niptables </span>-tnat --<span style=\"color: #000000;\">flush\nsystemctl stop firewalld\nsystemctl disable firewalld\nsystemctl restart docker\nsystemctl restart kubelet</span></pre>\n</div>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<pre class=\"prettyprint\"></pre>\n<pre class=\"prettyprint\"></pre>","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"wangpengzong","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/wangpengzong","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"<p>创建三个centos节点：</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #800080;\">192.168</span>.<span style=\"color: #800080;\">5.141</span> k8s-<span style=\"color: #000000;\">master\n</span><span style=\"color: #800080;\">192.168</span>.<span style=\"color: #800080;\">5.142</span> k8s-<span style=\"color: #000000;\">nnode1\n</span><span style=\"color: #800080;\">192.168</span>.<span style=\"color: #800080;\">5.143</span> k8s-nnode2</pre>\n</div>\n<p>查看centos系统版本</p>\n<div class=\"cnblogs_code\">\n<pre># cat /etc/centos-<span style=\"color: #000000;\">release\nCentOS Linux release 8.2.2004 (Core)&nbsp;<br /></span></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>备注：第1步~<span style=\"color: #000000;\">第8步，所有的节点都要操作，第9、10步Master节点操作，第11步Node节点操作。\n如果第9、</span><span style=\"color: #800080;\">10</span>、11步操作失败，可以通过 kubeadm reset 命令来清理环境重新安装。</pre>\n</div>\n<h4><span style=\"color: blue;\">1.关闭防火墙</span></h4>\n<div class=\"cnblogs_code\">\n<pre>#&nbsp;systemctl stop firewalld</pre>\n</div>\n<h4><span style=\"color: blue;\">2.关闭selinux</span></h4>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre>#&nbsp;setenforce <span style=\"color: #800080;\">0</span></pre>\n</div>\n<p>&nbsp;</p>\n<h4><span style=\"color: blue;\">3.关闭swap</span></h4>\n<div class=\"cnblogs_code\">\n<p># nano /etc/fstab ，注释掉swap挂载这一行可以永久关闭swap分区</p>\n<p>备注：k8s运行必须关闭掉swap分区</p>\n<p># swapoff -a</p>\n</div>\n<p>&nbsp;</p>\n<h4><span style=\"color: blue;\">4.添加主机名与IP对应的关系</span></h4>\n<div class=\"cnblogs_code\">\n<pre># nano /etc/<span style=\"color: #000000;\">hosts 添加如下内容：\n\n<p></span></pre></p>\n<pre>192.168.5.141 k8s-<span>master\n192.168.5.142 k8s-<span>nnode1\n192.168.5.143 k8s-nnode2</span></span></pre>\n</div>\n<h4><span style=\"color: blue;\">5.将桥接的IPV4流量传递到iptables 的链</span></h4>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre>#&nbsp;cat &gt; /etc/sysctl.d/k8s.conf &lt;&lt;<span style=\"color: #000000;\"> EOF\nnet.bridge.bridge</span>-nf-call-ip6tables = <span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">\nnet.bridge.bridge</span>-nf-call-iptables = <span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">\nEOF\n\n\n<h1 id=\"sysctl-–system\"><a href=\"#sysctl-–system\" class=\"headerlink\" title=\"sysctl –system\"></a>sysctl </span>–system</pre></h1></div>\n<p>&nbsp;</p>\n<h4><span style=\"color: blue;\">6.安装docker</span></h4>\n<p><span style=\"color: blue;\">&nbsp;</span></p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">卸载旧的docker:\n\n<p>#&nbsp;sudo yum remove docker <br>                  docker</span>-<span style=\"color: #000000;\">client <br>                  docker</span>-client-<span style=\"color: #000000;\">latest <br>                  docker</span>-<span style=\"color: #000000;\">common <br>                  docker</span>-<span style=\"color: #000000;\">latest <br>                  docker</span>-latest-<span style=\"color: #000000;\">logrotate <br>                  docker</span>-<span style=\"color: #000000;\">logrotate <br>                  docker</span>-engine</pre></p>\n</div>\n<div class=\"cnblogs_code\">\n<pre>#&nbsp;sudo yum install -y yum-<span style=\"color: #000000;\">utils \\\n  device</span>-mapper-persistent-<span style=\"color: #000000;\">data \\\n  lvm2</span></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>#&nbsp;sudo yum-config-<span style=\"color: #000000;\">manager \\\n    </span>--add-<span style=\"color: #000000;\">repo \\\n    https:</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">download.docker.com/linux/centos/docker-ce.repo</span></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre># sudo yum install -y docker-ce-<span style=\"color: #800080;\">3</span>:<span style=\"color: #800080;\">19.03</span>.<span style=\"color: #800080;\">15</span>-<span style=\"color: #800080;\">3</span>.el8 docker-ce-cli-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">19.03</span>.<span style=\"color: #800080;\">15</span>-<span style=\"color: #800080;\">3</span>.el8 containerd.io-<span style=\"color: #800080;\">1.3</span>.<span style=\"color: #800080;\">9</span>-<span style=\"color: #800080;\">3.1</span>.el8</pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre># docker --<span style=\"color: #000000;\">version\nDocker version </span><span style=\"color: #800080;\">19.03</span>.<span style=\"color: #800080;\">15</span>, build 99e3ed8919</pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">修改Cgroupfs 为 Systemd(docker文件驱动默认由cgroupfs 改成 systemd，与k8s保持一致避免conflict)：\n# cd </span>/etc/<span style=\"color: #000000;\">\n# mkdir docker<br /># cd docker\n# nano daemon.json<br />或 # cd /etc/ &amp;&amp; mkdir docker &amp;&amp; cd docker &amp;&amp; nano daemon.json </span></pre>\n<pre><span style=\"color: #000000;\">#写入\n{\n  </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">exec-opts</span><span style=\"color: #800000;\">\"</span>: [<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">native.cgroupdriver=systemd</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">]\n}</span></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">设置开机启动：\n\n<h1 id=\"systemctl-enable-docker-amp-amp-systemctl-start-docker\"><a href=\"#systemctl-enable-docker-amp-amp-systemctl-start-docker\" class=\"headerlink\" title=\"systemctl enable docker &amp;&amp; systemctl start docker\"></a>systemctl enable docker </span>&amp;&amp; systemctl start docker</pre></h1></div>\n<div class=\"cnblogs_code\">\n<pre></pre>\n<p>&nbsp; 查看文件驱动：</p>\n<p># docker info | grep Driver<br /> Storage Driver: overlay2<br /> Logging Driver: json-file<br /> Cgroup Driver: cgroupfs</p>\n\n\n\n\n\n\n\n\n\n\n</div>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\"> 安装tc\n# yum install tc </span>-y</pre>\n</div>\n<h4><span style=\"color: blue;\">7.Kubernetes yum源配置：</span></h4>\n<div class=\"cnblogs_code\">\n<pre># nano /etc/yum.repos.d/kubernetes.repo，添加文件内容如下：</pre>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">[kubernetes]\n\n<p>name</span>=<span style=\"color: #000000;\">Kubernetes Repo</p>\n<p>baseurl</span>=https:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">mirrors.tuna.tsinghua.edu.cn/kubernetes/yum/repos/kubernetes-el7-x86_64/</span><br><span style=\"color: #000000;\"><br>gpgcheck</span>=<span style=\"color: #800080;\">0</span><span style=\"color: #000000;\"></p>\n<p>enabled</span>=<span style=\"color: #800080;\">1</span></pre></p>\n</div>\n<p>&nbsp;</p>\n</div>\n<h4><span style=\"color: blue;\">8.安装k8s</span></h4>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre>yum -y install kubelet-<span style=\"color: #800080;\">1.18</span>.<span style=\"color: #800080;\">5</span> kubeadm-<span style=\"color: #800080;\">1.18</span>.<span style=\"color: #800080;\">5</span> kubectl-<span style=\"color: #800080;\">1.18</span>.<span style=\"color: #800080;\">5</span> --disableexcludes=kubernetes</pre>\n</div>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">设置k8s开机启动\n\n<h1 id=\"systemctl-enable-kubelet\"><a href=\"#systemctl-enable-kubelet\" class=\"headerlink\" title=\"systemctl enable kubelet\"></a>systemctl enable kubelet</h1><p>启动k8s后台daemon</p>\n<h1 id=\"systemctl-start-kubelet\"><a href=\"#systemctl-start-kubelet\" class=\"headerlink\" title=\"systemctl start kubelet\"></a>systemctl start kubelet</span></pre></h1></div>\n<h4><span style=\"color: blue;\">9.部署Kubernetes Master</span></h4>\n<p>&nbsp;</p>\n<p>从DockerHub的其它仓库拉取<br />网上搜了半天，很多人说从别的仓库一个一个拉取再改名，但是这些教程仓库名称不一，有的教程已经很老了，仓库很多年没更新，这里直接授之以渔，自己学怎么找仓库。<br />并且一个一个拉取改名太累了，可以写个脚本。</p>\n<p>&nbsp;</p>\n<p>过程如下：</p>\n<p>&nbsp;</p>\n<p>首先使用下面的命令获取需要的docker镜像名称：</p>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre># kubeadm config images list</pre>\n<p>k8s.gcr.io/kube-apiserver:v1.18.20<br />k8s.gcr.io/kube-controller-manager:v1.18.20<br />k8s.gcr.io/kube-scheduler:v1.18.20<br />k8s.gcr.io/kube-proxy:v1.18.20<br />k8s.gcr.io/pause:3.2<br />k8s.gcr.io/etcd:3.4.3-0<br />k8s.gcr.io/coredns:1.6.7</p>\n\n\n\n\n\n\n\n\n\n\n</div>\n<p>注意：新版本的coredns改名了，变成了coredns/coredns，记得在images里面改一下</p>\n<p>&nbsp;</p>\n<p>首先要看看该在哪个地方拉取，可以去docker hub搜一搜哪里有kube-proxy之类的组件<br />进入dockerhub搜索：<br />https://hub.docker.com/search?q=kube-proxy&amp;type=image<br />按照最近更新排序，结果如下，可以发现一个下载次数10k+，更新也很频繁的仓库：</p>\n<p>&nbsp;</p>\n<p><img src=\"/cnblogs/15193971/789895-20210827144401834-1665510685.png\" alt=\"\" width=\"615\" height=\"310\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>然后开始编写脚本：</p>\n<div class=\"cnblogs_code\">\n<pre># cd /etc/<span style=\"color: #000000;\">\n# mkdir k8s\n# cd k8s\n# nano pull_k8s_images.sh<br />或 cd /etc/ &amp;&amp; mkdir k8s &amp;&amp; cd k8s &amp;&amp; nano pull_k8s_images.sh</span></pre>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #0000ff;\">set</span> -<span style=\"color: #000000;\">o errexit\n</span><span style=\"color: #0000ff;\">set</span> -<span style=\"color: #000000;\">o nounset\n</span><span style=\"color: #0000ff;\">set</span> -<span style=\"color: #000000;\">o pipefail\n\n<p>##这里定义版本，按照上面得到的列表自己改一下版本号</p>\n<p>KUBE_VERSION</span>=v1.<span style=\"color: #800080;\">18.5</span><span style=\"color: #000000;\"><br>KUBE_PAUSE_VERSION</span>=<span style=\"color: #800080;\">3.2</span><span style=\"color: #000000;\"><br>ETCD_VERSION</span>=<span style=\"color: #800080;\">3.4</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">0</span><span style=\"color: #000000;\"><br>DNS_VERSION</span>=<span style=\"color: #800080;\">1.6</span>.<span style=\"color: #800080;\">7</span><span style=\"color: #000000;\"></p>\n<p>##这是原始仓库名，最后需要改名成这个<br>GCR_URL</span>=<span style=\"color: #000000;\">k8s.gcr.io</p>\n<p>##这里就是写你要使用的仓库<br>DOCKERHUB_URL</span>=<span style=\"color: #000000;\">gotok8s</p>\n<p>##这里是镜像列表，新版本要把coredns改成coredns</span>/<span style=\"color: #000000;\">coredns<br>images</span>=<span style=\"color: #000000;\">(<br>kube</span>-<span style=\"color: #000000;\">proxy:${KUBE_VERSION}<br>kube</span>-<span style=\"color: #000000;\">scheduler:${KUBE_VERSION}<br>kube</span>-controller-<span style=\"color: #000000;\">manager:${KUBE_VERSION}<br>kube</span>-<span style=\"color: #000000;\">apiserver:${KUBE_VERSION}<br>pause:${KUBE_PAUSE_VERSION}<br>etcd:${ETCD_VERSION}<br>coredns:${DNS_VERSION}<br>)</p>\n<p>##这里是拉取和改名的循环语句<br></span><span style=\"color: #0000ff;\">for</span> imageName <span style=\"color: #0000ff;\">in</span> ${images[@]} ; <span style=\"color: #0000ff;\">do</span><span style=\"color: #000000;\"><br>  docker pull $DOCKERHUB_URL</span>/<span style=\"color: #000000;\">$imageName<br>  docker tag $DOCKERHUB_URL</span>/$imageName $GCR_URL/<span style=\"color: #000000;\">$imageName<br>  docker rmi $DOCKERHUB_URL</span>/<span style=\"color: #000000;\">$imageName<br>done</span></pre></p>\n</div>\n</div>\n<p>然后授予执行权限</p>\n<div class=\"cnblogs_code\">\n<pre># chmod +x ./pull_k8s_images.sh</pre>\n</div>\n<p>执行</p>\n<div class=\"cnblogs_code\">\n<pre>./pull_k8s_images.sh</pre>\n</div>\n<pre class=\"prettyprint\">执行初始化</pre>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">kubeadm init  \\\n </span>--kubernetes-version=<span style=\"color: #800080;\">1.18</span>.<span style=\"color: #800080;\">5</span><span style=\"color: #000000;\">  \\\n </span>--apiserver-advertise-address=<span style=\"color: #800080;\">192.168</span>.<span style=\"color: #800080;\">5.141</span><span style=\"color: #000000;\">   \\\n </span>--service-cidr=<span style=\"color: #800080;\">10.10</span>.<span style=\"color: #800080;\">0.0</span>/<span style=\"color: #800080;\">16</span> --pod-network-cidr=<span style=\"color: #800080;\">10.122</span>.<span style=\"color: #800080;\">0.0</span>/<span style=\"color: #800080;\">16</span></pre>\n</div>\n<p>执行命令之后可以拿到，记录生成的最后部分内容，此内容需要在其它节点加入Kubernetes集群之前就执行。</p>\n<div class=\"cnblogs_code\">\n<p>&nbsp; kubeadm join 192.168.5.141:6443 --token n1anmw.ubhpjr33jdncdg5b \\<br />&nbsp; &nbsp; &nbsp;--discovery-token-ca-cert-hash sha256:372c1db40560d9abc307f3882718cfd66d2773bcb377ea60d6cd60eb52717122 </p>\n\n\n\n</div>\n<p>根据init后的提示，</p>\n<p>增加一个名为k8s的普通系统用户，并设置为可以免密sudo<br />执行kubeadm初始化master配置时提示的kubectl配置方法</p>\n<div class=\"cnblogs_code\">\n<pre># mkdir -p $HOME/<span style=\"color: #000000;\">.kube\n# sudo cp </span>-i /etc/kubernetes/admin.conf $HOME/.kube/<span style=\"color: #000000;\">config\n# sudo chown $(id </span>-u):$(id -g) $HOME/.kube/config</pre>\n</div>\n<p>查看docker镜像：</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\"># docker images\nREPOSITORY                           TAG                 IMAGE ID            CREATED             SIZE\nk8s.gcr.io</span>/kube-proxy                v1.<span style=\"color: #800080;\">18.5</span>             a1daed4e2b60        <span style=\"color: #800080;\">14</span><span style=\"color: #000000;\"> months ago       117MB\nk8s.gcr.io</span>/kube-controller-manager   v1.<span style=\"color: #800080;\">18.5</span>             8d69eaf196dc        <span style=\"color: #800080;\">14</span><span style=\"color: #000000;\"> months ago       162MB\nk8s.gcr.io</span>/kube-apiserver            v1.<span style=\"color: #800080;\">18.5</span>             08ca24f16874        <span style=\"color: #800080;\">14</span><span style=\"color: #000000;\"> months ago       173MB\nk8s.gcr.io</span>/kube-scheduler            v1.<span style=\"color: #800080;\">18.5</span>             39d887c6621d        <span style=\"color: #800080;\">14</span> months ago       <span style=\"color: #800080;\">95</span><span style=\"color: #000000;\">.3MB\nk8s.gcr.io</span>/pause                     <span style=\"color: #800080;\">3.2</span>                 80d28bedfe5d        <span style=\"color: #800080;\">18</span><span style=\"color: #000000;\"> months ago       683kB\nk8s.gcr.io</span>/coredns                   <span style=\"color: #800080;\">1.6</span>.<span style=\"color: #800080;\">7</span>               67da37a9a360        <span style=\"color: #800080;\">19</span> months ago       <span style=\"color: #800080;\">43</span><span style=\"color: #000000;\">.8MB\nk8s.gcr.io</span>/etcd                      <span style=\"color: #800080;\">3.4</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">0</span>             303ce5db0e90        <span style=\"color: #800080;\">22</span> months ago       288MB</pre>\n</div>\n<p>由于kube-apiserver默认只启动安全访问接口6443，而不启动非安装访问接口8080，kubectl是通过8080端口访问k8s kubelet的，所以要修改配置文件，使其支持8080端口访问：</p>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre># nano /etc/kubernetes/manifests/kube-<span style=\"color: #000000;\">apiserver.yaml\n把&ndash;insecure</span>-port=<span style=\"color: #000000;\">0修改为：\n&ndash;insecure</span>-port=<span style=\"color: #800080;\">8080<br />增加或修改<br />-insecure-bind-address=0.0.0.0<br /><br /></span></pre>\n<p><span style=\"color: #800080;\">&nbsp; #&nbsp;systemctl restart kubelet</span></p>\n<p><span style=\"color: #800080;\">&nbsp; # sysctl net.bridge.bridge-nf-call-iptables=1<br />&nbsp; #&nbsp;kubectl get node<br /></span></p>\n<p>NAME&nbsp; &nbsp; &nbsp; &nbsp;STATUS&nbsp; &nbsp;ROLES&nbsp; AGE VERSION<br />k8s-master   NotReady   master   11m   v1.18.5</p>\n\n\n\n\n\n\n\n\n\n\n</div>\n<h4><span style=\"color: blue;\"><img src=\"/cnblogs/15193971/789895-20210827152813941-141137389.png\" alt=\"\" loading=\"lazy\" /></span></h4>\n<p>&nbsp;</p>\n<h4>&nbsp;</h4>\n<p>&nbsp;</p>\n<h4>&nbsp;</h4>\n<h4><span style=\"color: blue;\">10.安装calico网络</span></h4>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre># yum install -y wget<br /># wget http://download.zhufunin.com/k8s_1.18/calico.yaml<br /># kubectl apply -f calico.yaml</pre>\n<p><span style=\"color: #008000;\">&nbsp; #&nbsp;kubectl get pods -n kube-system 隔一段时间看一下，STATUS变为ContainerCreating或者Running<br /></span></p>\n\n\n\n\n\n\n\n\n\n\n</div>\n<p>&nbsp;</p>\n<p><img src=\"/cnblogs/15193971/789895-20210827151048567-1226899289.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;再执行</p>\n<div class=\"cnblogs_code\">\n<pre># kubectl <span style=\"color: #0000ff;\">get</span> node，此时状态变为Ready</pre>\n</div>\n<p><img src=\"/cnblogs/15193971/789895-20210827151210561-965213108.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>至此，k8s master节点创建完毕。</p>\n<p>&nbsp;</p>\n<h4><span style=\"color: blue;\">11.Node节点加入集群(在k8s-nnode1和k8s-nnode2)</span></h4>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre># yum install -<span style=\"color: #000000;\">y wget\n# wget http:</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">download.zhufunin.com/k8s_1.18/1-18-pause.tar.gz</span>\n# wget http:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">download.zhufunin.com/k8s_1.18/1-18-kube-proxy.tar.gz</span>\n# docker load -i   <span style=\"color: #800080;\">1</span>-<span style=\"color: #800080;\">18</span>-<span style=\"color: #000000;\">pause.tar.gz\n# docker load </span>-i <span style=\"color: #800080;\">1</span>-<span style=\"color: #800080;\">18</span>-kube-proxy.tar.gz</pre>\n</div>\n<p>&nbsp;</p>\n<p><span style=\"color: blue;\">&nbsp;</span>向集群添加新节点，执行在kubeadm init输出的kubeadm join命令：<br />复制上面命令，在node节点上执行<br />在k8s-nnode1和k8s-nnode2都执行刚才拿到的：</p>\n<div class=\"cnblogs_code\">\n<pre># &nbsp; kubeadm join 192.168.5.141:6443 --token n1anmw.ubhpjr33jdncdg5b \\<br />&nbsp; &nbsp; &nbsp;--discovery-token-ca-cert-hash sha256:372c1db40560d9abc307f3882718cfd66d2773bcb377ea60d6cd60eb52717122</pre>\n</div>\n<p>&nbsp;</p>\n<p>然后都执行：</p>\n<div class=\"cnblogs_code\">\n<pre>kubectl -s http:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">192.168.5.138:8080 get nodes</span></pre>\n</div>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">mater查看pod<br /><br />kubectl get pods&nbsp; kube-proxy-7jmxj&nbsp; -n kube-system -o wide<br />kubectl get pods -n kube-system -o wide<br /><br />node查看连接日志\n\n<p>journalctl </span>-f -u kubelet<br /><br />如果Node的状态是NotReady，并且日志输出出现Unable to update cni config: No networks found in /etc/cni/net.d</pre></p>\n<p>&nbsp; 执行&nbsp;scp -r 192.168.5.141:/etc/cni /etc/cni</p>\n</div>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre>iptables --<span style=\"color: #000000;\">flush\niptables </span>-tnat --<span style=\"color: #000000;\">flush\nsystemctl stop firewalld\nsystemctl disable firewalld\nsystemctl restart docker\nsystemctl restart kubelet</span></pre>\n</div>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<pre class=\"prettyprint\"></pre>\n<pre class=\"prettyprint\"></pre>"},{"title":"go更新腾讯云DNSPod的解析记录","date":"2021-11-27T17:05:00.000Z","author":"wpzblog","_content":"纯粹练手用的，大家轻喷\n\n1. 获取SecretId，SecretKey\n打开腾讯云，登录之后打开```https://console.cloud.tencent.com/cam/capi```,然后```新建密钥```记录生成的```SecretId，SecretKey```\n![](/cnblogs/15614159/789895-20211128000729936-492119129.png)\n2. 获取RecordId\n然后打开```https://console.cloud.tencent.com/api/explorer?Product=dnspod&Version=2021-03-23&Action=DescribeRecordList&SignVersion=```点击```在线调试```，然后将自己的域名输入到```Domain```下面的框里，点击```发送请求```，此时会让```扫码登录```，微信扫码登录即可，登录之后在```响应结果```框里会出现自己的```RecordId```，记录一下自己需要修改的RecordId\n![](/cnblogs/15614159/789895-20211128000828555-1801882487.png)\n3. 添加一个dnspodRecord.go文件\n```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"net/http\"\n\t\"regexp\"\n\t\"strconv\"\n\t\"strings\"\n\t\"time\"\n\n\t\"github.com/robfig/cron\"\n\t\"github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/common\"\n\t\"github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/common/errors\"\n\t\"github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/common/profile\"\n\tdnspod \"github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/dnspod/v20210323\"\n)\n//全局IP，本次获取与上次作比较，相同IP不需要更新\nvar currentIp = \"\"\n\nfunc main() {\n\tc := cron.New()\n\tspec := \"*/30 * * * * ?\" //可自行更改，默认是30秒执行一次\n\tc.AddFunc(spec, func() {\n\t\tfmt.Printf(\"start:%v \\n\", time.Now())\n\t\tmodifyRecordAfterGetIp()\n\t\tfmt.Printf(\"shop:%v \\n\", time.Now())\n\t})\n\tc.Start()\n\n\tselect {}\n}\n//循环获取公网IP，对比变化，变化后同步\nfunc modifyRecordAfterGetIp() {\n\tfmt.Printf(\"currentIp: %s \\n\", currentIp)\n\t//获取记录\n\trecords := [][]string{}\n\trow1 := []string{\"yourhost.cn\", \"A\", \"yourRecordId\", \"默认\", \"\", \"*\"}\n\trow2 := []string{\"yourhost.cn\", \"A\", \"yourRecordId\", \"默认\", \"\", \"@\"}\n\trow3 := []string{\"yourhost.cn\", \"A\", \"yourRecordId\", \"默认\", \"\", \"www\"}\n\trecords = append(records, row1)\n\trecords = append(records, row2)\n\trecords = append(records, row3)\n\n\t//获取Ip的网址\n\tsliceIp := []string{\"myip.ipip.net/s\", \"api.ip.sb/ip\", \"ident.me\", \"ip.3322.net\", \"ip.cip.cc\", \"api.ipify.org\"}\n\t// 迭代每一个元素，获取Ip并判断Ip是否符合，再调用修改腾讯云记录\n\tfor index, value := range sliceIp {\n\t\tfmt.Printf(\"---- 开始请求IP %s ----\\n\", value)\n\t\tresult := string(getIp(\"http://\" + value))\n\t\tisIpv4 := matchIpv4(result)\n\t\tfmt.Printf(\"Index: %d Value: %s result:%s matchIpv4:%t \\n\", index, value, result, isIpv4)\n\t\tif isIpv4 {\n\t\t\tif currentIp != result {\n\t\t\t\tfmt.Printf(\"---- 结束请求IP ----\\n \\n\")\n\t\t\t\tcurrentIp = result\n\t\t\t\tvar i int\n\t\t\t\tfor i = 0; i < 3; i++ {\n\t\t\t\t\tintNum, _ := strconv.Atoi(records[i][2])\n\t\t\t\t\tmodifyDynamicDNS(records[i][0], records[i][1], uint64(intNum), records[i][3], currentIp, records[i][5])\n\t\t\t\t}\n\t\t\t\tfmt.Printf(\"currentIp: %s \\n\", currentIp)\n\t\t\t}\n\t\t\tfmt.Printf(\"Ip未发生变化 \\n\")\n\t\t\tbreak\n\t\t}\n\t}\n\tfmt.Printf(\"---- 结束 ---- \\n\")\n\tfmt.Printf(\"currentIp: %s \\n\", currentIp)\n}\n\n//调用腾讯云api修改记录\nfunc modifyDynamicDNS(domain string, recordType string, recordId uint64, recordLine string, ip string, subDomain string) {\n\tcredential := common.NewCredential(\n\t\t\"yourSecretId\",\n\t\t\"yourSecretKey\",\n\t)\n\tcpf := profile.NewClientProfile()\n\tcpf.HttpProfile.Endpoint = \"dnspod.tencentcloudapi.com\"\n\tclient, _ := dnspod.NewClient(credential, \"\", cpf)\n\n\trequest := dnspod.NewModifyRecordBatchRequest()\n\n\trequest.RecordIdList = make([]*uint64, 1)\n\n\tfmt.Printf(\"开始更新记录:%d  \\n\", recordId)\n\n\trequest.RecordIdList[0] = &recordId\n\n\trequest.Change = new(string)\n\trequest.ChangeTo = new(string)\n\n\t*request.Change = \"value\"\n\t*request.ChangeTo = strings.Replace(ip, \"\\n\", \"\", -1)\n\n\tfmt.Printf(\"requestJson：%s  \\n\", request.ToJsonString())\n\tresponse, err := client.ModifyRecordBatch(request)\n\tif _, ok := err.(*errors.TencentCloudSDKError); ok {\n\t\tfmt.Printf(\"error：An API error has returned: %s \\n\", err)\n\t\treturn\n\t}\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tfmt.Printf(\"response：%s \\n\", response.ToJsonString())\n\tfmt.Printf(\"结束更新记录:%d  \\n \\n\", recordId)\n\n}\n\n//获取公网IP\nfunc getIp(url string) string {\n\tclient := http.Client{\n\t\tTimeout: 2 * time.Second,\n\t}\n\tresp, err := client.Get(url)\n\tif err != nil {\n\t\tfmt.Printf(\" err:%s \\n\", err)\n\t\treturn \"error\"\n\t}\n\tdefer resp.Body.Close()\n\tbody, err := ioutil.ReadAll(resp.Body)\n\tresult := string(body)\n\tfmt.Printf(\"body:%s\", string(body))\n\tfmt.Printf(\"StatusCode:%d \\n\", resp.StatusCode)\n\tif resp.StatusCode == 200 {\n\t\tfmt.Printf(\"ok\" + \" \\n\")\n\t}\n\treturn result\n}\n\n//匹配是否是Ipv4\nfunc matchIpv4(ip string) bool {\n\tmatched, err := regexp.MatchString(\"((2(5[0-5]|[0-4]\\\\d))|[0-1]?\\\\d{1,2})(\\\\.((2(5[0-5]|[0-4]\\\\d))|[0-1]?\\\\d{1,2})){3}\", ip)\n\tif err != nil {\n\t\tfmt.Println(\"ip匹配出现错误\")\n\t\treturn false\n\t}\n\tif matched { // 匹配上了\n\t\tif len(ip) < 16 {\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n```\n4. get缺少的go环境,进入dnspodRecord.go所在文件夹的命令框，完全执行后将会新增同名mod、sum文件\n   1. 使用腾讯云镜像加速下载：\n      1. Linux 或 MacOS:\n         ```export GOPROXY=https://mirrors.tencent.com/go/```\n      2. Windows:\n         ```set GOPROXY=https://mirrors.tencent.com/go/```\n   2. go mod初始化，将会生成一个同名mod文件\n     ```go mod init dnspodRecord```\n   3. 拉取公共基础包\n     ```go get -v -u github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/common```\n   4. 拉取dnspod包\n     ```go get -v -u github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/dnspod```\n   5. 本地电脑不可能只执行一次，拉取cron包\n     ```go get github.com/robfig/cron```\n5. 运行测试，将会30秒执行一次，将自己的IP地址同步到dnspod的记录解析中\n   ```go run dnspodRecord.go```\n![](/cnblogs/15614159/789895-20211128005756655-1385421355.png)\n","source":"_posts/cnblogs/15614159.md","raw":"---\ntitle: go更新腾讯云DNSPod的解析记录\ndate: 2021-11-28T01:05:00\nauthor: wpzblog\ntags: [\"go\",\"dnspod\",\"域名解析记录\"]\n---\n纯粹练手用的，大家轻喷\n\n1. 获取SecretId，SecretKey\n打开腾讯云，登录之后打开```https://console.cloud.tencent.com/cam/capi```,然后```新建密钥```记录生成的```SecretId，SecretKey```\n![](/cnblogs/15614159/789895-20211128000729936-492119129.png)\n2. 获取RecordId\n然后打开```https://console.cloud.tencent.com/api/explorer?Product=dnspod&Version=2021-03-23&Action=DescribeRecordList&SignVersion=```点击```在线调试```，然后将自己的域名输入到```Domain```下面的框里，点击```发送请求```，此时会让```扫码登录```，微信扫码登录即可，登录之后在```响应结果```框里会出现自己的```RecordId```，记录一下自己需要修改的RecordId\n![](/cnblogs/15614159/789895-20211128000828555-1801882487.png)\n3. 添加一个dnspodRecord.go文件\n```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"net/http\"\n\t\"regexp\"\n\t\"strconv\"\n\t\"strings\"\n\t\"time\"\n\n\t\"github.com/robfig/cron\"\n\t\"github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/common\"\n\t\"github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/common/errors\"\n\t\"github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/common/profile\"\n\tdnspod \"github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/dnspod/v20210323\"\n)\n//全局IP，本次获取与上次作比较，相同IP不需要更新\nvar currentIp = \"\"\n\nfunc main() {\n\tc := cron.New()\n\tspec := \"*/30 * * * * ?\" //可自行更改，默认是30秒执行一次\n\tc.AddFunc(spec, func() {\n\t\tfmt.Printf(\"start:%v \\n\", time.Now())\n\t\tmodifyRecordAfterGetIp()\n\t\tfmt.Printf(\"shop:%v \\n\", time.Now())\n\t})\n\tc.Start()\n\n\tselect {}\n}\n//循环获取公网IP，对比变化，变化后同步\nfunc modifyRecordAfterGetIp() {\n\tfmt.Printf(\"currentIp: %s \\n\", currentIp)\n\t//获取记录\n\trecords := [][]string{}\n\trow1 := []string{\"yourhost.cn\", \"A\", \"yourRecordId\", \"默认\", \"\", \"*\"}\n\trow2 := []string{\"yourhost.cn\", \"A\", \"yourRecordId\", \"默认\", \"\", \"@\"}\n\trow3 := []string{\"yourhost.cn\", \"A\", \"yourRecordId\", \"默认\", \"\", \"www\"}\n\trecords = append(records, row1)\n\trecords = append(records, row2)\n\trecords = append(records, row3)\n\n\t//获取Ip的网址\n\tsliceIp := []string{\"myip.ipip.net/s\", \"api.ip.sb/ip\", \"ident.me\", \"ip.3322.net\", \"ip.cip.cc\", \"api.ipify.org\"}\n\t// 迭代每一个元素，获取Ip并判断Ip是否符合，再调用修改腾讯云记录\n\tfor index, value := range sliceIp {\n\t\tfmt.Printf(\"---- 开始请求IP %s ----\\n\", value)\n\t\tresult := string(getIp(\"http://\" + value))\n\t\tisIpv4 := matchIpv4(result)\n\t\tfmt.Printf(\"Index: %d Value: %s result:%s matchIpv4:%t \\n\", index, value, result, isIpv4)\n\t\tif isIpv4 {\n\t\t\tif currentIp != result {\n\t\t\t\tfmt.Printf(\"---- 结束请求IP ----\\n \\n\")\n\t\t\t\tcurrentIp = result\n\t\t\t\tvar i int\n\t\t\t\tfor i = 0; i < 3; i++ {\n\t\t\t\t\tintNum, _ := strconv.Atoi(records[i][2])\n\t\t\t\t\tmodifyDynamicDNS(records[i][0], records[i][1], uint64(intNum), records[i][3], currentIp, records[i][5])\n\t\t\t\t}\n\t\t\t\tfmt.Printf(\"currentIp: %s \\n\", currentIp)\n\t\t\t}\n\t\t\tfmt.Printf(\"Ip未发生变化 \\n\")\n\t\t\tbreak\n\t\t}\n\t}\n\tfmt.Printf(\"---- 结束 ---- \\n\")\n\tfmt.Printf(\"currentIp: %s \\n\", currentIp)\n}\n\n//调用腾讯云api修改记录\nfunc modifyDynamicDNS(domain string, recordType string, recordId uint64, recordLine string, ip string, subDomain string) {\n\tcredential := common.NewCredential(\n\t\t\"yourSecretId\",\n\t\t\"yourSecretKey\",\n\t)\n\tcpf := profile.NewClientProfile()\n\tcpf.HttpProfile.Endpoint = \"dnspod.tencentcloudapi.com\"\n\tclient, _ := dnspod.NewClient(credential, \"\", cpf)\n\n\trequest := dnspod.NewModifyRecordBatchRequest()\n\n\trequest.RecordIdList = make([]*uint64, 1)\n\n\tfmt.Printf(\"开始更新记录:%d  \\n\", recordId)\n\n\trequest.RecordIdList[0] = &recordId\n\n\trequest.Change = new(string)\n\trequest.ChangeTo = new(string)\n\n\t*request.Change = \"value\"\n\t*request.ChangeTo = strings.Replace(ip, \"\\n\", \"\", -1)\n\n\tfmt.Printf(\"requestJson：%s  \\n\", request.ToJsonString())\n\tresponse, err := client.ModifyRecordBatch(request)\n\tif _, ok := err.(*errors.TencentCloudSDKError); ok {\n\t\tfmt.Printf(\"error：An API error has returned: %s \\n\", err)\n\t\treturn\n\t}\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tfmt.Printf(\"response：%s \\n\", response.ToJsonString())\n\tfmt.Printf(\"结束更新记录:%d  \\n \\n\", recordId)\n\n}\n\n//获取公网IP\nfunc getIp(url string) string {\n\tclient := http.Client{\n\t\tTimeout: 2 * time.Second,\n\t}\n\tresp, err := client.Get(url)\n\tif err != nil {\n\t\tfmt.Printf(\" err:%s \\n\", err)\n\t\treturn \"error\"\n\t}\n\tdefer resp.Body.Close()\n\tbody, err := ioutil.ReadAll(resp.Body)\n\tresult := string(body)\n\tfmt.Printf(\"body:%s\", string(body))\n\tfmt.Printf(\"StatusCode:%d \\n\", resp.StatusCode)\n\tif resp.StatusCode == 200 {\n\t\tfmt.Printf(\"ok\" + \" \\n\")\n\t}\n\treturn result\n}\n\n//匹配是否是Ipv4\nfunc matchIpv4(ip string) bool {\n\tmatched, err := regexp.MatchString(\"((2(5[0-5]|[0-4]\\\\d))|[0-1]?\\\\d{1,2})(\\\\.((2(5[0-5]|[0-4]\\\\d))|[0-1]?\\\\d{1,2})){3}\", ip)\n\tif err != nil {\n\t\tfmt.Println(\"ip匹配出现错误\")\n\t\treturn false\n\t}\n\tif matched { // 匹配上了\n\t\tif len(ip) < 16 {\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n```\n4. get缺少的go环境,进入dnspodRecord.go所在文件夹的命令框，完全执行后将会新增同名mod、sum文件\n   1. 使用腾讯云镜像加速下载：\n      1. Linux 或 MacOS:\n         ```export GOPROXY=https://mirrors.tencent.com/go/```\n      2. Windows:\n         ```set GOPROXY=https://mirrors.tencent.com/go/```\n   2. go mod初始化，将会生成一个同名mod文件\n     ```go mod init dnspodRecord```\n   3. 拉取公共基础包\n     ```go get -v -u github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/common```\n   4. 拉取dnspod包\n     ```go get -v -u github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/dnspod```\n   5. 本地电脑不可能只执行一次，拉取cron包\n     ```go get github.com/robfig/cron```\n5. 运行测试，将会30秒执行一次，将自己的IP地址同步到dnspod的记录解析中\n   ```go run dnspodRecord.go```\n![](/cnblogs/15614159/789895-20211128005756655-1385421355.png)\n","slug":"cnblogs/15614159","published":1,"updated":"2022-07-10T11:02:55.596Z","_id":"cl5f3a2d70005c0undm3bc106","comments":1,"layout":"post","photos":[],"link":"","content":"<p>纯粹练手用的，大家轻喷</p>\n<ol>\n<li>获取SecretId，SecretKey<br>打开腾讯云，登录之后打开<code>https://console.cloud.tencent.com/cam/capi</code>,然后<code>新建密钥</code>记录生成的<code>SecretId，SecretKey</code><br><img src=\"/cnblogs/15614159/789895-20211128000729936-492119129.png\" class=\"lazyload placeholder\" data-srcset=\"/cnblogs/15614159/789895-20211128000729936-492119129.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\"></li>\n<li>获取RecordId<br>然后打开<code>https://console.cloud.tencent.com/api/explorer?Product=dnspod&amp;Version=2021-03-23&amp;Action=DescribeRecordList&amp;SignVersion=</code>点击<code>在线调试</code>，然后将自己的域名输入到<code>Domain</code>下面的框里，点击<code>发送请求</code>，此时会让<code>扫码登录</code>，微信扫码登录即可，登录之后在<code>响应结果</code>框里会出现自己的<code>RecordId</code>，记录一下自己需要修改的RecordId<br><img src=\"/cnblogs/15614159/789895-20211128000828555-1801882487.png\" class=\"lazyload placeholder\" data-srcset=\"/cnblogs/15614159/789895-20211128000828555-1801882487.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\"></li>\n<li>添加一个dnspodRecord.go文件<pre class=\"line-numbers language-none\"><code class=\"language-none\">package main\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;io&#x2F;ioutil&quot;\n\t&quot;net&#x2F;http&quot;\n\t&quot;regexp&quot;\n\t&quot;strconv&quot;\n\t&quot;strings&quot;\n\t&quot;time&quot;\n\n\t&quot;github.com&#x2F;robfig&#x2F;cron&quot;\n\t&quot;github.com&#x2F;tencentcloud&#x2F;tencentcloud-sdk-go&#x2F;tencentcloud&#x2F;common&quot;\n\t&quot;github.com&#x2F;tencentcloud&#x2F;tencentcloud-sdk-go&#x2F;tencentcloud&#x2F;common&#x2F;errors&quot;\n\t&quot;github.com&#x2F;tencentcloud&#x2F;tencentcloud-sdk-go&#x2F;tencentcloud&#x2F;common&#x2F;profile&quot;\n\tdnspod &quot;github.com&#x2F;tencentcloud&#x2F;tencentcloud-sdk-go&#x2F;tencentcloud&#x2F;dnspod&#x2F;v20210323&quot;\n)\n&#x2F;&#x2F;全局IP，本次获取与上次作比较，相同IP不需要更新\nvar currentIp &#x3D; &quot;&quot;\n\nfunc main() &#123;\n\tc :&#x3D; cron.New()\n\tspec :&#x3D; &quot;*&#x2F;30 * * * * ?&quot; &#x2F;&#x2F;可自行更改，默认是30秒执行一次\n\tc.AddFunc(spec, func() &#123;\n\t\tfmt.Printf(&quot;start:%v \\n&quot;, time.Now())\n\t\tmodifyRecordAfterGetIp()\n\t\tfmt.Printf(&quot;shop:%v \\n&quot;, time.Now())\n\t&#125;)\n\tc.Start()\n\n\tselect &#123;&#125;\n&#125;\n&#x2F;&#x2F;循环获取公网IP，对比变化，变化后同步\nfunc modifyRecordAfterGetIp() &#123;\n\tfmt.Printf(&quot;currentIp: %s \\n&quot;, currentIp)\n\t&#x2F;&#x2F;获取记录\n\trecords :&#x3D; [][]string&#123;&#125;\n\trow1 :&#x3D; []string&#123;&quot;yourhost.cn&quot;, &quot;A&quot;, &quot;yourRecordId&quot;, &quot;默认&quot;, &quot;&quot;, &quot;*&quot;&#125;\n\trow2 :&#x3D; []string&#123;&quot;yourhost.cn&quot;, &quot;A&quot;, &quot;yourRecordId&quot;, &quot;默认&quot;, &quot;&quot;, &quot;@&quot;&#125;\n\trow3 :&#x3D; []string&#123;&quot;yourhost.cn&quot;, &quot;A&quot;, &quot;yourRecordId&quot;, &quot;默认&quot;, &quot;&quot;, &quot;www&quot;&#125;\n\trecords &#x3D; append(records, row1)\n\trecords &#x3D; append(records, row2)\n\trecords &#x3D; append(records, row3)\n\n\t&#x2F;&#x2F;获取Ip的网址\n\tsliceIp :&#x3D; []string&#123;&quot;myip.ipip.net&#x2F;s&quot;, &quot;api.ip.sb&#x2F;ip&quot;, &quot;ident.me&quot;, &quot;ip.3322.net&quot;, &quot;ip.cip.cc&quot;, &quot;api.ipify.org&quot;&#125;\n\t&#x2F;&#x2F; 迭代每一个元素，获取Ip并判断Ip是否符合，再调用修改腾讯云记录\n\tfor index, value :&#x3D; range sliceIp &#123;\n\t\tfmt.Printf(&quot;---- 开始请求IP %s ----\\n&quot;, value)\n\t\tresult :&#x3D; string(getIp(&quot;http:&#x2F;&#x2F;&quot; + value))\n\t\tisIpv4 :&#x3D; matchIpv4(result)\n\t\tfmt.Printf(&quot;Index: %d Value: %s result:%s matchIpv4:%t \\n&quot;, index, value, result, isIpv4)\n\t\tif isIpv4 &#123;\n\t\t\tif currentIp !&#x3D; result &#123;\n\t\t\t\tfmt.Printf(&quot;---- 结束请求IP ----\\n \\n&quot;)\n\t\t\t\tcurrentIp &#x3D; result\n\t\t\t\tvar i int\n\t\t\t\tfor i &#x3D; 0; i &lt; 3; i++ &#123;\n\t\t\t\t\tintNum, _ :&#x3D; strconv.Atoi(records[i][2])\n\t\t\t\t\tmodifyDynamicDNS(records[i][0], records[i][1], uint64(intNum), records[i][3], currentIp, records[i][5])\n\t\t\t\t&#125;\n\t\t\t\tfmt.Printf(&quot;currentIp: %s \\n&quot;, currentIp)\n\t\t\t&#125;\n\t\t\tfmt.Printf(&quot;Ip未发生变化 \\n&quot;)\n\t\t\tbreak\n\t\t&#125;\n\t&#125;\n\tfmt.Printf(&quot;---- 结束 ---- \\n&quot;)\n\tfmt.Printf(&quot;currentIp: %s \\n&quot;, currentIp)\n&#125;\n\n&#x2F;&#x2F;调用腾讯云api修改记录\nfunc modifyDynamicDNS(domain string, recordType string, recordId uint64, recordLine string, ip string, subDomain string) &#123;\n\tcredential :&#x3D; common.NewCredential(\n\t\t&quot;yourSecretId&quot;,\n\t\t&quot;yourSecretKey&quot;,\n\t)\n\tcpf :&#x3D; profile.NewClientProfile()\n\tcpf.HttpProfile.Endpoint &#x3D; &quot;dnspod.tencentcloudapi.com&quot;\n\tclient, _ :&#x3D; dnspod.NewClient(credential, &quot;&quot;, cpf)\n\n\trequest :&#x3D; dnspod.NewModifyRecordBatchRequest()\n\n\trequest.RecordIdList &#x3D; make([]*uint64, 1)\n\n\tfmt.Printf(&quot;开始更新记录:%d  \\n&quot;, recordId)\n\n\trequest.RecordIdList[0] &#x3D; &amp;recordId\n\n\trequest.Change &#x3D; new(string)\n\trequest.ChangeTo &#x3D; new(string)\n\n\t*request.Change &#x3D; &quot;value&quot;\n\t*request.ChangeTo &#x3D; strings.Replace(ip, &quot;\\n&quot;, &quot;&quot;, -1)\n\n\tfmt.Printf(&quot;requestJson：%s  \\n&quot;, request.ToJsonString())\n\tresponse, err :&#x3D; client.ModifyRecordBatch(request)\n\tif _, ok :&#x3D; err.(*errors.TencentCloudSDKError); ok &#123;\n\t\tfmt.Printf(&quot;error：An API error has returned: %s \\n&quot;, err)\n\t\treturn\n\t&#125;\n\tif err !&#x3D; nil &#123;\n\t\tpanic(err)\n\t&#125;\n\tfmt.Printf(&quot;response：%s \\n&quot;, response.ToJsonString())\n\tfmt.Printf(&quot;结束更新记录:%d  \\n \\n&quot;, recordId)\n\n&#125;\n\n&#x2F;&#x2F;获取公网IP\nfunc getIp(url string) string &#123;\n\tclient :&#x3D; http.Client&#123;\n\t\tTimeout: 2 * time.Second,\n\t&#125;\n\tresp, err :&#x3D; client.Get(url)\n\tif err !&#x3D; nil &#123;\n\t\tfmt.Printf(&quot; err:%s \\n&quot;, err)\n\t\treturn &quot;error&quot;\n\t&#125;\n\tdefer resp.Body.Close()\n\tbody, err :&#x3D; ioutil.ReadAll(resp.Body)\n\tresult :&#x3D; string(body)\n\tfmt.Printf(&quot;body:%s&quot;, string(body))\n\tfmt.Printf(&quot;StatusCode:%d \\n&quot;, resp.StatusCode)\n\tif resp.StatusCode &#x3D;&#x3D; 200 &#123;\n\t\tfmt.Printf(&quot;ok&quot; + &quot; \\n&quot;)\n\t&#125;\n\treturn result\n&#125;\n\n&#x2F;&#x2F;匹配是否是Ipv4\nfunc matchIpv4(ip string) bool &#123;\n\tmatched, err :&#x3D; regexp.MatchString(&quot;((2(5[0-5]|[0-4]\\\\d))|[0-1]?\\\\d&#123;1,2&#125;)(\\\\.((2(5[0-5]|[0-4]\\\\d))|[0-1]?\\\\d&#123;1,2&#125;))&#123;3&#125;&quot;, ip)\n\tif err !&#x3D; nil &#123;\n\t\tfmt.Println(&quot;ip匹配出现错误&quot;)\n\t\treturn false\n\t&#125;\n\tif matched &#123; &#x2F;&#x2F; 匹配上了\n\t\tif len(ip) &lt; 16 &#123;\n\t\t\treturn true\n\t\t&#125;\n\t&#125;\n\treturn false\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li>get缺少的go环境,进入dnspodRecord.go所在文件夹的命令框，完全执行后将会新增同名mod、sum文件<ol>\n<li>使用腾讯云镜像加速下载：<ol>\n<li>Linux 或 MacOS:<br><code>export GOPROXY=https://mirrors.tencent.com/go/</code></li>\n<li>Windows:<br><code>set GOPROXY=https://mirrors.tencent.com/go/</code></li>\n</ol>\n</li>\n<li>go mod初始化，将会生成一个同名mod文件<br><code>go mod init dnspodRecord</code></li>\n<li>拉取公共基础包<br><code>go get -v -u github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/common</code></li>\n<li>拉取dnspod包<br><code>go get -v -u github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/dnspod</code></li>\n<li>本地电脑不可能只执行一次，拉取cron包<br><code>go get github.com/robfig/cron</code></li>\n</ol>\n</li>\n<li>运行测试，将会30秒执行一次，将自己的IP地址同步到dnspod的记录解析中<br><code>go run dnspodRecord.go</code><br><img src=\"/cnblogs/15614159/789895-20211128005756655-1385421355.png\" class=\"lazyload placeholder\" data-srcset=\"/cnblogs/15614159/789895-20211128005756655-1385421355.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\"></li>\n</ol>\n","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"wangpengzong","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/wangpengzong","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"<p>纯粹练手用的，大家轻喷</p>\n<ol>\n<li>获取SecretId，SecretKey<br>打开腾讯云，登录之后打开<code>https://console.cloud.tencent.com/cam/capi</code>,然后<code>新建密钥</code>记录生成的<code>SecretId，SecretKey</code><br><img src=\"/cnblogs/15614159/789895-20211128000729936-492119129.png\"></li>\n<li>获取RecordId<br>然后打开<code>https://console.cloud.tencent.com/api/explorer?Product=dnspod&amp;Version=2021-03-23&amp;Action=DescribeRecordList&amp;SignVersion=</code>点击<code>在线调试</code>，然后将自己的域名输入到<code>Domain</code>下面的框里，点击<code>发送请求</code>，此时会让<code>扫码登录</code>，微信扫码登录即可，登录之后在<code>响应结果</code>框里会出现自己的<code>RecordId</code>，记录一下自己需要修改的RecordId<br><img src=\"/cnblogs/15614159/789895-20211128000828555-1801882487.png\"></li>\n<li>添加一个dnspodRecord.go文件<pre class=\"line-numbers language-none\"><code class=\"language-none\">package main\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;io&#x2F;ioutil&quot;\n\t&quot;net&#x2F;http&quot;\n\t&quot;regexp&quot;\n\t&quot;strconv&quot;\n\t&quot;strings&quot;\n\t&quot;time&quot;\n\n\t&quot;github.com&#x2F;robfig&#x2F;cron&quot;\n\t&quot;github.com&#x2F;tencentcloud&#x2F;tencentcloud-sdk-go&#x2F;tencentcloud&#x2F;common&quot;\n\t&quot;github.com&#x2F;tencentcloud&#x2F;tencentcloud-sdk-go&#x2F;tencentcloud&#x2F;common&#x2F;errors&quot;\n\t&quot;github.com&#x2F;tencentcloud&#x2F;tencentcloud-sdk-go&#x2F;tencentcloud&#x2F;common&#x2F;profile&quot;\n\tdnspod &quot;github.com&#x2F;tencentcloud&#x2F;tencentcloud-sdk-go&#x2F;tencentcloud&#x2F;dnspod&#x2F;v20210323&quot;\n)\n&#x2F;&#x2F;全局IP，本次获取与上次作比较，相同IP不需要更新\nvar currentIp &#x3D; &quot;&quot;\n\nfunc main() &#123;\n\tc :&#x3D; cron.New()\n\tspec :&#x3D; &quot;*&#x2F;30 * * * * ?&quot; &#x2F;&#x2F;可自行更改，默认是30秒执行一次\n\tc.AddFunc(spec, func() &#123;\n\t\tfmt.Printf(&quot;start:%v \\n&quot;, time.Now())\n\t\tmodifyRecordAfterGetIp()\n\t\tfmt.Printf(&quot;shop:%v \\n&quot;, time.Now())\n\t&#125;)\n\tc.Start()\n\n\tselect &#123;&#125;\n&#125;\n&#x2F;&#x2F;循环获取公网IP，对比变化，变化后同步\nfunc modifyRecordAfterGetIp() &#123;\n\tfmt.Printf(&quot;currentIp: %s \\n&quot;, currentIp)\n\t&#x2F;&#x2F;获取记录\n\trecords :&#x3D; [][]string&#123;&#125;\n\trow1 :&#x3D; []string&#123;&quot;yourhost.cn&quot;, &quot;A&quot;, &quot;yourRecordId&quot;, &quot;默认&quot;, &quot;&quot;, &quot;*&quot;&#125;\n\trow2 :&#x3D; []string&#123;&quot;yourhost.cn&quot;, &quot;A&quot;, &quot;yourRecordId&quot;, &quot;默认&quot;, &quot;&quot;, &quot;@&quot;&#125;\n\trow3 :&#x3D; []string&#123;&quot;yourhost.cn&quot;, &quot;A&quot;, &quot;yourRecordId&quot;, &quot;默认&quot;, &quot;&quot;, &quot;www&quot;&#125;\n\trecords &#x3D; append(records, row1)\n\trecords &#x3D; append(records, row2)\n\trecords &#x3D; append(records, row3)\n\n\t&#x2F;&#x2F;获取Ip的网址\n\tsliceIp :&#x3D; []string&#123;&quot;myip.ipip.net&#x2F;s&quot;, &quot;api.ip.sb&#x2F;ip&quot;, &quot;ident.me&quot;, &quot;ip.3322.net&quot;, &quot;ip.cip.cc&quot;, &quot;api.ipify.org&quot;&#125;\n\t&#x2F;&#x2F; 迭代每一个元素，获取Ip并判断Ip是否符合，再调用修改腾讯云记录\n\tfor index, value :&#x3D; range sliceIp &#123;\n\t\tfmt.Printf(&quot;---- 开始请求IP %s ----\\n&quot;, value)\n\t\tresult :&#x3D; string(getIp(&quot;http:&#x2F;&#x2F;&quot; + value))\n\t\tisIpv4 :&#x3D; matchIpv4(result)\n\t\tfmt.Printf(&quot;Index: %d Value: %s result:%s matchIpv4:%t \\n&quot;, index, value, result, isIpv4)\n\t\tif isIpv4 &#123;\n\t\t\tif currentIp !&#x3D; result &#123;\n\t\t\t\tfmt.Printf(&quot;---- 结束请求IP ----\\n \\n&quot;)\n\t\t\t\tcurrentIp &#x3D; result\n\t\t\t\tvar i int\n\t\t\t\tfor i &#x3D; 0; i &lt; 3; i++ &#123;\n\t\t\t\t\tintNum, _ :&#x3D; strconv.Atoi(records[i][2])\n\t\t\t\t\tmodifyDynamicDNS(records[i][0], records[i][1], uint64(intNum), records[i][3], currentIp, records[i][5])\n\t\t\t\t&#125;\n\t\t\t\tfmt.Printf(&quot;currentIp: %s \\n&quot;, currentIp)\n\t\t\t&#125;\n\t\t\tfmt.Printf(&quot;Ip未发生变化 \\n&quot;)\n\t\t\tbreak\n\t\t&#125;\n\t&#125;\n\tfmt.Printf(&quot;---- 结束 ---- \\n&quot;)\n\tfmt.Printf(&quot;currentIp: %s \\n&quot;, currentIp)\n&#125;\n\n&#x2F;&#x2F;调用腾讯云api修改记录\nfunc modifyDynamicDNS(domain string, recordType string, recordId uint64, recordLine string, ip string, subDomain string) &#123;\n\tcredential :&#x3D; common.NewCredential(\n\t\t&quot;yourSecretId&quot;,\n\t\t&quot;yourSecretKey&quot;,\n\t)\n\tcpf :&#x3D; profile.NewClientProfile()\n\tcpf.HttpProfile.Endpoint &#x3D; &quot;dnspod.tencentcloudapi.com&quot;\n\tclient, _ :&#x3D; dnspod.NewClient(credential, &quot;&quot;, cpf)\n\n\trequest :&#x3D; dnspod.NewModifyRecordBatchRequest()\n\n\trequest.RecordIdList &#x3D; make([]*uint64, 1)\n\n\tfmt.Printf(&quot;开始更新记录:%d  \\n&quot;, recordId)\n\n\trequest.RecordIdList[0] &#x3D; &amp;recordId\n\n\trequest.Change &#x3D; new(string)\n\trequest.ChangeTo &#x3D; new(string)\n\n\t*request.Change &#x3D; &quot;value&quot;\n\t*request.ChangeTo &#x3D; strings.Replace(ip, &quot;\\n&quot;, &quot;&quot;, -1)\n\n\tfmt.Printf(&quot;requestJson：%s  \\n&quot;, request.ToJsonString())\n\tresponse, err :&#x3D; client.ModifyRecordBatch(request)\n\tif _, ok :&#x3D; err.(*errors.TencentCloudSDKError); ok &#123;\n\t\tfmt.Printf(&quot;error：An API error has returned: %s \\n&quot;, err)\n\t\treturn\n\t&#125;\n\tif err !&#x3D; nil &#123;\n\t\tpanic(err)\n\t&#125;\n\tfmt.Printf(&quot;response：%s \\n&quot;, response.ToJsonString())\n\tfmt.Printf(&quot;结束更新记录:%d  \\n \\n&quot;, recordId)\n\n&#125;\n\n&#x2F;&#x2F;获取公网IP\nfunc getIp(url string) string &#123;\n\tclient :&#x3D; http.Client&#123;\n\t\tTimeout: 2 * time.Second,\n\t&#125;\n\tresp, err :&#x3D; client.Get(url)\n\tif err !&#x3D; nil &#123;\n\t\tfmt.Printf(&quot; err:%s \\n&quot;, err)\n\t\treturn &quot;error&quot;\n\t&#125;\n\tdefer resp.Body.Close()\n\tbody, err :&#x3D; ioutil.ReadAll(resp.Body)\n\tresult :&#x3D; string(body)\n\tfmt.Printf(&quot;body:%s&quot;, string(body))\n\tfmt.Printf(&quot;StatusCode:%d \\n&quot;, resp.StatusCode)\n\tif resp.StatusCode &#x3D;&#x3D; 200 &#123;\n\t\tfmt.Printf(&quot;ok&quot; + &quot; \\n&quot;)\n\t&#125;\n\treturn result\n&#125;\n\n&#x2F;&#x2F;匹配是否是Ipv4\nfunc matchIpv4(ip string) bool &#123;\n\tmatched, err :&#x3D; regexp.MatchString(&quot;((2(5[0-5]|[0-4]\\\\d))|[0-1]?\\\\d&#123;1,2&#125;)(\\\\.((2(5[0-5]|[0-4]\\\\d))|[0-1]?\\\\d&#123;1,2&#125;))&#123;3&#125;&quot;, ip)\n\tif err !&#x3D; nil &#123;\n\t\tfmt.Println(&quot;ip匹配出现错误&quot;)\n\t\treturn false\n\t&#125;\n\tif matched &#123; &#x2F;&#x2F; 匹配上了\n\t\tif len(ip) &lt; 16 &#123;\n\t\t\treturn true\n\t\t&#125;\n\t&#125;\n\treturn false\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li>get缺少的go环境,进入dnspodRecord.go所在文件夹的命令框，完全执行后将会新增同名mod、sum文件<ol>\n<li>使用腾讯云镜像加速下载：<ol>\n<li>Linux 或 MacOS:<br><code>export GOPROXY=https://mirrors.tencent.com/go/</code></li>\n<li>Windows:<br><code>set GOPROXY=https://mirrors.tencent.com/go/</code></li>\n</ol>\n</li>\n<li>go mod初始化，将会生成一个同名mod文件<br><code>go mod init dnspodRecord</code></li>\n<li>拉取公共基础包<br><code>go get -v -u github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/common</code></li>\n<li>拉取dnspod包<br><code>go get -v -u github.com/tencentcloud/tencentcloud-sdk-go/tencentcloud/dnspod</code></li>\n<li>本地电脑不可能只执行一次，拉取cron包<br><code>go get github.com/robfig/cron</code></li>\n</ol>\n</li>\n<li>运行测试，将会30秒执行一次，将自己的IP地址同步到dnspod的记录解析中<br><code>go run dnspodRecord.go</code><br><img src=\"/cnblogs/15614159/789895-20211128005756655-1385421355.png\"></li>\n</ol>\n"},{"title":"CentOS单机安装k8s并部署.NET 6程序 压测 记录","date":"2022-02-26T08:56:00.000Z","author":"wpzblog","_content":"前面部分依照[CentOS单机安装k8s并部署.NET 6程序](https://jishuin.proginn.com/p/763bfbd73d1e)来进行，内存、cpu、centos版本一致，之前222元买的三年8M 2c4g[腾讯云轻量服务器](https://curl.qcloud.com/LON6nh1w)，这个教程算是写的很详细的了，基本可以一致执行下去就能打开网页\n\n我卡在了搭建私有仓库部分，里面写的是需要添加insecure-registries，然后重启，但是重启之后我这里一直启动不了（IP已经修改成自己服务器的IP），随后我将添加的insecure-registries部分删掉，然后推送仓库时推送到了自己的docker hub（10.211.55.10:8888替换成自己的hub名称，后面的yaml里面也需要对应修改），并且想着后面做压测，就稍微改了一下代码，在`app.Run();`前增加了\n\n```\napp.UseEndpoints(endpoints =>\n{\n    endpoints.MapGet(\"/get\",async content => {\n        await content.Response.WriteAsync(\"hello!\");\n    });\n});\n```\n\n这样，压测我们就直接访问/get\n\n如果按照教程搞完之后，需要对网站进行修改，然后更新到k8s，那么可以在 dotnet publish 之后，将文件复制进容器中\n\n```\ndocker ps -a\n\ndocker cp /root/publish/. a4951a90cc85:/app/\n\ndocker commit -m=\"添加get\" a4951a90cc85 wangpengzong/k8s-netcore-demo:1.1\n\ndocker push wangpengzong/k8s-netcore-demo:1.1\n```\n\n然后去修改yaml文件里面的image，将`image: wangpengzong/k8s-netcore-demo`修改成`image: wangpengzong/k8s-netcore-demo:1.1`，然后保存\n\n执行`kubectl delete -f deploy.yaml`删除之前创建的yaml和对应pod等\n再执行一下`kubectl create -f deploy.yaml --validate`一下即可，执行之后需要重新查看新的端口号`kubectl get svc -n k8s-netcore`\n\n压测我是用的是go-stress-testing（[压测工具如何选择? ab、locust、Jmeter、go压测工具【单台机器100w连接压测实战】](https://segmentfault.com/a/1190000020211494)），安装时可能出现安装不了的问题，例如\n`A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.`，更改一下代理`go env -w GOPROXY=https://goproxy.cn,direct`即可\n\n```\n   -c 表示并发数\n\n   -n 每个并发执行请求的次数，总请求的次数 = 并发数 * 每个并发执行请求的次数\n\n   -u 需要压测的地址\n\n   # clone 项目\n   git clone https://github.com/link1st/go-stress-testing.git\n\n   # 进入项目目录\n   cd go-stress-testing\n\n   # 运行 \n   go run main.go -c 1 -n 100 -u https://www.baidu.com/\n```\n\n简单压测，如果直接访问网站`go run main.go -c 100 -n 100 -u http://ip:port`，结果是这样的\n![](/cnblogs/15939761/789895-20220226164638139-2008783301.png)\n某运维大佬评价\n![](/cnblogs/15939761/789895-20220226164847500-536945200.png)\n\n访问刚才的/get `go run main.go -c 100 -n 100 -u http://ip:port/get```，结果是这样\n![](/cnblogs/15939761/789895-20220226164746450-1643262002.png)\n\n此次给出的评价是\n![](/cnblogs/15939761/789895-20220226164817702-919307590.png)\n","source":"_posts/cnblogs/15939761.md","raw":"---\ntitle: CentOS单机安装k8s并部署.NET 6程序 压测 记录\ndate: 2022-02-26T16:56:00\nauthor: wpzblog\ntags: [\"docker\",\"k8s\",\"压测\"]\n---\n前面部分依照[CentOS单机安装k8s并部署.NET 6程序](https://jishuin.proginn.com/p/763bfbd73d1e)来进行，内存、cpu、centos版本一致，之前222元买的三年8M 2c4g[腾讯云轻量服务器](https://curl.qcloud.com/LON6nh1w)，这个教程算是写的很详细的了，基本可以一致执行下去就能打开网页\n\n我卡在了搭建私有仓库部分，里面写的是需要添加insecure-registries，然后重启，但是重启之后我这里一直启动不了（IP已经修改成自己服务器的IP），随后我将添加的insecure-registries部分删掉，然后推送仓库时推送到了自己的docker hub（10.211.55.10:8888替换成自己的hub名称，后面的yaml里面也需要对应修改），并且想着后面做压测，就稍微改了一下代码，在`app.Run();`前增加了\n\n```\napp.UseEndpoints(endpoints =>\n{\n    endpoints.MapGet(\"/get\",async content => {\n        await content.Response.WriteAsync(\"hello!\");\n    });\n});\n```\n\n这样，压测我们就直接访问/get\n\n如果按照教程搞完之后，需要对网站进行修改，然后更新到k8s，那么可以在 dotnet publish 之后，将文件复制进容器中\n\n```\ndocker ps -a\n\ndocker cp /root/publish/. a4951a90cc85:/app/\n\ndocker commit -m=\"添加get\" a4951a90cc85 wangpengzong/k8s-netcore-demo:1.1\n\ndocker push wangpengzong/k8s-netcore-demo:1.1\n```\n\n然后去修改yaml文件里面的image，将`image: wangpengzong/k8s-netcore-demo`修改成`image: wangpengzong/k8s-netcore-demo:1.1`，然后保存\n\n执行`kubectl delete -f deploy.yaml`删除之前创建的yaml和对应pod等\n再执行一下`kubectl create -f deploy.yaml --validate`一下即可，执行之后需要重新查看新的端口号`kubectl get svc -n k8s-netcore`\n\n压测我是用的是go-stress-testing（[压测工具如何选择? ab、locust、Jmeter、go压测工具【单台机器100w连接压测实战】](https://segmentfault.com/a/1190000020211494)），安装时可能出现安装不了的问题，例如\n`A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.`，更改一下代理`go env -w GOPROXY=https://goproxy.cn,direct`即可\n\n```\n   -c 表示并发数\n\n   -n 每个并发执行请求的次数，总请求的次数 = 并发数 * 每个并发执行请求的次数\n\n   -u 需要压测的地址\n\n   # clone 项目\n   git clone https://github.com/link1st/go-stress-testing.git\n\n   # 进入项目目录\n   cd go-stress-testing\n\n   # 运行 \n   go run main.go -c 1 -n 100 -u https://www.baidu.com/\n```\n\n简单压测，如果直接访问网站`go run main.go -c 100 -n 100 -u http://ip:port`，结果是这样的\n![](/cnblogs/15939761/789895-20220226164638139-2008783301.png)\n某运维大佬评价\n![](/cnblogs/15939761/789895-20220226164847500-536945200.png)\n\n访问刚才的/get `go run main.go -c 100 -n 100 -u http://ip:port/get```，结果是这样\n![](/cnblogs/15939761/789895-20220226164746450-1643262002.png)\n\n此次给出的评价是\n![](/cnblogs/15939761/789895-20220226164817702-919307590.png)\n","slug":"cnblogs/15939761","published":1,"updated":"2022-07-10T11:02:54.513Z","_id":"cl5f3a2d80006c0ungrei1qcr","comments":1,"layout":"post","photos":[],"link":"","content":"<p>前面部分依照<a href=\"https://jishuin.proginn.com/p/763bfbd73d1e\">CentOS单机安装k8s并部署.NET 6程序</a>来进行，内存、cpu、centos版本一致，之前222元买的三年8M 2c4g<a href=\"https://curl.qcloud.com/LON6nh1w\">腾讯云轻量服务器</a>，这个教程算是写的很详细的了，基本可以一致执行下去就能打开网页</p>\n<p>我卡在了搭建私有仓库部分，里面写的是需要添加insecure-registries，然后重启，但是重启之后我这里一直启动不了（IP已经修改成自己服务器的IP），随后我将添加的insecure-registries部分删掉，然后推送仓库时推送到了自己的docker hub（10.211.55.10:8888替换成自己的hub名称，后面的yaml里面也需要对应修改），并且想着后面做压测，就稍微改了一下代码，在<code>app.Run();</code>前增加了</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">app.UseEndpoints(endpoints &#x3D;&gt;\n&#123;\n    endpoints.MapGet(&quot;&#x2F;get&quot;,async content &#x3D;&gt; &#123;\n        await content.Response.WriteAsync(&quot;hello!&quot;);\n    &#125;);\n&#125;);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这样，压测我们就直接访问/get</p>\n<p>如果按照教程搞完之后，需要对网站进行修改，然后更新到k8s，那么可以在 dotnet publish 之后，将文件复制进容器中</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">docker ps -a\n\ndocker cp &#x2F;root&#x2F;publish&#x2F;. a4951a90cc85:&#x2F;app&#x2F;\n\ndocker commit -m&#x3D;&quot;添加get&quot; a4951a90cc85 wangpengzong&#x2F;k8s-netcore-demo:1.1\n\ndocker push wangpengzong&#x2F;k8s-netcore-demo:1.1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>然后去修改yaml文件里面的image，将<code>image: wangpengzong/k8s-netcore-demo</code>修改成<code>image: wangpengzong/k8s-netcore-demo:1.1</code>，然后保存</p>\n<p>执行<code>kubectl delete -f deploy.yaml</code>删除之前创建的yaml和对应pod等<br>再执行一下<code>kubectl create -f deploy.yaml --validate</code>一下即可，执行之后需要重新查看新的端口号<code>kubectl get svc -n k8s-netcore</code></p>\n<p>压测我是用的是go-stress-testing（<a href=\"https://segmentfault.com/a/1190000020211494\">压测工具如何选择? ab、locust、Jmeter、go压测工具【单台机器100w连接压测实战】</a>），安装时可能出现安装不了的问题，例如<br><code>A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.</code>，更改一下代理<code>go env -w GOPROXY=https://goproxy.cn,direct</code>即可</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">-c 表示并发数\n\n-n 每个并发执行请求的次数，总请求的次数 &#x3D; 并发数 * 每个并发执行请求的次数\n\n-u 需要压测的地址\n\n# clone 项目\ngit clone https:&#x2F;&#x2F;github.com&#x2F;link1st&#x2F;go-stress-testing.git\n\n# 进入项目目录\ncd go-stress-testing\n\n# 运行 \ngo run main.go -c 1 -n 100 -u https:&#x2F;&#x2F;www.baidu.com&#x2F;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>简单压测，如果直接访问网站<code>go run main.go -c 100 -n 100 -u http://ip:port</code>，结果是这样的<br><img src=\"/cnblogs/15939761/789895-20220226164638139-2008783301.png\" class=\"lazyload placeholder\" data-srcset=\"/cnblogs/15939761/789895-20220226164638139-2008783301.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\"><br>某运维大佬评价<br><img src=\"/cnblogs/15939761/789895-20220226164847500-536945200.png\" class=\"lazyload placeholder\" data-srcset=\"/cnblogs/15939761/789895-20220226164847500-536945200.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\"></p>\n<p>访问刚才的/get `go run main.go -c 100 -n 100 -u <a href=\"http://ip:port/get```，结果是这样\">http://ip:port/get```，结果是这样</a><br><img src=\"/cnblogs/15939761/789895-20220226164746450-1643262002.png\" class=\"lazyload placeholder\" data-srcset=\"/cnblogs/15939761/789895-20220226164746450-1643262002.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\"></p>\n<p>此次给出的评价是<br><img src=\"/cnblogs/15939761/789895-20220226164817702-919307590.png\" class=\"lazyload placeholder\" data-srcset=\"/cnblogs/15939761/789895-20220226164817702-919307590.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\"></p>\n","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"wangpengzong","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/wangpengzong","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"<p>前面部分依照<a href=\"https://jishuin.proginn.com/p/763bfbd73d1e\">CentOS单机安装k8s并部署.NET 6程序</a>来进行，内存、cpu、centos版本一致，之前222元买的三年8M 2c4g<a href=\"https://curl.qcloud.com/LON6nh1w\">腾讯云轻量服务器</a>，这个教程算是写的很详细的了，基本可以一致执行下去就能打开网页</p>\n<p>我卡在了搭建私有仓库部分，里面写的是需要添加insecure-registries，然后重启，但是重启之后我这里一直启动不了（IP已经修改成自己服务器的IP），随后我将添加的insecure-registries部分删掉，然后推送仓库时推送到了自己的docker hub（10.211.55.10:8888替换成自己的hub名称，后面的yaml里面也需要对应修改），并且想着后面做压测，就稍微改了一下代码，在<code>app.Run();</code>前增加了</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">app.UseEndpoints(endpoints &#x3D;&gt;\n&#123;\n    endpoints.MapGet(&quot;&#x2F;get&quot;,async content &#x3D;&gt; &#123;\n        await content.Response.WriteAsync(&quot;hello!&quot;);\n    &#125;);\n&#125;);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这样，压测我们就直接访问/get</p>\n<p>如果按照教程搞完之后，需要对网站进行修改，然后更新到k8s，那么可以在 dotnet publish 之后，将文件复制进容器中</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">docker ps -a\n\ndocker cp &#x2F;root&#x2F;publish&#x2F;. a4951a90cc85:&#x2F;app&#x2F;\n\ndocker commit -m&#x3D;&quot;添加get&quot; a4951a90cc85 wangpengzong&#x2F;k8s-netcore-demo:1.1\n\ndocker push wangpengzong&#x2F;k8s-netcore-demo:1.1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>然后去修改yaml文件里面的image，将<code>image: wangpengzong/k8s-netcore-demo</code>修改成<code>image: wangpengzong/k8s-netcore-demo:1.1</code>，然后保存</p>\n<p>执行<code>kubectl delete -f deploy.yaml</code>删除之前创建的yaml和对应pod等<br>再执行一下<code>kubectl create -f deploy.yaml --validate</code>一下即可，执行之后需要重新查看新的端口号<code>kubectl get svc -n k8s-netcore</code></p>\n<p>压测我是用的是go-stress-testing（<a href=\"https://segmentfault.com/a/1190000020211494\">压测工具如何选择? ab、locust、Jmeter、go压测工具【单台机器100w连接压测实战】</a>），安装时可能出现安装不了的问题，例如<br><code>A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.</code>，更改一下代理<code>go env -w GOPROXY=https://goproxy.cn,direct</code>即可</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">-c 表示并发数\n\n-n 每个并发执行请求的次数，总请求的次数 &#x3D; 并发数 * 每个并发执行请求的次数\n\n-u 需要压测的地址\n\n# clone 项目\ngit clone https:&#x2F;&#x2F;github.com&#x2F;link1st&#x2F;go-stress-testing.git\n\n# 进入项目目录\ncd go-stress-testing\n\n# 运行 \ngo run main.go -c 1 -n 100 -u https:&#x2F;&#x2F;www.baidu.com&#x2F;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>简单压测，如果直接访问网站<code>go run main.go -c 100 -n 100 -u http://ip:port</code>，结果是这样的<br><img src=\"/cnblogs/15939761/789895-20220226164638139-2008783301.png\"><br>某运维大佬评价<br><img src=\"/cnblogs/15939761/789895-20220226164847500-536945200.png\"></p>\n<p>访问刚才的/get `go run main.go -c 100 -n 100 -u <a href=\"http://ip:port/get```，结果是这样\">http://ip:port/get```，结果是这样</a><br><img src=\"/cnblogs/15939761/789895-20220226164746450-1643262002.png\"></p>\n<p>此次给出的评价是<br><img src=\"/cnblogs/15939761/789895-20220226164817702-919307590.png\"></p>\n"},{"title":"不同云服务器下，ubuntu下开k3s集群","date":"2021-12-15T04:36:00.000Z","author":"wpzblog","_content":"首先先感谢老哥的文章：[h构建多云环境下的K3S集群](https://zhuanlan.zhihu.com/p/445353413)，但是我尝试在centos 8.2上面前面一直执行报错\n![](/cnblogs/15692108/789895-20211215112128412-1674811.png)\n并且安装glibc 2.17时还会报错make版本太低，所以直接放弃centos，投入ubuntu的怀抱\n\n现在腾讯云的活动确实不错，[【腾讯云】云产品限时秒杀，爆款2核4G云服务器首年74元](https://curl.qcloud.com/LON6nh1w)，点进去之后三年8M 2c4g轻量应用服务器222元，月流量1200G，好了，说说k3s吧，K3s相对比K8s更加轻量，对于服务器的要求较低:\n* 系统内核版本：Linux 3.10+ (CentOS 7, Debian 8/9, Ubuntu 14.04+)\n* K3S Server端最低内存要求：512 MB\n* K3S Agent端内存最低要求：75MB\n* 磁盘空间最低要求：200 MB\n* 支持的硬件架构：x86_64, ARMv7, ARM64\n\n实际使用过程中，可以在各种环境中进行使用（[k3s在小到树莓派或大到 AWS a1.4xlarge 32GiB服务器的环境中](https://www.rancher.cn/k3s/)），也就是使用场景可以小到一个家庭内部的小盒子（斐讯N1）\n由于我之前买了一个三年的阿里云服务器（1M 1c2g），准备拿阿里云服务器做server，腾讯云服务器做agent做一个单master，单node的k3s集群，不同云服务器见通过内网是访问不了的（可以拓展一下场景，比如家内的linux服务器和外网的云服务器之间也是内网不通的），就需要wireguard来帮助我们做好vpn的功能，服务器的内核建议升级到5.6以上（centos和ubuntu下```uname -r```查看)，如果内核版本不够高，需要先升级内核，我这里说一下ubuntu的升级方法\n\n# 以下内容需要在两台服务器上都进行执行\n\n    * server 阿里云 1M 1c2g ubuntu 20.04\n    * agent 腾讯云 8M 2c4g ubuntu 20.04\n\n## 1.升级内核\n在[kernel.ubuntu.com](https://kernel.ubuntu.com/~kernel-ppa/mainline/)中寻找自己要下载的内核版本，然后点进去，例如我选择的```5.17.7```\n![](/cnblogs/15692108/789895-20211215114236385-1487974069.png)\n然后服务器上执行```dpkg --print-architecture```查看一下自己的服务器是amd还是arm等，在上面打开的链接中选择好指定的架构，下载带有下面image和modules、generic的deb文件\n* linux-image-X.Y.Z-generic-*.deb\n* linux-modules-X.Y.Z-generic-.deb\n然后上传到服务器上，当然我们也可以这样\n```\nmkdir kernel\ncd kernel\nwget https://kernel.ubuntu.com/~kernel-ppa/mainline/v5.15.7/amd64/linux-image-unsigned-5.15.7-051507-generic_5.15.7-051507.202112080459_amd64.deb\nwget https://kernel.ubuntu.com/~kernel-ppa/mainline/v5.15.7/amd64/linux-modules-5.15.7-051507-generic_5.15.7-051507.202112080459_amd64.deb\n```\n下载速度有点慢，你可以直接[进入我的阿里云盘下载，链接我设置的永久有效](https://www.aliyundrive.com/s/z6Qhc7agAU4)\n下载完成之后，执行命令：\n```\nsudo dpkg --install *.deb\nsudo reboot \n```\n服务器重启之后再用```uname -r```查看一下，现在内核版本已经更新到了5.15.7了，服务器内核已经执行成功之后，我们可以安装wireguard了\n## 2.安装wireguard\n```\n sudo apt update\n sudo apt upgrade -y\n sudo apt install -y iptables wireguard\n```\n在我们的server服务器执行```hostnamectl set-hostname k3s-master```\n在我们的agent服务器执行```hostnamectl set-hostname k3s-node1```\n\n## 3.安装k3s及配置\n接下来，两台服务器都安装k3s\n```\ncurl -sfL http://rancher-mirror.cnrancher.com/k3s/k3s-install.sh | INSTALL_K3S_MIRROR=cn sh - \n```\n稍等一会儿，查看我们的```ip addr```\n```\n///10.43.0.1我们当作server服务器的内网IP\nkube-ipvs0: <BROADCAST,NOARP> mtu 1500 qdisc noop state DOWN group default \n    inet 10.43.0.1/32 scope global kube-ipvs0\n       valid_lft forever preferred_lft forever\n```\n# 下面的内容需要分别执行\n  ## server服务器\n```\nnano /etc/systemd/system/k3s.service\n\n//k3s.service只需要修改ExecStart部分，内网IP10.43.0.1\n\n[Unit]\nDescription=Lightweight Kubernetes\nDocumentation=https://k3s.io\nWants=network-online.target\nAfter=network-online.target\n\n[Install]\nWantedBy=multi-user.target\n\n[Service]\nType=notify\nEnvironmentFile=/etc/systemd/system/k3s.service.env\nKillMode=process\nDelegate=yes\nLimitNOFILE=1048576\nLimitNPROC=infinity\nLimitCORE=infinity\nTasksMax=infinity\nTimeoutStartSec=0\nRestart=always\nRestartSec=5s\nExecStartPre=-/sbin/modprobe br_netfilter\nExecStartPre=-/sbin/modprobe overlay\nExecStart=/usr/local/bin/k3s \\\n    server --flannel-backend wireguard --tls-san 公网地址,内网地址 --node-ip 内网地址 --node-external-ip 公网地址 --no-deploy servicelb \\\n    --disable traefik\n    --kube-proxy-arg \"proxy-mode=ipvs\" \"masquerade-all=true\" \\\n    --kube-proxy-arg \"metrics-bind-address=0.0.0.0\"\n\n\nnano /etc/systemd/system/k3s.service.env //然后直接Ctrl+X 按y退出来\n```\n获取token\n```\ncat /var/lib/rancher/k3s/server/node-token    \n# 内容类似如下：\nK10fc6653356f8b0c457cd1a8e41d87b7d33b49a97f4e6b8qweqweqwewq12788a06e85647454::server:53c2qweqwe2222w4d8145be9e7\n```\n\n  ## agent服务器\n```\nnano /etc/systemd/system/k3s.service\n\n//k3s.service只需要修改ExecStart部分\n\n///内网IP我们写成10.43.0.2\n[Unit]\nDescription=Lightweight Kubernetes\nDocumentation=https://k3s.io\nWants=network-online.target\nAfter=network-online.target\n\n[Install]\nWantedBy=multi-user.target\n\n[Service]\nType=notify\nEnvironmentFile=/etc/systemd/system/k3s.service.env\nKillMode=process\nDelegate=yes\nLimitNOFILE=1048576\nLimitNPROC=infinity\nLimitCORE=infinity\nTasksMax=infinity\nTimeoutStartSec=0\nRestart=always\nRestartSec=5s\nExecStartPre=-/sbin/modprobe br_netfilter\nExecStartPre=-/sbin/modprobe overlay\nExecStart=/usr/local/bin/k3s agent\\\n    --node-external-ip 公网IP \\\n    --node-ip  内网IP\\\n    --kube-proxy-arg \"proxy-mode=ipvs\" \"masquerade-all=true\" \\\n    --kube-proxy-arg \"metrics-bind-address=0.0.0.0\"\n\n\n设置当前服务器的设备变量\nnano /etc/systemd/system/k3s.service.env\n\n# 此处定义集群的api service访问地址以及token内容为：\nK3S_URL=https://server的公网地址:6443\nK10fc6653356f8b0c457cd1a8e41d87b7d33b49a97f4e6b8qweqweqwewq12788a06e85647454::server:53c2qweqwe2222w4d8145be9e7\n```\n\n然后server服务器和agent服务器都执行\n```\nsystemctl daemon-reload \nsystemctl restart k3s\n```\n\n如果长时间Hold不执行下去，Ctrl+C取消，执行```systemctl status k3s -r或者ajournalctl -u k3s.service -r```查看输出日志\n\n如果报错信息是\n```Failed to connect to proxy\" error=\"x509: certificate is valid for 10.43.0.1, 127.0.0.1, 172.28.115.105, not xxx.xxx.xxx.xxx(server的公网IP)```\n先将两个服务器的K3s都停掉，然后全部执行\n```\nsystemctl stop k3s\ncd /var/lib/\nrm -rf rancher\nreboot \n```\n一般重启之后就好了\n\n![](/cnblogs/15692108/789895-20211215122523232-1554137109.png)\n\n下面是服务器的端口开发截图\n![](/cnblogs/15692108/789895-20211220155923883-682805455.png)\n","source":"_posts/cnblogs/15692108.md","raw":"---\ntitle: 不同云服务器下，ubuntu下开k3s集群\ndate: 2021-12-15T12:36:00\nauthor: wpzblog\ntags: [\"k3s\",\"ubuntu\",\"ubuntu内核升级\"]\n---\n首先先感谢老哥的文章：[h构建多云环境下的K3S集群](https://zhuanlan.zhihu.com/p/445353413)，但是我尝试在centos 8.2上面前面一直执行报错\n![](/cnblogs/15692108/789895-20211215112128412-1674811.png)\n并且安装glibc 2.17时还会报错make版本太低，所以直接放弃centos，投入ubuntu的怀抱\n\n现在腾讯云的活动确实不错，[【腾讯云】云产品限时秒杀，爆款2核4G云服务器首年74元](https://curl.qcloud.com/LON6nh1w)，点进去之后三年8M 2c4g轻量应用服务器222元，月流量1200G，好了，说说k3s吧，K3s相对比K8s更加轻量，对于服务器的要求较低:\n* 系统内核版本：Linux 3.10+ (CentOS 7, Debian 8/9, Ubuntu 14.04+)\n* K3S Server端最低内存要求：512 MB\n* K3S Agent端内存最低要求：75MB\n* 磁盘空间最低要求：200 MB\n* 支持的硬件架构：x86_64, ARMv7, ARM64\n\n实际使用过程中，可以在各种环境中进行使用（[k3s在小到树莓派或大到 AWS a1.4xlarge 32GiB服务器的环境中](https://www.rancher.cn/k3s/)），也就是使用场景可以小到一个家庭内部的小盒子（斐讯N1）\n由于我之前买了一个三年的阿里云服务器（1M 1c2g），准备拿阿里云服务器做server，腾讯云服务器做agent做一个单master，单node的k3s集群，不同云服务器见通过内网是访问不了的（可以拓展一下场景，比如家内的linux服务器和外网的云服务器之间也是内网不通的），就需要wireguard来帮助我们做好vpn的功能，服务器的内核建议升级到5.6以上（centos和ubuntu下```uname -r```查看)，如果内核版本不够高，需要先升级内核，我这里说一下ubuntu的升级方法\n\n# 以下内容需要在两台服务器上都进行执行\n\n    * server 阿里云 1M 1c2g ubuntu 20.04\n    * agent 腾讯云 8M 2c4g ubuntu 20.04\n\n## 1.升级内核\n在[kernel.ubuntu.com](https://kernel.ubuntu.com/~kernel-ppa/mainline/)中寻找自己要下载的内核版本，然后点进去，例如我选择的```5.17.7```\n![](/cnblogs/15692108/789895-20211215114236385-1487974069.png)\n然后服务器上执行```dpkg --print-architecture```查看一下自己的服务器是amd还是arm等，在上面打开的链接中选择好指定的架构，下载带有下面image和modules、generic的deb文件\n* linux-image-X.Y.Z-generic-*.deb\n* linux-modules-X.Y.Z-generic-.deb\n然后上传到服务器上，当然我们也可以这样\n```\nmkdir kernel\ncd kernel\nwget https://kernel.ubuntu.com/~kernel-ppa/mainline/v5.15.7/amd64/linux-image-unsigned-5.15.7-051507-generic_5.15.7-051507.202112080459_amd64.deb\nwget https://kernel.ubuntu.com/~kernel-ppa/mainline/v5.15.7/amd64/linux-modules-5.15.7-051507-generic_5.15.7-051507.202112080459_amd64.deb\n```\n下载速度有点慢，你可以直接[进入我的阿里云盘下载，链接我设置的永久有效](https://www.aliyundrive.com/s/z6Qhc7agAU4)\n下载完成之后，执行命令：\n```\nsudo dpkg --install *.deb\nsudo reboot \n```\n服务器重启之后再用```uname -r```查看一下，现在内核版本已经更新到了5.15.7了，服务器内核已经执行成功之后，我们可以安装wireguard了\n## 2.安装wireguard\n```\n sudo apt update\n sudo apt upgrade -y\n sudo apt install -y iptables wireguard\n```\n在我们的server服务器执行```hostnamectl set-hostname k3s-master```\n在我们的agent服务器执行```hostnamectl set-hostname k3s-node1```\n\n## 3.安装k3s及配置\n接下来，两台服务器都安装k3s\n```\ncurl -sfL http://rancher-mirror.cnrancher.com/k3s/k3s-install.sh | INSTALL_K3S_MIRROR=cn sh - \n```\n稍等一会儿，查看我们的```ip addr```\n```\n///10.43.0.1我们当作server服务器的内网IP\nkube-ipvs0: <BROADCAST,NOARP> mtu 1500 qdisc noop state DOWN group default \n    inet 10.43.0.1/32 scope global kube-ipvs0\n       valid_lft forever preferred_lft forever\n```\n# 下面的内容需要分别执行\n  ## server服务器\n```\nnano /etc/systemd/system/k3s.service\n\n//k3s.service只需要修改ExecStart部分，内网IP10.43.0.1\n\n[Unit]\nDescription=Lightweight Kubernetes\nDocumentation=https://k3s.io\nWants=network-online.target\nAfter=network-online.target\n\n[Install]\nWantedBy=multi-user.target\n\n[Service]\nType=notify\nEnvironmentFile=/etc/systemd/system/k3s.service.env\nKillMode=process\nDelegate=yes\nLimitNOFILE=1048576\nLimitNPROC=infinity\nLimitCORE=infinity\nTasksMax=infinity\nTimeoutStartSec=0\nRestart=always\nRestartSec=5s\nExecStartPre=-/sbin/modprobe br_netfilter\nExecStartPre=-/sbin/modprobe overlay\nExecStart=/usr/local/bin/k3s \\\n    server --flannel-backend wireguard --tls-san 公网地址,内网地址 --node-ip 内网地址 --node-external-ip 公网地址 --no-deploy servicelb \\\n    --disable traefik\n    --kube-proxy-arg \"proxy-mode=ipvs\" \"masquerade-all=true\" \\\n    --kube-proxy-arg \"metrics-bind-address=0.0.0.0\"\n\n\nnano /etc/systemd/system/k3s.service.env //然后直接Ctrl+X 按y退出来\n```\n获取token\n```\ncat /var/lib/rancher/k3s/server/node-token    \n# 内容类似如下：\nK10fc6653356f8b0c457cd1a8e41d87b7d33b49a97f4e6b8qweqweqwewq12788a06e85647454::server:53c2qweqwe2222w4d8145be9e7\n```\n\n  ## agent服务器\n```\nnano /etc/systemd/system/k3s.service\n\n//k3s.service只需要修改ExecStart部分\n\n///内网IP我们写成10.43.0.2\n[Unit]\nDescription=Lightweight Kubernetes\nDocumentation=https://k3s.io\nWants=network-online.target\nAfter=network-online.target\n\n[Install]\nWantedBy=multi-user.target\n\n[Service]\nType=notify\nEnvironmentFile=/etc/systemd/system/k3s.service.env\nKillMode=process\nDelegate=yes\nLimitNOFILE=1048576\nLimitNPROC=infinity\nLimitCORE=infinity\nTasksMax=infinity\nTimeoutStartSec=0\nRestart=always\nRestartSec=5s\nExecStartPre=-/sbin/modprobe br_netfilter\nExecStartPre=-/sbin/modprobe overlay\nExecStart=/usr/local/bin/k3s agent\\\n    --node-external-ip 公网IP \\\n    --node-ip  内网IP\\\n    --kube-proxy-arg \"proxy-mode=ipvs\" \"masquerade-all=true\" \\\n    --kube-proxy-arg \"metrics-bind-address=0.0.0.0\"\n\n\n设置当前服务器的设备变量\nnano /etc/systemd/system/k3s.service.env\n\n# 此处定义集群的api service访问地址以及token内容为：\nK3S_URL=https://server的公网地址:6443\nK10fc6653356f8b0c457cd1a8e41d87b7d33b49a97f4e6b8qweqweqwewq12788a06e85647454::server:53c2qweqwe2222w4d8145be9e7\n```\n\n然后server服务器和agent服务器都执行\n```\nsystemctl daemon-reload \nsystemctl restart k3s\n```\n\n如果长时间Hold不执行下去，Ctrl+C取消，执行```systemctl status k3s -r或者ajournalctl -u k3s.service -r```查看输出日志\n\n如果报错信息是\n```Failed to connect to proxy\" error=\"x509: certificate is valid for 10.43.0.1, 127.0.0.1, 172.28.115.105, not xxx.xxx.xxx.xxx(server的公网IP)```\n先将两个服务器的K3s都停掉，然后全部执行\n```\nsystemctl stop k3s\ncd /var/lib/\nrm -rf rancher\nreboot \n```\n一般重启之后就好了\n\n![](/cnblogs/15692108/789895-20211215122523232-1554137109.png)\n\n下面是服务器的端口开发截图\n![](/cnblogs/15692108/789895-20211220155923883-682805455.png)\n","slug":"cnblogs/15692108","published":1,"updated":"2022-07-10T11:02:54.909Z","_id":"cl5f3a2d90008c0un46mfbuj6","comments":1,"layout":"post","photos":[],"link":"","content":"<p>首先先感谢老哥的文章：<a href=\"https://zhuanlan.zhihu.com/p/445353413\">h构建多云环境下的K3S集群</a>，但是我尝试在centos 8.2上面前面一直执行报错<br><img src=\"/cnblogs/15692108/789895-20211215112128412-1674811.png\" class=\"lazyload placeholder\" data-srcset=\"/cnblogs/15692108/789895-20211215112128412-1674811.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\"><br>并且安装glibc 2.17时还会报错make版本太低，所以直接放弃centos，投入ubuntu的怀抱</p>\n<p>现在腾讯云的活动确实不错，<a href=\"https://curl.qcloud.com/LON6nh1w\">【腾讯云】云产品限时秒杀，爆款2核4G云服务器首年74元</a>，点进去之后三年8M 2c4g轻量应用服务器222元，月流量1200G，好了，说说k3s吧，K3s相对比K8s更加轻量，对于服务器的要求较低:</p>\n<ul>\n<li>系统内核版本：Linux 3.10+ (CentOS 7, Debian 8/9, Ubuntu 14.04+)</li>\n<li>K3S Server端最低内存要求：512 MB</li>\n<li>K3S Agent端内存最低要求：75MB</li>\n<li>磁盘空间最低要求：200 MB</li>\n<li>支持的硬件架构：x86_64, ARMv7, ARM64</li>\n</ul>\n<p>实际使用过程中，可以在各种环境中进行使用（<a href=\"https://www.rancher.cn/k3s/\">k3s在小到树莓派或大到 AWS a1.4xlarge 32GiB服务器的环境中</a>），也就是使用场景可以小到一个家庭内部的小盒子（斐讯N1）<br>由于我之前买了一个三年的阿里云服务器（1M 1c2g），准备拿阿里云服务器做server，腾讯云服务器做agent做一个单master，单node的k3s集群，不同云服务器见通过内网是访问不了的（可以拓展一下场景，比如家内的linux服务器和外网的云服务器之间也是内网不通的），就需要wireguard来帮助我们做好vpn的功能，服务器的内核建议升级到5.6以上（centos和ubuntu下<code>uname -r</code>查看)，如果内核版本不够高，需要先升级内核，我这里说一下ubuntu的升级方法</p>\n<h1 id=\"以下内容需要在两台服务器上都进行执行\"><a href=\"#以下内容需要在两台服务器上都进行执行\" class=\"headerlink\" title=\"以下内容需要在两台服务器上都进行执行\"></a>以下内容需要在两台服务器上都进行执行</h1><pre><code>* server 阿里云 1M 1c2g ubuntu 20.04\n* agent 腾讯云 8M 2c4g ubuntu 20.04\n</code></pre>\n<h2 id=\"1-升级内核\"><a href=\"#1-升级内核\" class=\"headerlink\" title=\"1.升级内核\"></a>1.升级内核</h2><p>在<a href=\"https://kernel.ubuntu.com/~kernel-ppa/mainline/\">kernel.ubuntu.com</a>中寻找自己要下载的内核版本，然后点进去，例如我选择的<code>5.17.7</code><br><img src=\"/cnblogs/15692108/789895-20211215114236385-1487974069.png\" class=\"lazyload placeholder\" data-srcset=\"/cnblogs/15692108/789895-20211215114236385-1487974069.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\"><br>然后服务器上执行<code>dpkg --print-architecture</code>查看一下自己的服务器是amd还是arm等，在上面打开的链接中选择好指定的架构，下载带有下面image和modules、generic的deb文件</p>\n<ul>\n<li>linux-image-X.Y.Z-generic-*.deb</li>\n<li>linux-modules-X.Y.Z-generic-.deb<br>然后上传到服务器上，当然我们也可以这样<pre class=\"line-numbers language-none\"><code class=\"language-none\">mkdir kernel\ncd kernel\nwget https:&#x2F;&#x2F;kernel.ubuntu.com&#x2F;~kernel-ppa&#x2F;mainline&#x2F;v5.15.7&#x2F;amd64&#x2F;linux-image-unsigned-5.15.7-051507-generic_5.15.7-051507.202112080459_amd64.deb\nwget https:&#x2F;&#x2F;kernel.ubuntu.com&#x2F;~kernel-ppa&#x2F;mainline&#x2F;v5.15.7&#x2F;amd64&#x2F;linux-modules-5.15.7-051507-generic_5.15.7-051507.202112080459_amd64.deb<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n下载速度有点慢，你可以直接<a href=\"https://www.aliyundrive.com/s/z6Qhc7agAU4\">进入我的阿里云盘下载，链接我设置的永久有效</a><br>下载完成之后，执行命令：<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo dpkg --install *.deb\nsudo reboot <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n服务器重启之后再用<code>uname -r</code>查看一下，现在内核版本已经更新到了5.15.7了，服务器内核已经执行成功之后，我们可以安装wireguard了<h2 id=\"2-安装wireguard\"><a href=\"#2-安装wireguard\" class=\"headerlink\" title=\"2.安装wireguard\"></a>2.安装wireguard</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo apt update\nsudo apt upgrade -y\nsudo apt install -y iptables wireguard<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n在我们的server服务器执行<code>hostnamectl set-hostname k3s-master</code><br>在我们的agent服务器执行<code>hostnamectl set-hostname k3s-node1</code></li>\n</ul>\n<h2 id=\"3-安装k3s及配置\"><a href=\"#3-安装k3s及配置\" class=\"headerlink\" title=\"3.安装k3s及配置\"></a>3.安装k3s及配置</h2><p>接下来，两台服务器都安装k3s</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">curl -sfL http:&#x2F;&#x2F;rancher-mirror.cnrancher.com&#x2F;k3s&#x2F;k3s-install.sh | INSTALL_K3S_MIRROR&#x3D;cn sh - <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>稍等一会儿，查看我们的<code>ip addr</code></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;&#x2F;&#x2F;10.43.0.1我们当作server服务器的内网IP\nkube-ipvs0: &lt;BROADCAST,NOARP&gt; mtu 1500 qdisc noop state DOWN group default \n    inet 10.43.0.1&#x2F;32 scope global kube-ipvs0\n       valid_lft forever preferred_lft forever<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"下面的内容需要分别执行\"><a href=\"#下面的内容需要分别执行\" class=\"headerlink\" title=\"下面的内容需要分别执行\"></a>下面的内容需要分别执行</h1><h2 id=\"server服务器\"><a href=\"#server服务器\" class=\"headerlink\" title=\"server服务器\"></a>server服务器</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">nano &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;k3s.service\n\n&#x2F;&#x2F;k3s.service只需要修改ExecStart部分，内网IP10.43.0.1\n\n[Unit]\nDescription&#x3D;Lightweight Kubernetes\nDocumentation&#x3D;https:&#x2F;&#x2F;k3s.io\nWants&#x3D;network-online.target\nAfter&#x3D;network-online.target\n\n[Install]\nWantedBy&#x3D;multi-user.target\n\n[Service]\nType&#x3D;notify\nEnvironmentFile&#x3D;&#x2F;etc&#x2F;systemd&#x2F;system&#x2F;k3s.service.env\nKillMode&#x3D;process\nDelegate&#x3D;yes\nLimitNOFILE&#x3D;1048576\nLimitNPROC&#x3D;infinity\nLimitCORE&#x3D;infinity\nTasksMax&#x3D;infinity\nTimeoutStartSec&#x3D;0\nRestart&#x3D;always\nRestartSec&#x3D;5s\nExecStartPre&#x3D;-&#x2F;sbin&#x2F;modprobe br_netfilter\nExecStartPre&#x3D;-&#x2F;sbin&#x2F;modprobe overlay\nExecStart&#x3D;&#x2F;usr&#x2F;local&#x2F;bin&#x2F;k3s \\\n    server --flannel-backend wireguard --tls-san 公网地址,内网地址 --node-ip 内网地址 --node-external-ip 公网地址 --no-deploy servicelb \\\n    --disable traefik\n    --kube-proxy-arg &quot;proxy-mode&#x3D;ipvs&quot; &quot;masquerade-all&#x3D;true&quot; \\\n    --kube-proxy-arg &quot;metrics-bind-address&#x3D;0.0.0.0&quot;\n\n\nnano &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;k3s.service.env &#x2F;&#x2F;然后直接Ctrl+X 按y退出来<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>获取token</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cat &#x2F;var&#x2F;lib&#x2F;rancher&#x2F;k3s&#x2F;server&#x2F;node-token    \n# 内容类似如下：\nK10fc6653356f8b0c457cd1a8e41d87b7d33b49a97f4e6b8qweqweqwewq12788a06e85647454::server:53c2qweqwe2222w4d8145be9e7<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"agent服务器\"><a href=\"#agent服务器\" class=\"headerlink\" title=\"agent服务器\"></a>agent服务器</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">nano &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;k3s.service\n\n&#x2F;&#x2F;k3s.service只需要修改ExecStart部分\n\n&#x2F;&#x2F;&#x2F;内网IP我们写成10.43.0.2\n[Unit]\nDescription&#x3D;Lightweight Kubernetes\nDocumentation&#x3D;https:&#x2F;&#x2F;k3s.io\nWants&#x3D;network-online.target\nAfter&#x3D;network-online.target\n\n[Install]\nWantedBy&#x3D;multi-user.target\n\n[Service]\nType&#x3D;notify\nEnvironmentFile&#x3D;&#x2F;etc&#x2F;systemd&#x2F;system&#x2F;k3s.service.env\nKillMode&#x3D;process\nDelegate&#x3D;yes\nLimitNOFILE&#x3D;1048576\nLimitNPROC&#x3D;infinity\nLimitCORE&#x3D;infinity\nTasksMax&#x3D;infinity\nTimeoutStartSec&#x3D;0\nRestart&#x3D;always\nRestartSec&#x3D;5s\nExecStartPre&#x3D;-&#x2F;sbin&#x2F;modprobe br_netfilter\nExecStartPre&#x3D;-&#x2F;sbin&#x2F;modprobe overlay\nExecStart&#x3D;&#x2F;usr&#x2F;local&#x2F;bin&#x2F;k3s agent\\\n    --node-external-ip 公网IP \\\n    --node-ip  内网IP\\\n    --kube-proxy-arg &quot;proxy-mode&#x3D;ipvs&quot; &quot;masquerade-all&#x3D;true&quot; \\\n    --kube-proxy-arg &quot;metrics-bind-address&#x3D;0.0.0.0&quot;\n\n\n设置当前服务器的设备变量\nnano &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;k3s.service.env\n\n# 此处定义集群的api service访问地址以及token内容为：\nK3S_URL&#x3D;https:&#x2F;&#x2F;server的公网地址:6443\nK10fc6653356f8b0c457cd1a8e41d87b7d33b49a97f4e6b8qweqweqwewq12788a06e85647454::server:53c2qweqwe2222w4d8145be9e7<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>然后server服务器和agent服务器都执行</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">systemctl daemon-reload \nsystemctl restart k3s<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>如果长时间Hold不执行下去，Ctrl+C取消，执行<code>systemctl status k3s -r或者ajournalctl -u k3s.service -r</code>查看输出日志</p>\n<p>如果报错信息是<br><code>Failed to connect to proxy&quot; error=&quot;x509: certificate is valid for 10.43.0.1, 127.0.0.1, 172.28.115.105, not xxx.xxx.xxx.xxx(server的公网IP)</code><br>先将两个服务器的K3s都停掉，然后全部执行</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">systemctl stop k3s\ncd &#x2F;var&#x2F;lib&#x2F;\nrm -rf rancher\nreboot <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>一般重启之后就好了</p>\n<p><img src=\"/cnblogs/15692108/789895-20211215122523232-1554137109.png\" class=\"lazyload placeholder\" data-srcset=\"/cnblogs/15692108/789895-20211215122523232-1554137109.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\"></p>\n<p>下面是服务器的端口开发截图<br><img src=\"/cnblogs/15692108/789895-20211220155923883-682805455.png\" class=\"lazyload placeholder\" data-srcset=\"/cnblogs/15692108/789895-20211220155923883-682805455.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\"></p>\n","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"wangpengzong","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/wangpengzong","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"<p>首先先感谢老哥的文章：<a href=\"https://zhuanlan.zhihu.com/p/445353413\">h构建多云环境下的K3S集群</a>，但是我尝试在centos 8.2上面前面一直执行报错<br><img src=\"/cnblogs/15692108/789895-20211215112128412-1674811.png\"><br>并且安装glibc 2.17时还会报错make版本太低，所以直接放弃centos，投入ubuntu的怀抱</p>\n<p>现在腾讯云的活动确实不错，<a href=\"https://curl.qcloud.com/LON6nh1w\">【腾讯云】云产品限时秒杀，爆款2核4G云服务器首年74元</a>，点进去之后三年8M 2c4g轻量应用服务器222元，月流量1200G，好了，说说k3s吧，K3s相对比K8s更加轻量，对于服务器的要求较低:</p>\n<ul>\n<li>系统内核版本：Linux 3.10+ (CentOS 7, Debian 8/9, Ubuntu 14.04+)</li>\n<li>K3S Server端最低内存要求：512 MB</li>\n<li>K3S Agent端内存最低要求：75MB</li>\n<li>磁盘空间最低要求：200 MB</li>\n<li>支持的硬件架构：x86_64, ARMv7, ARM64</li>\n</ul>\n<p>实际使用过程中，可以在各种环境中进行使用（<a href=\"https://www.rancher.cn/k3s/\">k3s在小到树莓派或大到 AWS a1.4xlarge 32GiB服务器的环境中</a>），也就是使用场景可以小到一个家庭内部的小盒子（斐讯N1）<br>由于我之前买了一个三年的阿里云服务器（1M 1c2g），准备拿阿里云服务器做server，腾讯云服务器做agent做一个单master，单node的k3s集群，不同云服务器见通过内网是访问不了的（可以拓展一下场景，比如家内的linux服务器和外网的云服务器之间也是内网不通的），就需要wireguard来帮助我们做好vpn的功能，服务器的内核建议升级到5.6以上（centos和ubuntu下<code>uname -r</code>查看)，如果内核版本不够高，需要先升级内核，我这里说一下ubuntu的升级方法</p>\n<h1 id=\"以下内容需要在两台服务器上都进行执行\"><a href=\"#以下内容需要在两台服务器上都进行执行\" class=\"headerlink\" title=\"以下内容需要在两台服务器上都进行执行\"></a>以下内容需要在两台服务器上都进行执行</h1><pre><code>* server 阿里云 1M 1c2g ubuntu 20.04\n* agent 腾讯云 8M 2c4g ubuntu 20.04\n</code></pre>\n<h2 id=\"1-升级内核\"><a href=\"#1-升级内核\" class=\"headerlink\" title=\"1.升级内核\"></a>1.升级内核</h2><p>在<a href=\"https://kernel.ubuntu.com/~kernel-ppa/mainline/\">kernel.ubuntu.com</a>中寻找自己要下载的内核版本，然后点进去，例如我选择的<code>5.17.7</code><br><img src=\"/cnblogs/15692108/789895-20211215114236385-1487974069.png\"><br>然后服务器上执行<code>dpkg --print-architecture</code>查看一下自己的服务器是amd还是arm等，在上面打开的链接中选择好指定的架构，下载带有下面image和modules、generic的deb文件</p>\n<ul>\n<li>linux-image-X.Y.Z-generic-*.deb</li>\n<li>linux-modules-X.Y.Z-generic-.deb<br>然后上传到服务器上，当然我们也可以这样<pre class=\"line-numbers language-none\"><code class=\"language-none\">mkdir kernel\ncd kernel\nwget https:&#x2F;&#x2F;kernel.ubuntu.com&#x2F;~kernel-ppa&#x2F;mainline&#x2F;v5.15.7&#x2F;amd64&#x2F;linux-image-unsigned-5.15.7-051507-generic_5.15.7-051507.202112080459_amd64.deb\nwget https:&#x2F;&#x2F;kernel.ubuntu.com&#x2F;~kernel-ppa&#x2F;mainline&#x2F;v5.15.7&#x2F;amd64&#x2F;linux-modules-5.15.7-051507-generic_5.15.7-051507.202112080459_amd64.deb<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n下载速度有点慢，你可以直接<a href=\"https://www.aliyundrive.com/s/z6Qhc7agAU4\">进入我的阿里云盘下载，链接我设置的永久有效</a><br>下载完成之后，执行命令：<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo dpkg --install *.deb\nsudo reboot <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n服务器重启之后再用<code>uname -r</code>查看一下，现在内核版本已经更新到了5.15.7了，服务器内核已经执行成功之后，我们可以安装wireguard了<h2 id=\"2-安装wireguard\"><a href=\"#2-安装wireguard\" class=\"headerlink\" title=\"2.安装wireguard\"></a>2.安装wireguard</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo apt update\nsudo apt upgrade -y\nsudo apt install -y iptables wireguard<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n在我们的server服务器执行<code>hostnamectl set-hostname k3s-master</code><br>在我们的agent服务器执行<code>hostnamectl set-hostname k3s-node1</code></li>\n</ul>\n<h2 id=\"3-安装k3s及配置\"><a href=\"#3-安装k3s及配置\" class=\"headerlink\" title=\"3.安装k3s及配置\"></a>3.安装k3s及配置</h2><p>接下来，两台服务器都安装k3s</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">curl -sfL http:&#x2F;&#x2F;rancher-mirror.cnrancher.com&#x2F;k3s&#x2F;k3s-install.sh | INSTALL_K3S_MIRROR&#x3D;cn sh - <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>稍等一会儿，查看我们的<code>ip addr</code></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;&#x2F;&#x2F;10.43.0.1我们当作server服务器的内网IP\nkube-ipvs0: &lt;BROADCAST,NOARP&gt; mtu 1500 qdisc noop state DOWN group default \n    inet 10.43.0.1&#x2F;32 scope global kube-ipvs0\n       valid_lft forever preferred_lft forever<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"下面的内容需要分别执行\"><a href=\"#下面的内容需要分别执行\" class=\"headerlink\" title=\"下面的内容需要分别执行\"></a>下面的内容需要分别执行</h1><h2 id=\"server服务器\"><a href=\"#server服务器\" class=\"headerlink\" title=\"server服务器\"></a>server服务器</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">nano &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;k3s.service\n\n&#x2F;&#x2F;k3s.service只需要修改ExecStart部分，内网IP10.43.0.1\n\n[Unit]\nDescription&#x3D;Lightweight Kubernetes\nDocumentation&#x3D;https:&#x2F;&#x2F;k3s.io\nWants&#x3D;network-online.target\nAfter&#x3D;network-online.target\n\n[Install]\nWantedBy&#x3D;multi-user.target\n\n[Service]\nType&#x3D;notify\nEnvironmentFile&#x3D;&#x2F;etc&#x2F;systemd&#x2F;system&#x2F;k3s.service.env\nKillMode&#x3D;process\nDelegate&#x3D;yes\nLimitNOFILE&#x3D;1048576\nLimitNPROC&#x3D;infinity\nLimitCORE&#x3D;infinity\nTasksMax&#x3D;infinity\nTimeoutStartSec&#x3D;0\nRestart&#x3D;always\nRestartSec&#x3D;5s\nExecStartPre&#x3D;-&#x2F;sbin&#x2F;modprobe br_netfilter\nExecStartPre&#x3D;-&#x2F;sbin&#x2F;modprobe overlay\nExecStart&#x3D;&#x2F;usr&#x2F;local&#x2F;bin&#x2F;k3s \\\n    server --flannel-backend wireguard --tls-san 公网地址,内网地址 --node-ip 内网地址 --node-external-ip 公网地址 --no-deploy servicelb \\\n    --disable traefik\n    --kube-proxy-arg &quot;proxy-mode&#x3D;ipvs&quot; &quot;masquerade-all&#x3D;true&quot; \\\n    --kube-proxy-arg &quot;metrics-bind-address&#x3D;0.0.0.0&quot;\n\n\nnano &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;k3s.service.env &#x2F;&#x2F;然后直接Ctrl+X 按y退出来<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>获取token</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cat &#x2F;var&#x2F;lib&#x2F;rancher&#x2F;k3s&#x2F;server&#x2F;node-token    \n# 内容类似如下：\nK10fc6653356f8b0c457cd1a8e41d87b7d33b49a97f4e6b8qweqweqwewq12788a06e85647454::server:53c2qweqwe2222w4d8145be9e7<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"agent服务器\"><a href=\"#agent服务器\" class=\"headerlink\" title=\"agent服务器\"></a>agent服务器</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">nano &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;k3s.service\n\n&#x2F;&#x2F;k3s.service只需要修改ExecStart部分\n\n&#x2F;&#x2F;&#x2F;内网IP我们写成10.43.0.2\n[Unit]\nDescription&#x3D;Lightweight Kubernetes\nDocumentation&#x3D;https:&#x2F;&#x2F;k3s.io\nWants&#x3D;network-online.target\nAfter&#x3D;network-online.target\n\n[Install]\nWantedBy&#x3D;multi-user.target\n\n[Service]\nType&#x3D;notify\nEnvironmentFile&#x3D;&#x2F;etc&#x2F;systemd&#x2F;system&#x2F;k3s.service.env\nKillMode&#x3D;process\nDelegate&#x3D;yes\nLimitNOFILE&#x3D;1048576\nLimitNPROC&#x3D;infinity\nLimitCORE&#x3D;infinity\nTasksMax&#x3D;infinity\nTimeoutStartSec&#x3D;0\nRestart&#x3D;always\nRestartSec&#x3D;5s\nExecStartPre&#x3D;-&#x2F;sbin&#x2F;modprobe br_netfilter\nExecStartPre&#x3D;-&#x2F;sbin&#x2F;modprobe overlay\nExecStart&#x3D;&#x2F;usr&#x2F;local&#x2F;bin&#x2F;k3s agent\\\n    --node-external-ip 公网IP \\\n    --node-ip  内网IP\\\n    --kube-proxy-arg &quot;proxy-mode&#x3D;ipvs&quot; &quot;masquerade-all&#x3D;true&quot; \\\n    --kube-proxy-arg &quot;metrics-bind-address&#x3D;0.0.0.0&quot;\n\n\n设置当前服务器的设备变量\nnano &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;k3s.service.env\n\n# 此处定义集群的api service访问地址以及token内容为：\nK3S_URL&#x3D;https:&#x2F;&#x2F;server的公网地址:6443\nK10fc6653356f8b0c457cd1a8e41d87b7d33b49a97f4e6b8qweqweqwewq12788a06e85647454::server:53c2qweqwe2222w4d8145be9e7<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>然后server服务器和agent服务器都执行</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">systemctl daemon-reload \nsystemctl restart k3s<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>如果长时间Hold不执行下去，Ctrl+C取消，执行<code>systemctl status k3s -r或者ajournalctl -u k3s.service -r</code>查看输出日志</p>\n<p>如果报错信息是<br><code>Failed to connect to proxy&quot; error=&quot;x509: certificate is valid for 10.43.0.1, 127.0.0.1, 172.28.115.105, not xxx.xxx.xxx.xxx(server的公网IP)</code><br>先将两个服务器的K3s都停掉，然后全部执行</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">systemctl stop k3s\ncd &#x2F;var&#x2F;lib&#x2F;\nrm -rf rancher\nreboot <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>一般重启之后就好了</p>\n<p><img src=\"/cnblogs/15692108/789895-20211215122523232-1554137109.png\"></p>\n<p>下面是服务器的端口开发截图<br><img src=\"/cnblogs/15692108/789895-20211220155923883-682805455.png\"></p>\n"},{"title":"go将青龙面板里面的脚本文件都下载到本地","date":"2021-11-27T17:29:00.000Z","author":"wpzblog","_content":"纯粹练手用的，大家轻喷\n青龙面板的脚本文件可以下载到本地，这样的话自己可以研究一下对应的脚本文件，能学到更多的知识，原理其实很简单，F12一下就知道了，青龙面板使用Request Headers里面放入Authorization，那么Token我们已经拿到了，然后获取到所有文件的名称，分级目录，太过于简单，直接上代码了\n![](/cnblogs/15614177/789895-20211128011722252-460488491.png)\n\n```\npackage main\n\nimport (\n\t\"bytes\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"io\"\n\t\"io/ioutil\"\n\t\"net/http\"\n\t\"os\"\n\t\"strconv\"\n\t\"strings\"\n\t\"time\"\n)\n\nfunc main() {\n\n\trecordbody := getData(\"http://yourIp:5600/api/scripts/files?t=\")\n\n\tvar conf recordConfig\n\terr := json.Unmarshal(recordbody, &conf)\n\tif err != nil {\n\t\tfmt.Println(\"error:\", err)\n\t}\n\n\tfmt.Printf(\"\\r\\n获取到的body code:%s \\n\", strconv.Itoa(conf.Code))\n\tfor _, val := range conf.Data {\n\t\tif val.Children != nil {\n\t\t\tfor _, childval := range val.Children {\n\t\t\t\tchildbody := getData(fmt.Sprintf(\"http://yourIp:5600/api/scripts/%s?path=%s&t=\", childval.Value, childval.Parent))\n\t\t\t\tvar jsconf jsConfig\n\t\t\t\terr := json.Unmarshal(childbody, &jsconf)\n\t\t\t\tif err != nil {\n\t\t\t\t\tfmt.Println(\"error:\", err)\n\t\t\t\t}\n\n\t\t\t\tdownloadFile(strings.NewReader(string(jsconf.Data)), childval.Parent, childval.Value)\n\t\t\t}\n\t\t} else {\n\t\t\tchildbody := getData(fmt.Sprintf(\"http://yourIp:5600/api/scripts/%s?t=\", val.Value))\n\t\t\tvar jsconf jsConfig\n\t\t\terr := json.Unmarshal(childbody, &jsconf)\n\t\t\tif err != nil {\n\t\t\t\tfmt.Println(\"error:\", err)\n\t\t\t}\n\n\t\t\tdownloadFile(strings.NewReader(string(jsconf.Data)), \"\", val.Value)\n\t\t}\n\t}\n\tfmt.Println(\"执行完毕\")\n}\nfunc getData(urlstr string) []byte {\n\ttimes := strconv.FormatInt(time.Now().UnixNano()/1e6, 10)\n\tvar bt bytes.Buffer\n\tbt.WriteString(urlstr)\n\tbt.WriteString(times)\n\tfmt.Printf(bt.String())\n\tfmt.Printf(\"\\n\")\n\tclient := &http.Client{}\n\treq, _ := http.NewRequest(\"GET\", bt.String(), nil)\n\treq.Header.Add(\"Authorization\", \"Bearer yourToken\")\n\tresp, _ := client.Do(req)\n\tdefer resp.Body.Close()\n\tbody, _ := ioutil.ReadAll(resp.Body)\n\treturn body\n}\nfunc downloadFile(body io.Reader, path string, name string) {\n\tfilepath := fmt.Sprintf(\"./%s\", name)\n\t// Create output file\n\tif path != \"\" {\n\t\tif _, err := os.Stat(path); os.IsNotExist(err) {\n\t\t\t// 必须分成两步：先创建文件夹、再修改权限\n\t\t\tos.Mkdir(path, 0777) //0777也可以os.ModePerm\n\t\t\tos.Chmod(path, 0777)\n\t\t}\n\t\tfilepath = fmt.Sprintf(\"./%s/%s\", path, name)\n\t}\n\tout, err := os.Create(filepath)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tdefer out.Close()\n\t// copy stream\n\t_, err = io.Copy(out, body)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n}\n\ntype jsConfig struct {\n\tCode int `json:\"code\"`\n\n\tData string `json:\"data\"`\n}\n\ntype recordConfig struct {\n\tCode int `json:\"code\"`\n\n\tData []bodymsg `json:\"data\"`\n}\ntype bodymsg struct {\n\tDisabled bool `json:\"disabled\"`\n\n\tKey string `json:\"key\"`\n\n\tMtime float32 `json:\"mtime\"`\n\n\tTitle string `json:\"title\"`\n\n\tValue string `json:\"value\"`\n\n\tChildren []bodymsgchildren `json:\"children\"`\n}\n\ntype bodymsgchildren struct {\n\tKey string `json:\"key\"`\n\n\tMtime float32 `json:\"mtime\"`\n\n\tTitle  string `json:\"title\"`\n\tValue  string `json:\"value\"`\n\tParent string `json:\"parent\"`\n}\n```","source":"_posts/cnblogs/15614177.md","raw":"---\ntitle: go将青龙面板里面的脚本文件都下载到本地\ndate: 2021-11-28T01:29:00\nauthor: wpzblog\ntags: [\"go\",\"go文件下载\"]\n---\n纯粹练手用的，大家轻喷\n青龙面板的脚本文件可以下载到本地，这样的话自己可以研究一下对应的脚本文件，能学到更多的知识，原理其实很简单，F12一下就知道了，青龙面板使用Request Headers里面放入Authorization，那么Token我们已经拿到了，然后获取到所有文件的名称，分级目录，太过于简单，直接上代码了\n![](/cnblogs/15614177/789895-20211128011722252-460488491.png)\n\n```\npackage main\n\nimport (\n\t\"bytes\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"io\"\n\t\"io/ioutil\"\n\t\"net/http\"\n\t\"os\"\n\t\"strconv\"\n\t\"strings\"\n\t\"time\"\n)\n\nfunc main() {\n\n\trecordbody := getData(\"http://yourIp:5600/api/scripts/files?t=\")\n\n\tvar conf recordConfig\n\terr := json.Unmarshal(recordbody, &conf)\n\tif err != nil {\n\t\tfmt.Println(\"error:\", err)\n\t}\n\n\tfmt.Printf(\"\\r\\n获取到的body code:%s \\n\", strconv.Itoa(conf.Code))\n\tfor _, val := range conf.Data {\n\t\tif val.Children != nil {\n\t\t\tfor _, childval := range val.Children {\n\t\t\t\tchildbody := getData(fmt.Sprintf(\"http://yourIp:5600/api/scripts/%s?path=%s&t=\", childval.Value, childval.Parent))\n\t\t\t\tvar jsconf jsConfig\n\t\t\t\terr := json.Unmarshal(childbody, &jsconf)\n\t\t\t\tif err != nil {\n\t\t\t\t\tfmt.Println(\"error:\", err)\n\t\t\t\t}\n\n\t\t\t\tdownloadFile(strings.NewReader(string(jsconf.Data)), childval.Parent, childval.Value)\n\t\t\t}\n\t\t} else {\n\t\t\tchildbody := getData(fmt.Sprintf(\"http://yourIp:5600/api/scripts/%s?t=\", val.Value))\n\t\t\tvar jsconf jsConfig\n\t\t\terr := json.Unmarshal(childbody, &jsconf)\n\t\t\tif err != nil {\n\t\t\t\tfmt.Println(\"error:\", err)\n\t\t\t}\n\n\t\t\tdownloadFile(strings.NewReader(string(jsconf.Data)), \"\", val.Value)\n\t\t}\n\t}\n\tfmt.Println(\"执行完毕\")\n}\nfunc getData(urlstr string) []byte {\n\ttimes := strconv.FormatInt(time.Now().UnixNano()/1e6, 10)\n\tvar bt bytes.Buffer\n\tbt.WriteString(urlstr)\n\tbt.WriteString(times)\n\tfmt.Printf(bt.String())\n\tfmt.Printf(\"\\n\")\n\tclient := &http.Client{}\n\treq, _ := http.NewRequest(\"GET\", bt.String(), nil)\n\treq.Header.Add(\"Authorization\", \"Bearer yourToken\")\n\tresp, _ := client.Do(req)\n\tdefer resp.Body.Close()\n\tbody, _ := ioutil.ReadAll(resp.Body)\n\treturn body\n}\nfunc downloadFile(body io.Reader, path string, name string) {\n\tfilepath := fmt.Sprintf(\"./%s\", name)\n\t// Create output file\n\tif path != \"\" {\n\t\tif _, err := os.Stat(path); os.IsNotExist(err) {\n\t\t\t// 必须分成两步：先创建文件夹、再修改权限\n\t\t\tos.Mkdir(path, 0777) //0777也可以os.ModePerm\n\t\t\tos.Chmod(path, 0777)\n\t\t}\n\t\tfilepath = fmt.Sprintf(\"./%s/%s\", path, name)\n\t}\n\tout, err := os.Create(filepath)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tdefer out.Close()\n\t// copy stream\n\t_, err = io.Copy(out, body)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n}\n\ntype jsConfig struct {\n\tCode int `json:\"code\"`\n\n\tData string `json:\"data\"`\n}\n\ntype recordConfig struct {\n\tCode int `json:\"code\"`\n\n\tData []bodymsg `json:\"data\"`\n}\ntype bodymsg struct {\n\tDisabled bool `json:\"disabled\"`\n\n\tKey string `json:\"key\"`\n\n\tMtime float32 `json:\"mtime\"`\n\n\tTitle string `json:\"title\"`\n\n\tValue string `json:\"value\"`\n\n\tChildren []bodymsgchildren `json:\"children\"`\n}\n\ntype bodymsgchildren struct {\n\tKey string `json:\"key\"`\n\n\tMtime float32 `json:\"mtime\"`\n\n\tTitle  string `json:\"title\"`\n\tValue  string `json:\"value\"`\n\tParent string `json:\"parent\"`\n}\n```","slug":"cnblogs/15614177","published":1,"updated":"2022-07-10T11:02:55.150Z","_id":"cl5f3a2d9000ac0unhzqrfk06","comments":1,"layout":"post","photos":[],"link":"","content":"<p>纯粹练手用的，大家轻喷<br>青龙面板的脚本文件可以下载到本地，这样的话自己可以研究一下对应的脚本文件，能学到更多的知识，原理其实很简单，F12一下就知道了，青龙面板使用Request Headers里面放入Authorization，那么Token我们已经拿到了，然后获取到所有文件的名称，分级目录，太过于简单，直接上代码了<br><img src=\"/cnblogs/15614177/789895-20211128011722252-460488491.png\" class=\"lazyload placeholder\" data-srcset=\"/cnblogs/15614177/789895-20211128011722252-460488491.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">package main\n\nimport (\n\t&quot;bytes&quot;\n\t&quot;encoding&#x2F;json&quot;\n\t&quot;fmt&quot;\n\t&quot;io&quot;\n\t&quot;io&#x2F;ioutil&quot;\n\t&quot;net&#x2F;http&quot;\n\t&quot;os&quot;\n\t&quot;strconv&quot;\n\t&quot;strings&quot;\n\t&quot;time&quot;\n)\n\nfunc main() &#123;\n\n\trecordbody :&#x3D; getData(&quot;http:&#x2F;&#x2F;yourIp:5600&#x2F;api&#x2F;scripts&#x2F;files?t&#x3D;&quot;)\n\n\tvar conf recordConfig\n\terr :&#x3D; json.Unmarshal(recordbody, &amp;conf)\n\tif err !&#x3D; nil &#123;\n\t\tfmt.Println(&quot;error:&quot;, err)\n\t&#125;\n\n\tfmt.Printf(&quot;\\r\\n获取到的body code:%s \\n&quot;, strconv.Itoa(conf.Code))\n\tfor _, val :&#x3D; range conf.Data &#123;\n\t\tif val.Children !&#x3D; nil &#123;\n\t\t\tfor _, childval :&#x3D; range val.Children &#123;\n\t\t\t\tchildbody :&#x3D; getData(fmt.Sprintf(&quot;http:&#x2F;&#x2F;yourIp:5600&#x2F;api&#x2F;scripts&#x2F;%s?path&#x3D;%s&amp;t&#x3D;&quot;, childval.Value, childval.Parent))\n\t\t\t\tvar jsconf jsConfig\n\t\t\t\terr :&#x3D; json.Unmarshal(childbody, &amp;jsconf)\n\t\t\t\tif err !&#x3D; nil &#123;\n\t\t\t\t\tfmt.Println(&quot;error:&quot;, err)\n\t\t\t\t&#125;\n\n\t\t\t\tdownloadFile(strings.NewReader(string(jsconf.Data)), childval.Parent, childval.Value)\n\t\t\t&#125;\n\t\t&#125; else &#123;\n\t\t\tchildbody :&#x3D; getData(fmt.Sprintf(&quot;http:&#x2F;&#x2F;yourIp:5600&#x2F;api&#x2F;scripts&#x2F;%s?t&#x3D;&quot;, val.Value))\n\t\t\tvar jsconf jsConfig\n\t\t\terr :&#x3D; json.Unmarshal(childbody, &amp;jsconf)\n\t\t\tif err !&#x3D; nil &#123;\n\t\t\t\tfmt.Println(&quot;error:&quot;, err)\n\t\t\t&#125;\n\n\t\t\tdownloadFile(strings.NewReader(string(jsconf.Data)), &quot;&quot;, val.Value)\n\t\t&#125;\n\t&#125;\n\tfmt.Println(&quot;执行完毕&quot;)\n&#125;\nfunc getData(urlstr string) []byte &#123;\n\ttimes :&#x3D; strconv.FormatInt(time.Now().UnixNano()&#x2F;1e6, 10)\n\tvar bt bytes.Buffer\n\tbt.WriteString(urlstr)\n\tbt.WriteString(times)\n\tfmt.Printf(bt.String())\n\tfmt.Printf(&quot;\\n&quot;)\n\tclient :&#x3D; &amp;http.Client&#123;&#125;\n\treq, _ :&#x3D; http.NewRequest(&quot;GET&quot;, bt.String(), nil)\n\treq.Header.Add(&quot;Authorization&quot;, &quot;Bearer yourToken&quot;)\n\tresp, _ :&#x3D; client.Do(req)\n\tdefer resp.Body.Close()\n\tbody, _ :&#x3D; ioutil.ReadAll(resp.Body)\n\treturn body\n&#125;\nfunc downloadFile(body io.Reader, path string, name string) &#123;\n\tfilepath :&#x3D; fmt.Sprintf(&quot;.&#x2F;%s&quot;, name)\n\t&#x2F;&#x2F; Create output file\n\tif path !&#x3D; &quot;&quot; &#123;\n\t\tif _, err :&#x3D; os.Stat(path); os.IsNotExist(err) &#123;\n\t\t\t&#x2F;&#x2F; 必须分成两步：先创建文件夹、再修改权限\n\t\t\tos.Mkdir(path, 0777) &#x2F;&#x2F;0777也可以os.ModePerm\n\t\t\tos.Chmod(path, 0777)\n\t\t&#125;\n\t\tfilepath &#x3D; fmt.Sprintf(&quot;.&#x2F;%s&#x2F;%s&quot;, path, name)\n\t&#125;\n\tout, err :&#x3D; os.Create(filepath)\n\tif err !&#x3D; nil &#123;\n\t\tpanic(err)\n\t&#125;\n\tdefer out.Close()\n\t&#x2F;&#x2F; copy stream\n\t_, err &#x3D; io.Copy(out, body)\n\tif err !&#x3D; nil &#123;\n\t\tpanic(err)\n\t&#125;\n&#125;\n\ntype jsConfig struct &#123;\n\tCode int &#96;json:&quot;code&quot;&#96;\n\n\tData string &#96;json:&quot;data&quot;&#96;\n&#125;\n\ntype recordConfig struct &#123;\n\tCode int &#96;json:&quot;code&quot;&#96;\n\n\tData []bodymsg &#96;json:&quot;data&quot;&#96;\n&#125;\ntype bodymsg struct &#123;\n\tDisabled bool &#96;json:&quot;disabled&quot;&#96;\n\n\tKey string &#96;json:&quot;key&quot;&#96;\n\n\tMtime float32 &#96;json:&quot;mtime&quot;&#96;\n\n\tTitle string &#96;json:&quot;title&quot;&#96;\n\n\tValue string &#96;json:&quot;value&quot;&#96;\n\n\tChildren []bodymsgchildren &#96;json:&quot;children&quot;&#96;\n&#125;\n\ntype bodymsgchildren struct &#123;\n\tKey string &#96;json:&quot;key&quot;&#96;\n\n\tMtime float32 &#96;json:&quot;mtime&quot;&#96;\n\n\tTitle  string &#96;json:&quot;title&quot;&#96;\n\tValue  string &#96;json:&quot;value&quot;&#96;\n\tParent string &#96;json:&quot;parent&quot;&#96;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"wangpengzong","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/wangpengzong","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"<p>纯粹练手用的，大家轻喷<br>青龙面板的脚本文件可以下载到本地，这样的话自己可以研究一下对应的脚本文件，能学到更多的知识，原理其实很简单，F12一下就知道了，青龙面板使用Request Headers里面放入Authorization，那么Token我们已经拿到了，然后获取到所有文件的名称，分级目录，太过于简单，直接上代码了<br><img src=\"/cnblogs/15614177/789895-20211128011722252-460488491.png\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">package main\n\nimport (\n\t&quot;bytes&quot;\n\t&quot;encoding&#x2F;json&quot;\n\t&quot;fmt&quot;\n\t&quot;io&quot;\n\t&quot;io&#x2F;ioutil&quot;\n\t&quot;net&#x2F;http&quot;\n\t&quot;os&quot;\n\t&quot;strconv&quot;\n\t&quot;strings&quot;\n\t&quot;time&quot;\n)\n\nfunc main() &#123;\n\n\trecordbody :&#x3D; getData(&quot;http:&#x2F;&#x2F;yourIp:5600&#x2F;api&#x2F;scripts&#x2F;files?t&#x3D;&quot;)\n\n\tvar conf recordConfig\n\terr :&#x3D; json.Unmarshal(recordbody, &amp;conf)\n\tif err !&#x3D; nil &#123;\n\t\tfmt.Println(&quot;error:&quot;, err)\n\t&#125;\n\n\tfmt.Printf(&quot;\\r\\n获取到的body code:%s \\n&quot;, strconv.Itoa(conf.Code))\n\tfor _, val :&#x3D; range conf.Data &#123;\n\t\tif val.Children !&#x3D; nil &#123;\n\t\t\tfor _, childval :&#x3D; range val.Children &#123;\n\t\t\t\tchildbody :&#x3D; getData(fmt.Sprintf(&quot;http:&#x2F;&#x2F;yourIp:5600&#x2F;api&#x2F;scripts&#x2F;%s?path&#x3D;%s&amp;t&#x3D;&quot;, childval.Value, childval.Parent))\n\t\t\t\tvar jsconf jsConfig\n\t\t\t\terr :&#x3D; json.Unmarshal(childbody, &amp;jsconf)\n\t\t\t\tif err !&#x3D; nil &#123;\n\t\t\t\t\tfmt.Println(&quot;error:&quot;, err)\n\t\t\t\t&#125;\n\n\t\t\t\tdownloadFile(strings.NewReader(string(jsconf.Data)), childval.Parent, childval.Value)\n\t\t\t&#125;\n\t\t&#125; else &#123;\n\t\t\tchildbody :&#x3D; getData(fmt.Sprintf(&quot;http:&#x2F;&#x2F;yourIp:5600&#x2F;api&#x2F;scripts&#x2F;%s?t&#x3D;&quot;, val.Value))\n\t\t\tvar jsconf jsConfig\n\t\t\terr :&#x3D; json.Unmarshal(childbody, &amp;jsconf)\n\t\t\tif err !&#x3D; nil &#123;\n\t\t\t\tfmt.Println(&quot;error:&quot;, err)\n\t\t\t&#125;\n\n\t\t\tdownloadFile(strings.NewReader(string(jsconf.Data)), &quot;&quot;, val.Value)\n\t\t&#125;\n\t&#125;\n\tfmt.Println(&quot;执行完毕&quot;)\n&#125;\nfunc getData(urlstr string) []byte &#123;\n\ttimes :&#x3D; strconv.FormatInt(time.Now().UnixNano()&#x2F;1e6, 10)\n\tvar bt bytes.Buffer\n\tbt.WriteString(urlstr)\n\tbt.WriteString(times)\n\tfmt.Printf(bt.String())\n\tfmt.Printf(&quot;\\n&quot;)\n\tclient :&#x3D; &amp;http.Client&#123;&#125;\n\treq, _ :&#x3D; http.NewRequest(&quot;GET&quot;, bt.String(), nil)\n\treq.Header.Add(&quot;Authorization&quot;, &quot;Bearer yourToken&quot;)\n\tresp, _ :&#x3D; client.Do(req)\n\tdefer resp.Body.Close()\n\tbody, _ :&#x3D; ioutil.ReadAll(resp.Body)\n\treturn body\n&#125;\nfunc downloadFile(body io.Reader, path string, name string) &#123;\n\tfilepath :&#x3D; fmt.Sprintf(&quot;.&#x2F;%s&quot;, name)\n\t&#x2F;&#x2F; Create output file\n\tif path !&#x3D; &quot;&quot; &#123;\n\t\tif _, err :&#x3D; os.Stat(path); os.IsNotExist(err) &#123;\n\t\t\t&#x2F;&#x2F; 必须分成两步：先创建文件夹、再修改权限\n\t\t\tos.Mkdir(path, 0777) &#x2F;&#x2F;0777也可以os.ModePerm\n\t\t\tos.Chmod(path, 0777)\n\t\t&#125;\n\t\tfilepath &#x3D; fmt.Sprintf(&quot;.&#x2F;%s&#x2F;%s&quot;, path, name)\n\t&#125;\n\tout, err :&#x3D; os.Create(filepath)\n\tif err !&#x3D; nil &#123;\n\t\tpanic(err)\n\t&#125;\n\tdefer out.Close()\n\t&#x2F;&#x2F; copy stream\n\t_, err &#x3D; io.Copy(out, body)\n\tif err !&#x3D; nil &#123;\n\t\tpanic(err)\n\t&#125;\n&#125;\n\ntype jsConfig struct &#123;\n\tCode int &#96;json:&quot;code&quot;&#96;\n\n\tData string &#96;json:&quot;data&quot;&#96;\n&#125;\n\ntype recordConfig struct &#123;\n\tCode int &#96;json:&quot;code&quot;&#96;\n\n\tData []bodymsg &#96;json:&quot;data&quot;&#96;\n&#125;\ntype bodymsg struct &#123;\n\tDisabled bool &#96;json:&quot;disabled&quot;&#96;\n\n\tKey string &#96;json:&quot;key&quot;&#96;\n\n\tMtime float32 &#96;json:&quot;mtime&quot;&#96;\n\n\tTitle string &#96;json:&quot;title&quot;&#96;\n\n\tValue string &#96;json:&quot;value&quot;&#96;\n\n\tChildren []bodymsgchildren &#96;json:&quot;children&quot;&#96;\n&#125;\n\ntype bodymsgchildren struct &#123;\n\tKey string &#96;json:&quot;key&quot;&#96;\n\n\tMtime float32 &#96;json:&quot;mtime&quot;&#96;\n\n\tTitle  string &#96;json:&quot;title&quot;&#96;\n\tValue  string &#96;json:&quot;value&quot;&#96;\n\tParent string &#96;json:&quot;parent&quot;&#96;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>"},{"title":"群晖下 gitea+drone+harbor实现CI/CD 发布到云服务器","date":"2022-05-19T07:50:00.000Z","author":"wpzblog","_content":"## 常用命令\n```\nsudo -i然后输入密码登录root账户（群晖默认只能使用admin账号登陆）\n\nvim xxx编辑（编辑是进去之后按i，退出并保存是按esc，然后:wq!再回车）\n\nmkdir xx创建文件夹\n```\n## 准备\n ### 1. 群晖一般默认安装docker \n            我们不需要进行安装，如果没有安装，则去套件中心进行安装即可\n ### 2. 域名  \n            这个不做详细赘述 比如，此文中域名是www.mydomain.com\n ### 3. 文件夹权限\n            在群晖的volume2的docker文件夹下创建/volume2/docker/gitea/data、/volume2/docker/gitea/data、/volume2/docker/harbor/common/config，并赋予Everyone权限\n![](/cnblogs/16284709/789895-20220517111756488-2065442884.png)\n![](/cnblogs/16284709/789895-20220517111813678-1694156337.png)\n![](/cnblogs/16284709/789895-20220517111832836-992205237.png)\n![](/cnblogs/16284709/789895-20220517111854548-1820389538.png)\n\n ### 4. root权限\n             drone的deploy步骤需要root权限来进行docker发布，所以需要群晖的root也开一下，但是群晖默认关闭root\n```\nssh中sudo -i进入root权限\nvim /etc/ssh/sshd_config\n将#PermitRootLogin 这一行去掉注释，修改为PermitRootLogin yes\n保存退出，然后执行synouser --setpw root xxxxxx  （xxxxxx就是你的root密码）\nreboot重启群晖即可\n```\n\n## 安装PostgreSQL\n```\n执行下面的语句，安装postgres数据库，安装成功之后，用户名是postgres，密码是postgrespw，端口号是14332，初始数据库是postgres\ndocker run --name postgres -e POSTGRES_PASSWORD=postgrespw -v /volume2/docker/postgres/data:/var/lib/postgresql/data -d -p 14332:5432 postgres\n执行成功之后我们可以使用导航猫（navicat）连接试一下，连接成功之后添加一个gitea数据库\n```\n\n## 安装gitea\n```\n执行下面的语句，安装gitea\ndocker run -d --name=gitea -p 10022:22 -p 13000:3000 -v /volume2/docker/gitea/data:/data gitea/gitea\n```\n安装成功之后进入http://www.mydomain.com:13000,此时是一个gitea初始化的界面设置数据库连接是postgresql，数据库名称是gitea；修改站点名称，服务器域名www.mydomain.com,http端口3000，基础URL：http://www.mydomain.com:13000/ , 管理员账号密码填写gitea账号密码(比如账号是myusername)，邮箱写一个然后点击安装\n安装成功之后我们将进入http://www.mydomain.com:13000，输入账号密码进入，新建一个仓库，这个仓库可以是从其他网站仓库地址拉过来的，拉取过来的仓库只有只读权限，我们需要将仓库更改为普通仓库（在仓库设置=>危险操作区=>转移仓库所有权），否则会造成无法提交的问题（gitea  mirror repository is read-only）\n![](/cnblogs/16284709/789895-20220517112425303-1331896187.png)\n\n下一步，进行drone设置，此时我们的drone未安装，但是我们将14000端口分配给它使用，也就是http://www.mydomain.com:14000\n点击头像（右上角）=>设置=>应用=>创建新的 OAuth2 应用程序，应用名称填写drone，重定向 URI填写http://www.mydomain.com:14000/login，点击创建应用，记录一下client-id、client-secret\n\n## 安装drone\n在安装之前，我们可以先执行一下\n`openssl rand -hex 16`来获取一个共享的key，这个key值我们下面将使用到（当然也可以使用其他方法来随机获取一个加密程度更高的key）\n\n安装drone server\n```\ndocker run \\\n  --volume=/var/lib/drone:/data \\\n  --env=DRONE_GITEA_SERVER=http://www.mydomain.com:13000 \\\n  --env=DRONE_GITEA_CLIENT_ID=client-id \\\n  --env=DRONE_GITEA_CLIENT_SECRET=client-secret \\\n  --env=DRONE_RPC_SECRET=共享的key \\\n  --env=DRONE_SERVER_HOST=www.mydomain.com:14000 \\\n  --env=DRONE_DATABASE_DRIVER=postgres \\\n  --env=DRONE_DATABASE_DATASOURCE=postgres://postgres:postgrespw@172.17.0.1:14332/postgres?sslmode=disable \\\n  --env=DRONE_SERVER_PROTO=http \\\n  --publish=14000:80 \\\n  --publish=14443:443 \\\n  --restart=always \\\n  --detach=true \\\n  --name=drone \\\n  --env=DRONE_USER_CREATE=username:myusername,admin:true \\\n  drone/drone:2\n  \n```\n\n安装drone-runner\n```\ndocker run --detach \\\n  --volume=/var/run/docker.sock:/var/run/docker.sock \\\n  --env=DRONE_RPC_PROTO=http \\\n  --env=DRONE_RPC_HOST=www.mydomain.com:14000 \\\n  --env=DRONE_RPC_SECRET=共享的key \\\n  --env=DRONE_RUNNER_CAPACITY=2 \\\n  --env=DRONE_RUNNER_NAME=test-runner \\\n  --env=DRONE_AGENTS_ENABLED=true \\\n  --publish=14300:3000 \\\n  --restart=always \\\n  --name=runner \\\n  drone/drone-runner-docker:1\n  \n```\n安装成功之后，进入http://www.mydomain.com:14000,应该可以看到刚才我们在gitea创建的仓库了\n![](/cnblogs/16284709/789895-20220517114752421-658892608.png)\n\n在此时的gitea里面，我们在这个项目的设置=>Web 钩子里面能看到一个网址连接，这个网址连接就指向的是drone\n![](/cnblogs/16284709/789895-20220517130635925-523477370.png)\n\n点击仓库进去，在settings里面打开Trusted\n![](/cnblogs/16284709/789895-20220517130240740-1674070652.png)\n\n然后在左下角的setting里面添加用户test-runner（对应drone-runner安装里面的DRONE_RUNNER_NAME）\n![](/cnblogs/16284709/789895-20220517130352970-2011761276.png)\n\n此时，我们的gitea和drone已经OK了，我们来安装一下harbor\n\n## 安装harbor\n ### 1. 安装过程\n参考[使用Harbor搭建Docker私有镜像仓库](https://www.cnblogs.com/fallTakeMan/p/11944042.html)，去[goharbor/harbor/releases (https://github.com/goharbor/harbor/releases)下载一下最新版的harbor-offline-installer-vx.x.x.tgz，建议首先\n```\ncd /volume2/docker\nwget https://github.com/goharbor/harbor/releases/download/v1.10.11/harbor-offline-installer-v1.10.11.tgz\ntar -zxvf harbor-offline-installer-v1.10.11.tgz\ncd harbor\nmkdir common\ncd common\nmkdir config\ncd /volume2/docker/harbor\nvim harbor.yml  //修改一下hostname和port，比如hostname：www.mydomain.com ， port：19080, 然后保存退出\nsudo ./install.sh //最后会输出`Harbor has been installed  and started successfully`，说明安装成功\n```\n我们进入http://www.mydomain.com:19080，然后输入账号admin，密码Harbor12345，进入后去更改一下密码（！！！注意，此时的密码不能有特殊符号，否则不会保存，更改harbor.yml时，里面的所有密码最好不要随意更改）\n然后去系统设置=>用户管理新增一个用户（用户名：myharborname,密码：myharborpw），便于一会儿进行docker的操作\n同时点击项目=>library=>成员=>添加用户，将myharborname添加进来，权限设置成项目管理员（否则有可能出现publish阶段的denied: requested access to the resource is denied问题，该问题也可以通过`docker login www.mydomain.com:19080`登陆一下来尝试解决）\n![](/cnblogs/16284709/789895-20220517131720760-1485029732.png)\n ### 2. 问题\n  1. 如果出现了harbor-db容器经常重启的问题，可以通过`docker logs --tail=\"100\" harbor-db //查看最近100行日志`，如果日志是`could not write lock file \"postmaster.pid\": No space left on device`或者通过`cat /var/log/harbor/postgresql.log | tail -20`查出来的日志包含`could not close temporary statistics file \"pg_stat_tmp/db_12406.tmp\": No space left on device`，那说明docker提交太频繁导致内存不足，\n```\ncat /volume2/docker/harbor/docker-compose.yml --查看一下postgresql的映射路径，发现是/data/database\ncd /data/database\nrm -rf /data/database\ncd /data\nmkdir database\ncd /volume2/docker/harbor\ndocker-compose down -v --关闭所有的harbor容器\ncd /volume2/docker/harbor/common/config\nrm -rf *\ncd /volume2/docker/harbor\nsudo ./install.sh --重新安装一下，密码、用户等需要重新添加一次 \n```\n  2. 如果出现了http://www.mydomain.com:19080登陆报错500，那么一般去重启一下harbor的nginx容器即可\n\n## CI和CD\n我们再去drone中刚才的仓库中setting=>Secret新增两个Secret\n分别是：\ndocker_username 值：myharborname  ；  docker_password 值：myharborpw\n![](/cnblogs/16284709/789895-20220517132043920-686434640.png)\n\n之前的仓库我们拉取到本地，推荐使用Sourcetree，拉取之后在仓库的根目录下面创建两个文件.drone.yml和Dockerfile\n我这里使用的是.net 6，所有Dockerfile内容：\n```\nFROM mcr.microsoft.com/dotnet/aspnet:6.0\nCOPY . .\nWORKDIR /app\nEXPOSE 29029/tcp\nENTRYPOINT [\"dotnet\", \"k8s-netcore-demo.dll\"]\n```\n.drone.yml的内容：\n```\nkind: pipeline\ntype: docker\nname: deployment\n\nsteps:\n- name: ls\n  image: alpine\n  commands:\n  - ls -la\n  - ls -la Dockerfile  --查看当前文件夹是否包含了Dockerfile\n- name: build\n  image: mcr.microsoft.com/dotnet/sdk:6.0\n  commands:\n  - dotnet restore\n  - dotnet build -c Release -o /drone/src_temp/k8s-netcore-demo/ --no-restore  --build之后的文件输出到/drone/src_temp/k8s-netcore-demo/目录中，因为项目文件默认在/drone/src/目录，而build默认输出也是/drone/src/，我们后面发布到docker里面只需要发布build的文件即可，所以先输出到临时目录\n  - mv /drone/src/Dockerfile /drone/src_temp/k8s-netcore-demo/ --将项目文件目录中的Dockerfile也移动到临时目录\n  - rm -rf *   --删除项目文件/drone/src/下面的所有文件\n  - mv /drone/src_temp/k8s-netcore-demo/* /drone/src  --将临时目录的文件移动到drone执行的默认目录中\n  - ls -la  --查看最后的/drone/src/下文件，可以验证一下是不是build之后+Dockerfile文件\n  - pwd  --输出当前文件夹路径\n  - echo 项目生成成功\n- name: publish 2 harbor\n  image: plugins/docker\n  settings: \n    dockerfile: Dockerfile\n    tags: latest\n    insecure: true\n    registry: www.mydomain.com:19080\n    repo: www.mydomain.com:19080/library/k8s-netcore-demo\n    storage_driver: vfs\n    username: \n      from_secret: docker_username\n    password: \n      from_secret: docker_password\n- name: deploy\n  image: appleboy/drone-ssh\n  pull: true\n  settings:\n    host: 云服务器IP\n    port: 22\n    username: root\n    password: root密码\n    command_timeout: 2m\n    script: \n      - source /etc/profile\n      - ls -la\n      - docker info\n      - echo $(docker ps -aqf \"name=k8s-netcore-demo\")\n      - docker stop $(docker ps -aqf \"name=k8s-netcore-demo\")\n      - docker container rm k8s-netcore-demo\n      - docker rmi k8s-netcore-demo\n      - echo 查看是否成功删除k8s-netcore-demo\n      - docker ps -a\n      - echo 从harbor拉取docker镜像\n      - sudo docker container rm xxxxxx/k8s-netcore-demo\n      - sudo docker pull www.mydomain.com:19080/library/k8s-netcore-demo:latest\n      - sudo docker tag www.mydomain.com:19080/library/k8s-netcore-demo:latest xxxxxx/k8s-netcore-demo:latest\n      - sudo docker run --name k8s-netcore-demo -d -p 29029:80 xxxxxx/k8s-netcore-demo\n      - /usr/local/bin/docker system prune -f\n      - echo docker容器启动成功 \n//可增加 branches: [ master ] #只对master代码触发部署\n```\n这里简单解释一下\n\n   1. image: mcr.microsoft.com/dotnet/aspnet:6.0，原来的[Gogs + Drone 实现CI/CD（CD）](https://www.cnblogs.com/fallTakeMan/p/11875846.html)中image是microsoft/dotnet，但是实际会出现错误（Error response from daemon: pull access denied for microsoft/dotnet, repository does not exist or may require 'docker login': denied: requested access to the resource is denied），从[Unable to build pipeline: pull access denied for microsoft/dotnet, repository does not exist or may require 'docker login': denied: requested access](https://developercommunity.visualstudio.com/t/unable-to-build-pipeline-pull-access-denied-for-mi/1513743)中找到问题，是因为微软把docker库迁走了，这个仓库没有对应的dotnet镜像了。。。所以我们要根据自己的项目版本自己去更改， 不要使用mcr.microsoft.com/dotnet/aspnet:6.0，要使用sdk\n   2. dockerfile: Dockerfile这里我没有使用drone-ci-demo/Dockerfile，因为Dockerfile其实是在根目录下，可以查看name: ls的输出，查阅问题链接[unable to evaluate symlinks in Dockerfile path: lstat /drone/src/Dockerfile: no such file or directory](https://discourse.drone.io/t/unable-to-evaluate-symlinks-in-dockerfile-path-lstat-drone-src-dockerfile-no-such-file-or-directory/7379/3)\n   3. 增加storage_driver: vfs，解决链接[Plugins/Docker on Synology DSM](https://discourse.drone.io/t/plugins-docker-on-synology-dsm/8456/5)\n   4. 因为群晖默认没有开root，所以要按照准备工作第三步进行操作，打开root，如果使用admin账号，则会出现权限问题，是因为admin不能在ssh中调用docker和其他script指令（第一次尝试我是按照部署到群晖执行的（群晖的dotnet SDK安装之后软连接好像有问题，无法执行），所以有上面的一句话，如果发布到云服务器，可以给其他账户开权限，这样就不必使用root账户了）\n\n\n## 其他\n   ### 1. 群晖与其他linux的不同\n       #### 1. docker的daemon.json地址\n              不是`/etc/docker/daemon.json`,而是`/var/packages/Docker/etc/dockerd.json`\n       #### 2. 常用命令不是`systemctl`或者`service`\n              常用命令不是`systemctl`或者`service`，而是`synoservice`，前面加一个`syno`,可以通过`synoservicecfg --list`查看群晖下运行的所有服务，其中套件中心的服务前面需要加`pkgctl-`作为前缀，例如`synoservice –restart pkgctl-Docker`\n   ### 2. 云服务器安装dotnet，自己可以去查阅微软的文档 [在 Linux 发行版上安装 .NET](https://docs.microsoft.com/zh-cn/dotnet/core/install/linux)\n\n\n## 参考链接\nhttps://discourse.drone.io/\nhttps://plugins.drone.io/plugins/docker\nhttps://65535.pub/2020/06/01/gitea-drone-%E7%BE%A4%E6%99%96%E6%90%AD%E5%BB%BA/\nhttps://www.cnblogs.com/fallTakeMan/p/11944042.html\nhttps://www.cnblogs.com/fallTakeMan/p/11866584.html\nhttps://www.cnblogs.com/fallTakeMan/p/11875846.html\nhttps://www.hafuhafu.cn/267/\nhttps://www.cnblogs.com/manastudent/p/15938616.html\nhttps://www.msnao.com/2019/04/26/568.html\n","source":"_posts/cnblogs/16284709.md","raw":"---\ntitle: 群晖下 gitea+drone+harbor实现CI/CD 发布到云服务器\ndate: 2022-05-19T15:50:00\nauthor: wpzblog\ntags: [\"docker\",\"gitea\",\"drone\",\"harbor\",\"群晖\",\".net6\"]\n---\n## 常用命令\n```\nsudo -i然后输入密码登录root账户（群晖默认只能使用admin账号登陆）\n\nvim xxx编辑（编辑是进去之后按i，退出并保存是按esc，然后:wq!再回车）\n\nmkdir xx创建文件夹\n```\n## 准备\n ### 1. 群晖一般默认安装docker \n            我们不需要进行安装，如果没有安装，则去套件中心进行安装即可\n ### 2. 域名  \n            这个不做详细赘述 比如，此文中域名是www.mydomain.com\n ### 3. 文件夹权限\n            在群晖的volume2的docker文件夹下创建/volume2/docker/gitea/data、/volume2/docker/gitea/data、/volume2/docker/harbor/common/config，并赋予Everyone权限\n![](/cnblogs/16284709/789895-20220517111756488-2065442884.png)\n![](/cnblogs/16284709/789895-20220517111813678-1694156337.png)\n![](/cnblogs/16284709/789895-20220517111832836-992205237.png)\n![](/cnblogs/16284709/789895-20220517111854548-1820389538.png)\n\n ### 4. root权限\n             drone的deploy步骤需要root权限来进行docker发布，所以需要群晖的root也开一下，但是群晖默认关闭root\n```\nssh中sudo -i进入root权限\nvim /etc/ssh/sshd_config\n将#PermitRootLogin 这一行去掉注释，修改为PermitRootLogin yes\n保存退出，然后执行synouser --setpw root xxxxxx  （xxxxxx就是你的root密码）\nreboot重启群晖即可\n```\n\n## 安装PostgreSQL\n```\n执行下面的语句，安装postgres数据库，安装成功之后，用户名是postgres，密码是postgrespw，端口号是14332，初始数据库是postgres\ndocker run --name postgres -e POSTGRES_PASSWORD=postgrespw -v /volume2/docker/postgres/data:/var/lib/postgresql/data -d -p 14332:5432 postgres\n执行成功之后我们可以使用导航猫（navicat）连接试一下，连接成功之后添加一个gitea数据库\n```\n\n## 安装gitea\n```\n执行下面的语句，安装gitea\ndocker run -d --name=gitea -p 10022:22 -p 13000:3000 -v /volume2/docker/gitea/data:/data gitea/gitea\n```\n安装成功之后进入http://www.mydomain.com:13000,此时是一个gitea初始化的界面设置数据库连接是postgresql，数据库名称是gitea；修改站点名称，服务器域名www.mydomain.com,http端口3000，基础URL：http://www.mydomain.com:13000/ , 管理员账号密码填写gitea账号密码(比如账号是myusername)，邮箱写一个然后点击安装\n安装成功之后我们将进入http://www.mydomain.com:13000，输入账号密码进入，新建一个仓库，这个仓库可以是从其他网站仓库地址拉过来的，拉取过来的仓库只有只读权限，我们需要将仓库更改为普通仓库（在仓库设置=>危险操作区=>转移仓库所有权），否则会造成无法提交的问题（gitea  mirror repository is read-only）\n![](/cnblogs/16284709/789895-20220517112425303-1331896187.png)\n\n下一步，进行drone设置，此时我们的drone未安装，但是我们将14000端口分配给它使用，也就是http://www.mydomain.com:14000\n点击头像（右上角）=>设置=>应用=>创建新的 OAuth2 应用程序，应用名称填写drone，重定向 URI填写http://www.mydomain.com:14000/login，点击创建应用，记录一下client-id、client-secret\n\n## 安装drone\n在安装之前，我们可以先执行一下\n`openssl rand -hex 16`来获取一个共享的key，这个key值我们下面将使用到（当然也可以使用其他方法来随机获取一个加密程度更高的key）\n\n安装drone server\n```\ndocker run \\\n  --volume=/var/lib/drone:/data \\\n  --env=DRONE_GITEA_SERVER=http://www.mydomain.com:13000 \\\n  --env=DRONE_GITEA_CLIENT_ID=client-id \\\n  --env=DRONE_GITEA_CLIENT_SECRET=client-secret \\\n  --env=DRONE_RPC_SECRET=共享的key \\\n  --env=DRONE_SERVER_HOST=www.mydomain.com:14000 \\\n  --env=DRONE_DATABASE_DRIVER=postgres \\\n  --env=DRONE_DATABASE_DATASOURCE=postgres://postgres:postgrespw@172.17.0.1:14332/postgres?sslmode=disable \\\n  --env=DRONE_SERVER_PROTO=http \\\n  --publish=14000:80 \\\n  --publish=14443:443 \\\n  --restart=always \\\n  --detach=true \\\n  --name=drone \\\n  --env=DRONE_USER_CREATE=username:myusername,admin:true \\\n  drone/drone:2\n  \n```\n\n安装drone-runner\n```\ndocker run --detach \\\n  --volume=/var/run/docker.sock:/var/run/docker.sock \\\n  --env=DRONE_RPC_PROTO=http \\\n  --env=DRONE_RPC_HOST=www.mydomain.com:14000 \\\n  --env=DRONE_RPC_SECRET=共享的key \\\n  --env=DRONE_RUNNER_CAPACITY=2 \\\n  --env=DRONE_RUNNER_NAME=test-runner \\\n  --env=DRONE_AGENTS_ENABLED=true \\\n  --publish=14300:3000 \\\n  --restart=always \\\n  --name=runner \\\n  drone/drone-runner-docker:1\n  \n```\n安装成功之后，进入http://www.mydomain.com:14000,应该可以看到刚才我们在gitea创建的仓库了\n![](/cnblogs/16284709/789895-20220517114752421-658892608.png)\n\n在此时的gitea里面，我们在这个项目的设置=>Web 钩子里面能看到一个网址连接，这个网址连接就指向的是drone\n![](/cnblogs/16284709/789895-20220517130635925-523477370.png)\n\n点击仓库进去，在settings里面打开Trusted\n![](/cnblogs/16284709/789895-20220517130240740-1674070652.png)\n\n然后在左下角的setting里面添加用户test-runner（对应drone-runner安装里面的DRONE_RUNNER_NAME）\n![](/cnblogs/16284709/789895-20220517130352970-2011761276.png)\n\n此时，我们的gitea和drone已经OK了，我们来安装一下harbor\n\n## 安装harbor\n ### 1. 安装过程\n参考[使用Harbor搭建Docker私有镜像仓库](https://www.cnblogs.com/fallTakeMan/p/11944042.html)，去[goharbor/harbor/releases (https://github.com/goharbor/harbor/releases)下载一下最新版的harbor-offline-installer-vx.x.x.tgz，建议首先\n```\ncd /volume2/docker\nwget https://github.com/goharbor/harbor/releases/download/v1.10.11/harbor-offline-installer-v1.10.11.tgz\ntar -zxvf harbor-offline-installer-v1.10.11.tgz\ncd harbor\nmkdir common\ncd common\nmkdir config\ncd /volume2/docker/harbor\nvim harbor.yml  //修改一下hostname和port，比如hostname：www.mydomain.com ， port：19080, 然后保存退出\nsudo ./install.sh //最后会输出`Harbor has been installed  and started successfully`，说明安装成功\n```\n我们进入http://www.mydomain.com:19080，然后输入账号admin，密码Harbor12345，进入后去更改一下密码（！！！注意，此时的密码不能有特殊符号，否则不会保存，更改harbor.yml时，里面的所有密码最好不要随意更改）\n然后去系统设置=>用户管理新增一个用户（用户名：myharborname,密码：myharborpw），便于一会儿进行docker的操作\n同时点击项目=>library=>成员=>添加用户，将myharborname添加进来，权限设置成项目管理员（否则有可能出现publish阶段的denied: requested access to the resource is denied问题，该问题也可以通过`docker login www.mydomain.com:19080`登陆一下来尝试解决）\n![](/cnblogs/16284709/789895-20220517131720760-1485029732.png)\n ### 2. 问题\n  1. 如果出现了harbor-db容器经常重启的问题，可以通过`docker logs --tail=\"100\" harbor-db //查看最近100行日志`，如果日志是`could not write lock file \"postmaster.pid\": No space left on device`或者通过`cat /var/log/harbor/postgresql.log | tail -20`查出来的日志包含`could not close temporary statistics file \"pg_stat_tmp/db_12406.tmp\": No space left on device`，那说明docker提交太频繁导致内存不足，\n```\ncat /volume2/docker/harbor/docker-compose.yml --查看一下postgresql的映射路径，发现是/data/database\ncd /data/database\nrm -rf /data/database\ncd /data\nmkdir database\ncd /volume2/docker/harbor\ndocker-compose down -v --关闭所有的harbor容器\ncd /volume2/docker/harbor/common/config\nrm -rf *\ncd /volume2/docker/harbor\nsudo ./install.sh --重新安装一下，密码、用户等需要重新添加一次 \n```\n  2. 如果出现了http://www.mydomain.com:19080登陆报错500，那么一般去重启一下harbor的nginx容器即可\n\n## CI和CD\n我们再去drone中刚才的仓库中setting=>Secret新增两个Secret\n分别是：\ndocker_username 值：myharborname  ；  docker_password 值：myharborpw\n![](/cnblogs/16284709/789895-20220517132043920-686434640.png)\n\n之前的仓库我们拉取到本地，推荐使用Sourcetree，拉取之后在仓库的根目录下面创建两个文件.drone.yml和Dockerfile\n我这里使用的是.net 6，所有Dockerfile内容：\n```\nFROM mcr.microsoft.com/dotnet/aspnet:6.0\nCOPY . .\nWORKDIR /app\nEXPOSE 29029/tcp\nENTRYPOINT [\"dotnet\", \"k8s-netcore-demo.dll\"]\n```\n.drone.yml的内容：\n```\nkind: pipeline\ntype: docker\nname: deployment\n\nsteps:\n- name: ls\n  image: alpine\n  commands:\n  - ls -la\n  - ls -la Dockerfile  --查看当前文件夹是否包含了Dockerfile\n- name: build\n  image: mcr.microsoft.com/dotnet/sdk:6.0\n  commands:\n  - dotnet restore\n  - dotnet build -c Release -o /drone/src_temp/k8s-netcore-demo/ --no-restore  --build之后的文件输出到/drone/src_temp/k8s-netcore-demo/目录中，因为项目文件默认在/drone/src/目录，而build默认输出也是/drone/src/，我们后面发布到docker里面只需要发布build的文件即可，所以先输出到临时目录\n  - mv /drone/src/Dockerfile /drone/src_temp/k8s-netcore-demo/ --将项目文件目录中的Dockerfile也移动到临时目录\n  - rm -rf *   --删除项目文件/drone/src/下面的所有文件\n  - mv /drone/src_temp/k8s-netcore-demo/* /drone/src  --将临时目录的文件移动到drone执行的默认目录中\n  - ls -la  --查看最后的/drone/src/下文件，可以验证一下是不是build之后+Dockerfile文件\n  - pwd  --输出当前文件夹路径\n  - echo 项目生成成功\n- name: publish 2 harbor\n  image: plugins/docker\n  settings: \n    dockerfile: Dockerfile\n    tags: latest\n    insecure: true\n    registry: www.mydomain.com:19080\n    repo: www.mydomain.com:19080/library/k8s-netcore-demo\n    storage_driver: vfs\n    username: \n      from_secret: docker_username\n    password: \n      from_secret: docker_password\n- name: deploy\n  image: appleboy/drone-ssh\n  pull: true\n  settings:\n    host: 云服务器IP\n    port: 22\n    username: root\n    password: root密码\n    command_timeout: 2m\n    script: \n      - source /etc/profile\n      - ls -la\n      - docker info\n      - echo $(docker ps -aqf \"name=k8s-netcore-demo\")\n      - docker stop $(docker ps -aqf \"name=k8s-netcore-demo\")\n      - docker container rm k8s-netcore-demo\n      - docker rmi k8s-netcore-demo\n      - echo 查看是否成功删除k8s-netcore-demo\n      - docker ps -a\n      - echo 从harbor拉取docker镜像\n      - sudo docker container rm xxxxxx/k8s-netcore-demo\n      - sudo docker pull www.mydomain.com:19080/library/k8s-netcore-demo:latest\n      - sudo docker tag www.mydomain.com:19080/library/k8s-netcore-demo:latest xxxxxx/k8s-netcore-demo:latest\n      - sudo docker run --name k8s-netcore-demo -d -p 29029:80 xxxxxx/k8s-netcore-demo\n      - /usr/local/bin/docker system prune -f\n      - echo docker容器启动成功 \n//可增加 branches: [ master ] #只对master代码触发部署\n```\n这里简单解释一下\n\n   1. image: mcr.microsoft.com/dotnet/aspnet:6.0，原来的[Gogs + Drone 实现CI/CD（CD）](https://www.cnblogs.com/fallTakeMan/p/11875846.html)中image是microsoft/dotnet，但是实际会出现错误（Error response from daemon: pull access denied for microsoft/dotnet, repository does not exist or may require 'docker login': denied: requested access to the resource is denied），从[Unable to build pipeline: pull access denied for microsoft/dotnet, repository does not exist or may require 'docker login': denied: requested access](https://developercommunity.visualstudio.com/t/unable-to-build-pipeline-pull-access-denied-for-mi/1513743)中找到问题，是因为微软把docker库迁走了，这个仓库没有对应的dotnet镜像了。。。所以我们要根据自己的项目版本自己去更改， 不要使用mcr.microsoft.com/dotnet/aspnet:6.0，要使用sdk\n   2. dockerfile: Dockerfile这里我没有使用drone-ci-demo/Dockerfile，因为Dockerfile其实是在根目录下，可以查看name: ls的输出，查阅问题链接[unable to evaluate symlinks in Dockerfile path: lstat /drone/src/Dockerfile: no such file or directory](https://discourse.drone.io/t/unable-to-evaluate-symlinks-in-dockerfile-path-lstat-drone-src-dockerfile-no-such-file-or-directory/7379/3)\n   3. 增加storage_driver: vfs，解决链接[Plugins/Docker on Synology DSM](https://discourse.drone.io/t/plugins-docker-on-synology-dsm/8456/5)\n   4. 因为群晖默认没有开root，所以要按照准备工作第三步进行操作，打开root，如果使用admin账号，则会出现权限问题，是因为admin不能在ssh中调用docker和其他script指令（第一次尝试我是按照部署到群晖执行的（群晖的dotnet SDK安装之后软连接好像有问题，无法执行），所以有上面的一句话，如果发布到云服务器，可以给其他账户开权限，这样就不必使用root账户了）\n\n\n## 其他\n   ### 1. 群晖与其他linux的不同\n       #### 1. docker的daemon.json地址\n              不是`/etc/docker/daemon.json`,而是`/var/packages/Docker/etc/dockerd.json`\n       #### 2. 常用命令不是`systemctl`或者`service`\n              常用命令不是`systemctl`或者`service`，而是`synoservice`，前面加一个`syno`,可以通过`synoservicecfg --list`查看群晖下运行的所有服务，其中套件中心的服务前面需要加`pkgctl-`作为前缀，例如`synoservice –restart pkgctl-Docker`\n   ### 2. 云服务器安装dotnet，自己可以去查阅微软的文档 [在 Linux 发行版上安装 .NET](https://docs.microsoft.com/zh-cn/dotnet/core/install/linux)\n\n\n## 参考链接\nhttps://discourse.drone.io/\nhttps://plugins.drone.io/plugins/docker\nhttps://65535.pub/2020/06/01/gitea-drone-%E7%BE%A4%E6%99%96%E6%90%AD%E5%BB%BA/\nhttps://www.cnblogs.com/fallTakeMan/p/11944042.html\nhttps://www.cnblogs.com/fallTakeMan/p/11866584.html\nhttps://www.cnblogs.com/fallTakeMan/p/11875846.html\nhttps://www.hafuhafu.cn/267/\nhttps://www.cnblogs.com/manastudent/p/15938616.html\nhttps://www.msnao.com/2019/04/26/568.html\n","slug":"cnblogs/16284709","published":1,"updated":"2022-07-10T11:02:54.079Z","_id":"cl5f3a2da000cc0un58suh37p","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo -i然后输入密码登录root账户（群晖默认只能使用admin账号登陆）\n\nvim xxx编辑（编辑是进去之后按i，退出并保存是按esc，然后:wq!再回车）\n\nmkdir xx创建文件夹<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h2><h3 id=\"1-群晖一般默认安装docker\"><a href=\"#1-群晖一般默认安装docker\" class=\"headerlink\" title=\"1. 群晖一般默认安装docker\"></a>1. 群晖一般默认安装docker</h3><pre><code>        我们不需要进行安装，如果没有安装，则去套件中心进行安装即可\n</code></pre>\n<h3 id=\"2-域名\"><a href=\"#2-域名\" class=\"headerlink\" title=\"2. 域名\"></a>2. 域名</h3><pre><code>        这个不做详细赘述 比如，此文中域名是www.mydomain.com\n</code></pre>\n<h3 id=\"3-文件夹权限\"><a href=\"#3-文件夹权限\" class=\"headerlink\" title=\"3. 文件夹权限\"></a>3. 文件夹权限</h3><pre><code>        在群晖的volume2的docker文件夹下创建/volume2/docker/gitea/data、/volume2/docker/gitea/data、/volume2/docker/harbor/common/config，并赋予Everyone权限\n</code></pre>\n<p><img src=\"/cnblogs/16284709/789895-20220517111756488-2065442884.png\" class=\"lazyload placeholder\" data-srcset=\"/cnblogs/16284709/789895-20220517111756488-2065442884.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\"><br><img src=\"/cnblogs/16284709/789895-20220517111813678-1694156337.png\" class=\"lazyload placeholder\" data-srcset=\"/cnblogs/16284709/789895-20220517111813678-1694156337.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\"><br><img src=\"/cnblogs/16284709/789895-20220517111832836-992205237.png\" class=\"lazyload placeholder\" data-srcset=\"/cnblogs/16284709/789895-20220517111832836-992205237.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\"><br><img src=\"/cnblogs/16284709/789895-20220517111854548-1820389538.png\" class=\"lazyload placeholder\" data-srcset=\"/cnblogs/16284709/789895-20220517111854548-1820389538.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\"></p>\n<h3 id=\"4-root权限\"><a href=\"#4-root权限\" class=\"headerlink\" title=\"4. root权限\"></a>4. root权限</h3><pre><code>         drone的deploy步骤需要root权限来进行docker发布，所以需要群晖的root也开一下，但是群晖默认关闭root\n</code></pre>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ssh中sudo -i进入root权限\nvim &#x2F;etc&#x2F;ssh&#x2F;sshd_config\n将#PermitRootLogin 这一行去掉注释，修改为PermitRootLogin yes\n保存退出，然后执行synouser --setpw root xxxxxx  （xxxxxx就是你的root密码）\nreboot重启群晖即可<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"安装PostgreSQL\"><a href=\"#安装PostgreSQL\" class=\"headerlink\" title=\"安装PostgreSQL\"></a>安装PostgreSQL</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">执行下面的语句，安装postgres数据库，安装成功之后，用户名是postgres，密码是postgrespw，端口号是14332，初始数据库是postgres\ndocker run --name postgres -e POSTGRES_PASSWORD&#x3D;postgrespw -v &#x2F;volume2&#x2F;docker&#x2F;postgres&#x2F;data:&#x2F;var&#x2F;lib&#x2F;postgresql&#x2F;data -d -p 14332:5432 postgres\n执行成功之后我们可以使用导航猫（navicat）连接试一下，连接成功之后添加一个gitea数据库<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"安装gitea\"><a href=\"#安装gitea\" class=\"headerlink\" title=\"安装gitea\"></a>安装gitea</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">执行下面的语句，安装gitea\ndocker run -d --name&#x3D;gitea -p 10022:22 -p 13000:3000 -v &#x2F;volume2&#x2F;docker&#x2F;gitea&#x2F;data:&#x2F;data gitea&#x2F;gitea<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>安装成功之后进入<a href=\"http://www.mydomain.com:13000,此时是一个gitea初始化的界面设置数据库连接是postgresql，数据库名称是gitea；修改站点名称，服务器域名www.mydomain.com,http端口3000，基础URL：http://www.mydomain.com:13000/\">http://www.mydomain.com:13000,此时是一个gitea初始化的界面设置数据库连接是postgresql，数据库名称是gitea；修改站点名称，服务器域名www.mydomain.com,http端口3000，基础URL：http://www.mydomain.com:13000/</a> , 管理员账号密码填写gitea账号密码(比如账号是myusername)，邮箱写一个然后点击安装<br>安装成功之后我们将进入<a href=\"http://www.mydomain.com:13000，输入账号密码进入，新建一个仓库，这个仓库可以是从其他网站仓库地址拉过来的，拉取过来的仓库只有只读权限，我们需要将仓库更改为普通仓库（在仓库设置=&gt;危险操作区=&gt;转移仓库所有权），否则会造成无法提交的问题（gitea\">http://www.mydomain.com:13000，输入账号密码进入，新建一个仓库，这个仓库可以是从其他网站仓库地址拉过来的，拉取过来的仓库只有只读权限，我们需要将仓库更改为普通仓库（在仓库设置=&gt;危险操作区=&gt;转移仓库所有权），否则会造成无法提交的问题（gitea</a>  mirror repository is read-only）<br><img src=\"/cnblogs/16284709/789895-20220517112425303-1331896187.png\" class=\"lazyload placeholder\" data-srcset=\"/cnblogs/16284709/789895-20220517112425303-1331896187.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\"></p>\n<p>下一步，进行drone设置，此时我们的drone未安装，但是我们将14000端口分配给它使用，也就是<a href=\"http://www.mydomain.com:14000/\">http://www.mydomain.com:14000</a><br>点击头像（右上角）=&gt;设置=&gt;应用=&gt;创建新的 OAuth2 应用程序，应用名称填写drone，重定向 URI填写<a href=\"http://www.mydomain.com:14000/login%EF%BC%8C%E7%82%B9%E5%87%BB%E5%88%9B%E5%BB%BA%E5%BA%94%E7%94%A8%EF%BC%8C%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%8Bclient-id%E3%80%81client-secret\">http://www.mydomain.com:14000/login，点击创建应用，记录一下client-id、client-secret</a></p>\n<h2 id=\"安装drone\"><a href=\"#安装drone\" class=\"headerlink\" title=\"安装drone\"></a>安装drone</h2><p>在安装之前，我们可以先执行一下<br><code>openssl rand -hex 16</code>来获取一个共享的key，这个key值我们下面将使用到（当然也可以使用其他方法来随机获取一个加密程度更高的key）</p>\n<p>安装drone server</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">docker run \\\n  --volume&#x3D;&#x2F;var&#x2F;lib&#x2F;drone:&#x2F;data \\\n  --env&#x3D;DRONE_GITEA_SERVER&#x3D;http:&#x2F;&#x2F;www.mydomain.com:13000 \\\n  --env&#x3D;DRONE_GITEA_CLIENT_ID&#x3D;client-id \\\n  --env&#x3D;DRONE_GITEA_CLIENT_SECRET&#x3D;client-secret \\\n  --env&#x3D;DRONE_RPC_SECRET&#x3D;共享的key \\\n  --env&#x3D;DRONE_SERVER_HOST&#x3D;www.mydomain.com:14000 \\\n  --env&#x3D;DRONE_DATABASE_DRIVER&#x3D;postgres \\\n  --env&#x3D;DRONE_DATABASE_DATASOURCE&#x3D;postgres:&#x2F;&#x2F;postgres:postgrespw@172.17.0.1:14332&#x2F;postgres?sslmode&#x3D;disable \\\n  --env&#x3D;DRONE_SERVER_PROTO&#x3D;http \\\n  --publish&#x3D;14000:80 \\\n  --publish&#x3D;14443:443 \\\n  --restart&#x3D;always \\\n  --detach&#x3D;true \\\n  --name&#x3D;drone \\\n  --env&#x3D;DRONE_USER_CREATE&#x3D;username:myusername,admin:true \\\n  drone&#x2F;drone:2\n  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>安装drone-runner</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">docker run --detach \\\n  --volume&#x3D;&#x2F;var&#x2F;run&#x2F;docker.sock:&#x2F;var&#x2F;run&#x2F;docker.sock \\\n  --env&#x3D;DRONE_RPC_PROTO&#x3D;http \\\n  --env&#x3D;DRONE_RPC_HOST&#x3D;www.mydomain.com:14000 \\\n  --env&#x3D;DRONE_RPC_SECRET&#x3D;共享的key \\\n  --env&#x3D;DRONE_RUNNER_CAPACITY&#x3D;2 \\\n  --env&#x3D;DRONE_RUNNER_NAME&#x3D;test-runner \\\n  --env&#x3D;DRONE_AGENTS_ENABLED&#x3D;true \\\n  --publish&#x3D;14300:3000 \\\n  --restart&#x3D;always \\\n  --name&#x3D;runner \\\n  drone&#x2F;drone-runner-docker:1\n  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>安装成功之后，进入<a href=\"http://www.mydomain.com:14000,应该可以看到刚才我们在gitea创建的仓库了\">http://www.mydomain.com:14000,应该可以看到刚才我们在gitea创建的仓库了</a><br><img src=\"/cnblogs/16284709/789895-20220517114752421-658892608.png\" class=\"lazyload placeholder\" data-srcset=\"/cnblogs/16284709/789895-20220517114752421-658892608.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\"></p>\n<p>在此时的gitea里面，我们在这个项目的设置=&gt;Web 钩子里面能看到一个网址连接，这个网址连接就指向的是drone<br><img src=\"/cnblogs/16284709/789895-20220517130635925-523477370.png\" class=\"lazyload placeholder\" data-srcset=\"/cnblogs/16284709/789895-20220517130635925-523477370.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\"></p>\n<p>点击仓库进去，在settings里面打开Trusted<br><img src=\"/cnblogs/16284709/789895-20220517130240740-1674070652.png\" class=\"lazyload placeholder\" data-srcset=\"/cnblogs/16284709/789895-20220517130240740-1674070652.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\"></p>\n<p>然后在左下角的setting里面添加用户test-runner（对应drone-runner安装里面的DRONE_RUNNER_NAME）<br><img src=\"/cnblogs/16284709/789895-20220517130352970-2011761276.png\" class=\"lazyload placeholder\" data-srcset=\"/cnblogs/16284709/789895-20220517130352970-2011761276.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\"></p>\n<p>此时，我们的gitea和drone已经OK了，我们来安装一下harbor</p>\n<h2 id=\"安装harbor\"><a href=\"#安装harbor\" class=\"headerlink\" title=\"安装harbor\"></a>安装harbor</h2><h3 id=\"1-安装过程\"><a href=\"#1-安装过程\" class=\"headerlink\" title=\"1. 安装过程\"></a>1. 安装过程</h3><p>参考<a href=\"https://www.cnblogs.com/fallTakeMan/p/11944042.html\">使用Harbor搭建Docker私有镜像仓库</a>，去[goharbor/harbor/releases (<a href=\"https://github.com/goharbor/harbor/releases)%E4%B8%8B%E8%BD%BD%E4%B8%80%E4%B8%8B%E6%9C%80%E6%96%B0%E7%89%88%E7%9A%84harbor-offline-installer-vx.x.x.tgz%EF%BC%8C%E5%BB%BA%E8%AE%AE%E9%A6%96%E5%85%88\">https://github.com/goharbor/harbor/releases)下载一下最新版的harbor-offline-installer-vx.x.x.tgz，建议首先</a></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cd &#x2F;volume2&#x2F;docker\nwget https:&#x2F;&#x2F;github.com&#x2F;goharbor&#x2F;harbor&#x2F;releases&#x2F;download&#x2F;v1.10.11&#x2F;harbor-offline-installer-v1.10.11.tgz\ntar -zxvf harbor-offline-installer-v1.10.11.tgz\ncd harbor\nmkdir common\ncd common\nmkdir config\ncd &#x2F;volume2&#x2F;docker&#x2F;harbor\nvim harbor.yml  &#x2F;&#x2F;修改一下hostname和port，比如hostname：www.mydomain.com ， port：19080, 然后保存退出\nsudo .&#x2F;install.sh &#x2F;&#x2F;最后会输出&#96;Harbor has been installed  and started successfully&#96;，说明安装成功<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>我们进入<a href=\"http://www.mydomain.com:19080，然后输入账号admin，密码Harbor12345，进入后去更改一下密码（！！！注意，此时的密码不能有特殊符号，否则不会保存，更改harbor.yml时，里面的所有密码最好不要随意更改）\">http://www.mydomain.com:19080，然后输入账号admin，密码Harbor12345，进入后去更改一下密码（！！！注意，此时的密码不能有特殊符号，否则不会保存，更改harbor.yml时，里面的所有密码最好不要随意更改）</a><br>然后去系统设置=&gt;用户管理新增一个用户（用户名：myharborname,密码：myharborpw），便于一会儿进行docker的操作<br>同时点击项目=&gt;library=&gt;成员=&gt;添加用户，将myharborname添加进来，权限设置成项目管理员（否则有可能出现publish阶段的denied: requested access to the resource is denied问题，该问题也可以通过<code>docker login www.mydomain.com:19080</code>登陆一下来尝试解决）<br><img src=\"/cnblogs/16284709/789895-20220517131720760-1485029732.png\" class=\"lazyload placeholder\" data-srcset=\"/cnblogs/16284709/789895-20220517131720760-1485029732.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\"></p>\n<h3 id=\"2-问题\"><a href=\"#2-问题\" class=\"headerlink\" title=\"2. 问题\"></a>2. 问题</h3><ol>\n<li>如果出现了harbor-db容器经常重启的问题，可以通过<code>docker logs --tail=&quot;100&quot; harbor-db //查看最近100行日志</code>，如果日志是<code>could not write lock file &quot;postmaster.pid&quot;: No space left on device</code>或者通过<code>cat /var/log/harbor/postgresql.log | tail -20</code>查出来的日志包含<code>could not close temporary statistics file &quot;pg_stat_tmp/db_12406.tmp&quot;: No space left on device</code>，那说明docker提交太频繁导致内存不足，<pre class=\"line-numbers language-none\"><code class=\"language-none\">cat &#x2F;volume2&#x2F;docker&#x2F;harbor&#x2F;docker-compose.yml --查看一下postgresql的映射路径，发现是&#x2F;data&#x2F;database\ncd &#x2F;data&#x2F;database\nrm -rf &#x2F;data&#x2F;database\ncd &#x2F;data\nmkdir database\ncd &#x2F;volume2&#x2F;docker&#x2F;harbor\ndocker-compose down -v --关闭所有的harbor容器\ncd &#x2F;volume2&#x2F;docker&#x2F;harbor&#x2F;common&#x2F;config\nrm -rf *\ncd &#x2F;volume2&#x2F;docker&#x2F;harbor\nsudo .&#x2F;install.sh --重新安装一下，密码、用户等需要重新添加一次 <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li>如果出现了<a href=\"http://www.mydomain.com:19080登陆报错500，那么一般去重启一下harbor的nginx容器即可\">http://www.mydomain.com:19080登陆报错500，那么一般去重启一下harbor的nginx容器即可</a></li>\n</ol>\n<h2 id=\"CI和CD\"><a href=\"#CI和CD\" class=\"headerlink\" title=\"CI和CD\"></a>CI和CD</h2><p>我们再去drone中刚才的仓库中setting=&gt;Secret新增两个Secret<br>分别是：<br>docker_username 值：myharborname  ；  docker_password 值：myharborpw<br><img src=\"/cnblogs/16284709/789895-20220517132043920-686434640.png\" class=\"lazyload placeholder\" data-srcset=\"/cnblogs/16284709/789895-20220517132043920-686434640.png\" srcset=\"https://img2.baidu.com/it/u=2037979560,2772131037&fm=26&fmt=auto&gp=0.jpg\"></p>\n<p>之前的仓库我们拉取到本地，推荐使用Sourcetree，拉取之后在仓库的根目录下面创建两个文件.drone.yml和Dockerfile<br>我这里使用的是.net 6，所有Dockerfile内容：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">FROM mcr.microsoft.com&#x2F;dotnet&#x2F;aspnet:6.0\nCOPY . .\nWORKDIR &#x2F;app\nEXPOSE 29029&#x2F;tcp\nENTRYPOINT [&quot;dotnet&quot;, &quot;k8s-netcore-demo.dll&quot;]<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>.drone.yml的内容：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">kind: pipeline\ntype: docker\nname: deployment\n\nsteps:\n- name: ls\n  image: alpine\n  commands:\n  - ls -la\n  - ls -la Dockerfile  --查看当前文件夹是否包含了Dockerfile\n- name: build\n  image: mcr.microsoft.com&#x2F;dotnet&#x2F;sdk:6.0\n  commands:\n  - dotnet restore\n  - dotnet build -c Release -o &#x2F;drone&#x2F;src_temp&#x2F;k8s-netcore-demo&#x2F; --no-restore  --build之后的文件输出到&#x2F;drone&#x2F;src_temp&#x2F;k8s-netcore-demo&#x2F;目录中，因为项目文件默认在&#x2F;drone&#x2F;src&#x2F;目录，而build默认输出也是&#x2F;drone&#x2F;src&#x2F;，我们后面发布到docker里面只需要发布build的文件即可，所以先输出到临时目录\n  - mv &#x2F;drone&#x2F;src&#x2F;Dockerfile &#x2F;drone&#x2F;src_temp&#x2F;k8s-netcore-demo&#x2F; --将项目文件目录中的Dockerfile也移动到临时目录\n  - rm -rf *   --删除项目文件&#x2F;drone&#x2F;src&#x2F;下面的所有文件\n  - mv &#x2F;drone&#x2F;src_temp&#x2F;k8s-netcore-demo&#x2F;* &#x2F;drone&#x2F;src  --将临时目录的文件移动到drone执行的默认目录中\n  - ls -la  --查看最后的&#x2F;drone&#x2F;src&#x2F;下文件，可以验证一下是不是build之后+Dockerfile文件\n  - pwd  --输出当前文件夹路径\n  - echo 项目生成成功\n- name: publish 2 harbor\n  image: plugins&#x2F;docker\n  settings: \n    dockerfile: Dockerfile\n    tags: latest\n    insecure: true\n    registry: www.mydomain.com:19080\n    repo: www.mydomain.com:19080&#x2F;library&#x2F;k8s-netcore-demo\n    storage_driver: vfs\n    username: \n      from_secret: docker_username\n    password: \n      from_secret: docker_password\n- name: deploy\n  image: appleboy&#x2F;drone-ssh\n  pull: true\n  settings:\n    host: 云服务器IP\n    port: 22\n    username: root\n    password: root密码\n    command_timeout: 2m\n    script: \n      - source &#x2F;etc&#x2F;profile\n      - ls -la\n      - docker info\n      - echo $(docker ps -aqf &quot;name&#x3D;k8s-netcore-demo&quot;)\n      - docker stop $(docker ps -aqf &quot;name&#x3D;k8s-netcore-demo&quot;)\n      - docker container rm k8s-netcore-demo\n      - docker rmi k8s-netcore-demo\n      - echo 查看是否成功删除k8s-netcore-demo\n      - docker ps -a\n      - echo 从harbor拉取docker镜像\n      - sudo docker container rm xxxxxx&#x2F;k8s-netcore-demo\n      - sudo docker pull www.mydomain.com:19080&#x2F;library&#x2F;k8s-netcore-demo:latest\n      - sudo docker tag www.mydomain.com:19080&#x2F;library&#x2F;k8s-netcore-demo:latest xxxxxx&#x2F;k8s-netcore-demo:latest\n      - sudo docker run --name k8s-netcore-demo -d -p 29029:80 xxxxxx&#x2F;k8s-netcore-demo\n      - &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker system prune -f\n      - echo docker容器启动成功 \n&#x2F;&#x2F;可增加 branches: [ master ] #只对master代码触发部署<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这里简单解释一下</p>\n<ol>\n<li>image: mcr.microsoft.com/dotnet/aspnet:6.0，原来的<a href=\"https://www.cnblogs.com/fallTakeMan/p/11875846.html\">Gogs + Drone 实现CI/CD（CD）</a>中image是microsoft/dotnet，但是实际会出现错误（Error response from daemon: pull access denied for microsoft/dotnet, repository does not exist or may require ‘docker login’: denied: requested access to the resource is denied），从<a href=\"https://developercommunity.visualstudio.com/t/unable-to-build-pipeline-pull-access-denied-for-mi/1513743\">Unable to build pipeline: pull access denied for microsoft/dotnet, repository does not exist or may require ‘docker login’: denied: requested access</a>中找到问题，是因为微软把docker库迁走了，这个仓库没有对应的dotnet镜像了。。。所以我们要根据自己的项目版本自己去更改， 不要使用mcr.microsoft.com/dotnet/aspnet:6.0，要使用sdk</li>\n<li>dockerfile: Dockerfile这里我没有使用drone-ci-demo/Dockerfile，因为Dockerfile其实是在根目录下，可以查看name: ls的输出，查阅问题链接<a href=\"https://discourse.drone.io/t/unable-to-evaluate-symlinks-in-dockerfile-path-lstat-drone-src-dockerfile-no-such-file-or-directory/7379/3\">unable to evaluate symlinks in Dockerfile path: lstat /drone/src/Dockerfile: no such file or directory</a></li>\n<li>增加storage_driver: vfs，解决链接<a href=\"https://discourse.drone.io/t/plugins-docker-on-synology-dsm/8456/5\">Plugins/Docker on Synology DSM</a></li>\n<li>因为群晖默认没有开root，所以要按照准备工作第三步进行操作，打开root，如果使用admin账号，则会出现权限问题，是因为admin不能在ssh中调用docker和其他script指令（第一次尝试我是按照部署到群晖执行的（群晖的dotnet SDK安装之后软连接好像有问题，无法执行），所以有上面的一句话，如果发布到云服务器，可以给其他账户开权限，这样就不必使用root账户了）</li>\n</ol>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><h3 id=\"1-群晖与其他linux的不同\"><a href=\"#1-群晖与其他linux的不同\" class=\"headerlink\" title=\"1. 群晖与其他linux的不同\"></a>1. 群晖与其他linux的不同</h3><pre><code>   #### 1. docker的daemon.json地址\n          不是`/etc/docker/daemon.json`,而是`/var/packages/Docker/etc/dockerd.json`\n   #### 2. 常用命令不是`systemctl`或者`service`\n          常用命令不是`systemctl`或者`service`，而是`synoservice`，前面加一个`syno`,可以通过`synoservicecfg --list`查看群晖下运行的所有服务，其中套件中心的服务前面需要加`pkgctl-`作为前缀，例如`synoservice –restart pkgctl-Docker`\n</code></pre>\n<h3 id=\"2-云服务器安装dotnet，自己可以去查阅微软的文档-在-Linux-发行版上安装-NET\"><a href=\"#2-云服务器安装dotnet，自己可以去查阅微软的文档-在-Linux-发行版上安装-NET\" class=\"headerlink\" title=\"2. 云服务器安装dotnet，自己可以去查阅微软的文档 在 Linux 发行版上安装 .NET\"></a>2. 云服务器安装dotnet，自己可以去查阅微软的文档 <a href=\"https://docs.microsoft.com/zh-cn/dotnet/core/install/linux\">在 Linux 发行版上安装 .NET</a></h3><h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><p><a href=\"https://discourse.drone.io/\">https://discourse.drone.io/</a><br><a href=\"https://plugins.drone.io/plugins/docker\">https://plugins.drone.io/plugins/docker</a><br><a href=\"https://65535.pub/2020/06/01/gitea-drone-%E7%BE%A4%E6%99%96%E6%90%AD%E5%BB%BA/\">https://65535.pub/2020/06/01/gitea-drone-%E7%BE%A4%E6%99%96%E6%90%AD%E5%BB%BA/</a><br><a href=\"https://www.cnblogs.com/fallTakeMan/p/11944042.html\">https://www.cnblogs.com/fallTakeMan/p/11944042.html</a><br><a href=\"https://www.cnblogs.com/fallTakeMan/p/11866584.html\">https://www.cnblogs.com/fallTakeMan/p/11866584.html</a><br><a href=\"https://www.cnblogs.com/fallTakeMan/p/11875846.html\">https://www.cnblogs.com/fallTakeMan/p/11875846.html</a><br><a href=\"https://www.hafuhafu.cn/267/\">https://www.hafuhafu.cn/267/</a><br><a href=\"https://www.cnblogs.com/manastudent/p/15938616.html\">https://www.cnblogs.com/manastudent/p/15938616.html</a><br><a href=\"https://www.msnao.com/2019/04/26/568.html\">https://www.msnao.com/2019/04/26/568.html</a></p>\n","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"wangpengzong","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/wangpengzong","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"<h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo -i然后输入密码登录root账户（群晖默认只能使用admin账号登陆）\n\nvim xxx编辑（编辑是进去之后按i，退出并保存是按esc，然后:wq!再回车）\n\nmkdir xx创建文件夹<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h2><h3 id=\"1-群晖一般默认安装docker\"><a href=\"#1-群晖一般默认安装docker\" class=\"headerlink\" title=\"1. 群晖一般默认安装docker\"></a>1. 群晖一般默认安装docker</h3><pre><code>        我们不需要进行安装，如果没有安装，则去套件中心进行安装即可\n</code></pre>\n<h3 id=\"2-域名\"><a href=\"#2-域名\" class=\"headerlink\" title=\"2. 域名\"></a>2. 域名</h3><pre><code>        这个不做详细赘述 比如，此文中域名是www.mydomain.com\n</code></pre>\n<h3 id=\"3-文件夹权限\"><a href=\"#3-文件夹权限\" class=\"headerlink\" title=\"3. 文件夹权限\"></a>3. 文件夹权限</h3><pre><code>        在群晖的volume2的docker文件夹下创建/volume2/docker/gitea/data、/volume2/docker/gitea/data、/volume2/docker/harbor/common/config，并赋予Everyone权限\n</code></pre>\n<p><img src=\"/cnblogs/16284709/789895-20220517111756488-2065442884.png\"><br><img src=\"/cnblogs/16284709/789895-20220517111813678-1694156337.png\"><br><img src=\"/cnblogs/16284709/789895-20220517111832836-992205237.png\"><br><img src=\"/cnblogs/16284709/789895-20220517111854548-1820389538.png\"></p>\n<h3 id=\"4-root权限\"><a href=\"#4-root权限\" class=\"headerlink\" title=\"4. root权限\"></a>4. root权限</h3><pre><code>         drone的deploy步骤需要root权限来进行docker发布，所以需要群晖的root也开一下，但是群晖默认关闭root\n</code></pre>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ssh中sudo -i进入root权限\nvim &#x2F;etc&#x2F;ssh&#x2F;sshd_config\n将#PermitRootLogin 这一行去掉注释，修改为PermitRootLogin yes\n保存退出，然后执行synouser --setpw root xxxxxx  （xxxxxx就是你的root密码）\nreboot重启群晖即可<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"安装PostgreSQL\"><a href=\"#安装PostgreSQL\" class=\"headerlink\" title=\"安装PostgreSQL\"></a>安装PostgreSQL</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">执行下面的语句，安装postgres数据库，安装成功之后，用户名是postgres，密码是postgrespw，端口号是14332，初始数据库是postgres\ndocker run --name postgres -e POSTGRES_PASSWORD&#x3D;postgrespw -v &#x2F;volume2&#x2F;docker&#x2F;postgres&#x2F;data:&#x2F;var&#x2F;lib&#x2F;postgresql&#x2F;data -d -p 14332:5432 postgres\n执行成功之后我们可以使用导航猫（navicat）连接试一下，连接成功之后添加一个gitea数据库<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"安装gitea\"><a href=\"#安装gitea\" class=\"headerlink\" title=\"安装gitea\"></a>安装gitea</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">执行下面的语句，安装gitea\ndocker run -d --name&#x3D;gitea -p 10022:22 -p 13000:3000 -v &#x2F;volume2&#x2F;docker&#x2F;gitea&#x2F;data:&#x2F;data gitea&#x2F;gitea<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>安装成功之后进入<a href=\"http://www.mydomain.com:13000,此时是一个gitea初始化的界面设置数据库连接是postgresql，数据库名称是gitea；修改站点名称，服务器域名www.mydomain.com,http端口3000，基础URL：http://www.mydomain.com:13000/\">http://www.mydomain.com:13000,此时是一个gitea初始化的界面设置数据库连接是postgresql，数据库名称是gitea；修改站点名称，服务器域名www.mydomain.com,http端口3000，基础URL：http://www.mydomain.com:13000/</a> , 管理员账号密码填写gitea账号密码(比如账号是myusername)，邮箱写一个然后点击安装<br>安装成功之后我们将进入<a href=\"http://www.mydomain.com:13000，输入账号密码进入，新建一个仓库，这个仓库可以是从其他网站仓库地址拉过来的，拉取过来的仓库只有只读权限，我们需要将仓库更改为普通仓库（在仓库设置=&gt;危险操作区=&gt;转移仓库所有权），否则会造成无法提交的问题（gitea\">http://www.mydomain.com:13000，输入账号密码进入，新建一个仓库，这个仓库可以是从其他网站仓库地址拉过来的，拉取过来的仓库只有只读权限，我们需要将仓库更改为普通仓库（在仓库设置=&gt;危险操作区=&gt;转移仓库所有权），否则会造成无法提交的问题（gitea</a>  mirror repository is read-only）<br><img src=\"/cnblogs/16284709/789895-20220517112425303-1331896187.png\"></p>\n<p>下一步，进行drone设置，此时我们的drone未安装，但是我们将14000端口分配给它使用，也就是<a href=\"http://www.mydomain.com:14000/\">http://www.mydomain.com:14000</a><br>点击头像（右上角）=&gt;设置=&gt;应用=&gt;创建新的 OAuth2 应用程序，应用名称填写drone，重定向 URI填写<a href=\"http://www.mydomain.com:14000/login%EF%BC%8C%E7%82%B9%E5%87%BB%E5%88%9B%E5%BB%BA%E5%BA%94%E7%94%A8%EF%BC%8C%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%8Bclient-id%E3%80%81client-secret\">http://www.mydomain.com:14000/login，点击创建应用，记录一下client-id、client-secret</a></p>\n<h2 id=\"安装drone\"><a href=\"#安装drone\" class=\"headerlink\" title=\"安装drone\"></a>安装drone</h2><p>在安装之前，我们可以先执行一下<br><code>openssl rand -hex 16</code>来获取一个共享的key，这个key值我们下面将使用到（当然也可以使用其他方法来随机获取一个加密程度更高的key）</p>\n<p>安装drone server</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">docker run \\\n  --volume&#x3D;&#x2F;var&#x2F;lib&#x2F;drone:&#x2F;data \\\n  --env&#x3D;DRONE_GITEA_SERVER&#x3D;http:&#x2F;&#x2F;www.mydomain.com:13000 \\\n  --env&#x3D;DRONE_GITEA_CLIENT_ID&#x3D;client-id \\\n  --env&#x3D;DRONE_GITEA_CLIENT_SECRET&#x3D;client-secret \\\n  --env&#x3D;DRONE_RPC_SECRET&#x3D;共享的key \\\n  --env&#x3D;DRONE_SERVER_HOST&#x3D;www.mydomain.com:14000 \\\n  --env&#x3D;DRONE_DATABASE_DRIVER&#x3D;postgres \\\n  --env&#x3D;DRONE_DATABASE_DATASOURCE&#x3D;postgres:&#x2F;&#x2F;postgres:postgrespw@172.17.0.1:14332&#x2F;postgres?sslmode&#x3D;disable \\\n  --env&#x3D;DRONE_SERVER_PROTO&#x3D;http \\\n  --publish&#x3D;14000:80 \\\n  --publish&#x3D;14443:443 \\\n  --restart&#x3D;always \\\n  --detach&#x3D;true \\\n  --name&#x3D;drone \\\n  --env&#x3D;DRONE_USER_CREATE&#x3D;username:myusername,admin:true \\\n  drone&#x2F;drone:2\n  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>安装drone-runner</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">docker run --detach \\\n  --volume&#x3D;&#x2F;var&#x2F;run&#x2F;docker.sock:&#x2F;var&#x2F;run&#x2F;docker.sock \\\n  --env&#x3D;DRONE_RPC_PROTO&#x3D;http \\\n  --env&#x3D;DRONE_RPC_HOST&#x3D;www.mydomain.com:14000 \\\n  --env&#x3D;DRONE_RPC_SECRET&#x3D;共享的key \\\n  --env&#x3D;DRONE_RUNNER_CAPACITY&#x3D;2 \\\n  --env&#x3D;DRONE_RUNNER_NAME&#x3D;test-runner \\\n  --env&#x3D;DRONE_AGENTS_ENABLED&#x3D;true \\\n  --publish&#x3D;14300:3000 \\\n  --restart&#x3D;always \\\n  --name&#x3D;runner \\\n  drone&#x2F;drone-runner-docker:1\n  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>安装成功之后，进入<a href=\"http://www.mydomain.com:14000,应该可以看到刚才我们在gitea创建的仓库了\">http://www.mydomain.com:14000,应该可以看到刚才我们在gitea创建的仓库了</a><br><img src=\"/cnblogs/16284709/789895-20220517114752421-658892608.png\"></p>\n<p>在此时的gitea里面，我们在这个项目的设置=&gt;Web 钩子里面能看到一个网址连接，这个网址连接就指向的是drone<br><img src=\"/cnblogs/16284709/789895-20220517130635925-523477370.png\"></p>\n<p>点击仓库进去，在settings里面打开Trusted<br><img src=\"/cnblogs/16284709/789895-20220517130240740-1674070652.png\"></p>\n<p>然后在左下角的setting里面添加用户test-runner（对应drone-runner安装里面的DRONE_RUNNER_NAME）<br><img src=\"/cnblogs/16284709/789895-20220517130352970-2011761276.png\"></p>\n<p>此时，我们的gitea和drone已经OK了，我们来安装一下harbor</p>\n<h2 id=\"安装harbor\"><a href=\"#安装harbor\" class=\"headerlink\" title=\"安装harbor\"></a>安装harbor</h2><h3 id=\"1-安装过程\"><a href=\"#1-安装过程\" class=\"headerlink\" title=\"1. 安装过程\"></a>1. 安装过程</h3><p>参考<a href=\"https://www.cnblogs.com/fallTakeMan/p/11944042.html\">使用Harbor搭建Docker私有镜像仓库</a>，去[goharbor/harbor/releases (<a href=\"https://github.com/goharbor/harbor/releases)%E4%B8%8B%E8%BD%BD%E4%B8%80%E4%B8%8B%E6%9C%80%E6%96%B0%E7%89%88%E7%9A%84harbor-offline-installer-vx.x.x.tgz%EF%BC%8C%E5%BB%BA%E8%AE%AE%E9%A6%96%E5%85%88\">https://github.com/goharbor/harbor/releases)下载一下最新版的harbor-offline-installer-vx.x.x.tgz，建议首先</a></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cd &#x2F;volume2&#x2F;docker\nwget https:&#x2F;&#x2F;github.com&#x2F;goharbor&#x2F;harbor&#x2F;releases&#x2F;download&#x2F;v1.10.11&#x2F;harbor-offline-installer-v1.10.11.tgz\ntar -zxvf harbor-offline-installer-v1.10.11.tgz\ncd harbor\nmkdir common\ncd common\nmkdir config\ncd &#x2F;volume2&#x2F;docker&#x2F;harbor\nvim harbor.yml  &#x2F;&#x2F;修改一下hostname和port，比如hostname：www.mydomain.com ， port：19080, 然后保存退出\nsudo .&#x2F;install.sh &#x2F;&#x2F;最后会输出&#96;Harbor has been installed  and started successfully&#96;，说明安装成功<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>我们进入<a href=\"http://www.mydomain.com:19080，然后输入账号admin，密码Harbor12345，进入后去更改一下密码（！！！注意，此时的密码不能有特殊符号，否则不会保存，更改harbor.yml时，里面的所有密码最好不要随意更改）\">http://www.mydomain.com:19080，然后输入账号admin，密码Harbor12345，进入后去更改一下密码（！！！注意，此时的密码不能有特殊符号，否则不会保存，更改harbor.yml时，里面的所有密码最好不要随意更改）</a><br>然后去系统设置=&gt;用户管理新增一个用户（用户名：myharborname,密码：myharborpw），便于一会儿进行docker的操作<br>同时点击项目=&gt;library=&gt;成员=&gt;添加用户，将myharborname添加进来，权限设置成项目管理员（否则有可能出现publish阶段的denied: requested access to the resource is denied问题，该问题也可以通过<code>docker login www.mydomain.com:19080</code>登陆一下来尝试解决）<br><img src=\"/cnblogs/16284709/789895-20220517131720760-1485029732.png\"></p>\n<h3 id=\"2-问题\"><a href=\"#2-问题\" class=\"headerlink\" title=\"2. 问题\"></a>2. 问题</h3><ol>\n<li>如果出现了harbor-db容器经常重启的问题，可以通过<code>docker logs --tail=&quot;100&quot; harbor-db //查看最近100行日志</code>，如果日志是<code>could not write lock file &quot;postmaster.pid&quot;: No space left on device</code>或者通过<code>cat /var/log/harbor/postgresql.log | tail -20</code>查出来的日志包含<code>could not close temporary statistics file &quot;pg_stat_tmp/db_12406.tmp&quot;: No space left on device</code>，那说明docker提交太频繁导致内存不足，<pre class=\"line-numbers language-none\"><code class=\"language-none\">cat &#x2F;volume2&#x2F;docker&#x2F;harbor&#x2F;docker-compose.yml --查看一下postgresql的映射路径，发现是&#x2F;data&#x2F;database\ncd &#x2F;data&#x2F;database\nrm -rf &#x2F;data&#x2F;database\ncd &#x2F;data\nmkdir database\ncd &#x2F;volume2&#x2F;docker&#x2F;harbor\ndocker-compose down -v --关闭所有的harbor容器\ncd &#x2F;volume2&#x2F;docker&#x2F;harbor&#x2F;common&#x2F;config\nrm -rf *\ncd &#x2F;volume2&#x2F;docker&#x2F;harbor\nsudo .&#x2F;install.sh --重新安装一下，密码、用户等需要重新添加一次 <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n<li>如果出现了<a href=\"http://www.mydomain.com:19080登陆报错500，那么一般去重启一下harbor的nginx容器即可\">http://www.mydomain.com:19080登陆报错500，那么一般去重启一下harbor的nginx容器即可</a></li>\n</ol>\n<h2 id=\"CI和CD\"><a href=\"#CI和CD\" class=\"headerlink\" title=\"CI和CD\"></a>CI和CD</h2><p>我们再去drone中刚才的仓库中setting=&gt;Secret新增两个Secret<br>分别是：<br>docker_username 值：myharborname  ；  docker_password 值：myharborpw<br><img src=\"/cnblogs/16284709/789895-20220517132043920-686434640.png\"></p>\n<p>之前的仓库我们拉取到本地，推荐使用Sourcetree，拉取之后在仓库的根目录下面创建两个文件.drone.yml和Dockerfile<br>我这里使用的是.net 6，所有Dockerfile内容：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">FROM mcr.microsoft.com&#x2F;dotnet&#x2F;aspnet:6.0\nCOPY . .\nWORKDIR &#x2F;app\nEXPOSE 29029&#x2F;tcp\nENTRYPOINT [&quot;dotnet&quot;, &quot;k8s-netcore-demo.dll&quot;]<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>.drone.yml的内容：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">kind: pipeline\ntype: docker\nname: deployment\n\nsteps:\n- name: ls\n  image: alpine\n  commands:\n  - ls -la\n  - ls -la Dockerfile  --查看当前文件夹是否包含了Dockerfile\n- name: build\n  image: mcr.microsoft.com&#x2F;dotnet&#x2F;sdk:6.0\n  commands:\n  - dotnet restore\n  - dotnet build -c Release -o &#x2F;drone&#x2F;src_temp&#x2F;k8s-netcore-demo&#x2F; --no-restore  --build之后的文件输出到&#x2F;drone&#x2F;src_temp&#x2F;k8s-netcore-demo&#x2F;目录中，因为项目文件默认在&#x2F;drone&#x2F;src&#x2F;目录，而build默认输出也是&#x2F;drone&#x2F;src&#x2F;，我们后面发布到docker里面只需要发布build的文件即可，所以先输出到临时目录\n  - mv &#x2F;drone&#x2F;src&#x2F;Dockerfile &#x2F;drone&#x2F;src_temp&#x2F;k8s-netcore-demo&#x2F; --将项目文件目录中的Dockerfile也移动到临时目录\n  - rm -rf *   --删除项目文件&#x2F;drone&#x2F;src&#x2F;下面的所有文件\n  - mv &#x2F;drone&#x2F;src_temp&#x2F;k8s-netcore-demo&#x2F;* &#x2F;drone&#x2F;src  --将临时目录的文件移动到drone执行的默认目录中\n  - ls -la  --查看最后的&#x2F;drone&#x2F;src&#x2F;下文件，可以验证一下是不是build之后+Dockerfile文件\n  - pwd  --输出当前文件夹路径\n  - echo 项目生成成功\n- name: publish 2 harbor\n  image: plugins&#x2F;docker\n  settings: \n    dockerfile: Dockerfile\n    tags: latest\n    insecure: true\n    registry: www.mydomain.com:19080\n    repo: www.mydomain.com:19080&#x2F;library&#x2F;k8s-netcore-demo\n    storage_driver: vfs\n    username: \n      from_secret: docker_username\n    password: \n      from_secret: docker_password\n- name: deploy\n  image: appleboy&#x2F;drone-ssh\n  pull: true\n  settings:\n    host: 云服务器IP\n    port: 22\n    username: root\n    password: root密码\n    command_timeout: 2m\n    script: \n      - source &#x2F;etc&#x2F;profile\n      - ls -la\n      - docker info\n      - echo $(docker ps -aqf &quot;name&#x3D;k8s-netcore-demo&quot;)\n      - docker stop $(docker ps -aqf &quot;name&#x3D;k8s-netcore-demo&quot;)\n      - docker container rm k8s-netcore-demo\n      - docker rmi k8s-netcore-demo\n      - echo 查看是否成功删除k8s-netcore-demo\n      - docker ps -a\n      - echo 从harbor拉取docker镜像\n      - sudo docker container rm xxxxxx&#x2F;k8s-netcore-demo\n      - sudo docker pull www.mydomain.com:19080&#x2F;library&#x2F;k8s-netcore-demo:latest\n      - sudo docker tag www.mydomain.com:19080&#x2F;library&#x2F;k8s-netcore-demo:latest xxxxxx&#x2F;k8s-netcore-demo:latest\n      - sudo docker run --name k8s-netcore-demo -d -p 29029:80 xxxxxx&#x2F;k8s-netcore-demo\n      - &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker system prune -f\n      - echo docker容器启动成功 \n&#x2F;&#x2F;可增加 branches: [ master ] #只对master代码触发部署<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这里简单解释一下</p>\n<ol>\n<li>image: mcr.microsoft.com/dotnet/aspnet:6.0，原来的<a href=\"https://www.cnblogs.com/fallTakeMan/p/11875846.html\">Gogs + Drone 实现CI/CD（CD）</a>中image是microsoft/dotnet，但是实际会出现错误（Error response from daemon: pull access denied for microsoft/dotnet, repository does not exist or may require ‘docker login’: denied: requested access to the resource is denied），从<a href=\"https://developercommunity.visualstudio.com/t/unable-to-build-pipeline-pull-access-denied-for-mi/1513743\">Unable to build pipeline: pull access denied for microsoft/dotnet, repository does not exist or may require ‘docker login’: denied: requested access</a>中找到问题，是因为微软把docker库迁走了，这个仓库没有对应的dotnet镜像了。。。所以我们要根据自己的项目版本自己去更改， 不要使用mcr.microsoft.com/dotnet/aspnet:6.0，要使用sdk</li>\n<li>dockerfile: Dockerfile这里我没有使用drone-ci-demo/Dockerfile，因为Dockerfile其实是在根目录下，可以查看name: ls的输出，查阅问题链接<a href=\"https://discourse.drone.io/t/unable-to-evaluate-symlinks-in-dockerfile-path-lstat-drone-src-dockerfile-no-such-file-or-directory/7379/3\">unable to evaluate symlinks in Dockerfile path: lstat /drone/src/Dockerfile: no such file or directory</a></li>\n<li>增加storage_driver: vfs，解决链接<a href=\"https://discourse.drone.io/t/plugins-docker-on-synology-dsm/8456/5\">Plugins/Docker on Synology DSM</a></li>\n<li>因为群晖默认没有开root，所以要按照准备工作第三步进行操作，打开root，如果使用admin账号，则会出现权限问题，是因为admin不能在ssh中调用docker和其他script指令（第一次尝试我是按照部署到群晖执行的（群晖的dotnet SDK安装之后软连接好像有问题，无法执行），所以有上面的一句话，如果发布到云服务器，可以给其他账户开权限，这样就不必使用root账户了）</li>\n</ol>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><h3 id=\"1-群晖与其他linux的不同\"><a href=\"#1-群晖与其他linux的不同\" class=\"headerlink\" title=\"1. 群晖与其他linux的不同\"></a>1. 群晖与其他linux的不同</h3><pre><code>   #### 1. docker的daemon.json地址\n          不是`/etc/docker/daemon.json`,而是`/var/packages/Docker/etc/dockerd.json`\n   #### 2. 常用命令不是`systemctl`或者`service`\n          常用命令不是`systemctl`或者`service`，而是`synoservice`，前面加一个`syno`,可以通过`synoservicecfg --list`查看群晖下运行的所有服务，其中套件中心的服务前面需要加`pkgctl-`作为前缀，例如`synoservice –restart pkgctl-Docker`\n</code></pre>\n<h3 id=\"2-云服务器安装dotnet，自己可以去查阅微软的文档-在-Linux-发行版上安装-NET\"><a href=\"#2-云服务器安装dotnet，自己可以去查阅微软的文档-在-Linux-发行版上安装-NET\" class=\"headerlink\" title=\"2. 云服务器安装dotnet，自己可以去查阅微软的文档 在 Linux 发行版上安装 .NET\"></a>2. 云服务器安装dotnet，自己可以去查阅微软的文档 <a href=\"https://docs.microsoft.com/zh-cn/dotnet/core/install/linux\">在 Linux 发行版上安装 .NET</a></h3><h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><p><a href=\"https://discourse.drone.io/\">https://discourse.drone.io/</a><br><a href=\"https://plugins.drone.io/plugins/docker\">https://plugins.drone.io/plugins/docker</a><br><a href=\"https://65535.pub/2020/06/01/gitea-drone-%E7%BE%A4%E6%99%96%E6%90%AD%E5%BB%BA/\">https://65535.pub/2020/06/01/gitea-drone-%E7%BE%A4%E6%99%96%E6%90%AD%E5%BB%BA/</a><br><a href=\"https://www.cnblogs.com/fallTakeMan/p/11944042.html\">https://www.cnblogs.com/fallTakeMan/p/11944042.html</a><br><a href=\"https://www.cnblogs.com/fallTakeMan/p/11866584.html\">https://www.cnblogs.com/fallTakeMan/p/11866584.html</a><br><a href=\"https://www.cnblogs.com/fallTakeMan/p/11875846.html\">https://www.cnblogs.com/fallTakeMan/p/11875846.html</a><br><a href=\"https://www.hafuhafu.cn/267/\">https://www.hafuhafu.cn/267/</a><br><a href=\"https://www.cnblogs.com/manastudent/p/15938616.html\">https://www.cnblogs.com/manastudent/p/15938616.html</a><br><a href=\"https://www.msnao.com/2019/04/26/568.html\">https://www.msnao.com/2019/04/26/568.html</a></p>\n"},{"title":"oracle删除超过N天数据脚本","date":"2022-02-28T02:52:00.000Z","author":"wpzblog","_content":"公司内做的项目是工厂内的，一般工厂内数据要求的是实时性，很久之前的数据可以自行删除处理，我们数据库用的oracle，所以就想着写一个脚本来删除，这样的话，脚本不管放在那里使用都可以达到效果\n\n由于服务器是windows，参照[Oracle Shell Scripting](https://oracle-base.com/articles/misc/oracle-shell-scripting)中，我们写一下windows下的脚本\n\n首先删除数据的sql语句写一下\n```\nDELETE FROM tablename WHERE createdtime<TRUNC(SYSDATE)-59;  --删除59天前的数据\ncommit;   --提交事务\nalter table tablename enable row movement;  --数据删除之后会产生很多空行，打开行移动，移动之后rowid会发生变化\nalter table tablename shrink space;  --连同索引一起压缩，解决delete语句造成的空间未释放问题\nalter table tablename disable row movement;  --关闭行迁移\n```\n这一段相当于\n```\nSPOOL C:\\emp.lst\nSET LINESIZE 100\nSET PAGESIZE 50\nSELECT *\nFROM emp;\nSPOOL OFF\n```\n\n所以我们得到了一个新的sql文件,例如C:\\emp.sql\n```\nCONNECT scott/tiger\n--开始删除\nDELETE FROM tablename WHERE createdtime<TRUNC(SYSDATE)-59;\ncommit;\nalter table tablename enable row movement;\nalter table tablename shrink space;\nalter table tablename disable row movement;\n--结束删除\n--如果删除多个表，可以将上面语句复制一下，tablename和where条件修改一下就可以了\nEXIT;\n```\n\n然后创建一个文件C:\\get_emp.bat\n```\n@echo off\necho 开始删除过期数据并缩容\n\nsqlplus /nolog @C:\\emp.sql\n\necho 执行成功\npause\nexit\n```\n\n保存之后，执行一下看会不会出现问题，如果不会出现问题，添加一下windows的任务计划程序，或者自己写一个windows服务，定期调用一下这个bat就可以了\n\nlinux版本的类似，写法这个连接下面有，写完之后先进行测试，然后使用cron或者其他进行定期调用即可\n\n当然，操作数据库表不局限于定期清理数据，也可以进行报表生成、新表创建等其他操作\n","source":"_posts/cnblogs/15944641.md","raw":"---\ntitle: oracle删除超过N天数据脚本\ndate: 2022-02-28T10:52:00\nauthor: wpzblog\ntags: []\n---\n公司内做的项目是工厂内的，一般工厂内数据要求的是实时性，很久之前的数据可以自行删除处理，我们数据库用的oracle，所以就想着写一个脚本来删除，这样的话，脚本不管放在那里使用都可以达到效果\n\n由于服务器是windows，参照[Oracle Shell Scripting](https://oracle-base.com/articles/misc/oracle-shell-scripting)中，我们写一下windows下的脚本\n\n首先删除数据的sql语句写一下\n```\nDELETE FROM tablename WHERE createdtime<TRUNC(SYSDATE)-59;  --删除59天前的数据\ncommit;   --提交事务\nalter table tablename enable row movement;  --数据删除之后会产生很多空行，打开行移动，移动之后rowid会发生变化\nalter table tablename shrink space;  --连同索引一起压缩，解决delete语句造成的空间未释放问题\nalter table tablename disable row movement;  --关闭行迁移\n```\n这一段相当于\n```\nSPOOL C:\\emp.lst\nSET LINESIZE 100\nSET PAGESIZE 50\nSELECT *\nFROM emp;\nSPOOL OFF\n```\n\n所以我们得到了一个新的sql文件,例如C:\\emp.sql\n```\nCONNECT scott/tiger\n--开始删除\nDELETE FROM tablename WHERE createdtime<TRUNC(SYSDATE)-59;\ncommit;\nalter table tablename enable row movement;\nalter table tablename shrink space;\nalter table tablename disable row movement;\n--结束删除\n--如果删除多个表，可以将上面语句复制一下，tablename和where条件修改一下就可以了\nEXIT;\n```\n\n然后创建一个文件C:\\get_emp.bat\n```\n@echo off\necho 开始删除过期数据并缩容\n\nsqlplus /nolog @C:\\emp.sql\n\necho 执行成功\npause\nexit\n```\n\n保存之后，执行一下看会不会出现问题，如果不会出现问题，添加一下windows的任务计划程序，或者自己写一个windows服务，定期调用一下这个bat就可以了\n\nlinux版本的类似，写法这个连接下面有，写完之后先进行测试，然后使用cron或者其他进行定期调用即可\n\n当然，操作数据库表不局限于定期清理数据，也可以进行报表生成、新表创建等其他操作\n","slug":"cnblogs/15944641","published":1,"updated":"2022-07-10T11:02:54.182Z","_id":"cl5f3a2db000ec0un9w3k4nre","comments":1,"layout":"post","photos":[],"link":"","content":"<p>公司内做的项目是工厂内的，一般工厂内数据要求的是实时性，很久之前的数据可以自行删除处理，我们数据库用的oracle，所以就想着写一个脚本来删除，这样的话，脚本不管放在那里使用都可以达到效果</p>\n<p>由于服务器是windows，参照<a href=\"https://oracle-base.com/articles/misc/oracle-shell-scripting\">Oracle Shell Scripting</a>中，我们写一下windows下的脚本</p>\n<p>首先删除数据的sql语句写一下</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">DELETE FROM tablename WHERE createdtime&lt;TRUNC(SYSDATE)-59;  --删除59天前的数据\ncommit;   --提交事务\nalter table tablename enable row movement;  --数据删除之后会产生很多空行，打开行移动，移动之后rowid会发生变化\nalter table tablename shrink space;  --连同索引一起压缩，解决delete语句造成的空间未释放问题\nalter table tablename disable row movement;  --关闭行迁移<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这一段相当于</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">SPOOL C:\\emp.lst\nSET LINESIZE 100\nSET PAGESIZE 50\nSELECT *\nFROM emp;\nSPOOL OFF<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>所以我们得到了一个新的sql文件,例如C:\\emp.sql</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">CONNECT scott&#x2F;tiger\n--开始删除\nDELETE FROM tablename WHERE createdtime&lt;TRUNC(SYSDATE)-59;\ncommit;\nalter table tablename enable row movement;\nalter table tablename shrink space;\nalter table tablename disable row movement;\n--结束删除\n--如果删除多个表，可以将上面语句复制一下，tablename和where条件修改一下就可以了\nEXIT;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>然后创建一个文件C:\\get_emp.bat</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">@echo off\necho 开始删除过期数据并缩容\n\nsqlplus &#x2F;nolog @C:\\emp.sql\n\necho 执行成功\npause\nexit<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>保存之后，执行一下看会不会出现问题，如果不会出现问题，添加一下windows的任务计划程序，或者自己写一个windows服务，定期调用一下这个bat就可以了</p>\n<p>linux版本的类似，写法这个连接下面有，写完之后先进行测试，然后使用cron或者其他进行定期调用即可</p>\n<p>当然，操作数据库表不局限于定期清理数据，也可以进行报表生成、新表创建等其他操作</p>\n","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"wangpengzong","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/wangpengzong","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"<p>公司内做的项目是工厂内的，一般工厂内数据要求的是实时性，很久之前的数据可以自行删除处理，我们数据库用的oracle，所以就想着写一个脚本来删除，这样的话，脚本不管放在那里使用都可以达到效果</p>\n<p>由于服务器是windows，参照<a href=\"https://oracle-base.com/articles/misc/oracle-shell-scripting\">Oracle Shell Scripting</a>中，我们写一下windows下的脚本</p>\n<p>首先删除数据的sql语句写一下</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">DELETE FROM tablename WHERE createdtime&lt;TRUNC(SYSDATE)-59;  --删除59天前的数据\ncommit;   --提交事务\nalter table tablename enable row movement;  --数据删除之后会产生很多空行，打开行移动，移动之后rowid会发生变化\nalter table tablename shrink space;  --连同索引一起压缩，解决delete语句造成的空间未释放问题\nalter table tablename disable row movement;  --关闭行迁移<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这一段相当于</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">SPOOL C:\\emp.lst\nSET LINESIZE 100\nSET PAGESIZE 50\nSELECT *\nFROM emp;\nSPOOL OFF<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>所以我们得到了一个新的sql文件,例如C:\\emp.sql</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">CONNECT scott&#x2F;tiger\n--开始删除\nDELETE FROM tablename WHERE createdtime&lt;TRUNC(SYSDATE)-59;\ncommit;\nalter table tablename enable row movement;\nalter table tablename shrink space;\nalter table tablename disable row movement;\n--结束删除\n--如果删除多个表，可以将上面语句复制一下，tablename和where条件修改一下就可以了\nEXIT;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>然后创建一个文件C:\\get_emp.bat</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">@echo off\necho 开始删除过期数据并缩容\n\nsqlplus &#x2F;nolog @C:\\emp.sql\n\necho 执行成功\npause\nexit<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>保存之后，执行一下看会不会出现问题，如果不会出现问题，添加一下windows的任务计划程序，或者自己写一个windows服务，定期调用一下这个bat就可以了</p>\n<p>linux版本的类似，写法这个连接下面有，写完之后先进行测试，然后使用cron或者其他进行定期调用即可</p>\n<p>当然，操作数据库表不局限于定期清理数据，也可以进行报表生成、新表创建等其他操作</p>\n"},{"title":"ABCD四个顺序执行方法，拓展性延申","date":"2022-02-14T07:54:00.000Z","author":"wpzblog","_content":"今天在群里，有人问\n`有几个void返回值的方法，但是我想让这几个方法有执行顺序，要怎么处理，ABCD 四个方法，依次执行，但是这几个方法都是无返回值的`\n\n这个问题其实很简单，如果方法是同步方法，直接四个方法连续写就好了，比如：\n```\n    static void Main()\n    {\n           A();\n           B();\n           C();\n           D();\n    }\n```\n但是如果方法里面包含了耗时操作（数据提交或者文件操作等），那么四个这样写就有问题了，执行顺序就错掉了，我们需要利用callback函数来进行操作，但是本着能不动原方法就不动的理念，我们使用Task的OnCompleted事件（.net framework中可以使用BeginInvoke(callback,null)）来做处理\n   1. 如果方法有返回值，则使用Func，或者Func<>\n   2. 如果方法没有返回值，则使用Action，或者Action<>\n\n### 1. 无返回值在.net core中使用Task的OnCompleted事件\n由于是没有返回值的方法，我们使用\n例如\n```\n     static void Main()\n    {\n           Action action1 = () => {\n                Thread.Sleep(1000);\n                Console.WriteLine(\"action1\");\n            };\n\n            Action action2 = () => {\n                Thread.Sleep(2000);\n                Console.WriteLine(\"action2\");\n            };\n\n            Action action3 = () => {\n                Thread.Sleep(3000);\n                Console.WriteLine(\"action3\");\n            };\n\n            Action action4 = () => {\n                Thread.Sleep(3000);\n                Console.WriteLine(\"action4\");\n            };\n            Stack st = new Stack();\n            st.Push(action2);\n            st.Push(action3);\n            st.Push(action4);\n\n            void MyAsynCallback()\n            {\n                if (st.Count > 0)\n                {\n                    var action = (Action)st.Pop();\n                    Task.Run(action).GetAwaiter().OnCompleted(() =>\n                    {\n                        MyAsynCallback();\n                    });\n                }\n            }\n            Task.Run(action1).GetAwaiter().OnCompleted(() =>\n            {\n                MyAsynCallback();\n            });\n            Console.ReadLine();\n            //Stack的Pop是先进后出，输出顺序action1 action4 action3 action2\n    }\n```\n我们可以将Stack改成其他的，比如List、Queue等，自行判断是否需要手动弹出action即可\n\n### 2. 无返回值在.net framework中使用BeginInvoke\n```\n     static void Main()\n    {\n           Action action1 = () => {\n                Thread.Sleep(1000);\n                Console.WriteLine(\"action1\");\n            };\n\n            Action action2 = () => {\n                Thread.Sleep(2000);\n                Console.WriteLine(\"action2\");\n            };\n\n            Action action3 = () => {\n                Thread.Sleep(3000);\n                Console.WriteLine(\"action3\");\n            };\n\n            Action action4 = () => {\n                Thread.Sleep(3000);\n                Console.WriteLine(\"action4\");\n            };\n            Stack st = new Stack();\n            st.Push(action2);\n            st.Push(action3);\n            st.Push(action4);\n\n            void MyAsynCallback(IAsyncResult async)\n            {\n                if (st.Count > 0)\n                {\n                    var action = (Action)st.Pop();\n                    action.BeginInvoke(new AsyncCallback(MyAsynCallback),null);\n                }\n            }\n            action1.BeginInvoke(new AsyncCallback(MyAsynCallback), null);\n            Console.ReadLine();\n            //Stack的Pop是先进后出，输出顺序action1 action4 action3 action2\n    }\n```\n\n### 3. 有返回值在.net core中使用Task的OnCompleted事件\n由于是没有返回值的方法，我们使用\n例如\n```\n     static void Main()\n    {\n            Func<int> func1 = () => {\n                Thread.Sleep(1000);\n                Console.WriteLine(\"func1\");\n                return 1;\n            };\n\n            Func<int> func2 = () => {\n                Thread.Sleep(2000);\n                Console.WriteLine(\"func2\");\n                return 1;\n            };\n\n            Func<int> func3 = () => {\n                Thread.Sleep(3000);\n                Console.WriteLine(\"func3\");\n                return 0;\n            };\n\n            Func<int> func4 = () => {\n                Thread.Sleep(3000);\n                Console.WriteLine(\"func4\");\n                return 1;\n            };\n            Stack st = new Stack();\n            st.Push(func2);\n            st.Push(func3);\n            st.Push(func4);\n\n            void MyAsynCallback(int result)\n            {\n                if (st.Count > 0 && result > 0)\n                {\n                    var action = (Func<int>)st.Pop();\n                    var task1 = Task.Run(action);\n                    task1.GetAwaiter().OnCompleted(() =>\n                    {\n                        MyAsynCallback(task1.Result);\n                    });\n                }\n            }\n            var task = Task.Run(func1);\n\n            task.GetAwaiter().OnCompleted(() =>\n            {\n                MyAsynCallback(task.Result);\n            });\n            Console.ReadLine();\n            //Stack的Pop是先进后出，输出顺序func1 func4 func3 func2\n    }\n```\n\n### 4. 有返回值在.net framework中使用BeginInvoke\n```\n     delegate int dele_func(int a);\n     static void Main()\n     {\n            Func<int> func1 = () => {\n                Thread.Sleep(1000);\n                Console.WriteLine(\"func1\");\n                return 1;\n            };\n\n            Func<int> func2 = () => {\n                Thread.Sleep(2000);\n                Console.WriteLine(\"func2\");\n                return 1;\n            };\n\n            Func<int> func3 = () => {\n                Thread.Sleep(3000);\n                Console.WriteLine(\"func3\");\n                return 1;\n            };\n\n            Func<int> func4 = () => {\n                Thread.Sleep(3000);\n                Console.WriteLine(\"func4\");\n                return 1;\n            };\n            Stack st = new Stack();\n            st.Push(func2);\n            st.Push(func3);\n            st.Push(func4);\n\n\n            void MyAsynCallback(IAsyncResult async)\n            {\n                dele_func dele_Func2 = (dele_func)async.AsyncState;\n                int result = dele_Func2.EndInvoke(async);\n                if (st.Count > 0 && result > 0)\n                {\n                    var action = (Func<int>)st.Pop();\n                    dele_func dele_Func1 = new dele_func((int a) => { return action.Invoke(); });\n                    IAsyncResult asyncResult1 = dele_Func1.BeginInvoke(0, new AsyncCallback(MyAsynCallback), dele_Func1);\n                }\n            }\n            dele_func dele_Func = new dele_func((int a) => { return func1.Invoke(); });\n            IAsyncResult asyncResult = dele_Func.BeginInvoke(0, new AsyncCallback(MyAsynCallback), dele_Func);\n            Console.ReadLine();\n            //Stack的Pop是先进后出，输出顺序func1 func4 func3 func2\n     }\n```\n\n### 有返回值时，可以根据result的判断，来判断是否继续往下执行\n\n\n如有问题，欢迎指正","source":"_posts/cnblogs/15892850.md","raw":"---\ntitle: ABCD四个顺序执行方法，拓展性延申\ndate: 2022-02-14T15:54:00\nauthor: wpzblog\ntags: []\n---\n今天在群里，有人问\n`有几个void返回值的方法，但是我想让这几个方法有执行顺序，要怎么处理，ABCD 四个方法，依次执行，但是这几个方法都是无返回值的`\n\n这个问题其实很简单，如果方法是同步方法，直接四个方法连续写就好了，比如：\n```\n    static void Main()\n    {\n           A();\n           B();\n           C();\n           D();\n    }\n```\n但是如果方法里面包含了耗时操作（数据提交或者文件操作等），那么四个这样写就有问题了，执行顺序就错掉了，我们需要利用callback函数来进行操作，但是本着能不动原方法就不动的理念，我们使用Task的OnCompleted事件（.net framework中可以使用BeginInvoke(callback,null)）来做处理\n   1. 如果方法有返回值，则使用Func，或者Func<>\n   2. 如果方法没有返回值，则使用Action，或者Action<>\n\n### 1. 无返回值在.net core中使用Task的OnCompleted事件\n由于是没有返回值的方法，我们使用\n例如\n```\n     static void Main()\n    {\n           Action action1 = () => {\n                Thread.Sleep(1000);\n                Console.WriteLine(\"action1\");\n            };\n\n            Action action2 = () => {\n                Thread.Sleep(2000);\n                Console.WriteLine(\"action2\");\n            };\n\n            Action action3 = () => {\n                Thread.Sleep(3000);\n                Console.WriteLine(\"action3\");\n            };\n\n            Action action4 = () => {\n                Thread.Sleep(3000);\n                Console.WriteLine(\"action4\");\n            };\n            Stack st = new Stack();\n            st.Push(action2);\n            st.Push(action3);\n            st.Push(action4);\n\n            void MyAsynCallback()\n            {\n                if (st.Count > 0)\n                {\n                    var action = (Action)st.Pop();\n                    Task.Run(action).GetAwaiter().OnCompleted(() =>\n                    {\n                        MyAsynCallback();\n                    });\n                }\n            }\n            Task.Run(action1).GetAwaiter().OnCompleted(() =>\n            {\n                MyAsynCallback();\n            });\n            Console.ReadLine();\n            //Stack的Pop是先进后出，输出顺序action1 action4 action3 action2\n    }\n```\n我们可以将Stack改成其他的，比如List、Queue等，自行判断是否需要手动弹出action即可\n\n### 2. 无返回值在.net framework中使用BeginInvoke\n```\n     static void Main()\n    {\n           Action action1 = () => {\n                Thread.Sleep(1000);\n                Console.WriteLine(\"action1\");\n            };\n\n            Action action2 = () => {\n                Thread.Sleep(2000);\n                Console.WriteLine(\"action2\");\n            };\n\n            Action action3 = () => {\n                Thread.Sleep(3000);\n                Console.WriteLine(\"action3\");\n            };\n\n            Action action4 = () => {\n                Thread.Sleep(3000);\n                Console.WriteLine(\"action4\");\n            };\n            Stack st = new Stack();\n            st.Push(action2);\n            st.Push(action3);\n            st.Push(action4);\n\n            void MyAsynCallback(IAsyncResult async)\n            {\n                if (st.Count > 0)\n                {\n                    var action = (Action)st.Pop();\n                    action.BeginInvoke(new AsyncCallback(MyAsynCallback),null);\n                }\n            }\n            action1.BeginInvoke(new AsyncCallback(MyAsynCallback), null);\n            Console.ReadLine();\n            //Stack的Pop是先进后出，输出顺序action1 action4 action3 action2\n    }\n```\n\n### 3. 有返回值在.net core中使用Task的OnCompleted事件\n由于是没有返回值的方法，我们使用\n例如\n```\n     static void Main()\n    {\n            Func<int> func1 = () => {\n                Thread.Sleep(1000);\n                Console.WriteLine(\"func1\");\n                return 1;\n            };\n\n            Func<int> func2 = () => {\n                Thread.Sleep(2000);\n                Console.WriteLine(\"func2\");\n                return 1;\n            };\n\n            Func<int> func3 = () => {\n                Thread.Sleep(3000);\n                Console.WriteLine(\"func3\");\n                return 0;\n            };\n\n            Func<int> func4 = () => {\n                Thread.Sleep(3000);\n                Console.WriteLine(\"func4\");\n                return 1;\n            };\n            Stack st = new Stack();\n            st.Push(func2);\n            st.Push(func3);\n            st.Push(func4);\n\n            void MyAsynCallback(int result)\n            {\n                if (st.Count > 0 && result > 0)\n                {\n                    var action = (Func<int>)st.Pop();\n                    var task1 = Task.Run(action);\n                    task1.GetAwaiter().OnCompleted(() =>\n                    {\n                        MyAsynCallback(task1.Result);\n                    });\n                }\n            }\n            var task = Task.Run(func1);\n\n            task.GetAwaiter().OnCompleted(() =>\n            {\n                MyAsynCallback(task.Result);\n            });\n            Console.ReadLine();\n            //Stack的Pop是先进后出，输出顺序func1 func4 func3 func2\n    }\n```\n\n### 4. 有返回值在.net framework中使用BeginInvoke\n```\n     delegate int dele_func(int a);\n     static void Main()\n     {\n            Func<int> func1 = () => {\n                Thread.Sleep(1000);\n                Console.WriteLine(\"func1\");\n                return 1;\n            };\n\n            Func<int> func2 = () => {\n                Thread.Sleep(2000);\n                Console.WriteLine(\"func2\");\n                return 1;\n            };\n\n            Func<int> func3 = () => {\n                Thread.Sleep(3000);\n                Console.WriteLine(\"func3\");\n                return 1;\n            };\n\n            Func<int> func4 = () => {\n                Thread.Sleep(3000);\n                Console.WriteLine(\"func4\");\n                return 1;\n            };\n            Stack st = new Stack();\n            st.Push(func2);\n            st.Push(func3);\n            st.Push(func4);\n\n\n            void MyAsynCallback(IAsyncResult async)\n            {\n                dele_func dele_Func2 = (dele_func)async.AsyncState;\n                int result = dele_Func2.EndInvoke(async);\n                if (st.Count > 0 && result > 0)\n                {\n                    var action = (Func<int>)st.Pop();\n                    dele_func dele_Func1 = new dele_func((int a) => { return action.Invoke(); });\n                    IAsyncResult asyncResult1 = dele_Func1.BeginInvoke(0, new AsyncCallback(MyAsynCallback), dele_Func1);\n                }\n            }\n            dele_func dele_Func = new dele_func((int a) => { return func1.Invoke(); });\n            IAsyncResult asyncResult = dele_Func.BeginInvoke(0, new AsyncCallback(MyAsynCallback), dele_Func);\n            Console.ReadLine();\n            //Stack的Pop是先进后出，输出顺序func1 func4 func3 func2\n     }\n```\n\n### 有返回值时，可以根据result的判断，来判断是否继续往下执行\n\n\n如有问题，欢迎指正","slug":"cnblogs/15892850","published":1,"updated":"2022-07-10T11:02:54.613Z","_id":"cl5f3a2dc000gc0unava854js","comments":1,"layout":"post","photos":[],"link":"","content":"<p>今天在群里，有人问<br><code>有几个void返回值的方法，但是我想让这几个方法有执行顺序，要怎么处理，ABCD 四个方法，依次执行，但是这几个方法都是无返回值的</code></p>\n<p>这个问题其实很简单，如果方法是同步方法，直接四个方法连续写就好了，比如：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">static void Main()\n&#123;\n       A();\n       B();\n       C();\n       D();\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>但是如果方法里面包含了耗时操作（数据提交或者文件操作等），那么四个这样写就有问题了，执行顺序就错掉了，我们需要利用callback函数来进行操作，但是本着能不动原方法就不动的理念，我们使用Task的OnCompleted事件（.net framework中可以使用BeginInvoke(callback,null)）来做处理</p>\n<ol>\n<li>如果方法有返回值，则使用Func，或者Func&lt;&gt;</li>\n<li>如果方法没有返回值，则使用Action，或者Action&lt;&gt;</li>\n</ol>\n<h3 id=\"1-无返回值在-net-core中使用Task的OnCompleted事件\"><a href=\"#1-无返回值在-net-core中使用Task的OnCompleted事件\" class=\"headerlink\" title=\"1. 无返回值在.net core中使用Task的OnCompleted事件\"></a>1. 无返回值在.net core中使用Task的OnCompleted事件</h3><p>由于是没有返回值的方法，我们使用<br>例如</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"> static void Main()\n&#123;\n       Action action1 &#x3D; () &#x3D;&gt; &#123;\n            Thread.Sleep(1000);\n            Console.WriteLine(&quot;action1&quot;);\n        &#125;;\n\n        Action action2 &#x3D; () &#x3D;&gt; &#123;\n            Thread.Sleep(2000);\n            Console.WriteLine(&quot;action2&quot;);\n        &#125;;\n\n        Action action3 &#x3D; () &#x3D;&gt; &#123;\n            Thread.Sleep(3000);\n            Console.WriteLine(&quot;action3&quot;);\n        &#125;;\n\n        Action action4 &#x3D; () &#x3D;&gt; &#123;\n            Thread.Sleep(3000);\n            Console.WriteLine(&quot;action4&quot;);\n        &#125;;\n        Stack st &#x3D; new Stack();\n        st.Push(action2);\n        st.Push(action3);\n        st.Push(action4);\n\n        void MyAsynCallback()\n        &#123;\n            if (st.Count &gt; 0)\n            &#123;\n                var action &#x3D; (Action)st.Pop();\n                Task.Run(action).GetAwaiter().OnCompleted(() &#x3D;&gt;\n                &#123;\n                    MyAsynCallback();\n                &#125;);\n            &#125;\n        &#125;\n        Task.Run(action1).GetAwaiter().OnCompleted(() &#x3D;&gt;\n        &#123;\n            MyAsynCallback();\n        &#125;);\n        Console.ReadLine();\n        &#x2F;&#x2F;Stack的Pop是先进后出，输出顺序action1 action4 action3 action2\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>我们可以将Stack改成其他的，比如List、Queue等，自行判断是否需要手动弹出action即可</p>\n<h3 id=\"2-无返回值在-net-framework中使用BeginInvoke\"><a href=\"#2-无返回值在-net-framework中使用BeginInvoke\" class=\"headerlink\" title=\"2. 无返回值在.net framework中使用BeginInvoke\"></a>2. 无返回值在.net framework中使用BeginInvoke</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\"> static void Main()\n&#123;\n       Action action1 &#x3D; () &#x3D;&gt; &#123;\n            Thread.Sleep(1000);\n            Console.WriteLine(&quot;action1&quot;);\n        &#125;;\n\n        Action action2 &#x3D; () &#x3D;&gt; &#123;\n            Thread.Sleep(2000);\n            Console.WriteLine(&quot;action2&quot;);\n        &#125;;\n\n        Action action3 &#x3D; () &#x3D;&gt; &#123;\n            Thread.Sleep(3000);\n            Console.WriteLine(&quot;action3&quot;);\n        &#125;;\n\n        Action action4 &#x3D; () &#x3D;&gt; &#123;\n            Thread.Sleep(3000);\n            Console.WriteLine(&quot;action4&quot;);\n        &#125;;\n        Stack st &#x3D; new Stack();\n        st.Push(action2);\n        st.Push(action3);\n        st.Push(action4);\n\n        void MyAsynCallback(IAsyncResult async)\n        &#123;\n            if (st.Count &gt; 0)\n            &#123;\n                var action &#x3D; (Action)st.Pop();\n                action.BeginInvoke(new AsyncCallback(MyAsynCallback),null);\n            &#125;\n        &#125;\n        action1.BeginInvoke(new AsyncCallback(MyAsynCallback), null);\n        Console.ReadLine();\n        &#x2F;&#x2F;Stack的Pop是先进后出，输出顺序action1 action4 action3 action2\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"3-有返回值在-net-core中使用Task的OnCompleted事件\"><a href=\"#3-有返回值在-net-core中使用Task的OnCompleted事件\" class=\"headerlink\" title=\"3. 有返回值在.net core中使用Task的OnCompleted事件\"></a>3. 有返回值在.net core中使用Task的OnCompleted事件</h3><p>由于是没有返回值的方法，我们使用<br>例如</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"> static void Main()\n&#123;\n        Func&lt;int&gt; func1 &#x3D; () &#x3D;&gt; &#123;\n            Thread.Sleep(1000);\n            Console.WriteLine(&quot;func1&quot;);\n            return 1;\n        &#125;;\n\n        Func&lt;int&gt; func2 &#x3D; () &#x3D;&gt; &#123;\n            Thread.Sleep(2000);\n            Console.WriteLine(&quot;func2&quot;);\n            return 1;\n        &#125;;\n\n        Func&lt;int&gt; func3 &#x3D; () &#x3D;&gt; &#123;\n            Thread.Sleep(3000);\n            Console.WriteLine(&quot;func3&quot;);\n            return 0;\n        &#125;;\n\n        Func&lt;int&gt; func4 &#x3D; () &#x3D;&gt; &#123;\n            Thread.Sleep(3000);\n            Console.WriteLine(&quot;func4&quot;);\n            return 1;\n        &#125;;\n        Stack st &#x3D; new Stack();\n        st.Push(func2);\n        st.Push(func3);\n        st.Push(func4);\n\n        void MyAsynCallback(int result)\n        &#123;\n            if (st.Count &gt; 0 &amp;&amp; result &gt; 0)\n            &#123;\n                var action &#x3D; (Func&lt;int&gt;)st.Pop();\n                var task1 &#x3D; Task.Run(action);\n                task1.GetAwaiter().OnCompleted(() &#x3D;&gt;\n                &#123;\n                    MyAsynCallback(task1.Result);\n                &#125;);\n            &#125;\n        &#125;\n        var task &#x3D; Task.Run(func1);\n\n        task.GetAwaiter().OnCompleted(() &#x3D;&gt;\n        &#123;\n            MyAsynCallback(task.Result);\n        &#125;);\n        Console.ReadLine();\n        &#x2F;&#x2F;Stack的Pop是先进后出，输出顺序func1 func4 func3 func2\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"4-有返回值在-net-framework中使用BeginInvoke\"><a href=\"#4-有返回值在-net-framework中使用BeginInvoke\" class=\"headerlink\" title=\"4. 有返回值在.net framework中使用BeginInvoke\"></a>4. 有返回值在.net framework中使用BeginInvoke</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">delegate int dele_func(int a);\nstatic void Main()\n&#123;\n       Func&lt;int&gt; func1 &#x3D; () &#x3D;&gt; &#123;\n           Thread.Sleep(1000);\n           Console.WriteLine(&quot;func1&quot;);\n           return 1;\n       &#125;;\n\n       Func&lt;int&gt; func2 &#x3D; () &#x3D;&gt; &#123;\n           Thread.Sleep(2000);\n           Console.WriteLine(&quot;func2&quot;);\n           return 1;\n       &#125;;\n\n       Func&lt;int&gt; func3 &#x3D; () &#x3D;&gt; &#123;\n           Thread.Sleep(3000);\n           Console.WriteLine(&quot;func3&quot;);\n           return 1;\n       &#125;;\n\n       Func&lt;int&gt; func4 &#x3D; () &#x3D;&gt; &#123;\n           Thread.Sleep(3000);\n           Console.WriteLine(&quot;func4&quot;);\n           return 1;\n       &#125;;\n       Stack st &#x3D; new Stack();\n       st.Push(func2);\n       st.Push(func3);\n       st.Push(func4);\n\n\n       void MyAsynCallback(IAsyncResult async)\n       &#123;\n           dele_func dele_Func2 &#x3D; (dele_func)async.AsyncState;\n           int result &#x3D; dele_Func2.EndInvoke(async);\n           if (st.Count &gt; 0 &amp;&amp; result &gt; 0)\n           &#123;\n               var action &#x3D; (Func&lt;int&gt;)st.Pop();\n               dele_func dele_Func1 &#x3D; new dele_func((int a) &#x3D;&gt; &#123; return action.Invoke(); &#125;);\n               IAsyncResult asyncResult1 &#x3D; dele_Func1.BeginInvoke(0, new AsyncCallback(MyAsynCallback), dele_Func1);\n           &#125;\n       &#125;\n       dele_func dele_Func &#x3D; new dele_func((int a) &#x3D;&gt; &#123; return func1.Invoke(); &#125;);\n       IAsyncResult asyncResult &#x3D; dele_Func.BeginInvoke(0, new AsyncCallback(MyAsynCallback), dele_Func);\n       Console.ReadLine();\n       &#x2F;&#x2F;Stack的Pop是先进后出，输出顺序func1 func4 func3 func2\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"有返回值时，可以根据result的判断，来判断是否继续往下执行\"><a href=\"#有返回值时，可以根据result的判断，来判断是否继续往下执行\" class=\"headerlink\" title=\"有返回值时，可以根据result的判断，来判断是否继续往下执行\"></a>有返回值时，可以根据result的判断，来判断是否继续往下执行</h3><p>如有问题，欢迎指正</p>\n","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"wangpengzong","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/wangpengzong","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"<p>今天在群里，有人问<br><code>有几个void返回值的方法，但是我想让这几个方法有执行顺序，要怎么处理，ABCD 四个方法，依次执行，但是这几个方法都是无返回值的</code></p>\n<p>这个问题其实很简单，如果方法是同步方法，直接四个方法连续写就好了，比如：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">static void Main()\n&#123;\n       A();\n       B();\n       C();\n       D();\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>但是如果方法里面包含了耗时操作（数据提交或者文件操作等），那么四个这样写就有问题了，执行顺序就错掉了，我们需要利用callback函数来进行操作，但是本着能不动原方法就不动的理念，我们使用Task的OnCompleted事件（.net framework中可以使用BeginInvoke(callback,null)）来做处理</p>\n<ol>\n<li>如果方法有返回值，则使用Func，或者Func&lt;&gt;</li>\n<li>如果方法没有返回值，则使用Action，或者Action&lt;&gt;</li>\n</ol>\n<h3 id=\"1-无返回值在-net-core中使用Task的OnCompleted事件\"><a href=\"#1-无返回值在-net-core中使用Task的OnCompleted事件\" class=\"headerlink\" title=\"1. 无返回值在.net core中使用Task的OnCompleted事件\"></a>1. 无返回值在.net core中使用Task的OnCompleted事件</h3><p>由于是没有返回值的方法，我们使用<br>例如</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"> static void Main()\n&#123;\n       Action action1 &#x3D; () &#x3D;&gt; &#123;\n            Thread.Sleep(1000);\n            Console.WriteLine(&quot;action1&quot;);\n        &#125;;\n\n        Action action2 &#x3D; () &#x3D;&gt; &#123;\n            Thread.Sleep(2000);\n            Console.WriteLine(&quot;action2&quot;);\n        &#125;;\n\n        Action action3 &#x3D; () &#x3D;&gt; &#123;\n            Thread.Sleep(3000);\n            Console.WriteLine(&quot;action3&quot;);\n        &#125;;\n\n        Action action4 &#x3D; () &#x3D;&gt; &#123;\n            Thread.Sleep(3000);\n            Console.WriteLine(&quot;action4&quot;);\n        &#125;;\n        Stack st &#x3D; new Stack();\n        st.Push(action2);\n        st.Push(action3);\n        st.Push(action4);\n\n        void MyAsynCallback()\n        &#123;\n            if (st.Count &gt; 0)\n            &#123;\n                var action &#x3D; (Action)st.Pop();\n                Task.Run(action).GetAwaiter().OnCompleted(() &#x3D;&gt;\n                &#123;\n                    MyAsynCallback();\n                &#125;);\n            &#125;\n        &#125;\n        Task.Run(action1).GetAwaiter().OnCompleted(() &#x3D;&gt;\n        &#123;\n            MyAsynCallback();\n        &#125;);\n        Console.ReadLine();\n        &#x2F;&#x2F;Stack的Pop是先进后出，输出顺序action1 action4 action3 action2\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>我们可以将Stack改成其他的，比如List、Queue等，自行判断是否需要手动弹出action即可</p>\n<h3 id=\"2-无返回值在-net-framework中使用BeginInvoke\"><a href=\"#2-无返回值在-net-framework中使用BeginInvoke\" class=\"headerlink\" title=\"2. 无返回值在.net framework中使用BeginInvoke\"></a>2. 无返回值在.net framework中使用BeginInvoke</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\"> static void Main()\n&#123;\n       Action action1 &#x3D; () &#x3D;&gt; &#123;\n            Thread.Sleep(1000);\n            Console.WriteLine(&quot;action1&quot;);\n        &#125;;\n\n        Action action2 &#x3D; () &#x3D;&gt; &#123;\n            Thread.Sleep(2000);\n            Console.WriteLine(&quot;action2&quot;);\n        &#125;;\n\n        Action action3 &#x3D; () &#x3D;&gt; &#123;\n            Thread.Sleep(3000);\n            Console.WriteLine(&quot;action3&quot;);\n        &#125;;\n\n        Action action4 &#x3D; () &#x3D;&gt; &#123;\n            Thread.Sleep(3000);\n            Console.WriteLine(&quot;action4&quot;);\n        &#125;;\n        Stack st &#x3D; new Stack();\n        st.Push(action2);\n        st.Push(action3);\n        st.Push(action4);\n\n        void MyAsynCallback(IAsyncResult async)\n        &#123;\n            if (st.Count &gt; 0)\n            &#123;\n                var action &#x3D; (Action)st.Pop();\n                action.BeginInvoke(new AsyncCallback(MyAsynCallback),null);\n            &#125;\n        &#125;\n        action1.BeginInvoke(new AsyncCallback(MyAsynCallback), null);\n        Console.ReadLine();\n        &#x2F;&#x2F;Stack的Pop是先进后出，输出顺序action1 action4 action3 action2\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"3-有返回值在-net-core中使用Task的OnCompleted事件\"><a href=\"#3-有返回值在-net-core中使用Task的OnCompleted事件\" class=\"headerlink\" title=\"3. 有返回值在.net core中使用Task的OnCompleted事件\"></a>3. 有返回值在.net core中使用Task的OnCompleted事件</h3><p>由于是没有返回值的方法，我们使用<br>例如</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"> static void Main()\n&#123;\n        Func&lt;int&gt; func1 &#x3D; () &#x3D;&gt; &#123;\n            Thread.Sleep(1000);\n            Console.WriteLine(&quot;func1&quot;);\n            return 1;\n        &#125;;\n\n        Func&lt;int&gt; func2 &#x3D; () &#x3D;&gt; &#123;\n            Thread.Sleep(2000);\n            Console.WriteLine(&quot;func2&quot;);\n            return 1;\n        &#125;;\n\n        Func&lt;int&gt; func3 &#x3D; () &#x3D;&gt; &#123;\n            Thread.Sleep(3000);\n            Console.WriteLine(&quot;func3&quot;);\n            return 0;\n        &#125;;\n\n        Func&lt;int&gt; func4 &#x3D; () &#x3D;&gt; &#123;\n            Thread.Sleep(3000);\n            Console.WriteLine(&quot;func4&quot;);\n            return 1;\n        &#125;;\n        Stack st &#x3D; new Stack();\n        st.Push(func2);\n        st.Push(func3);\n        st.Push(func4);\n\n        void MyAsynCallback(int result)\n        &#123;\n            if (st.Count &gt; 0 &amp;&amp; result &gt; 0)\n            &#123;\n                var action &#x3D; (Func&lt;int&gt;)st.Pop();\n                var task1 &#x3D; Task.Run(action);\n                task1.GetAwaiter().OnCompleted(() &#x3D;&gt;\n                &#123;\n                    MyAsynCallback(task1.Result);\n                &#125;);\n            &#125;\n        &#125;\n        var task &#x3D; Task.Run(func1);\n\n        task.GetAwaiter().OnCompleted(() &#x3D;&gt;\n        &#123;\n            MyAsynCallback(task.Result);\n        &#125;);\n        Console.ReadLine();\n        &#x2F;&#x2F;Stack的Pop是先进后出，输出顺序func1 func4 func3 func2\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"4-有返回值在-net-framework中使用BeginInvoke\"><a href=\"#4-有返回值在-net-framework中使用BeginInvoke\" class=\"headerlink\" title=\"4. 有返回值在.net framework中使用BeginInvoke\"></a>4. 有返回值在.net framework中使用BeginInvoke</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">delegate int dele_func(int a);\nstatic void Main()\n&#123;\n       Func&lt;int&gt; func1 &#x3D; () &#x3D;&gt; &#123;\n           Thread.Sleep(1000);\n           Console.WriteLine(&quot;func1&quot;);\n           return 1;\n       &#125;;\n\n       Func&lt;int&gt; func2 &#x3D; () &#x3D;&gt; &#123;\n           Thread.Sleep(2000);\n           Console.WriteLine(&quot;func2&quot;);\n           return 1;\n       &#125;;\n\n       Func&lt;int&gt; func3 &#x3D; () &#x3D;&gt; &#123;\n           Thread.Sleep(3000);\n           Console.WriteLine(&quot;func3&quot;);\n           return 1;\n       &#125;;\n\n       Func&lt;int&gt; func4 &#x3D; () &#x3D;&gt; &#123;\n           Thread.Sleep(3000);\n           Console.WriteLine(&quot;func4&quot;);\n           return 1;\n       &#125;;\n       Stack st &#x3D; new Stack();\n       st.Push(func2);\n       st.Push(func3);\n       st.Push(func4);\n\n\n       void MyAsynCallback(IAsyncResult async)\n       &#123;\n           dele_func dele_Func2 &#x3D; (dele_func)async.AsyncState;\n           int result &#x3D; dele_Func2.EndInvoke(async);\n           if (st.Count &gt; 0 &amp;&amp; result &gt; 0)\n           &#123;\n               var action &#x3D; (Func&lt;int&gt;)st.Pop();\n               dele_func dele_Func1 &#x3D; new dele_func((int a) &#x3D;&gt; &#123; return action.Invoke(); &#125;);\n               IAsyncResult asyncResult1 &#x3D; dele_Func1.BeginInvoke(0, new AsyncCallback(MyAsynCallback), dele_Func1);\n           &#125;\n       &#125;\n       dele_func dele_Func &#x3D; new dele_func((int a) &#x3D;&gt; &#123; return func1.Invoke(); &#125;);\n       IAsyncResult asyncResult &#x3D; dele_Func.BeginInvoke(0, new AsyncCallback(MyAsynCallback), dele_Func);\n       Console.ReadLine();\n       &#x2F;&#x2F;Stack的Pop是先进后出，输出顺序func1 func4 func3 func2\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"有返回值时，可以根据result的判断，来判断是否继续往下执行\"><a href=\"#有返回值时，可以根据result的判断，来判断是否继续往下执行\" class=\"headerlink\" title=\"有返回值时，可以根据result的判断，来判断是否继续往下执行\"></a>有返回值时，可以根据result的判断，来判断是否继续往下执行</h3><p>如有问题，欢迎指正</p>\n"},{"title":"用go把博客园博客下载到本地","date":"2022-07-10T09:08:00.000Z","author":"wpzblog","_content":"## 找到cookie\n\n直接浏览器F12 巴拉巴拉\n\n## 直接上代码\n\n用hexo建静态博客的话，go文件在`\\source\\_posts`目录下，run之后将会在此目录下生成cnblogs文件夹，以博客id作为md文件名，然后在`\\source\\`下生成一个cnblogs目录存放博客里面的图片文件，图片文件我使用`/cnblogs/16463506/img.*.png`来做匹配\n\n```\npackage main\n\nimport (\n\t\"bufio\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"io\"\n\t\"io/ioutil\"\n\t\"net/http\"\n\t\"os\"\n\t\"strconv\"\n\t\"strings\"\n\t\"regexp\"\n\t\"path\"\n)\nconst cookie = \" xxxxxxxxxxxxxxxxxx\"\n\nfunc main() {\n    fmt.Printf(\"开始执行\")\n\tgetBlogList(1)\n}\nfunc geturl(pageno int) string{\n    return fmt.Sprintf(\"https://i.cnblogs.com/api/posts/list?p=%s&cid=&tid=&t=1&cfg=0&search=&orderBy=&s=&scid=\",strconv.Itoa(pageno))\n}\nfunc getBlogList(pageindex int){\n\tvar urlstr = geturl(pageindex)\n\n\trecordbody := getData(urlstr)\n\tfmt.Printf(\"\\r\\n recordbody:%s \\n\", recordbody)\n\n\tvar conf blogList\n\terr := json.Unmarshal(recordbody, &conf)\n\tif err != nil {\n\t\tfmt.Println(\"error:\", err)\n\t}\n\n\tfmt.Printf(\"\\r\\n PageIndex:%s，PageSize:%s，PostsCount:%s \\n\", strconv.Itoa(conf.PageIndex), strconv.Itoa(conf.PageSize), strconv.Itoa(conf.PostsCount))\n\tfor _, childval := range conf.PostList {\n             if(childval.IsPublished){\n\t\t\tchildbody := getData(fmt.Sprintf(\"https://i.cnblogs.com/api/posts/%s\", strconv.Itoa(childval.Id)))\n\t\t\tfmt.Printf(\"childbody:%s \\n\", childbody)\n\t\t\tvar jsconf blogbodyConf\n\t\t\terr := json.Unmarshal(childbody, &jsconf)\n\t\t\tif err != nil {\n\t\t\t\tfmt.Println(\"error:\", err)\n\t\t\t}\n\t\t\tvar tagbody = \"\"\n\t\t\tfor _, tag := range jsconf.BlogPost.Tags {\n\t\t\t\tif(tagbody!=\"\"){\n\t\t\t\t\ttagbody = fmt.Sprintf(\"%s,\\\"%s\\\"\",tagbody,tag)\n\t\t\t\t}else{\n\t\t\t\t\ttagbody = fmt.Sprintf(\"\\\"%s\\\"\",tag)\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar tagstr = fmt.Sprintf(\"[%s]\",tagbody)\n\t\t\tvar articleBody = fmt.Sprintf(\"---\\r\\ntitle: %s\\r\\ndate: %s\\r\\nauthor: %s\\r\\ntags: %s\\r\\n---\\r\\n%s\",\n\t\t\t    jsconf.BlogPost.Title,\n\t\t\t\tjsconf.BlogPost.DatePublished,\n\t\t\t\tjsconf.BlogPost.Author,\n\t\t\t\ttagstr,\n\t\t\t    string(jsconf.BlogPost.PostBody))\n\t\t\t//添加文章信息\n\n\t\t\treg, _ := regexp.Compile(`/cnblogs/16463506/img.*.png`)\n\t\t\timgurls := reg.FindAllString(articleBody, -1)\n\t\t\tfor _, imgurl := range imgurls {\n\t\t\t\tfileName := path.Base(imgurl)\n\t\t\t\tdownloadImage(imgurl,strconv.Itoa(jsconf.BlogPost.Id),fileName)\n\t\t\t\tarticleBody = strings.Replace(articleBody, imgurl, fmt.Sprintf(\"/cnblogs/%s/%s\",strconv.Itoa(jsconf.BlogPost.Id),fileName), -1)\n\t\t\t}\n\t\t\tfmt.Printf(\"articleBody:%s \\n\", articleBody)\n\n\t\t\tdownloadFile(strings.NewReader(articleBody), strconv.Itoa(jsconf.BlogPost.Id), fmt.Sprintf(\"%s.md\",  strconv.Itoa(jsconf.BlogPost.Id)))\n\t\t}\n\t}\n        if(conf.PageIndex>0 && conf.PageIndex*conf.PageSize<=conf.PostsCount){\n\t    getBlogList(conf.PageIndex+1)\n\t}\n\tfmt.Println(\"执行完毕\")\n}\nfunc getData(urlstr string) []byte {\n\tclient := &http.Client{}\n\tfmt.Printf(\"\\r\\n urlstr:%s \\n\", urlstr)\n\treq, _ := http.NewRequest(\"GET\", urlstr, nil)\n\treq.Header.Add(\"cookie\", cookie)\n\n\tresp, _ := client.Do(req)\n\tdefer resp.Body.Close()\n\tbody, _ := ioutil.ReadAll(resp.Body)\n\treturn body\n}\nfunc downloadImage(imgurl string, rootpath string, fileName string){\n\tfilepath := fmt.Sprintf(\"../cnblogs/%s/%s\", rootpath, fileName)\n\tres, err := http.Get(imgurl)\n\tif err != nil {\n\t\tfmt.Println(\"A error occurred!\")\n\t\treturn\n\t}\n\tdefer res.Body.Close()\n\t// 获得get请求响应的reader对象\n\treader := bufio.NewReaderSize(res.Body, 32 * 1024)\n\n    if _, err := os.Stat(fmt.Sprintf(\"../cnblogs/%s\", rootpath)); os.IsNotExist(err) {\n\t\t// 必须分成两步：先创建文件夹、再修改权限\n\t\tos.MkdirAll(fmt.Sprintf(\"../cnblogs/%s\", rootpath), 0777) //0777也可以os.ModePerm\n\t\tos.Chmod(fmt.Sprintf(\"../cnblogs/%s\", rootpath), 0777)\n\t}\n\tfile, err := os.Create(filepath)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\t// 获得文件的writer对象\n\twriter := bufio.NewWriter(file)\n\n\twritten, _ := io.Copy(writer, reader)\n\tfmt.Printf(\"Total length: %d\", written)\n}\nfunc downloadFile(body io.Reader, rootpath string, name string) {\n    filepath := fmt.Sprintf(\"./cnblogs/%s\", name)\n\t// Create output file\n\tif rootpath != \"\" {\n\t\tif _, err := os.Stat(\"./cnblogs\"); os.IsNotExist(err) {\n\t\t\t// 必须分成两步：先创建文件夹、再修改权限\n\t\t\tos.MkdirAll(\"./cnblogs\", 0777) //0777也可以os.ModePerm\n\t\t\tos.Chmod(\"./cnblogs\", 0777)\n\t\t}\n\t}\n\tout, err := os.Create(filepath)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tdefer out.Close()\n\t// copy stream\n\t_, err = io.Copy(out, body)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n}\n\ntype blogList struct {\n\tPageIndex int `json:\"pageIndex\"`\n\tPageSize int `json:\"pageSize\"`\n\tPostsCount int `json:\"postsCount\"`\n\n\tPostList []blogbodymsg `json:\"postList\"`\n}\ntype blogbodymsg struct {\n\tId int `json:\"id\"`\n\n\tDatePublished string `json:\"datePublished\"`\n\n\tDateUpdated string `json:\"dateUpdated\"`\n\n\tTitle string `json:\"title\"`\n        IsPublished bool `json:\"isPublished\"`\n}\n\ntype blogbodyConf struct {\n\tBlogPost blogPostEntity `json:\"blogPost\"`\n}\ntype blogPostEntity struct {\n\tId int `json:\"id\"`\n\tAutoDesc string `json:\"autoDesc\"`\n\tDatePublished string `json:\"datePublished\"`\n\tPostBody string `json:\"postBody\"`\n\tTitle string `json:\"title\"`\n\tUrl string `json:\"url\"`\n\tAuthor string `json:\"author\"`\n\tTags []string `json:\"tags\"` \n}\n\n```","source":"_posts/cnblogs/16463506.md","raw":"---\ntitle: 用go把博客园博客下载到本地\ndate: 2022-07-10T17:08:00\nauthor: wpzblog\ntags: [\"go\",\"go文件下载\",\"hexo\"]\n---\n## 找到cookie\n\n直接浏览器F12 巴拉巴拉\n\n## 直接上代码\n\n用hexo建静态博客的话，go文件在`\\source\\_posts`目录下，run之后将会在此目录下生成cnblogs文件夹，以博客id作为md文件名，然后在`\\source\\`下生成一个cnblogs目录存放博客里面的图片文件，图片文件我使用`/cnblogs/16463506/img.*.png`来做匹配\n\n```\npackage main\n\nimport (\n\t\"bufio\"\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"io\"\n\t\"io/ioutil\"\n\t\"net/http\"\n\t\"os\"\n\t\"strconv\"\n\t\"strings\"\n\t\"regexp\"\n\t\"path\"\n)\nconst cookie = \" xxxxxxxxxxxxxxxxxx\"\n\nfunc main() {\n    fmt.Printf(\"开始执行\")\n\tgetBlogList(1)\n}\nfunc geturl(pageno int) string{\n    return fmt.Sprintf(\"https://i.cnblogs.com/api/posts/list?p=%s&cid=&tid=&t=1&cfg=0&search=&orderBy=&s=&scid=\",strconv.Itoa(pageno))\n}\nfunc getBlogList(pageindex int){\n\tvar urlstr = geturl(pageindex)\n\n\trecordbody := getData(urlstr)\n\tfmt.Printf(\"\\r\\n recordbody:%s \\n\", recordbody)\n\n\tvar conf blogList\n\terr := json.Unmarshal(recordbody, &conf)\n\tif err != nil {\n\t\tfmt.Println(\"error:\", err)\n\t}\n\n\tfmt.Printf(\"\\r\\n PageIndex:%s，PageSize:%s，PostsCount:%s \\n\", strconv.Itoa(conf.PageIndex), strconv.Itoa(conf.PageSize), strconv.Itoa(conf.PostsCount))\n\tfor _, childval := range conf.PostList {\n             if(childval.IsPublished){\n\t\t\tchildbody := getData(fmt.Sprintf(\"https://i.cnblogs.com/api/posts/%s\", strconv.Itoa(childval.Id)))\n\t\t\tfmt.Printf(\"childbody:%s \\n\", childbody)\n\t\t\tvar jsconf blogbodyConf\n\t\t\terr := json.Unmarshal(childbody, &jsconf)\n\t\t\tif err != nil {\n\t\t\t\tfmt.Println(\"error:\", err)\n\t\t\t}\n\t\t\tvar tagbody = \"\"\n\t\t\tfor _, tag := range jsconf.BlogPost.Tags {\n\t\t\t\tif(tagbody!=\"\"){\n\t\t\t\t\ttagbody = fmt.Sprintf(\"%s,\\\"%s\\\"\",tagbody,tag)\n\t\t\t\t}else{\n\t\t\t\t\ttagbody = fmt.Sprintf(\"\\\"%s\\\"\",tag)\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar tagstr = fmt.Sprintf(\"[%s]\",tagbody)\n\t\t\tvar articleBody = fmt.Sprintf(\"---\\r\\ntitle: %s\\r\\ndate: %s\\r\\nauthor: %s\\r\\ntags: %s\\r\\n---\\r\\n%s\",\n\t\t\t    jsconf.BlogPost.Title,\n\t\t\t\tjsconf.BlogPost.DatePublished,\n\t\t\t\tjsconf.BlogPost.Author,\n\t\t\t\ttagstr,\n\t\t\t    string(jsconf.BlogPost.PostBody))\n\t\t\t//添加文章信息\n\n\t\t\treg, _ := regexp.Compile(`/cnblogs/16463506/img.*.png`)\n\t\t\timgurls := reg.FindAllString(articleBody, -1)\n\t\t\tfor _, imgurl := range imgurls {\n\t\t\t\tfileName := path.Base(imgurl)\n\t\t\t\tdownloadImage(imgurl,strconv.Itoa(jsconf.BlogPost.Id),fileName)\n\t\t\t\tarticleBody = strings.Replace(articleBody, imgurl, fmt.Sprintf(\"/cnblogs/%s/%s\",strconv.Itoa(jsconf.BlogPost.Id),fileName), -1)\n\t\t\t}\n\t\t\tfmt.Printf(\"articleBody:%s \\n\", articleBody)\n\n\t\t\tdownloadFile(strings.NewReader(articleBody), strconv.Itoa(jsconf.BlogPost.Id), fmt.Sprintf(\"%s.md\",  strconv.Itoa(jsconf.BlogPost.Id)))\n\t\t}\n\t}\n        if(conf.PageIndex>0 && conf.PageIndex*conf.PageSize<=conf.PostsCount){\n\t    getBlogList(conf.PageIndex+1)\n\t}\n\tfmt.Println(\"执行完毕\")\n}\nfunc getData(urlstr string) []byte {\n\tclient := &http.Client{}\n\tfmt.Printf(\"\\r\\n urlstr:%s \\n\", urlstr)\n\treq, _ := http.NewRequest(\"GET\", urlstr, nil)\n\treq.Header.Add(\"cookie\", cookie)\n\n\tresp, _ := client.Do(req)\n\tdefer resp.Body.Close()\n\tbody, _ := ioutil.ReadAll(resp.Body)\n\treturn body\n}\nfunc downloadImage(imgurl string, rootpath string, fileName string){\n\tfilepath := fmt.Sprintf(\"../cnblogs/%s/%s\", rootpath, fileName)\n\tres, err := http.Get(imgurl)\n\tif err != nil {\n\t\tfmt.Println(\"A error occurred!\")\n\t\treturn\n\t}\n\tdefer res.Body.Close()\n\t// 获得get请求响应的reader对象\n\treader := bufio.NewReaderSize(res.Body, 32 * 1024)\n\n    if _, err := os.Stat(fmt.Sprintf(\"../cnblogs/%s\", rootpath)); os.IsNotExist(err) {\n\t\t// 必须分成两步：先创建文件夹、再修改权限\n\t\tos.MkdirAll(fmt.Sprintf(\"../cnblogs/%s\", rootpath), 0777) //0777也可以os.ModePerm\n\t\tos.Chmod(fmt.Sprintf(\"../cnblogs/%s\", rootpath), 0777)\n\t}\n\tfile, err := os.Create(filepath)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\t// 获得文件的writer对象\n\twriter := bufio.NewWriter(file)\n\n\twritten, _ := io.Copy(writer, reader)\n\tfmt.Printf(\"Total length: %d\", written)\n}\nfunc downloadFile(body io.Reader, rootpath string, name string) {\n    filepath := fmt.Sprintf(\"./cnblogs/%s\", name)\n\t// Create output file\n\tif rootpath != \"\" {\n\t\tif _, err := os.Stat(\"./cnblogs\"); os.IsNotExist(err) {\n\t\t\t// 必须分成两步：先创建文件夹、再修改权限\n\t\t\tos.MkdirAll(\"./cnblogs\", 0777) //0777也可以os.ModePerm\n\t\t\tos.Chmod(\"./cnblogs\", 0777)\n\t\t}\n\t}\n\tout, err := os.Create(filepath)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tdefer out.Close()\n\t// copy stream\n\t_, err = io.Copy(out, body)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n}\n\ntype blogList struct {\n\tPageIndex int `json:\"pageIndex\"`\n\tPageSize int `json:\"pageSize\"`\n\tPostsCount int `json:\"postsCount\"`\n\n\tPostList []blogbodymsg `json:\"postList\"`\n}\ntype blogbodymsg struct {\n\tId int `json:\"id\"`\n\n\tDatePublished string `json:\"datePublished\"`\n\n\tDateUpdated string `json:\"dateUpdated\"`\n\n\tTitle string `json:\"title\"`\n        IsPublished bool `json:\"isPublished\"`\n}\n\ntype blogbodyConf struct {\n\tBlogPost blogPostEntity `json:\"blogPost\"`\n}\ntype blogPostEntity struct {\n\tId int `json:\"id\"`\n\tAutoDesc string `json:\"autoDesc\"`\n\tDatePublished string `json:\"datePublished\"`\n\tPostBody string `json:\"postBody\"`\n\tTitle string `json:\"title\"`\n\tUrl string `json:\"url\"`\n\tAuthor string `json:\"author\"`\n\tTags []string `json:\"tags\"` \n}\n\n```","slug":"cnblogs/16463506","published":1,"updated":"2022-07-10T13:01:02.874Z","_id":"cl5f3ges5000tc0un6kkqdny5","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"找到cookie\"><a href=\"#找到cookie\" class=\"headerlink\" title=\"找到cookie\"></a>找到cookie</h2><p>直接浏览器F12 巴拉巴拉</p>\n<h2 id=\"直接上代码\"><a href=\"#直接上代码\" class=\"headerlink\" title=\"直接上代码\"></a>直接上代码</h2><p>用hexo建静态博客的话，go文件在<code>\\source\\_posts</code>目录下，run之后将会在此目录下生成cnblogs文件夹，以博客id作为md文件名，然后在<code>\\source\\</code>下生成一个cnblogs目录存放博客里面的图片文件，图片文件我使用<code>/cnblogs/16463506/img.*.png</code>来做匹配</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">package main\n\nimport (\n\t&quot;bufio&quot;\n\t&quot;encoding&#x2F;json&quot;\n\t&quot;fmt&quot;\n\t&quot;io&quot;\n\t&quot;io&#x2F;ioutil&quot;\n\t&quot;net&#x2F;http&quot;\n\t&quot;os&quot;\n\t&quot;strconv&quot;\n\t&quot;strings&quot;\n\t&quot;regexp&quot;\n\t&quot;path&quot;\n)\nconst cookie &#x3D; &quot; xxxxxxxxxxxxxxxxxx&quot;\n\nfunc main() &#123;\n    fmt.Printf(&quot;开始执行&quot;)\n\tgetBlogList(1)\n&#125;\nfunc geturl(pageno int) string&#123;\n    return fmt.Sprintf(&quot;https:&#x2F;&#x2F;i.cnblogs.com&#x2F;api&#x2F;posts&#x2F;list?p&#x3D;%s&amp;cid&#x3D;&amp;tid&#x3D;&amp;t&#x3D;1&amp;cfg&#x3D;0&amp;search&#x3D;&amp;orderBy&#x3D;&amp;s&#x3D;&amp;scid&#x3D;&quot;,strconv.Itoa(pageno))\n&#125;\nfunc getBlogList(pageindex int)&#123;\n\tvar urlstr &#x3D; geturl(pageindex)\n\n\trecordbody :&#x3D; getData(urlstr)\n\tfmt.Printf(&quot;\\r\\n recordbody:%s \\n&quot;, recordbody)\n\n\tvar conf blogList\n\terr :&#x3D; json.Unmarshal(recordbody, &amp;conf)\n\tif err !&#x3D; nil &#123;\n\t\tfmt.Println(&quot;error:&quot;, err)\n\t&#125;\n\n\tfmt.Printf(&quot;\\r\\n PageIndex:%s，PageSize:%s，PostsCount:%s \\n&quot;, strconv.Itoa(conf.PageIndex), strconv.Itoa(conf.PageSize), strconv.Itoa(conf.PostsCount))\n\tfor _, childval :&#x3D; range conf.PostList &#123;\n             if(childval.IsPublished)&#123;\n\t\t\tchildbody :&#x3D; getData(fmt.Sprintf(&quot;https:&#x2F;&#x2F;i.cnblogs.com&#x2F;api&#x2F;posts&#x2F;%s&quot;, strconv.Itoa(childval.Id)))\n\t\t\tfmt.Printf(&quot;childbody:%s \\n&quot;, childbody)\n\t\t\tvar jsconf blogbodyConf\n\t\t\terr :&#x3D; json.Unmarshal(childbody, &amp;jsconf)\n\t\t\tif err !&#x3D; nil &#123;\n\t\t\t\tfmt.Println(&quot;error:&quot;, err)\n\t\t\t&#125;\n\t\t\tvar tagbody &#x3D; &quot;&quot;\n\t\t\tfor _, tag :&#x3D; range jsconf.BlogPost.Tags &#123;\n\t\t\t\tif(tagbody!&#x3D;&quot;&quot;)&#123;\n\t\t\t\t\ttagbody &#x3D; fmt.Sprintf(&quot;%s,\\&quot;%s\\&quot;&quot;,tagbody,tag)\n\t\t\t\t&#125;else&#123;\n\t\t\t\t\ttagbody &#x3D; fmt.Sprintf(&quot;\\&quot;%s\\&quot;&quot;,tag)\n\t\t\t\t&#125;\n\t\t\t&#125;\n\t\t\tvar tagstr &#x3D; fmt.Sprintf(&quot;[%s]&quot;,tagbody)\n\t\t\tvar articleBody &#x3D; fmt.Sprintf(&quot;---\\r\\ntitle: %s\\r\\ndate: %s\\r\\nauthor: %s\\r\\ntags: %s\\r\\n---\\r\\n%s&quot;,\n\t\t\t    jsconf.BlogPost.Title,\n\t\t\t\tjsconf.BlogPost.DatePublished,\n\t\t\t\tjsconf.BlogPost.Author,\n\t\t\t\ttagstr,\n\t\t\t    string(jsconf.BlogPost.PostBody))\n\t\t\t&#x2F;&#x2F;添加文章信息\n\n\t\t\treg, _ :&#x3D; regexp.Compile(&#96;&#x2F;cnblogs&#x2F;16463506&#x2F;img.*.png&#96;)\n\t\t\timgurls :&#x3D; reg.FindAllString(articleBody, -1)\n\t\t\tfor _, imgurl :&#x3D; range imgurls &#123;\n\t\t\t\tfileName :&#x3D; path.Base(imgurl)\n\t\t\t\tdownloadImage(imgurl,strconv.Itoa(jsconf.BlogPost.Id),fileName)\n\t\t\t\tarticleBody &#x3D; strings.Replace(articleBody, imgurl, fmt.Sprintf(&quot;&#x2F;cnblogs&#x2F;%s&#x2F;%s&quot;,strconv.Itoa(jsconf.BlogPost.Id),fileName), -1)\n\t\t\t&#125;\n\t\t\tfmt.Printf(&quot;articleBody:%s \\n&quot;, articleBody)\n\n\t\t\tdownloadFile(strings.NewReader(articleBody), strconv.Itoa(jsconf.BlogPost.Id), fmt.Sprintf(&quot;%s.md&quot;,  strconv.Itoa(jsconf.BlogPost.Id)))\n\t\t&#125;\n\t&#125;\n        if(conf.PageIndex&gt;0 &amp;&amp; conf.PageIndex*conf.PageSize&lt;&#x3D;conf.PostsCount)&#123;\n\t    getBlogList(conf.PageIndex+1)\n\t&#125;\n\tfmt.Println(&quot;执行完毕&quot;)\n&#125;\nfunc getData(urlstr string) []byte &#123;\n\tclient :&#x3D; &amp;http.Client&#123;&#125;\n\tfmt.Printf(&quot;\\r\\n urlstr:%s \\n&quot;, urlstr)\n\treq, _ :&#x3D; http.NewRequest(&quot;GET&quot;, urlstr, nil)\n\treq.Header.Add(&quot;cookie&quot;, cookie)\n\n\tresp, _ :&#x3D; client.Do(req)\n\tdefer resp.Body.Close()\n\tbody, _ :&#x3D; ioutil.ReadAll(resp.Body)\n\treturn body\n&#125;\nfunc downloadImage(imgurl string, rootpath string, fileName string)&#123;\n\tfilepath :&#x3D; fmt.Sprintf(&quot;..&#x2F;cnblogs&#x2F;%s&#x2F;%s&quot;, rootpath, fileName)\n\tres, err :&#x3D; http.Get(imgurl)\n\tif err !&#x3D; nil &#123;\n\t\tfmt.Println(&quot;A error occurred!&quot;)\n\t\treturn\n\t&#125;\n\tdefer res.Body.Close()\n\t&#x2F;&#x2F; 获得get请求响应的reader对象\n\treader :&#x3D; bufio.NewReaderSize(res.Body, 32 * 1024)\n\n    if _, err :&#x3D; os.Stat(fmt.Sprintf(&quot;..&#x2F;cnblogs&#x2F;%s&quot;, rootpath)); os.IsNotExist(err) &#123;\n\t\t&#x2F;&#x2F; 必须分成两步：先创建文件夹、再修改权限\n\t\tos.MkdirAll(fmt.Sprintf(&quot;..&#x2F;cnblogs&#x2F;%s&quot;, rootpath), 0777) &#x2F;&#x2F;0777也可以os.ModePerm\n\t\tos.Chmod(fmt.Sprintf(&quot;..&#x2F;cnblogs&#x2F;%s&quot;, rootpath), 0777)\n\t&#125;\n\tfile, err :&#x3D; os.Create(filepath)\n\tif err !&#x3D; nil &#123;\n\t\tpanic(err)\n\t&#125;\n\t&#x2F;&#x2F; 获得文件的writer对象\n\twriter :&#x3D; bufio.NewWriter(file)\n\n\twritten, _ :&#x3D; io.Copy(writer, reader)\n\tfmt.Printf(&quot;Total length: %d&quot;, written)\n&#125;\nfunc downloadFile(body io.Reader, rootpath string, name string) &#123;\n    filepath :&#x3D; fmt.Sprintf(&quot;.&#x2F;cnblogs&#x2F;%s&quot;, name)\n\t&#x2F;&#x2F; Create output file\n\tif rootpath !&#x3D; &quot;&quot; &#123;\n\t\tif _, err :&#x3D; os.Stat(&quot;.&#x2F;cnblogs&quot;); os.IsNotExist(err) &#123;\n\t\t\t&#x2F;&#x2F; 必须分成两步：先创建文件夹、再修改权限\n\t\t\tos.MkdirAll(&quot;.&#x2F;cnblogs&quot;, 0777) &#x2F;&#x2F;0777也可以os.ModePerm\n\t\t\tos.Chmod(&quot;.&#x2F;cnblogs&quot;, 0777)\n\t\t&#125;\n\t&#125;\n\tout, err :&#x3D; os.Create(filepath)\n\tif err !&#x3D; nil &#123;\n\t\tpanic(err)\n\t&#125;\n\tdefer out.Close()\n\t&#x2F;&#x2F; copy stream\n\t_, err &#x3D; io.Copy(out, body)\n\tif err !&#x3D; nil &#123;\n\t\tpanic(err)\n\t&#125;\n&#125;\n\ntype blogList struct &#123;\n\tPageIndex int &#96;json:&quot;pageIndex&quot;&#96;\n\tPageSize int &#96;json:&quot;pageSize&quot;&#96;\n\tPostsCount int &#96;json:&quot;postsCount&quot;&#96;\n\n\tPostList []blogbodymsg &#96;json:&quot;postList&quot;&#96;\n&#125;\ntype blogbodymsg struct &#123;\n\tId int &#96;json:&quot;id&quot;&#96;\n\n\tDatePublished string &#96;json:&quot;datePublished&quot;&#96;\n\n\tDateUpdated string &#96;json:&quot;dateUpdated&quot;&#96;\n\n\tTitle string &#96;json:&quot;title&quot;&#96;\n        IsPublished bool &#96;json:&quot;isPublished&quot;&#96;\n&#125;\n\ntype blogbodyConf struct &#123;\n\tBlogPost blogPostEntity &#96;json:&quot;blogPost&quot;&#96;\n&#125;\ntype blogPostEntity struct &#123;\n\tId int &#96;json:&quot;id&quot;&#96;\n\tAutoDesc string &#96;json:&quot;autoDesc&quot;&#96;\n\tDatePublished string &#96;json:&quot;datePublished&quot;&#96;\n\tPostBody string &#96;json:&quot;postBody&quot;&#96;\n\tTitle string &#96;json:&quot;title&quot;&#96;\n\tUrl string &#96;json:&quot;url&quot;&#96;\n\tAuthor string &#96;json:&quot;author&quot;&#96;\n\tTags []string &#96;json:&quot;tags&quot;&#96; \n&#125;\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"spatxos","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/spatxos","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"<h2 id=\"找到cookie\"><a href=\"#找到cookie\" class=\"headerlink\" title=\"找到cookie\"></a>找到cookie</h2><p>直接浏览器F12 巴拉巴拉</p>\n<h2 id=\"直接上代码\"><a href=\"#直接上代码\" class=\"headerlink\" title=\"直接上代码\"></a>直接上代码</h2><p>用hexo建静态博客的话，go文件在<code>\\source\\_posts</code>目录下，run之后将会在此目录下生成cnblogs文件夹，以博客id作为md文件名，然后在<code>\\source\\</code>下生成一个cnblogs目录存放博客里面的图片文件，图片文件我使用<code>/cnblogs/16463506/img.*.png</code>来做匹配</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">package main\n\nimport (\n\t&quot;bufio&quot;\n\t&quot;encoding&#x2F;json&quot;\n\t&quot;fmt&quot;\n\t&quot;io&quot;\n\t&quot;io&#x2F;ioutil&quot;\n\t&quot;net&#x2F;http&quot;\n\t&quot;os&quot;\n\t&quot;strconv&quot;\n\t&quot;strings&quot;\n\t&quot;regexp&quot;\n\t&quot;path&quot;\n)\nconst cookie &#x3D; &quot; xxxxxxxxxxxxxxxxxx&quot;\n\nfunc main() &#123;\n    fmt.Printf(&quot;开始执行&quot;)\n\tgetBlogList(1)\n&#125;\nfunc geturl(pageno int) string&#123;\n    return fmt.Sprintf(&quot;https:&#x2F;&#x2F;i.cnblogs.com&#x2F;api&#x2F;posts&#x2F;list?p&#x3D;%s&amp;cid&#x3D;&amp;tid&#x3D;&amp;t&#x3D;1&amp;cfg&#x3D;0&amp;search&#x3D;&amp;orderBy&#x3D;&amp;s&#x3D;&amp;scid&#x3D;&quot;,strconv.Itoa(pageno))\n&#125;\nfunc getBlogList(pageindex int)&#123;\n\tvar urlstr &#x3D; geturl(pageindex)\n\n\trecordbody :&#x3D; getData(urlstr)\n\tfmt.Printf(&quot;\\r\\n recordbody:%s \\n&quot;, recordbody)\n\n\tvar conf blogList\n\terr :&#x3D; json.Unmarshal(recordbody, &amp;conf)\n\tif err !&#x3D; nil &#123;\n\t\tfmt.Println(&quot;error:&quot;, err)\n\t&#125;\n\n\tfmt.Printf(&quot;\\r\\n PageIndex:%s，PageSize:%s，PostsCount:%s \\n&quot;, strconv.Itoa(conf.PageIndex), strconv.Itoa(conf.PageSize), strconv.Itoa(conf.PostsCount))\n\tfor _, childval :&#x3D; range conf.PostList &#123;\n             if(childval.IsPublished)&#123;\n\t\t\tchildbody :&#x3D; getData(fmt.Sprintf(&quot;https:&#x2F;&#x2F;i.cnblogs.com&#x2F;api&#x2F;posts&#x2F;%s&quot;, strconv.Itoa(childval.Id)))\n\t\t\tfmt.Printf(&quot;childbody:%s \\n&quot;, childbody)\n\t\t\tvar jsconf blogbodyConf\n\t\t\terr :&#x3D; json.Unmarshal(childbody, &amp;jsconf)\n\t\t\tif err !&#x3D; nil &#123;\n\t\t\t\tfmt.Println(&quot;error:&quot;, err)\n\t\t\t&#125;\n\t\t\tvar tagbody &#x3D; &quot;&quot;\n\t\t\tfor _, tag :&#x3D; range jsconf.BlogPost.Tags &#123;\n\t\t\t\tif(tagbody!&#x3D;&quot;&quot;)&#123;\n\t\t\t\t\ttagbody &#x3D; fmt.Sprintf(&quot;%s,\\&quot;%s\\&quot;&quot;,tagbody,tag)\n\t\t\t\t&#125;else&#123;\n\t\t\t\t\ttagbody &#x3D; fmt.Sprintf(&quot;\\&quot;%s\\&quot;&quot;,tag)\n\t\t\t\t&#125;\n\t\t\t&#125;\n\t\t\tvar tagstr &#x3D; fmt.Sprintf(&quot;[%s]&quot;,tagbody)\n\t\t\tvar articleBody &#x3D; fmt.Sprintf(&quot;---\\r\\ntitle: %s\\r\\ndate: %s\\r\\nauthor: %s\\r\\ntags: %s\\r\\n---\\r\\n%s&quot;,\n\t\t\t    jsconf.BlogPost.Title,\n\t\t\t\tjsconf.BlogPost.DatePublished,\n\t\t\t\tjsconf.BlogPost.Author,\n\t\t\t\ttagstr,\n\t\t\t    string(jsconf.BlogPost.PostBody))\n\t\t\t&#x2F;&#x2F;添加文章信息\n\n\t\t\treg, _ :&#x3D; regexp.Compile(&#96;&#x2F;cnblogs&#x2F;16463506&#x2F;img.*.png&#96;)\n\t\t\timgurls :&#x3D; reg.FindAllString(articleBody, -1)\n\t\t\tfor _, imgurl :&#x3D; range imgurls &#123;\n\t\t\t\tfileName :&#x3D; path.Base(imgurl)\n\t\t\t\tdownloadImage(imgurl,strconv.Itoa(jsconf.BlogPost.Id),fileName)\n\t\t\t\tarticleBody &#x3D; strings.Replace(articleBody, imgurl, fmt.Sprintf(&quot;&#x2F;cnblogs&#x2F;%s&#x2F;%s&quot;,strconv.Itoa(jsconf.BlogPost.Id),fileName), -1)\n\t\t\t&#125;\n\t\t\tfmt.Printf(&quot;articleBody:%s \\n&quot;, articleBody)\n\n\t\t\tdownloadFile(strings.NewReader(articleBody), strconv.Itoa(jsconf.BlogPost.Id), fmt.Sprintf(&quot;%s.md&quot;,  strconv.Itoa(jsconf.BlogPost.Id)))\n\t\t&#125;\n\t&#125;\n        if(conf.PageIndex&gt;0 &amp;&amp; conf.PageIndex*conf.PageSize&lt;&#x3D;conf.PostsCount)&#123;\n\t    getBlogList(conf.PageIndex+1)\n\t&#125;\n\tfmt.Println(&quot;执行完毕&quot;)\n&#125;\nfunc getData(urlstr string) []byte &#123;\n\tclient :&#x3D; &amp;http.Client&#123;&#125;\n\tfmt.Printf(&quot;\\r\\n urlstr:%s \\n&quot;, urlstr)\n\treq, _ :&#x3D; http.NewRequest(&quot;GET&quot;, urlstr, nil)\n\treq.Header.Add(&quot;cookie&quot;, cookie)\n\n\tresp, _ :&#x3D; client.Do(req)\n\tdefer resp.Body.Close()\n\tbody, _ :&#x3D; ioutil.ReadAll(resp.Body)\n\treturn body\n&#125;\nfunc downloadImage(imgurl string, rootpath string, fileName string)&#123;\n\tfilepath :&#x3D; fmt.Sprintf(&quot;..&#x2F;cnblogs&#x2F;%s&#x2F;%s&quot;, rootpath, fileName)\n\tres, err :&#x3D; http.Get(imgurl)\n\tif err !&#x3D; nil &#123;\n\t\tfmt.Println(&quot;A error occurred!&quot;)\n\t\treturn\n\t&#125;\n\tdefer res.Body.Close()\n\t&#x2F;&#x2F; 获得get请求响应的reader对象\n\treader :&#x3D; bufio.NewReaderSize(res.Body, 32 * 1024)\n\n    if _, err :&#x3D; os.Stat(fmt.Sprintf(&quot;..&#x2F;cnblogs&#x2F;%s&quot;, rootpath)); os.IsNotExist(err) &#123;\n\t\t&#x2F;&#x2F; 必须分成两步：先创建文件夹、再修改权限\n\t\tos.MkdirAll(fmt.Sprintf(&quot;..&#x2F;cnblogs&#x2F;%s&quot;, rootpath), 0777) &#x2F;&#x2F;0777也可以os.ModePerm\n\t\tos.Chmod(fmt.Sprintf(&quot;..&#x2F;cnblogs&#x2F;%s&quot;, rootpath), 0777)\n\t&#125;\n\tfile, err :&#x3D; os.Create(filepath)\n\tif err !&#x3D; nil &#123;\n\t\tpanic(err)\n\t&#125;\n\t&#x2F;&#x2F; 获得文件的writer对象\n\twriter :&#x3D; bufio.NewWriter(file)\n\n\twritten, _ :&#x3D; io.Copy(writer, reader)\n\tfmt.Printf(&quot;Total length: %d&quot;, written)\n&#125;\nfunc downloadFile(body io.Reader, rootpath string, name string) &#123;\n    filepath :&#x3D; fmt.Sprintf(&quot;.&#x2F;cnblogs&#x2F;%s&quot;, name)\n\t&#x2F;&#x2F; Create output file\n\tif rootpath !&#x3D; &quot;&quot; &#123;\n\t\tif _, err :&#x3D; os.Stat(&quot;.&#x2F;cnblogs&quot;); os.IsNotExist(err) &#123;\n\t\t\t&#x2F;&#x2F; 必须分成两步：先创建文件夹、再修改权限\n\t\t\tos.MkdirAll(&quot;.&#x2F;cnblogs&quot;, 0777) &#x2F;&#x2F;0777也可以os.ModePerm\n\t\t\tos.Chmod(&quot;.&#x2F;cnblogs&quot;, 0777)\n\t\t&#125;\n\t&#125;\n\tout, err :&#x3D; os.Create(filepath)\n\tif err !&#x3D; nil &#123;\n\t\tpanic(err)\n\t&#125;\n\tdefer out.Close()\n\t&#x2F;&#x2F; copy stream\n\t_, err &#x3D; io.Copy(out, body)\n\tif err !&#x3D; nil &#123;\n\t\tpanic(err)\n\t&#125;\n&#125;\n\ntype blogList struct &#123;\n\tPageIndex int &#96;json:&quot;pageIndex&quot;&#96;\n\tPageSize int &#96;json:&quot;pageSize&quot;&#96;\n\tPostsCount int &#96;json:&quot;postsCount&quot;&#96;\n\n\tPostList []blogbodymsg &#96;json:&quot;postList&quot;&#96;\n&#125;\ntype blogbodymsg struct &#123;\n\tId int &#96;json:&quot;id&quot;&#96;\n\n\tDatePublished string &#96;json:&quot;datePublished&quot;&#96;\n\n\tDateUpdated string &#96;json:&quot;dateUpdated&quot;&#96;\n\n\tTitle string &#96;json:&quot;title&quot;&#96;\n        IsPublished bool &#96;json:&quot;isPublished&quot;&#96;\n&#125;\n\ntype blogbodyConf struct &#123;\n\tBlogPost blogPostEntity &#96;json:&quot;blogPost&quot;&#96;\n&#125;\ntype blogPostEntity struct &#123;\n\tId int &#96;json:&quot;id&quot;&#96;\n\tAutoDesc string &#96;json:&quot;autoDesc&quot;&#96;\n\tDatePublished string &#96;json:&quot;datePublished&quot;&#96;\n\tPostBody string &#96;json:&quot;postBody&quot;&#96;\n\tTitle string &#96;json:&quot;title&quot;&#96;\n\tUrl string &#96;json:&quot;url&quot;&#96;\n\tAuthor string &#96;json:&quot;author&quot;&#96;\n\tTags []string &#96;json:&quot;tags&quot;&#96; \n&#125;\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>"},{"title":"记vs2019  The view 'xxx' was not found.","date":"2021-02-03T05:05:00.000Z","author":"wpzblog","_content":"<p>版本：Visual Studio 2019&nbsp;16.8.2/16.8.4<br />.net core 3.1</p>\n<p>1.检测是否是拼写错误<br />2.检查.csproj为文件中是否包含有下面的content remove（这种情况一般发生在通过复制粘贴的方式增加一个新试图）</p>\n<div class=\"cnblogs_Highlighter\">\n<pre class=\"brush:csharp;gutter:true;\">  &lt;ItemGroup&gt;\n    &lt;Content Remove=\"Areas\\Factory\\Views\\UnitSet\\Edit - 复制.cshtml\" /&gt;\n  &lt;/ItemGroup&gt;\n</pre>\n</div>\n<p>　　</p>","source":"_posts/cnblogs/14366411.md","raw":"---\ntitle: 记vs2019  The view 'xxx' was not found. \ndate: 2021-02-03T13:05:00\nauthor: wpzblog\ntags: []\n---\n<p>版本：Visual Studio 2019&nbsp;16.8.2/16.8.4<br />.net core 3.1</p>\n<p>1.检测是否是拼写错误<br />2.检查.csproj为文件中是否包含有下面的content remove（这种情况一般发生在通过复制粘贴的方式增加一个新试图）</p>\n<div class=\"cnblogs_Highlighter\">\n<pre class=\"brush:csharp;gutter:true;\">  &lt;ItemGroup&gt;\n    &lt;Content Remove=\"Areas\\Factory\\Views\\UnitSet\\Edit - 复制.cshtml\" /&gt;\n  &lt;/ItemGroup&gt;\n</pre>\n</div>\n<p>　　</p>","slug":"cnblogs/14366411","published":1,"updated":"2022-07-10T13:01:05.489Z","_id":"cl5f7im94000xc0un4o6n4wjs","comments":1,"layout":"post","photos":[],"link":"","content":"<p>版本：Visual Studio 2019&nbsp;16.8.2/16.8.4<br />.net core 3.1</p>\n<p>1.检测是否是拼写错误<br />2.检查.csproj为文件中是否包含有下面的content remove（这种情况一般发生在通过复制粘贴的方式增加一个新试图）</p>\n<div class=\"cnblogs_Highlighter\">\n<pre class=\"brush:csharp;gutter:true;\">  &lt;ItemGroup&gt;\n    &lt;Content Remove=\"Areas\\Factory\\Views\\UnitSet\\Edit - 复制.cshtml\" /&gt;\n  &lt;/ItemGroup&gt;\n</pre>\n</div>\n<p>　　</p>","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"spatxos","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/spatxos","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"<p>版本：Visual Studio 2019&nbsp;16.8.2/16.8.4<br />.net core 3.1</p>\n<p>1.检测是否是拼写错误<br />2.检查.csproj为文件中是否包含有下面的content remove（这种情况一般发生在通过复制粘贴的方式增加一个新试图）</p>\n<div class=\"cnblogs_Highlighter\">\n<pre class=\"brush:csharp;gutter:true;\">  &lt;ItemGroup&gt;\n    &lt;Content Remove=\"Areas\\Factory\\Views\\UnitSet\\Edit - 复制.cshtml\" /&gt;\n  &lt;/ItemGroup&gt;\n</pre>\n</div>\n<p>　　</p>"},{"title":"centos 8及以上安装mysql 8.0","date":"2020-09-01T08:30:00.000Z","author":"wpzblog","_content":"<h1>本文适用于centos 8及以上安装mysql 8.0，整体耗时20分钟内，不需要翻墙</h1>\n<h2>1.环境先搞好</h2>\n<div class=\"cnblogs_code\">\n<pre> systemctl stop firewalld    <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">关闭防火墙</span>\n systemctl disable firewalld    <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">禁用防火墙</span>\n setenforce <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">\n sed </span>-i <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">s/^SELINUX=.*/SELINUX=disabled/</span><span style=\"color: #800000;\">'</span> /etc/selinux/<span style=\"color: #000000;\">config \n timedatectl </span><span style=\"color: #0000ff;\">set</span>-timezone Asia/Shanghai</pre>\n</div>\n<h2>2.开始安装</h2>\n<div class=\"cnblogs_code\">\n<pre>yum -y install mysql-server mysql mysql-devel  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">快速安装mysql</span>\nmysqld --install --user=<span style=\"color: #000000;\">root  \nmysqld </span>--initialize --user=<span style=\"color: #000000;\">mysql\nmysqld </span>--initialize --lower-<span style=\"color: #0000ff;\">case</span>-table-names=<span style=\"color: #800080;\">1</span>\n\n<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">查看mysql日志，密码在日志中  mysql的安装位置在/var/lib/mysql/</span>\ncat /<span style=\"color: #0000ff;\">var</span>/log/mysql/<span style=\"color: #000000;\">mysqld.log \n</span><span style=\"color: #808080;\">///</span><span style=\"color: #008000;\">发现错误 Data Dictionary initialization failed    </span></pre>\n</div>\n<h2>3.Data Dictionary initialization failed解决办法</h2>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">  rm </span>-rf /<span style=\"color: #0000ff;\">var</span>/lib/<span style=\"color: #000000;\">mysql\n\n  mysqld </span>--initialize --<span style=\"color: #000000;\">console\n\n  chown </span>-R mysql:mysql /<span style=\"color: #0000ff;\">var</span>/lib/mysql/<span style=\"color: #000000;\">\n\n  systemctl start mysqld\n\n  systemctl status mysqld\n\n  cat </span>/<span style=\"color: #0000ff;\">var</span>/log/mysql/<span style=\"color: #000000;\">mysqld.log \n\n  </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">A temporary password is generated for root@localhost: 冒号后面的就是初始密码</span></pre>\n</div>\n<h2>4.修改密码并开启远程访问</h2>\n<div class=\"cnblogs_code\">\n<pre>mysql -u root -<span style=\"color: #000000;\">p  <br />//需要输入初始密码，进入mysql控制台  \nALTER USER </span><span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">root</span><span style=\"color: #800000;\">'</span>@<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">localhost</span><span style=\"color: #800000;\">'</span> IDENTIFIED WITH mysql_native_password BY <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">test@123</span><span style=\"color: #800000;\">'</span><span style=\"color: #000000;\">;  //修改密码为test@123\nuse mysql\n</span><span style=\"color: #0000ff;\">select</span> Host,User <span style=\"color: #0000ff;\">from</span><span style=\"color: #000000;\"> user;\nupdate user </span><span style=\"color: #0000ff;\">set</span> host = <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">%</span><span style=\"color: #800000;\">'</span> <span style=\"color: #0000ff;\">where</span> user =<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">root</span><span style=\"color: #800000;\">'</span><span style=\"color: #000000;\">;    //将host从localhost修改为全部\nflush privileges;\nexit</span></pre>\n</div>\n<h2>5.其他操作</h2>\n<div class=\"cnblogs_code\">\n<pre>rpm -qa |<span style=\"color: #000000;\"> grep mysql\n\nyum </span>-y remove mysql....  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">如果mysql已安装，执行删除</span>\n<span style=\"color: #000000;\">\nsystemctl  enable</span>/start/stop/status servicename   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> enable </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">设置开机启动 ； start  </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">启动 ； stop  </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">停止 ；status状态</span></pre>\n</div>\n<h2>6.连接mysql</h2>\n<p>&nbsp;<img src=\"/cnblogs/13596927/789895-20200901161634167-1622109568.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<h1>在虚拟机上的输入输出记录</h1>\n<div class=\"cnblogs_code\">\n<pre>Xshell <span style=\"color: #800080;\">6</span> (Build <span style=\"color: #800080;\">0189</span><span style=\"color: #000000;\">)\nCopyright (c) </span><span style=\"color: #800080;\">2002</span><span style=\"color: #000000;\"> NetSarang Computer, Inc. All rights reserved.\n\nType `help</span><span style=\"color: #800000;\">'</span><span style=\"color: #800000;\"> to learn how to use Xshell prompt.</span>\n[D:\\~<span style=\"color: #000000;\">]$ \n\nConnecting to </span><span style=\"color: #800080;\">192.168</span>.<span style=\"color: #800080;\">5.133</span>:<span style=\"color: #800080;\">22</span><span style=\"color: #000000;\">...\nConnection established.\nTo escape to local shell, press </span><span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">Ctrl+Alt+]</span><span style=\"color: #800000;\">'</span><span style=\"color: #000000;\">.\n\nWARNING</span>!<span style=\"color: #000000;\"> The remote SSH server rejected X11 forwarding request.\nActivate the web console with: systemctl enable </span>--<span style=\"color: #000000;\">now cockpit.socket\n\nLast login: Tue Sep  </span><span style=\"color: #800080;\">1</span> <span style=\"color: #800080;\">15</span>:<span style=\"color: #800080;\">41</span>:<span style=\"color: #800080;\">10</span> <span style=\"color: #800080;\">2020</span><span style=\"color: #000000;\">\n[root@localhost </span>~<span style=\"color: #000000;\">]# systemctl stop firewalld\n[root@localhost </span>~<span style=\"color: #000000;\">]# systemctl disable firewalld\nRemoved </span>/etc/systemd/system/multi-user.target.wants/<span style=\"color: #000000;\">firewalld.service.\nRemoved </span>/etc/systemd/system/dbus-<span style=\"color: #000000;\">org.fedoraproject.FirewallD1.service.\n[root@localhost </span>~]# setenforce <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">\n[root@localhost </span>~]# sed -i <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">s/^SELINUX=.*/SELINUX=disabled/</span><span style=\"color: #800000;\">'</span> /etc/selinux/<span style=\"color: #000000;\">config\n[root@localhost </span>~]# timedatectl <span style=\"color: #0000ff;\">set</span>-timezone Asia/<span style=\"color: #000000;\">Shanghai\n[root@localhost </span>~]# yum -y install mysql-server mysql mysql-<span style=\"color: #000000;\">devel\nLast metadata expiration check: </span><span style=\"color: #800080;\">0</span>:<span style=\"color: #800080;\">11</span>:<span style=\"color: #800080;\">14</span> ago on Tue <span style=\"color: #800080;\">01</span> Sep <span style=\"color: #800080;\">2020</span> <span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">51</span>:<span style=\"color: #800080;\">03</span><span style=\"color: #000000;\"> PM CST.\nDependencies resolved.\n</span>===================================================================================<span style=\"color: #000000;\">\n Package               Arch   Version                              Repo       Size\n</span>===================================================================================<span style=\"color: #000000;\">\nInstalling:\n mysql                 x86_64 </span><span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349 AppStream  <span style=\"color: #800080;\">11</span><span style=\"color: #000000;\"> M\n mysql</span>-devel           x86_64 <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349 AppStream <span style=\"color: #800080;\">147</span><span style=\"color: #000000;\"> k\n mysql</span>-server          x86_64 <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349 AppStream  <span style=\"color: #800080;\">22</span><span style=\"color: #000000;\"> M\nInstalling dependencies:\n checkpolicy           x86_64 </span><span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span>.el8                            BaseOS    <span style=\"color: #800080;\">348</span><span style=\"color: #000000;\"> k\n keyutils</span>-libs-devel   x86_64 <span style=\"color: #800080;\">1.5</span>.<span style=\"color: #800080;\">10</span>-<span style=\"color: #800080;\">6</span>.el8                         BaseOS     <span style=\"color: #800080;\">48</span><span style=\"color: #000000;\"> k\n krb5</span>-devel            x86_64 <span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span>.el8                          BaseOS    <span style=\"color: #800080;\">549</span><span style=\"color: #000000;\"> k\n libcom_err</span>-devel      x86_64 <span style=\"color: #800080;\">1.45</span>.<span style=\"color: #800080;\">4</span>-<span style=\"color: #800080;\">3</span>.el8                         BaseOS     <span style=\"color: #800080;\">38</span><span style=\"color: #000000;\"> k\n libevent              x86_64 </span><span style=\"color: #800080;\">2.1</span>.<span style=\"color: #800080;\">8</span>-<span style=\"color: #800080;\">5</span>.el8                          BaseOS    <span style=\"color: #800080;\">253</span><span style=\"color: #000000;\"> k\n libkadm5              x86_64 </span><span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span>.el8                          BaseOS    <span style=\"color: #800080;\">185</span><span style=\"color: #000000;\"> k\n libselinux</span>-devel      x86_64 <span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">3</span>.el8                            BaseOS    <span style=\"color: #800080;\">199</span><span style=\"color: #000000;\"> k\n libsepol</span>-devel        x86_64 <span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span>.el8                            BaseOS     <span style=\"color: #800080;\">86</span><span style=\"color: #000000;\"> k\n libverto</span>-devel        x86_64 <span style=\"color: #800080;\">0.3</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">5</span>.el8                          BaseOS     <span style=\"color: #800080;\">18</span><span style=\"color: #000000;\"> k\n mariadb</span>-connector-c-<span style=\"color: #000000;\">config\n                       noarch </span><span style=\"color: #800080;\">3.0</span>.<span style=\"color: #800080;\">7</span>-<span style=\"color: #800080;\">1</span>.el8                          AppStream  <span style=\"color: #800080;\">13</span><span style=\"color: #000000;\"> k\n mecab                 x86_64 </span><span style=\"color: #800080;\">0.996</span>-<span style=\"color: #800080;\">1</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">41</span>+ca30bab6.<span style=\"color: #800080;\">9</span> AppStream <span style=\"color: #800080;\">397</span><span style=\"color: #000000;\"> k\n mysql</span>-common          x86_64 <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349 AppStream <span style=\"color: #800080;\">143</span><span style=\"color: #000000;\"> k\n mysql</span>-errmsg          x86_64 <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349 AppStream <span style=\"color: #800080;\">557</span><span style=\"color: #000000;\"> k\n mysql</span>-libs            x86_64 <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349 AppStream <span style=\"color: #800080;\">1.2</span><span style=\"color: #000000;\"> M\n openssl</span>-devel         x86_64 <span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.1</span>.1c-<span style=\"color: #800080;\">15</span>.el8                      BaseOS    <span style=\"color: #800080;\">2.3</span><span style=\"color: #000000;\"> M\n pcre2</span>-devel           x86_64 <span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8                          BaseOS    <span style=\"color: #800080;\">605</span><span style=\"color: #000000;\"> k\n pcre2</span>-utf16           x86_64 <span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8                          BaseOS    <span style=\"color: #800080;\">228</span><span style=\"color: #000000;\"> k\n pcre2</span>-utf32           x86_64 <span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8                          BaseOS    <span style=\"color: #800080;\">220</span><span style=\"color: #000000;\"> k\n perl</span>-Carp             noarch <span style=\"color: #800080;\">1.42</span>-<span style=\"color: #800080;\">396</span>.el8                         BaseOS     <span style=\"color: #800080;\">30</span><span style=\"color: #000000;\"> k\n perl</span>-Data-Dumper      x86_64 <span style=\"color: #800080;\">2.167</span>-<span style=\"color: #800080;\">399</span>.el8                        BaseOS     <span style=\"color: #800080;\">58</span><span style=\"color: #000000;\"> k\n perl</span>-Digest           noarch <span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span>.el8                         AppStream  <span style=\"color: #800080;\">27</span><span style=\"color: #000000;\"> k\n perl</span>-Digest-MD5       x86_64 <span style=\"color: #800080;\">2.55</span>-<span style=\"color: #800080;\">396</span>.el8                         AppStream  <span style=\"color: #800080;\">37</span><span style=\"color: #000000;\"> k\n perl</span>-Encode           x86_64 <span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">2.97</span>-<span style=\"color: #800080;\">3</span>.el8                         BaseOS    <span style=\"color: #800080;\">1.5</span><span style=\"color: #000000;\"> M\n perl</span>-Errno            x86_64 <span style=\"color: #800080;\">1.28</span>-<span style=\"color: #800080;\">416</span>.el8                         BaseOS     <span style=\"color: #800080;\">76</span><span style=\"color: #000000;\"> k\n perl</span>-Exporter         noarch <span style=\"color: #800080;\">5.72</span>-<span style=\"color: #800080;\">396</span>.el8                         BaseOS     <span style=\"color: #800080;\">34</span><span style=\"color: #000000;\"> k\n perl</span>-File-Path        noarch <span style=\"color: #800080;\">2.15</span>-<span style=\"color: #800080;\">2</span>.el8                           BaseOS     <span style=\"color: #800080;\">38</span><span style=\"color: #000000;\"> k\n perl</span>-File-Temp        noarch <span style=\"color: #800080;\">0.230</span>.<span style=\"color: #800080;\">600</span>-<span style=\"color: #800080;\">1</span>.el8                      BaseOS     <span style=\"color: #800080;\">63</span><span style=\"color: #000000;\"> k\n perl</span>-Getopt-Long      noarch <span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">2.50</span>-<span style=\"color: #800080;\">4</span>.el8                         BaseOS     <span style=\"color: #800080;\">63</span><span style=\"color: #000000;\"> k\n perl</span>-HTTP-Tiny        noarch <span style=\"color: #800080;\">0.074</span>-<span style=\"color: #800080;\">1</span>.el8                          BaseOS     <span style=\"color: #800080;\">58</span><span style=\"color: #000000;\"> k\n perl</span>-IO               x86_64 <span style=\"color: #800080;\">1.38</span>-<span style=\"color: #800080;\">416</span>.el8                         BaseOS    <span style=\"color: #800080;\">141</span><span style=\"color: #000000;\"> k\n perl</span>-MIME-Base64      x86_64 <span style=\"color: #800080;\">3.15</span>-<span style=\"color: #800080;\">396</span>.el8                         BaseOS     <span style=\"color: #800080;\">31</span><span style=\"color: #000000;\"> k\n perl</span>-Net-SSLeay       x86_64 <span style=\"color: #800080;\">1.88</span>-<span style=\"color: #800080;\">1</span>.el8                           AppStream <span style=\"color: #800080;\">379</span><span style=\"color: #000000;\"> k\n perl</span>-PathTools        x86_64 <span style=\"color: #800080;\">3.74</span>-<span style=\"color: #800080;\">1</span>.el8                           BaseOS     <span style=\"color: #800080;\">90</span><span style=\"color: #000000;\"> k\n perl</span>-Pod-Escapes      noarch <span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.07</span>-<span style=\"color: #800080;\">395</span>.el8                       BaseOS     <span style=\"color: #800080;\">20</span><span style=\"color: #000000;\"> k\n perl</span>-Pod-Perldoc      noarch <span style=\"color: #800080;\">3.28</span>-<span style=\"color: #800080;\">396</span>.el8                         BaseOS     <span style=\"color: #800080;\">86</span><span style=\"color: #000000;\"> k\n perl</span>-Pod-Simple       noarch <span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">3.35</span>-<span style=\"color: #800080;\">395</span>.el8                       BaseOS    <span style=\"color: #800080;\">213</span><span style=\"color: #000000;\"> k\n perl</span>-Pod-Usage        noarch <span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">1.69</span>-<span style=\"color: #800080;\">395</span>.el8                       BaseOS     <span style=\"color: #800080;\">34</span><span style=\"color: #000000;\"> k\n perl</span>-Scalar-List-<span style=\"color: #000000;\">Utils\n                       x86_64 </span><span style=\"color: #800080;\">3</span>:<span style=\"color: #800080;\">1.49</span>-<span style=\"color: #800080;\">2</span>.el8                         BaseOS     <span style=\"color: #800080;\">68</span><span style=\"color: #000000;\"> k\n perl</span>-Socket           x86_64 <span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">2.027</span>-<span style=\"color: #800080;\">3</span>.el8                        BaseOS     <span style=\"color: #800080;\">59</span><span style=\"color: #000000;\"> k\n perl</span>-Storable         x86_64 <span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span>.el8                         BaseOS     <span style=\"color: #800080;\">98</span><span style=\"color: #000000;\"> k\n perl</span>-Term-ANSIColor   noarch <span style=\"color: #800080;\">4.06</span>-<span style=\"color: #800080;\">396</span>.el8                         BaseOS     <span style=\"color: #800080;\">46</span><span style=\"color: #000000;\"> k\n perl</span>-Term-Cap         noarch <span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span>.el8                         BaseOS     <span style=\"color: #800080;\">23</span><span style=\"color: #000000;\"> k\n perl</span>-Text-ParseWords  noarch <span style=\"color: #800080;\">3.30</span>-<span style=\"color: #800080;\">395</span>.el8                         BaseOS     <span style=\"color: #800080;\">18</span><span style=\"color: #000000;\"> k\n perl</span>-Text-Tabs+Wrap   noarch <span style=\"color: #800080;\">2013.0523</span>-<span style=\"color: #800080;\">395</span>.el8                    BaseOS     <span style=\"color: #800080;\">24</span><span style=\"color: #000000;\"> k\n perl</span>-Time-Local       noarch <span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.280</span>-<span style=\"color: #800080;\">1</span>.el8                        BaseOS     <span style=\"color: #800080;\">34</span><span style=\"color: #000000;\"> k\n perl</span>-URI              noarch <span style=\"color: #800080;\">1.73</span>-<span style=\"color: #800080;\">3</span>.el8                           AppStream <span style=\"color: #800080;\">116</span><span style=\"color: #000000;\"> k\n perl</span>-Unicode-<span style=\"color: #000000;\">Normalize\n                       x86_64 </span><span style=\"color: #800080;\">1.25</span>-<span style=\"color: #800080;\">396</span>.el8                         BaseOS     <span style=\"color: #800080;\">82</span><span style=\"color: #000000;\"> k\n perl</span>-constant         noarch <span style=\"color: #800080;\">1.33</span>-<span style=\"color: #800080;\">396</span>.el8                         BaseOS     <span style=\"color: #800080;\">25</span><span style=\"color: #000000;\"> k\n perl</span>-interpreter      x86_64 <span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8                     BaseOS    <span style=\"color: #800080;\">6.3</span><span style=\"color: #000000;\"> M\n perl</span>-libnet           noarch <span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span>.el8                           AppStream <span style=\"color: #800080;\">121</span><span style=\"color: #000000;\"> k\n perl</span>-libs             x86_64 <span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8                     BaseOS    <span style=\"color: #800080;\">1.6</span><span style=\"color: #000000;\"> M\n perl</span>-macros           x86_64 <span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8                     BaseOS     <span style=\"color: #800080;\">72</span><span style=\"color: #000000;\"> k\n perl</span>-parent           noarch <span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">0.237</span>-<span style=\"color: #800080;\">1</span>.el8                        BaseOS     <span style=\"color: #800080;\">20</span><span style=\"color: #000000;\"> k\n perl</span>-podlators        noarch <span style=\"color: #800080;\">4.11</span>-<span style=\"color: #800080;\">1</span>.el8                           BaseOS    <span style=\"color: #800080;\">118</span><span style=\"color: #000000;\"> k\n perl</span>-threads          x86_64 <span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">2.21</span>-<span style=\"color: #800080;\">2</span>.el8                         BaseOS     <span style=\"color: #800080;\">61</span><span style=\"color: #000000;\"> k\n perl</span>-threads-shared   x86_64 <span style=\"color: #800080;\">1.58</span>-<span style=\"color: #800080;\">2</span>.el8                           BaseOS     <span style=\"color: #800080;\">48</span><span style=\"color: #000000;\"> k\n policycoreutils</span>-python-<span style=\"color: #000000;\">utils\n                       noarch </span><span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span>.el8                            BaseOS    <span style=\"color: #800080;\">251</span><span style=\"color: #000000;\"> k\n protobuf</span>-lite         x86_64 <span style=\"color: #800080;\">3.5</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">7</span>.el8                          AppStream <span style=\"color: #800080;\">150</span><span style=\"color: #000000;\"> k\n python3</span>-audit         x86_64 <span style=\"color: #800080;\">3.0</span>-<span style=\"color: #800080;\">0.17</span>.20191104git1c2f876.el8      BaseOS     <span style=\"color: #800080;\">86</span><span style=\"color: #000000;\"> k\n python3</span>-libsemanage   x86_64 <span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">2</span>.el8                            BaseOS    <span style=\"color: #800080;\">127</span><span style=\"color: #000000;\"> k\n python3</span>-<span style=\"color: #000000;\">policycoreutils\n                       noarch </span><span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span>.el8                            BaseOS    <span style=\"color: #800080;\">2.2</span><span style=\"color: #000000;\"> M\n python3</span>-setools       x86_64 <span style=\"color: #800080;\">4.2</span>.<span style=\"color: #800080;\">2</span>-<span style=\"color: #800080;\">2</span>.el8                          BaseOS    <span style=\"color: #800080;\">601</span><span style=\"color: #000000;\"> k\n zlib</span>-devel            x86_64 <span style=\"color: #800080;\">1.2</span>.<span style=\"color: #800080;\">11</span>-<span style=\"color: #800080;\">13</span>.el8                        BaseOS     <span style=\"color: #800080;\">57</span><span style=\"color: #000000;\"> k\nInstalling weak dependencies:\n perl</span>-IO-Socket-IP     noarch <span style=\"color: #800080;\">0.39</span>-<span style=\"color: #800080;\">5</span>.el8                           AppStream  <span style=\"color: #800080;\">47</span><span style=\"color: #000000;\"> k\n perl</span>-IO-Socket-SSL    noarch <span style=\"color: #800080;\">2.066</span>-<span style=\"color: #800080;\">4</span>.el8                          AppStream <span style=\"color: #800080;\">297</span><span style=\"color: #000000;\"> k\n perl</span>-Mozilla-CA       noarch <span style=\"color: #800080;\">20160104</span>-<span style=\"color: #800080;\">7</span>.el8                       AppStream  <span style=\"color: #800080;\">15</span><span style=\"color: #000000;\"> k\nEnabling module streams:\n mysql                        </span><span style=\"color: #800080;\">8.0</span><span style=\"color: #000000;\">                                                 \n\nTransaction Summary\n</span>===================================================================================<span style=\"color: #000000;\">\nInstall  </span><span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> Packages\n\nTotal download size: </span><span style=\"color: #800080;\">55</span><span style=\"color: #000000;\"> M\nInstalled size: </span><span style=\"color: #800080;\">279</span><span style=\"color: #000000;\"> M\nDownloading Packages:\n(</span><span style=\"color: #800080;\">1</span>/<span style=\"color: #800080;\">69</span>): mariadb-connector-c-config-<span style=\"color: #800080;\">3.0</span>.<span style=\"color: #800080;\">7</span>-<span style=\"color: #800080;\">1</span>.el8.noa  <span style=\"color: #800080;\">71</span> kB/s |  <span style=\"color: #800080;\">13</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n[MIRROR] mysql</span>-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_64.rpm: Curl error (<span style=\"color: #800080;\">56</span>): Failure when receiving data <span style=\"color: #0000ff;\">from</span> the peer <span style=\"color: #0000ff;\">for</span> http:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">mirror.lzu.edu.cn/centos/8.2.2004/AppStream/x86_64/os/Packages/mysql-8.0.17-3.module_el8.0.0+181+899d6349.x86_64.rpm [Recv failure: Connection reset by peer]</span>\n[MIRROR] mysql-common-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_64.rpm: Curl error (<span style=\"color: #800080;\">56</span>): Failure when receiving data <span style=\"color: #0000ff;\">from</span> the peer <span style=\"color: #0000ff;\">for</span> http:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">mirror.lzu.edu.cn/centos/8.2.2004/AppStream/x86_64/os/Packages/mysql-common-8.0.17-3.module_el8.0.0+181+899d6349.x86_64.rpm [Recv failure: Connection reset by peer]</span>\n(<span style=\"color: #800080;\">2</span>/<span style=\"color: #800080;\">69</span>): mysql-common-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #800080;\">8</span> <span style=\"color: #800080;\">602</span> kB/s | <span style=\"color: #800080;\">143</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">3</span>/<span style=\"color: #800080;\">69</span>): mysql-devel-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #800080;\">89</span> <span style=\"color: #800080;\">2.3</span> MB/s | <span style=\"color: #800080;\">147</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">4</span>/<span style=\"color: #800080;\">69</span>): mecab-<span style=\"color: #800080;\">0.996</span>-<span style=\"color: #800080;\">1</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">41</span>+ca30bab6.<span style=\"color: #800080;\">9</span> <span style=\"color: #800080;\">562</span> kB/s | <span style=\"color: #800080;\">397</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">5</span>/<span style=\"color: #800080;\">69</span>): mysql-errmsg-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #800080;\">8</span> <span style=\"color: #800080;\">2.5</span> MB/s | <span style=\"color: #800080;\">557</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n[MIRROR] mysql</span>-libs-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_64.rpm: Curl error (<span style=\"color: #800080;\">56</span>): Failure when receiving data <span style=\"color: #0000ff;\">from</span> the peer <span style=\"color: #0000ff;\">for</span> http:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">mirror.lzu.edu.cn/centos/8.2.2004/AppStream/x86_64/os/Packages/mysql-libs-8.0.17-3.module_el8.0.0+181+899d6349.x86_64.rpm [Recv failure: Connection reset by peer]</span>\n(<span style=\"color: #800080;\">6</span>/<span style=\"color: #800080;\">69</span>): mysql-libs-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #800080;\">899</span> <span style=\"color: #800080;\">2.2</span> MB/s | <span style=\"color: #800080;\">1.2</span> MB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">7</span>/<span style=\"color: #800080;\">69</span>): perl-Digest-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span>.el8.noarch.rpm        <span style=\"color: #800080;\">379</span> kB/s |  <span style=\"color: #800080;\">27</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">8</span>/<span style=\"color: #800080;\">69</span>): perl-Digest-MD5-<span style=\"color: #800080;\">2.55</span>-<span style=\"color: #800080;\">396</span>.el8.x86_64.rpm    <span style=\"color: #800080;\">1.4</span> MB/s |  <span style=\"color: #800080;\">37</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">9</span>/<span style=\"color: #800080;\">69</span>): perl-IO-Socket-IP-<span style=\"color: #800080;\">0.39</span>-<span style=\"color: #800080;\">5</span>.el8.noarch.rpm    <span style=\"color: #800080;\">1.5</span> MB/s |  <span style=\"color: #800080;\">47</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">10</span>/<span style=\"color: #800080;\">69</span>): perl-IO-Socket-SSL-<span style=\"color: #800080;\">2.066</span>-<span style=\"color: #800080;\">4</span>.el8.noarch.rpm <span style=\"color: #800080;\">264</span> kB/s | <span style=\"color: #800080;\">297</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">01</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">11</span>/<span style=\"color: #800080;\">69</span>): perl-Mozilla-CA-<span style=\"color: #800080;\">20160104</span>-<span style=\"color: #800080;\">7</span>.el8.noarch.rpm <span style=\"color: #800080;\">413</span> kB/s |  <span style=\"color: #800080;\">15</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">12</span>/<span style=\"color: #800080;\">69</span>): perl-Net-SSLeay-<span style=\"color: #800080;\">1.88</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64.rpm     <span style=\"color: #800080;\">3.6</span> MB/s | <span style=\"color: #800080;\">379</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">13</span>/<span style=\"color: #800080;\">69</span>): perl-URI-<span style=\"color: #800080;\">1.73</span>-<span style=\"color: #800080;\">3</span>.el8.noarch.rpm            <span style=\"color: #800080;\">2.8</span> MB/s | <span style=\"color: #800080;\">116</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">14</span>/<span style=\"color: #800080;\">69</span>): perl-libnet-<span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span>.el8.noarch.rpm         <span style=\"color: #800080;\">3.4</span> MB/s | <span style=\"color: #800080;\">121</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">15</span>/<span style=\"color: #800080;\">69</span>): protobuf-lite-<span style=\"color: #800080;\">3.5</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">7</span>.el8.x86_64.rpm      <span style=\"color: #800080;\">4.0</span> MB/s | <span style=\"color: #800080;\">150</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">16</span>/<span style=\"color: #800080;\">69</span>): checkpolicy-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64.rpm          <span style=\"color: #800080;\">831</span> kB/s | <span style=\"color: #800080;\">348</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">17</span>/<span style=\"color: #800080;\">69</span>): keyutils-libs-devel-<span style=\"color: #800080;\">1.5</span>.<span style=\"color: #800080;\">10</span>-<span style=\"color: #800080;\">6</span>.el8.x86_64.r <span style=\"color: #800080;\">470</span> kB/s |  <span style=\"color: #800080;\">48</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">18</span>/<span style=\"color: #800080;\">69</span>): krb5-devel-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span>.el8.x86_64.rpm         <span style=\"color: #800080;\">1.4</span> MB/s | <span style=\"color: #800080;\">549</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">19</span>/<span style=\"color: #800080;\">69</span>): libcom_err-devel-<span style=\"color: #800080;\">1.45</span>.<span style=\"color: #800080;\">4</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64.rpm  <span style=\"color: #800080;\">304</span> kB/s |  <span style=\"color: #800080;\">38</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">20</span>/<span style=\"color: #800080;\">69</span>): libevent-<span style=\"color: #800080;\">2.1</span>.<span style=\"color: #800080;\">8</span>-<span style=\"color: #800080;\">5</span>.el8.x86_64.rpm           <span style=\"color: #800080;\">1.6</span> MB/s | <span style=\"color: #800080;\">253</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">21</span>/<span style=\"color: #800080;\">69</span>): libkadm5-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span>.el8.x86_64.rpm           <span style=\"color: #800080;\">1.6</span> MB/s | <span style=\"color: #800080;\">185</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">22</span>/<span style=\"color: #800080;\">69</span>): libselinux-devel-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64.rpm     <span style=\"color: #800080;\">1.7</span> MB/s | <span style=\"color: #800080;\">199</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">23</span>/<span style=\"color: #800080;\">69</span>): libsepol-devel-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64.rpm       <span style=\"color: #800080;\">994</span> kB/s |  <span style=\"color: #800080;\">86</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">24</span>/<span style=\"color: #800080;\">69</span>): libverto-devel-<span style=\"color: #800080;\">0.3</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">5</span>.el8.x86_64.rpm     <span style=\"color: #800080;\">367</span> kB/s |  <span style=\"color: #800080;\">18</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">25</span>/<span style=\"color: #800080;\">69</span>): openssl-devel-<span style=\"color: #800080;\">1.1</span>.1c-<span style=\"color: #800080;\">15</span>.el8.x86_64.rpm    <span style=\"color: #800080;\">2.2</span> MB/s | <span style=\"color: #800080;\">2.3</span> MB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">01</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">26</span>/<span style=\"color: #800080;\">69</span>): mysql-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d634 <span style=\"color: #800080;\">1.9</span> MB/s |  <span style=\"color: #800080;\">11</span> MB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">05</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">27</span>/<span style=\"color: #800080;\">69</span>): mysql-server-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+ <span style=\"color: #800080;\">4.3</span> MB/s |  <span style=\"color: #800080;\">22</span> MB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">04</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">28</span>/<span style=\"color: #800080;\">69</span>): pcre2-devel-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64.rpm        <span style=\"color: #800080;\">1.8</span> MB/s | <span style=\"color: #800080;\">605</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">29</span>/<span style=\"color: #800080;\">69</span>): perl-Carp-<span style=\"color: #800080;\">1.42</span>-<span style=\"color: #800080;\">396</span>.el8.noarch.rpm         <span style=\"color: #800080;\">442</span> kB/s |  <span style=\"color: #800080;\">30</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">30</span>/<span style=\"color: #800080;\">69</span>): pcre2-utf16-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64.rpm        <span style=\"color: #800080;\">678</span> kB/s | <span style=\"color: #800080;\">228</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">31</span>/<span style=\"color: #800080;\">69</span>): perl-Data-Dumper-<span style=\"color: #800080;\">2.167</span>-<span style=\"color: #800080;\">399</span>.el8.x86_64.rpm <span style=\"color: #800080;\">755</span> kB/s |  <span style=\"color: #800080;\">58</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">32</span>/<span style=\"color: #800080;\">69</span>): perl-Errno-<span style=\"color: #800080;\">1.28</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64.rpm        <span style=\"color: #800080;\">557</span> kB/s |  <span style=\"color: #800080;\">76</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">33</span>/<span style=\"color: #800080;\">69</span>): pcre2-utf32-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64.rpm        <span style=\"color: #800080;\">631</span> kB/s | <span style=\"color: #800080;\">220</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">34</span>/<span style=\"color: #800080;\">69</span>): perl-Exporter-<span style=\"color: #800080;\">5.72</span>-<span style=\"color: #800080;\">396</span>.el8.noarch.rpm     <span style=\"color: #800080;\">476</span> kB/s |  <span style=\"color: #800080;\">34</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">35</span>/<span style=\"color: #800080;\">69</span>): perl-File-Path-<span style=\"color: #800080;\">2.15</span>-<span style=\"color: #800080;\">2</span>.el8.noarch.rpm      <span style=\"color: #800080;\">503</span> kB/s |  <span style=\"color: #800080;\">38</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">36</span>/<span style=\"color: #800080;\">69</span>): perl-File-Temp-<span style=\"color: #800080;\">0.230</span>.<span style=\"color: #800080;\">600</span>-<span style=\"color: #800080;\">1</span>.el8.noarch.rpm <span style=\"color: #800080;\">580</span> kB/s |  <span style=\"color: #800080;\">63</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">37</span>/<span style=\"color: #800080;\">69</span>): perl-Getopt-Long-<span style=\"color: #800080;\">2.50</span>-<span style=\"color: #800080;\">4</span>.el8.noarch.rpm    <span style=\"color: #800080;\">593</span> kB/s |  <span style=\"color: #800080;\">63</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">38</span>/<span style=\"color: #800080;\">69</span>): perl-HTTP-Tiny-<span style=\"color: #800080;\">0.074</span>-<span style=\"color: #800080;\">1</span>.el8.noarch.rpm     <span style=\"color: #800080;\">544</span> kB/s |  <span style=\"color: #800080;\">58</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">39</span>/<span style=\"color: #800080;\">69</span>): perl-MIME-Base64-<span style=\"color: #800080;\">3.15</span>-<span style=\"color: #800080;\">396</span>.el8.x86_64.rpm  <span style=\"color: #800080;\">377</span> kB/s |  <span style=\"color: #800080;\">31</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">40</span>/<span style=\"color: #800080;\">69</span>): perl-IO-<span style=\"color: #800080;\">1.38</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64.rpm           <span style=\"color: #800080;\">738</span> kB/s | <span style=\"color: #800080;\">141</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">41</span>/<span style=\"color: #800080;\">69</span>): perl-Pod-Escapes-<span style=\"color: #800080;\">1.07</span>-<span style=\"color: #800080;\">395</span>.el8.noarch.rpm  <span style=\"color: #800080;\">300</span> kB/s |  <span style=\"color: #800080;\">20</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">42</span>/<span style=\"color: #800080;\">69</span>): perl-PathTools-<span style=\"color: #800080;\">3.74</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64.rpm      <span style=\"color: #800080;\">704</span> kB/s |  <span style=\"color: #800080;\">90</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">43</span>/<span style=\"color: #800080;\">69</span>): perl-Pod-Perldoc-<span style=\"color: #800080;\">3.28</span>-<span style=\"color: #800080;\">396</span>.el8.noarch.rpm  <span style=\"color: #800080;\">628</span> kB/s |  <span style=\"color: #800080;\">86</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">44</span>/<span style=\"color: #800080;\">69</span>): perl-Pod-Usage-<span style=\"color: #800080;\">1.69</span>-<span style=\"color: #800080;\">395</span>.el8.noarch.rpm    <span style=\"color: #800080;\">408</span> kB/s |  <span style=\"color: #800080;\">34</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">45</span>/<span style=\"color: #800080;\">69</span>): perl-Pod-Simple-<span style=\"color: #800080;\">3.35</span>-<span style=\"color: #800080;\">395</span>.el8.noarch.rpm   <span style=\"color: #800080;\">763</span> kB/s | <span style=\"color: #800080;\">213</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">46</span>/<span style=\"color: #800080;\">69</span>): perl-Scalar-List-Utils-<span style=\"color: #800080;\">1.49</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64. <span style=\"color: #800080;\">597</span> kB/s |  <span style=\"color: #800080;\">68</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">47</span>/<span style=\"color: #800080;\">69</span>): perl-Socket-<span style=\"color: #800080;\">2.027</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64.rpm        <span style=\"color: #800080;\">572</span> kB/s |  <span style=\"color: #800080;\">59</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">48</span>/<span style=\"color: #800080;\">69</span>): perl-Storable-<span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64.rpm       <span style=\"color: #800080;\">682</span> kB/s |  <span style=\"color: #800080;\">98</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">49</span>/<span style=\"color: #800080;\">69</span>): perl-Term-ANSIColor-<span style=\"color: #800080;\">4.06</span>-<span style=\"color: #800080;\">396</span>.el8.noarch.r <span style=\"color: #800080;\">502</span> kB/s |  <span style=\"color: #800080;\">46</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">50</span>/<span style=\"color: #800080;\">69</span>): perl-Term-Cap-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span>.el8.noarch.rpm     <span style=\"color: #800080;\">349</span> kB/s |  <span style=\"color: #800080;\">23</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">51</span>/<span style=\"color: #800080;\">69</span>): perl-Text-ParseWords-<span style=\"color: #800080;\">3.30</span>-<span style=\"color: #800080;\">395</span>.el8.noarch. <span style=\"color: #800080;\">327</span> kB/s |  <span style=\"color: #800080;\">18</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">52</span>/<span style=\"color: #800080;\">69</span>): perl-Text-Tabs+Wrap-<span style=\"color: #800080;\">2013.0523</span>-<span style=\"color: #800080;\">395</span>.el8.noa <span style=\"color: #800080;\">334</span> kB/s |  <span style=\"color: #800080;\">24</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">53</span>/<span style=\"color: #800080;\">69</span>): perl-Time-Local-<span style=\"color: #800080;\">1.280</span>-<span style=\"color: #800080;\">1</span>.el8.noarch.rpm    <span style=\"color: #800080;\">424</span> kB/s |  <span style=\"color: #800080;\">34</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">54</span>/<span style=\"color: #800080;\">69</span>): perl-Encode-<span style=\"color: #800080;\">2.97</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64.rpm         <span style=\"color: #800080;\">1.1</span> MB/s | <span style=\"color: #800080;\">1.5</span> MB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">01</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">55</span>/<span style=\"color: #800080;\">69</span>): perl-constant-<span style=\"color: #800080;\">1.33</span>-<span style=\"color: #800080;\">396</span>.el8.noarch.rpm     <span style=\"color: #800080;\">402</span> kB/s |  <span style=\"color: #800080;\">25</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">56</span>/<span style=\"color: #800080;\">69</span>): perl-Unicode-Normalize-<span style=\"color: #800080;\">1.25</span>-<span style=\"color: #800080;\">396</span>.el8.x86_6 <span style=\"color: #800080;\">889</span> kB/s |  <span style=\"color: #800080;\">82</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">57</span>/<span style=\"color: #800080;\">69</span>): perl-macros-<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64.rpm     <span style=\"color: #800080;\">539</span> kB/s |  <span style=\"color: #800080;\">72</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">58</span>/<span style=\"color: #800080;\">69</span>): perl-parent-<span style=\"color: #800080;\">0.237</span>-<span style=\"color: #800080;\">1</span>.el8.noarch.rpm        <span style=\"color: #800080;\">280</span> kB/s |  <span style=\"color: #800080;\">20</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">59</span>/<span style=\"color: #800080;\">69</span>): perl-podlators-<span style=\"color: #800080;\">4.11</span>-<span style=\"color: #800080;\">1</span>.el8.noarch.rpm      <span style=\"color: #800080;\">609</span> kB/s | <span style=\"color: #800080;\">118</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">60</span>/<span style=\"color: #800080;\">69</span>): perl-threads-<span style=\"color: #800080;\">2.21</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64.rpm        <span style=\"color: #800080;\">506</span> kB/s |  <span style=\"color: #800080;\">61</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">61</span>/<span style=\"color: #800080;\">69</span>): perl-threads-shared-<span style=\"color: #800080;\">1.58</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64.rpm <span style=\"color: #800080;\">468</span> kB/s |  <span style=\"color: #800080;\">48</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">62</span>/<span style=\"color: #800080;\">69</span>): policycoreutils-python-utils-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span>.el8.no <span style=\"color: #800080;\">694</span> kB/s | <span style=\"color: #800080;\">251</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">63</span>/<span style=\"color: #800080;\">69</span>): python3-audit-<span style=\"color: #800080;\">3.0</span>-<span style=\"color: #800080;\">0.17</span>.20191104git1c2f876 <span style=\"color: #800080;\">572</span> kB/s |  <span style=\"color: #800080;\">86</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">64</span>/<span style=\"color: #800080;\">69</span>): python3-libsemanage-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64.rpm  <span style=\"color: #800080;\">615</span> kB/s | <span style=\"color: #800080;\">127</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">65</span>/<span style=\"color: #800080;\">69</span>): perl-libs-<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64.rpm       <span style=\"color: #800080;\">839</span> kB/s | <span style=\"color: #800080;\">1.6</span> MB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">01</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">66</span>/<span style=\"color: #800080;\">69</span>): python3-setools-<span style=\"color: #800080;\">4.2</span>.<span style=\"color: #800080;\">2</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64.rpm    <span style=\"color: #800080;\">691</span> kB/s | <span style=\"color: #800080;\">601</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">67</span>/<span style=\"color: #800080;\">69</span>): zlib-devel-<span style=\"color: #800080;\">1.2</span>.<span style=\"color: #800080;\">11</span>-<span style=\"color: #800080;\">13</span>.el8.x86_64.rpm       <span style=\"color: #800080;\">473</span> kB/s |  <span style=\"color: #800080;\">57</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">68</span>/<span style=\"color: #800080;\">69</span>): python3-policycoreutils-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span>.el8.noarch. <span style=\"color: #800080;\">934</span> kB/s | <span style=\"color: #800080;\">2.2</span> MB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">02</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">69</span>/<span style=\"color: #800080;\">69</span>): perl-interpreter-<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64.rp <span style=\"color: #800080;\">1.2</span> MB/s | <span style=\"color: #800080;\">6.3</span> MB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">05</span>    \n-----------------------------------------------------------------------------------<span style=\"color: #000000;\">\nTotal                                              </span><span style=\"color: #800080;\">4.0</span> MB/s |  <span style=\"color: #800080;\">55</span> MB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">13</span><span style=\"color: #000000;\">     \nwarning: </span>/<span style=\"color: #0000ff;\">var</span>/cache/dnf/AppStream-a520ed22b0a8a736/packages/mariadb-connector-c-config-<span style=\"color: #800080;\">3.0</span>.<span style=\"color: #800080;\">7</span>-<span style=\"color: #800080;\">1</span>.el8.noarch.rpm: Header V3 RSA/<span style=\"color: #000000;\">SHA256 Signature, key ID 8483c65d: NOKEY\nCentOS</span>-<span style=\"color: #800080;\">8</span> - AppStream                               <span style=\"color: #800080;\">961</span> kB/s | <span style=\"color: #800080;\">1.6</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \nImporting GPG key </span><span style=\"color: #800080;\">0x8483C65D</span><span style=\"color: #000000;\">:\n Userid     : </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">CentOS (CentOS Official Signing Key) &lt;security@centos.org&gt;</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n Fingerprint: 99DB 70FA E1D7 CE22 7FB6 </span><span style=\"color: #800080;\">4882</span> 05B5 55B3 <span style=\"color: #800080;\">8483</span><span style=\"color: #000000;\"> C65D\n From       : </span>/etc/pki/rpm-gpg/RPM-GPG-KEY-<span style=\"color: #000000;\">centosofficial\nKey imported successfully\nRunning transaction check\nTransaction check succeeded.\nRunning transaction test\nTransaction test succeeded.\nRunning transaction\n  Preparing        :                                                           </span><span style=\"color: #800080;\">1</span>/<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Exporter-<span style=\"color: #800080;\">5.72</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                        <span style=\"color: #800080;\">1</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-libs-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                        <span style=\"color: #800080;\">2</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Carp-<span style=\"color: #800080;\">1.42</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                            <span style=\"color: #800080;\">3</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Scalar-List-Utils-<span style=\"color: #800080;\">3</span>:<span style=\"color: #800080;\">1.49</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64               <span style=\"color: #800080;\">4</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-parent-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">0.237</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                         <span style=\"color: #800080;\">5</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Text-ParseWords-<span style=\"color: #800080;\">3.30</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                 <span style=\"color: #800080;\">6</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : zlib</span>-devel-<span style=\"color: #800080;\">1.2</span>.<span style=\"color: #800080;\">11</span>-<span style=\"color: #800080;\">13</span>.el8.x86_64                          <span style=\"color: #800080;\">7</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : mariadb</span>-connector-c-config-<span style=\"color: #800080;\">3.0</span>.<span style=\"color: #800080;\">7</span>-<span style=\"color: #800080;\">1</span>.el8.noarch            <span style=\"color: #800080;\">8</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : mysql</span>-common-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86    <span style=\"color: #800080;\">9</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : mysql</span>-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_64       <span style=\"color: #800080;\">10</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : mysql</span>-errmsg-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86   <span style=\"color: #800080;\">11</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : mysql</span>-libs-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_6   <span style=\"color: #800080;\">12</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Term-ANSIColor-<span style=\"color: #800080;\">4.06</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                 <span style=\"color: #800080;\">13</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-macros-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                     <span style=\"color: #800080;\">14</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Errno-<span style=\"color: #800080;\">1.28</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                          <span style=\"color: #800080;\">15</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Socket-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">2.027</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                        <span style=\"color: #800080;\">16</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Text-Tabs+Wrap-<span style=\"color: #800080;\">2013.0523</span>-<span style=\"color: #800080;\">395</span>.el8.noarch            <span style=\"color: #800080;\">17</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Unicode-Normalize-<span style=\"color: #800080;\">1.25</span>-<span style=\"color: #800080;\">396</span>.el8.x86_64              <span style=\"color: #800080;\">18</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-File-Path-<span style=\"color: #800080;\">2.15</span>-<span style=\"color: #800080;\">2</span>.el8.noarch                        <span style=\"color: #800080;\">19</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-IO-<span style=\"color: #800080;\">1.38</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                             <span style=\"color: #800080;\">20</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-PathTools-<span style=\"color: #800080;\">3.74</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                        <span style=\"color: #800080;\">21</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-constant-<span style=\"color: #800080;\">1.33</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                       <span style=\"color: #800080;\">22</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-threads-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">2.21</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64                        <span style=\"color: #800080;\">23</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-threads-shared-<span style=\"color: #800080;\">1.58</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64                   <span style=\"color: #800080;\">24</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-interpreter-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                <span style=\"color: #800080;\">25</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-MIME-Base64-<span style=\"color: #800080;\">3.15</span>-<span style=\"color: #800080;\">396</span>.el8.x86_64                    <span style=\"color: #800080;\">26</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-IO-Socket-IP-<span style=\"color: #800080;\">0.39</span>-<span style=\"color: #800080;\">5</span>.el8.noarch                     <span style=\"color: #800080;\">27</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Time-Local-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.280</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                    <span style=\"color: #800080;\">28</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Digest-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                         <span style=\"color: #800080;\">29</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Digest-MD5-<span style=\"color: #800080;\">2.55</span>-<span style=\"color: #800080;\">396</span>.el8.x86_64                     <span style=\"color: #800080;\">30</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Net-SSLeay-<span style=\"color: #800080;\">1.88</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                       <span style=\"color: #800080;\">31</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Data-Dumper-<span style=\"color: #800080;\">2.167</span>-<span style=\"color: #800080;\">399</span>.el8.x86_64                   <span style=\"color: #800080;\">32</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-File-Temp-<span style=\"color: #800080;\">0.230</span>.<span style=\"color: #800080;\">600</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                   <span style=\"color: #800080;\">33</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Pod-Escapes-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.07</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                  <span style=\"color: #800080;\">34</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Storable-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                       <span style=\"color: #800080;\">35</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Term-Cap-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                       <span style=\"color: #800080;\">36</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Mozilla-CA-<span style=\"color: #800080;\">20160104</span>-<span style=\"color: #800080;\">7</span>.el8.noarch                   <span style=\"color: #800080;\">37</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Encode-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">2.97</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                         <span style=\"color: #800080;\">38</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Pod-Simple-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">3.35</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                   <span style=\"color: #800080;\">39</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Getopt-Long-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">2.50</span>-<span style=\"color: #800080;\">4</span>.el8.noarch                    <span style=\"color: #800080;\">40</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-podlators-<span style=\"color: #800080;\">4.11</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                        <span style=\"color: #800080;\">41</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Pod-Usage-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">1.69</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                    <span style=\"color: #800080;\">42</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Pod-Perldoc-<span style=\"color: #800080;\">3.28</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                    <span style=\"color: #800080;\">43</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-HTTP-Tiny-<span style=\"color: #800080;\">0.074</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                       <span style=\"color: #800080;\">44</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-IO-Socket-SSL-<span style=\"color: #800080;\">2.066</span>-<span style=\"color: #800080;\">4</span>.el8.noarch                   <span style=\"color: #800080;\">45</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-libnet-<span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span>.el8.noarch                           <span style=\"color: #800080;\">46</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-URI-<span style=\"color: #800080;\">1.73</span>-<span style=\"color: #800080;\">3</span>.el8.noarch                              <span style=\"color: #800080;\">47</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : python3</span>-setools-<span style=\"color: #800080;\">4.2</span>.<span style=\"color: #800080;\">2</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64                      <span style=\"color: #800080;\">48</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : python3</span>-libsemanage-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64                    <span style=\"color: #800080;\">49</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : python3</span>-audit-<span style=\"color: #800080;\">3.0</span>-<span style=\"color: #800080;\">0.17</span>.20191104git1c2f876.el8.x86_64    <span style=\"color: #800080;\">50</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : pcre2</span>-utf32-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                          <span style=\"color: #800080;\">51</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : pcre2</span>-utf16-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                          <span style=\"color: #800080;\">52</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : pcre2</span>-devel-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                          <span style=\"color: #800080;\">53</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : libverto</span>-devel-<span style=\"color: #800080;\">0.3</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">5</span>.el8.x86_64                       <span style=\"color: #800080;\">54</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : libsepol</span>-devel-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                         <span style=\"color: #800080;\">55</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : libselinux</span>-devel-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                       <span style=\"color: #800080;\">56</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : libkadm5</span>-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span>.el8.x86_64                             <span style=\"color: #800080;\">57</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : libevent</span>-<span style=\"color: #800080;\">2.1</span>.<span style=\"color: #800080;\">8</span>-<span style=\"color: #800080;\">5</span>.el8.x86_64                             <span style=\"color: #800080;\">58</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : libcom_err</span>-devel-<span style=\"color: #800080;\">1.45</span>.<span style=\"color: #800080;\">4</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                    <span style=\"color: #800080;\">59</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : keyutils</span>-libs-devel-<span style=\"color: #800080;\">1.5</span>.<span style=\"color: #800080;\">10</span>-<span style=\"color: #800080;\">6</span>.el8.x86_64                 <span style=\"color: #800080;\">60</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : krb5</span>-devel-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span>.el8.x86_64                           <span style=\"color: #800080;\">61</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : openssl</span>-devel-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.1</span>.1c-<span style=\"color: #800080;\">15</span>.el8.x86_64                    <span style=\"color: #800080;\">62</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : checkpolicy</span>-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                            <span style=\"color: #800080;\">63</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : python3</span>-policycoreutils-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span>.el8.noarch                <span style=\"color: #800080;\">64</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : policycoreutils</span>-python-utils-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span>.el8.noarch           <span style=\"color: #800080;\">65</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : protobuf</span>-lite-<span style=\"color: #800080;\">3.5</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">7</span>.el8.x86_64                        <span style=\"color: #800080;\">66</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : mecab</span>-<span style=\"color: #800080;\">0.996</span>-<span style=\"color: #800080;\">1</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">41</span>+ca30bab6.<span style=\"color: #800080;\">9</span>.x86_64       <span style=\"color: #800080;\">67</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Running scriptlet: mecab</span>-<span style=\"color: #800080;\">0.996</span>-<span style=\"color: #800080;\">1</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">41</span>+ca30bab6.<span style=\"color: #800080;\">9</span>.x86_64       <span style=\"color: #800080;\">67</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Running scriptlet: mysql</span>-server-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86   <span style=\"color: #800080;\">68</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : mysql</span>-server-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86   <span style=\"color: #800080;\">68</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Running scriptlet: mysql</span>-server-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86   <span style=\"color: #800080;\">68</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \nValueError: File context </span><span style=\"color: #0000ff;\">for</span> /<span style=\"color: #0000ff;\">var</span>/log/mysql(/.*)?<span style=\"color: #000000;\"> already defined\n\n  Installing       : mysql</span>-devel-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_   <span style=\"color: #800080;\">69</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Running scriptlet: mysql</span>-devel-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_   <span style=\"color: #800080;\">69</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : mariadb</span>-connector-c-config-<span style=\"color: #800080;\">3.0</span>.<span style=\"color: #800080;\">7</span>-<span style=\"color: #800080;\">1</span>.el8.noarch            <span style=\"color: #800080;\">1</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : mecab</span>-<span style=\"color: #800080;\">0.996</span>-<span style=\"color: #800080;\">1</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">41</span>+ca30bab6.<span style=\"color: #800080;\">9</span>.x86_64        <span style=\"color: #800080;\">2</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : mysql</span>-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_64        <span style=\"color: #800080;\">3</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : mysql</span>-common-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86    <span style=\"color: #800080;\">4</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : mysql</span>-devel-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_    <span style=\"color: #800080;\">5</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : mysql</span>-errmsg-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86    <span style=\"color: #800080;\">6</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : mysql</span>-libs-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_6    <span style=\"color: #800080;\">7</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : mysql</span>-server-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86    <span style=\"color: #800080;\">8</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Digest-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                          <span style=\"color: #800080;\">9</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Digest-MD5-<span style=\"color: #800080;\">2.55</span>-<span style=\"color: #800080;\">396</span>.el8.x86_64                     <span style=\"color: #800080;\">10</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-IO-Socket-IP-<span style=\"color: #800080;\">0.39</span>-<span style=\"color: #800080;\">5</span>.el8.noarch                     <span style=\"color: #800080;\">11</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-IO-Socket-SSL-<span style=\"color: #800080;\">2.066</span>-<span style=\"color: #800080;\">4</span>.el8.noarch                   <span style=\"color: #800080;\">12</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Mozilla-CA-<span style=\"color: #800080;\">20160104</span>-<span style=\"color: #800080;\">7</span>.el8.noarch                   <span style=\"color: #800080;\">13</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Net-SSLeay-<span style=\"color: #800080;\">1.88</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                       <span style=\"color: #800080;\">14</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-URI-<span style=\"color: #800080;\">1.73</span>-<span style=\"color: #800080;\">3</span>.el8.noarch                              <span style=\"color: #800080;\">15</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-libnet-<span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span>.el8.noarch                           <span style=\"color: #800080;\">16</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : protobuf</span>-lite-<span style=\"color: #800080;\">3.5</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">7</span>.el8.x86_64                        <span style=\"color: #800080;\">17</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : checkpolicy</span>-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                            <span style=\"color: #800080;\">18</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : keyutils</span>-libs-devel-<span style=\"color: #800080;\">1.5</span>.<span style=\"color: #800080;\">10</span>-<span style=\"color: #800080;\">6</span>.el8.x86_64                 <span style=\"color: #800080;\">19</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : krb5</span>-devel-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span>.el8.x86_64                           <span style=\"color: #800080;\">20</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : libcom_err</span>-devel-<span style=\"color: #800080;\">1.45</span>.<span style=\"color: #800080;\">4</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                    <span style=\"color: #800080;\">21</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : libevent</span>-<span style=\"color: #800080;\">2.1</span>.<span style=\"color: #800080;\">8</span>-<span style=\"color: #800080;\">5</span>.el8.x86_64                             <span style=\"color: #800080;\">22</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : libkadm5</span>-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span>.el8.x86_64                             <span style=\"color: #800080;\">23</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : libselinux</span>-devel-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                       <span style=\"color: #800080;\">24</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : libsepol</span>-devel-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                         <span style=\"color: #800080;\">25</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : libverto</span>-devel-<span style=\"color: #800080;\">0.3</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">5</span>.el8.x86_64                       <span style=\"color: #800080;\">26</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : openssl</span>-devel-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.1</span>.1c-<span style=\"color: #800080;\">15</span>.el8.x86_64                    <span style=\"color: #800080;\">27</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : pcre2</span>-devel-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                          <span style=\"color: #800080;\">28</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : pcre2</span>-utf16-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                          <span style=\"color: #800080;\">29</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : pcre2</span>-utf32-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                          <span style=\"color: #800080;\">30</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Carp-<span style=\"color: #800080;\">1.42</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                           <span style=\"color: #800080;\">31</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Data-Dumper-<span style=\"color: #800080;\">2.167</span>-<span style=\"color: #800080;\">399</span>.el8.x86_64                   <span style=\"color: #800080;\">32</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Encode-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">2.97</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                         <span style=\"color: #800080;\">33</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Errno-<span style=\"color: #800080;\">1.28</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                          <span style=\"color: #800080;\">34</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Exporter-<span style=\"color: #800080;\">5.72</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                       <span style=\"color: #800080;\">35</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-File-Path-<span style=\"color: #800080;\">2.15</span>-<span style=\"color: #800080;\">2</span>.el8.noarch                        <span style=\"color: #800080;\">36</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-File-Temp-<span style=\"color: #800080;\">0.230</span>.<span style=\"color: #800080;\">600</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                   <span style=\"color: #800080;\">37</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Getopt-Long-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">2.50</span>-<span style=\"color: #800080;\">4</span>.el8.noarch                    <span style=\"color: #800080;\">38</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-HTTP-Tiny-<span style=\"color: #800080;\">0.074</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                       <span style=\"color: #800080;\">39</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-IO-<span style=\"color: #800080;\">1.38</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                             <span style=\"color: #800080;\">40</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-MIME-Base64-<span style=\"color: #800080;\">3.15</span>-<span style=\"color: #800080;\">396</span>.el8.x86_64                    <span style=\"color: #800080;\">41</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-PathTools-<span style=\"color: #800080;\">3.74</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                        <span style=\"color: #800080;\">42</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Pod-Escapes-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.07</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                  <span style=\"color: #800080;\">43</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Pod-Perldoc-<span style=\"color: #800080;\">3.28</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                    <span style=\"color: #800080;\">44</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Pod-Simple-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">3.35</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                   <span style=\"color: #800080;\">45</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Pod-Usage-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">1.69</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                    <span style=\"color: #800080;\">46</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Scalar-List-Utils-<span style=\"color: #800080;\">3</span>:<span style=\"color: #800080;\">1.49</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64              <span style=\"color: #800080;\">47</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Socket-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">2.027</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                        <span style=\"color: #800080;\">48</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Storable-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                       <span style=\"color: #800080;\">49</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Term-ANSIColor-<span style=\"color: #800080;\">4.06</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                 <span style=\"color: #800080;\">50</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Term-Cap-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                       <span style=\"color: #800080;\">51</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Text-ParseWords-<span style=\"color: #800080;\">3.30</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                <span style=\"color: #800080;\">52</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Text-Tabs+Wrap-<span style=\"color: #800080;\">2013.0523</span>-<span style=\"color: #800080;\">395</span>.el8.noarch            <span style=\"color: #800080;\">53</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Time-Local-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.280</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                    <span style=\"color: #800080;\">54</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Unicode-Normalize-<span style=\"color: #800080;\">1.25</span>-<span style=\"color: #800080;\">396</span>.el8.x86_64              <span style=\"color: #800080;\">55</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-constant-<span style=\"color: #800080;\">1.33</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                       <span style=\"color: #800080;\">56</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-interpreter-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                <span style=\"color: #800080;\">57</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-libs-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                       <span style=\"color: #800080;\">58</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-macros-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                     <span style=\"color: #800080;\">59</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-parent-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">0.237</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                        <span style=\"color: #800080;\">60</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-podlators-<span style=\"color: #800080;\">4.11</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                        <span style=\"color: #800080;\">61</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-threads-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">2.21</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64                        <span style=\"color: #800080;\">62</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-threads-shared-<span style=\"color: #800080;\">1.58</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64                   <span style=\"color: #800080;\">63</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : policycoreutils</span>-python-utils-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span>.el8.noarch           <span style=\"color: #800080;\">64</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : python3</span>-audit-<span style=\"color: #800080;\">3.0</span>-<span style=\"color: #800080;\">0.17</span>.20191104git1c2f876.el8.x86_64    <span style=\"color: #800080;\">65</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : python3</span>-libsemanage-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64                    <span style=\"color: #800080;\">66</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : python3</span>-policycoreutils-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span>.el8.noarch                <span style=\"color: #800080;\">67</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : python3</span>-setools-<span style=\"color: #800080;\">4.2</span>.<span style=\"color: #800080;\">2</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64                      <span style=\"color: #800080;\">68</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : zlib</span>-devel-<span style=\"color: #800080;\">1.2</span>.<span style=\"color: #800080;\">11</span>-<span style=\"color: #800080;\">13</span>.el8.x86_64                         <span style=\"color: #800080;\">69</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n\nInstalled:\n  checkpolicy</span>-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.x86_64                                                     \n  keyutils</span>-libs-devel-<span style=\"color: #800080;\">1.5</span>.<span style=\"color: #800080;\">10</span>-<span style=\"color: #800080;\">6</span><span style=\"color: #000000;\">.el8.x86_64                                          \n  krb5</span>-devel-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span><span style=\"color: #000000;\">.el8.x86_64                                                    \n  libcom_err</span>-devel-<span style=\"color: #800080;\">1.45</span>.<span style=\"color: #800080;\">4</span>-<span style=\"color: #800080;\">3</span><span style=\"color: #000000;\">.el8.x86_64                                             \n  libevent</span>-<span style=\"color: #800080;\">2.1</span>.<span style=\"color: #800080;\">8</span>-<span style=\"color: #800080;\">5</span><span style=\"color: #000000;\">.el8.x86_64                                                      \n  libkadm5</span>-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span><span style=\"color: #000000;\">.el8.x86_64                                                      \n  libselinux</span>-devel-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">3</span><span style=\"color: #000000;\">.el8.x86_64                                                \n  libsepol</span>-devel-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.x86_64                                                  \n  libverto</span>-devel-<span style=\"color: #800080;\">0.3</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">5</span><span style=\"color: #000000;\">.el8.x86_64                                                \n  mariadb</span>-connector-c-config-<span style=\"color: #800080;\">3.0</span>.<span style=\"color: #800080;\">7</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.noarch                                    \n  mecab</span>-<span style=\"color: #800080;\">0.996</span>-<span style=\"color: #800080;\">1</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">41</span>+ca30bab6.<span style=\"color: #800080;\">9</span><span style=\"color: #000000;\">.x86_64                                \n  mysql</span>-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #000000;\">899d6349.x86_64                                \n  mysql</span>-common-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #000000;\">899d6349.x86_64                         \n  mysql</span>-devel-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #000000;\">899d6349.x86_64                          \n  mysql</span>-errmsg-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #000000;\">899d6349.x86_64                         \n  mysql</span>-libs-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #000000;\">899d6349.x86_64                           \n  mysql</span>-server-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #000000;\">899d6349.x86_64                         \n  openssl</span>-devel-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.1</span>.1c-<span style=\"color: #800080;\">15</span><span style=\"color: #000000;\">.el8.x86_64                                             \n  pcre2</span>-devel-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.x86_64                                                   \n  pcre2</span>-utf16-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.x86_64                                                   \n  pcre2</span>-utf32-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.x86_64                                                   \n  perl</span>-Carp-<span style=\"color: #800080;\">1.42</span>-<span style=\"color: #800080;\">396</span><span style=\"color: #000000;\">.el8.noarch                                                    \n  perl</span>-Data-Dumper-<span style=\"color: #800080;\">2.167</span>-<span style=\"color: #800080;\">399</span><span style=\"color: #000000;\">.el8.x86_64                                            \n  perl</span>-Digest-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span><span style=\"color: #000000;\">.el8.noarch                                                  \n  perl</span>-Digest-MD5-<span style=\"color: #800080;\">2.55</span>-<span style=\"color: #800080;\">396</span><span style=\"color: #000000;\">.el8.x86_64                                              \n  perl</span>-Encode-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">2.97</span>-<span style=\"color: #800080;\">3</span><span style=\"color: #000000;\">.el8.x86_64                                                  \n  perl</span>-Errno-<span style=\"color: #800080;\">1.28</span>-<span style=\"color: #800080;\">416</span><span style=\"color: #000000;\">.el8.x86_64                                                   \n  perl</span>-Exporter-<span style=\"color: #800080;\">5.72</span>-<span style=\"color: #800080;\">396</span><span style=\"color: #000000;\">.el8.noarch                                                \n  perl</span>-File-Path-<span style=\"color: #800080;\">2.15</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el8.noarch                                                 \n  perl</span>-File-Temp-<span style=\"color: #800080;\">0.230</span>.<span style=\"color: #800080;\">600</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.noarch                                            \n  perl</span>-Getopt-Long-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">2.50</span>-<span style=\"color: #800080;\">4</span><span style=\"color: #000000;\">.el8.noarch                                             \n  perl</span>-HTTP-Tiny-<span style=\"color: #800080;\">0.074</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.noarch                                                \n  perl</span>-IO-<span style=\"color: #800080;\">1.38</span>-<span style=\"color: #800080;\">416</span><span style=\"color: #000000;\">.el8.x86_64                                                      \n  perl</span>-IO-Socket-IP-<span style=\"color: #800080;\">0.39</span>-<span style=\"color: #800080;\">5</span><span style=\"color: #000000;\">.el8.noarch                                              \n  perl</span>-IO-Socket-SSL-<span style=\"color: #800080;\">2.066</span>-<span style=\"color: #800080;\">4</span><span style=\"color: #000000;\">.el8.noarch                                            \n  perl</span>-MIME-Base64-<span style=\"color: #800080;\">3.15</span>-<span style=\"color: #800080;\">396</span><span style=\"color: #000000;\">.el8.x86_64                                             \n  perl</span>-Mozilla-CA-<span style=\"color: #800080;\">20160104</span>-<span style=\"color: #800080;\">7</span><span style=\"color: #000000;\">.el8.noarch                                            \n  perl</span>-Net-SSLeay-<span style=\"color: #800080;\">1.88</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.x86_64                                                \n  perl</span>-PathTools-<span style=\"color: #800080;\">3.74</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.x86_64                                                 \n  perl</span>-Pod-Escapes-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.07</span>-<span style=\"color: #800080;\">395</span><span style=\"color: #000000;\">.el8.noarch                                           \n  perl</span>-Pod-Perldoc-<span style=\"color: #800080;\">3.28</span>-<span style=\"color: #800080;\">396</span><span style=\"color: #000000;\">.el8.noarch                                             \n  perl</span>-Pod-Simple-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">3.35</span>-<span style=\"color: #800080;\">395</span><span style=\"color: #000000;\">.el8.noarch                                            \n  perl</span>-Pod-Usage-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">1.69</span>-<span style=\"color: #800080;\">395</span><span style=\"color: #000000;\">.el8.noarch                                             \n  perl</span>-Scalar-List-Utils-<span style=\"color: #800080;\">3</span>:<span style=\"color: #800080;\">1.49</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el8.x86_64                                       \n  perl</span>-Socket-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">2.027</span>-<span style=\"color: #800080;\">3</span><span style=\"color: #000000;\">.el8.x86_64                                                 \n  perl</span>-Storable-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span><span style=\"color: #000000;\">.el8.x86_64                                                \n  perl</span>-Term-ANSIColor-<span style=\"color: #800080;\">4.06</span>-<span style=\"color: #800080;\">396</span><span style=\"color: #000000;\">.el8.noarch                                          \n  perl</span>-Term-Cap-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span><span style=\"color: #000000;\">.el8.noarch                                                \n  perl</span>-Text-ParseWords-<span style=\"color: #800080;\">3.30</span>-<span style=\"color: #800080;\">395</span><span style=\"color: #000000;\">.el8.noarch                                         \n  perl</span>-Text-Tabs+Wrap-<span style=\"color: #800080;\">2013.0523</span>-<span style=\"color: #800080;\">395</span><span style=\"color: #000000;\">.el8.noarch                                     \n  perl</span>-Time-Local-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.280</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.noarch                                             \n  perl</span>-URI-<span style=\"color: #800080;\">1.73</span>-<span style=\"color: #800080;\">3</span><span style=\"color: #000000;\">.el8.noarch                                                       \n  perl</span>-Unicode-Normalize-<span style=\"color: #800080;\">1.25</span>-<span style=\"color: #800080;\">396</span><span style=\"color: #000000;\">.el8.x86_64                                       \n  perl</span>-constant-<span style=\"color: #800080;\">1.33</span>-<span style=\"color: #800080;\">396</span><span style=\"color: #000000;\">.el8.noarch                                                \n  perl</span>-interpreter-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span><span style=\"color: #000000;\">.el8.x86_64                                         \n  perl</span>-libnet-<span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span><span style=\"color: #000000;\">.el8.noarch                                                    \n  perl</span>-libs-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span><span style=\"color: #000000;\">.el8.x86_64                                                \n  perl</span>-macros-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span><span style=\"color: #000000;\">.el8.x86_64                                              \n  perl</span>-parent-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">0.237</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.noarch                                                 \n  perl</span>-podlators-<span style=\"color: #800080;\">4.11</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.noarch                                                 \n  perl</span>-threads-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">2.21</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el8.x86_64                                                 \n  perl</span>-threads-shared-<span style=\"color: #800080;\">1.58</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el8.x86_64                                            \n  policycoreutils</span>-python-utils-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span><span style=\"color: #000000;\">.el8.noarch                                    \n  protobuf</span>-lite-<span style=\"color: #800080;\">3.5</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">7</span><span style=\"color: #000000;\">.el8.x86_64                                                 \n  python3</span>-audit-<span style=\"color: #800080;\">3.0</span>-<span style=\"color: #800080;\">0.17</span><span style=\"color: #000000;\">.20191104git1c2f876.el8.x86_64                             \n  python3</span>-libsemanage-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el8.x86_64                                             \n  python3</span>-policycoreutils-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span><span style=\"color: #000000;\">.el8.noarch                                         \n  python3</span>-setools-<span style=\"color: #800080;\">4.2</span>.<span style=\"color: #800080;\">2</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el8.x86_64                                               \n  zlib</span>-devel-<span style=\"color: #800080;\">1.2</span>.<span style=\"color: #800080;\">11</span>-<span style=\"color: #800080;\">13</span><span style=\"color: #000000;\">.el8.x86_64                                                  \n\nComplete</span>!<span style=\"color: #000000;\">\n[root@localhost </span>~]# mysqld --install --user=<span style=\"color: #000000;\">root\n[root@localhost </span>~]# mysqld --initialize --user=<span style=\"color: #000000;\">mysql\n[root@localhost </span>~]# mysqld --initialize --lower-<span style=\"color: #0000ff;\">case</span>-table-names=<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">\n[root@localhost </span>~]# cat /<span style=\"color: #0000ff;\">var</span>/log/mysql/<span style=\"color: #000000;\">mysqld.log\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.286242Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010116</span>] [Server] /usr/libexec/mysqld (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>) starting <span style=\"color: #0000ff;\">as</span> process <span style=\"color: #800080;\">8036</span>\n<span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.300375Z <span style=\"color: #800080;\">1</span> [ERROR] [MY-<span style=\"color: #800080;\">011011</span><span style=\"color: #000000;\">] [Server] Failed to find valid data directory.\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.300446Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010020</span><span style=\"color: #000000;\">] [Server] <span style=\"color: #ff0000;\">Data Dictionary initialization failed</span>.\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.300498Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010119</span><span style=\"color: #000000;\">] [Server] Aborting\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.300755Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010910</span>] [Server] /usr/libexec/mysqld: Shutdown complete (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span><span style=\"color: #000000;\">)  Source distribution.\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.523538Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">013169</span>] [Server] /usr/libexec/mysqld (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>) initializing of server <span style=\"color: #0000ff;\">in</span> progress <span style=\"color: #0000ff;\">as</span> process <span style=\"color: #800080;\">22923</span>\n<span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.524591Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010457</span>] [Server] --initialize specified but the data directory has files <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> it. Aborting.\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.524614Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">013236</span>] [Server] The designated data directory /<span style=\"color: #0000ff;\">var</span>/lib/mysql/ <span style=\"color: #0000ff;\">is</span><span style=\"color: #000000;\"> unusable. You can remove all files that the server added to it.\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.524676Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010119</span><span style=\"color: #000000;\">] [Server] Aborting\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.524752Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010910</span>] [Server] /usr/libexec/mysqld: Shutdown complete (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span><span style=\"color: #000000;\">)  Source distribution.\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.984050Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">013169</span>] [Server] /usr/libexec/mysqld (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>) initializing of server <span style=\"color: #0000ff;\">in</span> progress <span style=\"color: #0000ff;\">as</span> process <span style=\"color: #800080;\">28279</span>\n<span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.985204Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010457</span>] [Server] --initialize specified but the data directory has files <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> it. Aborting.\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.985285Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">013236</span>] [Server] The designated data directory /<span style=\"color: #0000ff;\">var</span>/lib/mysql/ <span style=\"color: #0000ff;\">is</span><span style=\"color: #000000;\"> unusable. You can remove all files that the server added to it.\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.985321Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010119</span><span style=\"color: #000000;\">] [Server] Aborting\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.985395Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010910</span>] [Server] /usr/libexec/mysqld: Shutdown complete (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span><span style=\"color: #000000;\">)  Source distribution.\n[root@localhost </span>~]# rm -rf /<span style=\"color: #0000ff;\">var</span>/lib/<span style=\"color: #000000;\">mysql\n[root@localhost </span>~]# mysqld --initialize --<span style=\"color: #000000;\">console\n[root@localhost </span>~]# chown -R mysql:mysql /<span style=\"color: #0000ff;\">var</span>/lib/mysql/<span style=\"color: #000000;\">\n[root@localhost </span>~<span style=\"color: #000000;\">]# systemctl start mysqld\n[root@localhost </span>~<span style=\"color: #000000;\">]# systemctl status mysqld\n● mysqld.service </span>- MySQL <span style=\"color: #800080;\">8.0</span><span style=\"color: #000000;\"> database server\n   Loaded: loaded (</span>/usr/lib/systemd/system/mysqld.service; disabled; vendor preset&gt;<span style=\"color: #000000;\">\n   Active: active (running) since Tue </span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-<span style=\"color: #800080;\">01</span> <span style=\"color: #800080;\">16</span>:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span><span style=\"color: #000000;\"> CST; 5s ago\n  Process: </span><span style=\"color: #800080;\">28436</span> ExecStartPost=/usr/libexec/mysql-check-upgrade (code=exited, stat&gt;<span style=\"color: #000000;\">\n  Process: </span><span style=\"color: #800080;\">28356</span> ExecStartPre=/usr/libexec/mysql-prepare-db-dir mysqld.service (co&gt;<span style=\"color: #000000;\">\n  Process: </span><span style=\"color: #800080;\">28332</span> ExecStartPre=/usr/libexec/mysql-check-socket (code=exited, status&gt;<span style=\"color: #000000;\">\n Main PID: </span><span style=\"color: #800080;\">28393</span><span style=\"color: #000000;\"> (mysqld)\n   Status: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Server is operational</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n    Tasks: </span><span style=\"color: #800080;\">39</span> (limit: <span style=\"color: #800080;\">11302</span><span style=\"color: #000000;\">)\n   Memory: </span><span style=\"color: #800080;\">382.4M</span><span style=\"color: #000000;\">\n   CGroup: </span>/system.slice/<span style=\"color: #000000;\">mysqld.service\n           └─</span><span style=\"color: #800080;\">28393</span> /usr/libexec/mysqld --basedir=/<span style=\"color: #000000;\">usr\n\nSep </span><span style=\"color: #800080;\">01</span> <span style=\"color: #800080;\">16</span>:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">18</span> localhost.localdomain systemd[<span style=\"color: #800080;\">1</span>]: Starting MySQL <span style=\"color: #800080;\">8.0</span> database serv&gt;<span style=\"color: #000000;\">\nSep </span><span style=\"color: #800080;\">01</span> <span style=\"color: #800080;\">16</span>:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span> localhost.localdomain mysql-check-upgrade[<span style=\"color: #800080;\">28436</span>]: The datadir loca&gt;<span style=\"color: #000000;\">\nSep </span><span style=\"color: #800080;\">01</span> <span style=\"color: #800080;\">16</span>:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span> localhost.localdomain mysql-check-upgrade[<span style=\"color: #800080;\">28436</span>]:   <span style=\"color: #800080;\">1</span>. Back-up you&gt;<span style=\"color: #000000;\">\nSep </span><span style=\"color: #800080;\">01</span> <span style=\"color: #800080;\">16</span>:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span> localhost.localdomain mysql-check-upgrade[<span style=\"color: #800080;\">28436</span>]:   <span style=\"color: #800080;\">2</span>. Start the d&gt;<span style=\"color: #000000;\">\nSep </span><span style=\"color: #800080;\">01</span> <span style=\"color: #800080;\">16</span>:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span> localhost.localdomain mysql-check-upgrade[<span style=\"color: #800080;\">28436</span>]:   <span style=\"color: #800080;\">3</span>. Run <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">mysql_&gt;</span>\nSep <span style=\"color: #800080;\">01</span> <span style=\"color: #800080;\">16</span>:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span> localhost.localdomain mysql-check-upgrade[<span style=\"color: #800080;\">28436</span>]: Read more about &gt;<span style=\"color: #000000;\">\nSep </span><span style=\"color: #800080;\">01</span> <span style=\"color: #800080;\">16</span>:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span> localhost.localdomain mysql-check-upgrade[<span style=\"color: #800080;\">28436</span>]: http:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">dev.mysql&gt;</span>\nSep <span style=\"color: #800080;\">01</span> <span style=\"color: #800080;\">16</span>:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span> localhost.localdomain systemd[<span style=\"color: #800080;\">1</span>]: Started MySQL <span style=\"color: #800080;\">8.0</span> database serve&gt;<span style=\"color: #000000;\">\n\n[root@localhost </span>~]# ^<span style=\"color: #000000;\">C\n[root@localhost </span>~]# cat /<span style=\"color: #0000ff;\">var</span>/log/mysql/<span style=\"color: #000000;\">mysqld.log\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.286242Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010116</span>] [Server] /usr/libexec/mysqld (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>) starting <span style=\"color: #0000ff;\">as</span> process <span style=\"color: #800080;\">8036</span>\n<span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.300375Z <span style=\"color: #800080;\">1</span> [ERROR] [MY-<span style=\"color: #800080;\">011011</span><span style=\"color: #000000;\">] [Server] Failed to find valid data directory.\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.300446Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010020</span><span style=\"color: #000000;\">] [Server] Data Dictionary initialization failed.\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.300498Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010119</span><span style=\"color: #000000;\">] [Server] Aborting\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.300755Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010910</span>] [Server] /usr/libexec/mysqld: Shutdown complete (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span><span style=\"color: #000000;\">)  Source distribution.\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.523538Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">013169</span>] [Server] /usr/libexec/mysqld (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>) initializing of server <span style=\"color: #0000ff;\">in</span> progress <span style=\"color: #0000ff;\">as</span> process <span style=\"color: #800080;\">22923</span>\n<span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.524591Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010457</span>] [Server] --initialize specified but the data directory has files <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> it. Aborting.\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.524614Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">013236</span>] [Server] The designated data directory /<span style=\"color: #0000ff;\">var</span>/lib/mysql/ <span style=\"color: #0000ff;\">is</span><span style=\"color: #000000;\"> unusable. You can remove all files that the server added to it.\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.524676Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010119</span><span style=\"color: #000000;\">] [Server] Aborting\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.524752Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010910</span>] [Server] /usr/libexec/mysqld: Shutdown complete (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span><span style=\"color: #000000;\">)  Source distribution.\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.984050Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">013169</span>] [Server] /usr/libexec/mysqld (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>) initializing of server <span style=\"color: #0000ff;\">in</span> progress <span style=\"color: #0000ff;\">as</span> process <span style=\"color: #800080;\">28279</span>\n<span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.985204Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010457</span>] [Server] --initialize specified but the data directory has files <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> it. Aborting.\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.985285Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">013236</span>] [Server] The designated data directory /<span style=\"color: #0000ff;\">var</span>/lib/mysql/ <span style=\"color: #0000ff;\">is</span><span style=\"color: #000000;\"> unusable. You can remove all files that the server added to it.\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.985321Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010119</span><span style=\"color: #000000;\">] [Server] Aborting\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.985395Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010910</span>] [Server] /usr/libexec/mysqld: Shutdown complete (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span><span style=\"color: #000000;\">)  Source distribution.\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">00</span>.208778Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">013169</span>] [Server] /usr/libexec/mysqld (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>) initializing of server <span style=\"color: #0000ff;\">in</span> progress <span style=\"color: #0000ff;\">as</span> process <span style=\"color: #800080;\">28282</span>\n<span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">02</span>.022251Z <span style=\"color: #800080;\">5</span> [Note] [MY-<span style=\"color: #800080;\">010454</span>] [Server] A temporary password <span style=\"color: #0000ff;\">is</span> generated <span style=\"color: #0000ff;\">for</span> root@localhost: <span style=\"color: #ff0000;\">u;*pHkkhe13T\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">02</span>.704903Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">013170</span>] [Server] /usr/libexec/mysqld (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span><span style=\"color: #000000;\">) initializing of server has completed\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">19</span>.678034Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010116</span>] [Server] /usr/libexec/mysqld (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>) starting <span style=\"color: #0000ff;\">as</span> process <span style=\"color: #800080;\">28393</span>\n<span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span>.444889Z <span style=\"color: #800080;\">0</span> [Warning] [MY-<span style=\"color: #800080;\">010068</span>] [Server] CA certificate ca.pem <span style=\"color: #0000ff;\">is</span><span style=\"color: #000000;\"> self signed.\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span>.463100Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010931</span>] [Server] /usr/libexec/mysqld: ready <span style=\"color: #0000ff;\">for</span> connections. Version: <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">8.0.17</span><span style=\"color: #800000;\">'</span>  socket: <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">/var/lib/mysql/mysql.sock</span><span style=\"color: #800000;\">'</span>  port: <span style=\"color: #800080;\">3306</span><span style=\"color: #000000;\">  Source distribution.\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span>.531457Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">011323</span>] [Server] X Plugin ready <span style=\"color: #0000ff;\">for</span> connections. Socket: <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">/var/lib/mysql/mysqlx.sock</span><span style=\"color: #800000;\">'</span> bind-address: <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">::</span><span style=\"color: #800000;\">'</span> port: <span style=\"color: #800080;\">33060</span><span style=\"color: #000000;\">\n[root@localhost </span>~]# mysql -u root -<span style=\"color: #000000;\">p\nEnter password: \nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id </span><span style=\"color: #0000ff;\">is</span> <span style=\"color: #800080;\">8</span><span style=\"color: #000000;\">\nServer version: </span><span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span><span style=\"color: #000000;\">\n\nCopyright (c) </span><span style=\"color: #800080;\">2000</span>, <span style=\"color: #800080;\">2019</span>, Oracle and/<span style=\"color: #000000;\">or its affiliates. All rights reserved.\n\nOracle </span><span style=\"color: #0000ff;\">is</span> a registered trademark of Oracle Corporation and/<span style=\"color: #000000;\">or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType </span><span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">help;</span><span style=\"color: #800000;\">'</span> or <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">\\h</span><span style=\"color: #800000;\">'</span> <span style=\"color: #0000ff;\">for</span> help. Type <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">\\c</span><span style=\"color: #800000;\">'</span><span style=\"color: #000000;\"> to clear the current input statement.\n\nmysql</span>&gt; ALTER USER <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">root</span><span style=\"color: #800000;\">'</span>@<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">localhost</span><span style=\"color: #800000;\">'</span> IDENTIFIED WITH mysql_native_password BY <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">test@123</span><span style=\"color: #800000;\">'</span><span style=\"color: #000000;\">;\nQuery OK, </span><span style=\"color: #800080;\">0</span> rows affected (<span style=\"color: #800080;\">0.01</span><span style=\"color: #000000;\"> sec)\n\nmysql</span>&gt;<span style=\"color: #000000;\"> use mysql\nReading table information </span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\"> completion of table and column names\nYou can turn off </span><span style=\"color: #0000ff;\">this</span> feature to <span style=\"color: #0000ff;\">get</span> a quicker startup with -<span style=\"color: #000000;\">A\n\nDatabase changed\nmysql</span>&gt; <span style=\"color: #0000ff;\">select</span> Host,User <span style=\"color: #0000ff;\">from</span><span style=\"color: #000000;\"> user;\n</span>+-----------+------------------+\n| Host      | User             |\n+-----------+------------------+\n| localhost | mysql.infoschema |\n| localhost | mysql.session    |\n| localhost | mysql.sys        |\n| localhost | root             |\n+-----------+------------------+\n<span style=\"color: #800080;\">4</span> rows <span style=\"color: #0000ff;\">in</span> <span style=\"color: #0000ff;\">set</span> (<span style=\"color: #800080;\">0.00</span><span style=\"color: #000000;\"> sec)\n\nmysql</span>&gt; update user <span style=\"color: #0000ff;\">set</span> host = <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">%</span><span style=\"color: #800000;\">'</span> <span style=\"color: #0000ff;\">where</span> user =<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">root</span><span style=\"color: #800000;\">'</span><span style=\"color: #000000;\">;\nQuery OK, </span><span style=\"color: #800080;\">1</span> row affected (<span style=\"color: #800080;\">0.00</span><span style=\"color: #000000;\"> sec)\nRows matched: </span><span style=\"color: #800080;\">1</span>  Changed: <span style=\"color: #800080;\">1</span>  Warnings: <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">\n\nmysql</span>&gt;<span style=\"color: #000000;\"> flush privileges;\nQuery OK, </span><span style=\"color: #800080;\">0</span> rows affected (<span style=\"color: #800080;\">0.01</span><span style=\"color: #000000;\"> sec)\n\nmysql</span>&gt;<span style=\"color: #000000;\"> exit\nBye\n[root@localhost </span>~]# </pre>\n</div>\n<p>&nbsp;</p>","source":"_posts/cnblogs/13596927.md","raw":"---\ntitle: centos 8及以上安装mysql 8.0\ndate: 2020-09-01T16:30:00\nauthor: wpzblog\ntags: [\"mysql\",\"linux\"]\n---\n<h1>本文适用于centos 8及以上安装mysql 8.0，整体耗时20分钟内，不需要翻墙</h1>\n<h2>1.环境先搞好</h2>\n<div class=\"cnblogs_code\">\n<pre> systemctl stop firewalld    <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">关闭防火墙</span>\n systemctl disable firewalld    <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">禁用防火墙</span>\n setenforce <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">\n sed </span>-i <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">s/^SELINUX=.*/SELINUX=disabled/</span><span style=\"color: #800000;\">'</span> /etc/selinux/<span style=\"color: #000000;\">config \n timedatectl </span><span style=\"color: #0000ff;\">set</span>-timezone Asia/Shanghai</pre>\n</div>\n<h2>2.开始安装</h2>\n<div class=\"cnblogs_code\">\n<pre>yum -y install mysql-server mysql mysql-devel  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">快速安装mysql</span>\nmysqld --install --user=<span style=\"color: #000000;\">root  \nmysqld </span>--initialize --user=<span style=\"color: #000000;\">mysql\nmysqld </span>--initialize --lower-<span style=\"color: #0000ff;\">case</span>-table-names=<span style=\"color: #800080;\">1</span>\n\n<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">查看mysql日志，密码在日志中  mysql的安装位置在/var/lib/mysql/</span>\ncat /<span style=\"color: #0000ff;\">var</span>/log/mysql/<span style=\"color: #000000;\">mysqld.log \n</span><span style=\"color: #808080;\">///</span><span style=\"color: #008000;\">发现错误 Data Dictionary initialization failed    </span></pre>\n</div>\n<h2>3.Data Dictionary initialization failed解决办法</h2>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">  rm </span>-rf /<span style=\"color: #0000ff;\">var</span>/lib/<span style=\"color: #000000;\">mysql\n\n  mysqld </span>--initialize --<span style=\"color: #000000;\">console\n\n  chown </span>-R mysql:mysql /<span style=\"color: #0000ff;\">var</span>/lib/mysql/<span style=\"color: #000000;\">\n\n  systemctl start mysqld\n\n  systemctl status mysqld\n\n  cat </span>/<span style=\"color: #0000ff;\">var</span>/log/mysql/<span style=\"color: #000000;\">mysqld.log \n\n  </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">A temporary password is generated for root@localhost: 冒号后面的就是初始密码</span></pre>\n</div>\n<h2>4.修改密码并开启远程访问</h2>\n<div class=\"cnblogs_code\">\n<pre>mysql -u root -<span style=\"color: #000000;\">p  <br />//需要输入初始密码，进入mysql控制台  \nALTER USER </span><span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">root</span><span style=\"color: #800000;\">'</span>@<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">localhost</span><span style=\"color: #800000;\">'</span> IDENTIFIED WITH mysql_native_password BY <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">test@123</span><span style=\"color: #800000;\">'</span><span style=\"color: #000000;\">;  //修改密码为test@123\nuse mysql\n</span><span style=\"color: #0000ff;\">select</span> Host,User <span style=\"color: #0000ff;\">from</span><span style=\"color: #000000;\"> user;\nupdate user </span><span style=\"color: #0000ff;\">set</span> host = <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">%</span><span style=\"color: #800000;\">'</span> <span style=\"color: #0000ff;\">where</span> user =<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">root</span><span style=\"color: #800000;\">'</span><span style=\"color: #000000;\">;    //将host从localhost修改为全部\nflush privileges;\nexit</span></pre>\n</div>\n<h2>5.其他操作</h2>\n<div class=\"cnblogs_code\">\n<pre>rpm -qa |<span style=\"color: #000000;\"> grep mysql\n\nyum </span>-y remove mysql....  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">如果mysql已安装，执行删除</span>\n<span style=\"color: #000000;\">\nsystemctl  enable</span>/start/stop/status servicename   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> enable </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">设置开机启动 ； start  </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">启动 ； stop  </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">停止 ；status状态</span></pre>\n</div>\n<h2>6.连接mysql</h2>\n<p>&nbsp;<img src=\"/cnblogs/13596927/789895-20200901161634167-1622109568.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<h1>在虚拟机上的输入输出记录</h1>\n<div class=\"cnblogs_code\">\n<pre>Xshell <span style=\"color: #800080;\">6</span> (Build <span style=\"color: #800080;\">0189</span><span style=\"color: #000000;\">)\nCopyright (c) </span><span style=\"color: #800080;\">2002</span><span style=\"color: #000000;\"> NetSarang Computer, Inc. All rights reserved.\n\nType `help</span><span style=\"color: #800000;\">'</span><span style=\"color: #800000;\"> to learn how to use Xshell prompt.</span>\n[D:\\~<span style=\"color: #000000;\">]$ \n\nConnecting to </span><span style=\"color: #800080;\">192.168</span>.<span style=\"color: #800080;\">5.133</span>:<span style=\"color: #800080;\">22</span><span style=\"color: #000000;\">...\nConnection established.\nTo escape to local shell, press </span><span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">Ctrl+Alt+]</span><span style=\"color: #800000;\">'</span><span style=\"color: #000000;\">.\n\nWARNING</span>!<span style=\"color: #000000;\"> The remote SSH server rejected X11 forwarding request.\nActivate the web console with: systemctl enable </span>--<span style=\"color: #000000;\">now cockpit.socket\n\nLast login: Tue Sep  </span><span style=\"color: #800080;\">1</span> <span style=\"color: #800080;\">15</span>:<span style=\"color: #800080;\">41</span>:<span style=\"color: #800080;\">10</span> <span style=\"color: #800080;\">2020</span><span style=\"color: #000000;\">\n[root@localhost </span>~<span style=\"color: #000000;\">]# systemctl stop firewalld\n[root@localhost </span>~<span style=\"color: #000000;\">]# systemctl disable firewalld\nRemoved </span>/etc/systemd/system/multi-user.target.wants/<span style=\"color: #000000;\">firewalld.service.\nRemoved </span>/etc/systemd/system/dbus-<span style=\"color: #000000;\">org.fedoraproject.FirewallD1.service.\n[root@localhost </span>~]# setenforce <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">\n[root@localhost </span>~]# sed -i <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">s/^SELINUX=.*/SELINUX=disabled/</span><span style=\"color: #800000;\">'</span> /etc/selinux/<span style=\"color: #000000;\">config\n[root@localhost </span>~]# timedatectl <span style=\"color: #0000ff;\">set</span>-timezone Asia/<span style=\"color: #000000;\">Shanghai\n[root@localhost </span>~]# yum -y install mysql-server mysql mysql-<span style=\"color: #000000;\">devel\nLast metadata expiration check: </span><span style=\"color: #800080;\">0</span>:<span style=\"color: #800080;\">11</span>:<span style=\"color: #800080;\">14</span> ago on Tue <span style=\"color: #800080;\">01</span> Sep <span style=\"color: #800080;\">2020</span> <span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">51</span>:<span style=\"color: #800080;\">03</span><span style=\"color: #000000;\"> PM CST.\nDependencies resolved.\n</span>===================================================================================<span style=\"color: #000000;\">\n Package               Arch   Version                              Repo       Size\n</span>===================================================================================<span style=\"color: #000000;\">\nInstalling:\n mysql                 x86_64 </span><span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349 AppStream  <span style=\"color: #800080;\">11</span><span style=\"color: #000000;\"> M\n mysql</span>-devel           x86_64 <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349 AppStream <span style=\"color: #800080;\">147</span><span style=\"color: #000000;\"> k\n mysql</span>-server          x86_64 <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349 AppStream  <span style=\"color: #800080;\">22</span><span style=\"color: #000000;\"> M\nInstalling dependencies:\n checkpolicy           x86_64 </span><span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span>.el8                            BaseOS    <span style=\"color: #800080;\">348</span><span style=\"color: #000000;\"> k\n keyutils</span>-libs-devel   x86_64 <span style=\"color: #800080;\">1.5</span>.<span style=\"color: #800080;\">10</span>-<span style=\"color: #800080;\">6</span>.el8                         BaseOS     <span style=\"color: #800080;\">48</span><span style=\"color: #000000;\"> k\n krb5</span>-devel            x86_64 <span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span>.el8                          BaseOS    <span style=\"color: #800080;\">549</span><span style=\"color: #000000;\"> k\n libcom_err</span>-devel      x86_64 <span style=\"color: #800080;\">1.45</span>.<span style=\"color: #800080;\">4</span>-<span style=\"color: #800080;\">3</span>.el8                         BaseOS     <span style=\"color: #800080;\">38</span><span style=\"color: #000000;\"> k\n libevent              x86_64 </span><span style=\"color: #800080;\">2.1</span>.<span style=\"color: #800080;\">8</span>-<span style=\"color: #800080;\">5</span>.el8                          BaseOS    <span style=\"color: #800080;\">253</span><span style=\"color: #000000;\"> k\n libkadm5              x86_64 </span><span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span>.el8                          BaseOS    <span style=\"color: #800080;\">185</span><span style=\"color: #000000;\"> k\n libselinux</span>-devel      x86_64 <span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">3</span>.el8                            BaseOS    <span style=\"color: #800080;\">199</span><span style=\"color: #000000;\"> k\n libsepol</span>-devel        x86_64 <span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span>.el8                            BaseOS     <span style=\"color: #800080;\">86</span><span style=\"color: #000000;\"> k\n libverto</span>-devel        x86_64 <span style=\"color: #800080;\">0.3</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">5</span>.el8                          BaseOS     <span style=\"color: #800080;\">18</span><span style=\"color: #000000;\"> k\n mariadb</span>-connector-c-<span style=\"color: #000000;\">config\n                       noarch </span><span style=\"color: #800080;\">3.0</span>.<span style=\"color: #800080;\">7</span>-<span style=\"color: #800080;\">1</span>.el8                          AppStream  <span style=\"color: #800080;\">13</span><span style=\"color: #000000;\"> k\n mecab                 x86_64 </span><span style=\"color: #800080;\">0.996</span>-<span style=\"color: #800080;\">1</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">41</span>+ca30bab6.<span style=\"color: #800080;\">9</span> AppStream <span style=\"color: #800080;\">397</span><span style=\"color: #000000;\"> k\n mysql</span>-common          x86_64 <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349 AppStream <span style=\"color: #800080;\">143</span><span style=\"color: #000000;\"> k\n mysql</span>-errmsg          x86_64 <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349 AppStream <span style=\"color: #800080;\">557</span><span style=\"color: #000000;\"> k\n mysql</span>-libs            x86_64 <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349 AppStream <span style=\"color: #800080;\">1.2</span><span style=\"color: #000000;\"> M\n openssl</span>-devel         x86_64 <span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.1</span>.1c-<span style=\"color: #800080;\">15</span>.el8                      BaseOS    <span style=\"color: #800080;\">2.3</span><span style=\"color: #000000;\"> M\n pcre2</span>-devel           x86_64 <span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8                          BaseOS    <span style=\"color: #800080;\">605</span><span style=\"color: #000000;\"> k\n pcre2</span>-utf16           x86_64 <span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8                          BaseOS    <span style=\"color: #800080;\">228</span><span style=\"color: #000000;\"> k\n pcre2</span>-utf32           x86_64 <span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8                          BaseOS    <span style=\"color: #800080;\">220</span><span style=\"color: #000000;\"> k\n perl</span>-Carp             noarch <span style=\"color: #800080;\">1.42</span>-<span style=\"color: #800080;\">396</span>.el8                         BaseOS     <span style=\"color: #800080;\">30</span><span style=\"color: #000000;\"> k\n perl</span>-Data-Dumper      x86_64 <span style=\"color: #800080;\">2.167</span>-<span style=\"color: #800080;\">399</span>.el8                        BaseOS     <span style=\"color: #800080;\">58</span><span style=\"color: #000000;\"> k\n perl</span>-Digest           noarch <span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span>.el8                         AppStream  <span style=\"color: #800080;\">27</span><span style=\"color: #000000;\"> k\n perl</span>-Digest-MD5       x86_64 <span style=\"color: #800080;\">2.55</span>-<span style=\"color: #800080;\">396</span>.el8                         AppStream  <span style=\"color: #800080;\">37</span><span style=\"color: #000000;\"> k\n perl</span>-Encode           x86_64 <span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">2.97</span>-<span style=\"color: #800080;\">3</span>.el8                         BaseOS    <span style=\"color: #800080;\">1.5</span><span style=\"color: #000000;\"> M\n perl</span>-Errno            x86_64 <span style=\"color: #800080;\">1.28</span>-<span style=\"color: #800080;\">416</span>.el8                         BaseOS     <span style=\"color: #800080;\">76</span><span style=\"color: #000000;\"> k\n perl</span>-Exporter         noarch <span style=\"color: #800080;\">5.72</span>-<span style=\"color: #800080;\">396</span>.el8                         BaseOS     <span style=\"color: #800080;\">34</span><span style=\"color: #000000;\"> k\n perl</span>-File-Path        noarch <span style=\"color: #800080;\">2.15</span>-<span style=\"color: #800080;\">2</span>.el8                           BaseOS     <span style=\"color: #800080;\">38</span><span style=\"color: #000000;\"> k\n perl</span>-File-Temp        noarch <span style=\"color: #800080;\">0.230</span>.<span style=\"color: #800080;\">600</span>-<span style=\"color: #800080;\">1</span>.el8                      BaseOS     <span style=\"color: #800080;\">63</span><span style=\"color: #000000;\"> k\n perl</span>-Getopt-Long      noarch <span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">2.50</span>-<span style=\"color: #800080;\">4</span>.el8                         BaseOS     <span style=\"color: #800080;\">63</span><span style=\"color: #000000;\"> k\n perl</span>-HTTP-Tiny        noarch <span style=\"color: #800080;\">0.074</span>-<span style=\"color: #800080;\">1</span>.el8                          BaseOS     <span style=\"color: #800080;\">58</span><span style=\"color: #000000;\"> k\n perl</span>-IO               x86_64 <span style=\"color: #800080;\">1.38</span>-<span style=\"color: #800080;\">416</span>.el8                         BaseOS    <span style=\"color: #800080;\">141</span><span style=\"color: #000000;\"> k\n perl</span>-MIME-Base64      x86_64 <span style=\"color: #800080;\">3.15</span>-<span style=\"color: #800080;\">396</span>.el8                         BaseOS     <span style=\"color: #800080;\">31</span><span style=\"color: #000000;\"> k\n perl</span>-Net-SSLeay       x86_64 <span style=\"color: #800080;\">1.88</span>-<span style=\"color: #800080;\">1</span>.el8                           AppStream <span style=\"color: #800080;\">379</span><span style=\"color: #000000;\"> k\n perl</span>-PathTools        x86_64 <span style=\"color: #800080;\">3.74</span>-<span style=\"color: #800080;\">1</span>.el8                           BaseOS     <span style=\"color: #800080;\">90</span><span style=\"color: #000000;\"> k\n perl</span>-Pod-Escapes      noarch <span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.07</span>-<span style=\"color: #800080;\">395</span>.el8                       BaseOS     <span style=\"color: #800080;\">20</span><span style=\"color: #000000;\"> k\n perl</span>-Pod-Perldoc      noarch <span style=\"color: #800080;\">3.28</span>-<span style=\"color: #800080;\">396</span>.el8                         BaseOS     <span style=\"color: #800080;\">86</span><span style=\"color: #000000;\"> k\n perl</span>-Pod-Simple       noarch <span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">3.35</span>-<span style=\"color: #800080;\">395</span>.el8                       BaseOS    <span style=\"color: #800080;\">213</span><span style=\"color: #000000;\"> k\n perl</span>-Pod-Usage        noarch <span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">1.69</span>-<span style=\"color: #800080;\">395</span>.el8                       BaseOS     <span style=\"color: #800080;\">34</span><span style=\"color: #000000;\"> k\n perl</span>-Scalar-List-<span style=\"color: #000000;\">Utils\n                       x86_64 </span><span style=\"color: #800080;\">3</span>:<span style=\"color: #800080;\">1.49</span>-<span style=\"color: #800080;\">2</span>.el8                         BaseOS     <span style=\"color: #800080;\">68</span><span style=\"color: #000000;\"> k\n perl</span>-Socket           x86_64 <span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">2.027</span>-<span style=\"color: #800080;\">3</span>.el8                        BaseOS     <span style=\"color: #800080;\">59</span><span style=\"color: #000000;\"> k\n perl</span>-Storable         x86_64 <span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span>.el8                         BaseOS     <span style=\"color: #800080;\">98</span><span style=\"color: #000000;\"> k\n perl</span>-Term-ANSIColor   noarch <span style=\"color: #800080;\">4.06</span>-<span style=\"color: #800080;\">396</span>.el8                         BaseOS     <span style=\"color: #800080;\">46</span><span style=\"color: #000000;\"> k\n perl</span>-Term-Cap         noarch <span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span>.el8                         BaseOS     <span style=\"color: #800080;\">23</span><span style=\"color: #000000;\"> k\n perl</span>-Text-ParseWords  noarch <span style=\"color: #800080;\">3.30</span>-<span style=\"color: #800080;\">395</span>.el8                         BaseOS     <span style=\"color: #800080;\">18</span><span style=\"color: #000000;\"> k\n perl</span>-Text-Tabs+Wrap   noarch <span style=\"color: #800080;\">2013.0523</span>-<span style=\"color: #800080;\">395</span>.el8                    BaseOS     <span style=\"color: #800080;\">24</span><span style=\"color: #000000;\"> k\n perl</span>-Time-Local       noarch <span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.280</span>-<span style=\"color: #800080;\">1</span>.el8                        BaseOS     <span style=\"color: #800080;\">34</span><span style=\"color: #000000;\"> k\n perl</span>-URI              noarch <span style=\"color: #800080;\">1.73</span>-<span style=\"color: #800080;\">3</span>.el8                           AppStream <span style=\"color: #800080;\">116</span><span style=\"color: #000000;\"> k\n perl</span>-Unicode-<span style=\"color: #000000;\">Normalize\n                       x86_64 </span><span style=\"color: #800080;\">1.25</span>-<span style=\"color: #800080;\">396</span>.el8                         BaseOS     <span style=\"color: #800080;\">82</span><span style=\"color: #000000;\"> k\n perl</span>-constant         noarch <span style=\"color: #800080;\">1.33</span>-<span style=\"color: #800080;\">396</span>.el8                         BaseOS     <span style=\"color: #800080;\">25</span><span style=\"color: #000000;\"> k\n perl</span>-interpreter      x86_64 <span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8                     BaseOS    <span style=\"color: #800080;\">6.3</span><span style=\"color: #000000;\"> M\n perl</span>-libnet           noarch <span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span>.el8                           AppStream <span style=\"color: #800080;\">121</span><span style=\"color: #000000;\"> k\n perl</span>-libs             x86_64 <span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8                     BaseOS    <span style=\"color: #800080;\">1.6</span><span style=\"color: #000000;\"> M\n perl</span>-macros           x86_64 <span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8                     BaseOS     <span style=\"color: #800080;\">72</span><span style=\"color: #000000;\"> k\n perl</span>-parent           noarch <span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">0.237</span>-<span style=\"color: #800080;\">1</span>.el8                        BaseOS     <span style=\"color: #800080;\">20</span><span style=\"color: #000000;\"> k\n perl</span>-podlators        noarch <span style=\"color: #800080;\">4.11</span>-<span style=\"color: #800080;\">1</span>.el8                           BaseOS    <span style=\"color: #800080;\">118</span><span style=\"color: #000000;\"> k\n perl</span>-threads          x86_64 <span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">2.21</span>-<span style=\"color: #800080;\">2</span>.el8                         BaseOS     <span style=\"color: #800080;\">61</span><span style=\"color: #000000;\"> k\n perl</span>-threads-shared   x86_64 <span style=\"color: #800080;\">1.58</span>-<span style=\"color: #800080;\">2</span>.el8                           BaseOS     <span style=\"color: #800080;\">48</span><span style=\"color: #000000;\"> k\n policycoreutils</span>-python-<span style=\"color: #000000;\">utils\n                       noarch </span><span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span>.el8                            BaseOS    <span style=\"color: #800080;\">251</span><span style=\"color: #000000;\"> k\n protobuf</span>-lite         x86_64 <span style=\"color: #800080;\">3.5</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">7</span>.el8                          AppStream <span style=\"color: #800080;\">150</span><span style=\"color: #000000;\"> k\n python3</span>-audit         x86_64 <span style=\"color: #800080;\">3.0</span>-<span style=\"color: #800080;\">0.17</span>.20191104git1c2f876.el8      BaseOS     <span style=\"color: #800080;\">86</span><span style=\"color: #000000;\"> k\n python3</span>-libsemanage   x86_64 <span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">2</span>.el8                            BaseOS    <span style=\"color: #800080;\">127</span><span style=\"color: #000000;\"> k\n python3</span>-<span style=\"color: #000000;\">policycoreutils\n                       noarch </span><span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span>.el8                            BaseOS    <span style=\"color: #800080;\">2.2</span><span style=\"color: #000000;\"> M\n python3</span>-setools       x86_64 <span style=\"color: #800080;\">4.2</span>.<span style=\"color: #800080;\">2</span>-<span style=\"color: #800080;\">2</span>.el8                          BaseOS    <span style=\"color: #800080;\">601</span><span style=\"color: #000000;\"> k\n zlib</span>-devel            x86_64 <span style=\"color: #800080;\">1.2</span>.<span style=\"color: #800080;\">11</span>-<span style=\"color: #800080;\">13</span>.el8                        BaseOS     <span style=\"color: #800080;\">57</span><span style=\"color: #000000;\"> k\nInstalling weak dependencies:\n perl</span>-IO-Socket-IP     noarch <span style=\"color: #800080;\">0.39</span>-<span style=\"color: #800080;\">5</span>.el8                           AppStream  <span style=\"color: #800080;\">47</span><span style=\"color: #000000;\"> k\n perl</span>-IO-Socket-SSL    noarch <span style=\"color: #800080;\">2.066</span>-<span style=\"color: #800080;\">4</span>.el8                          AppStream <span style=\"color: #800080;\">297</span><span style=\"color: #000000;\"> k\n perl</span>-Mozilla-CA       noarch <span style=\"color: #800080;\">20160104</span>-<span style=\"color: #800080;\">7</span>.el8                       AppStream  <span style=\"color: #800080;\">15</span><span style=\"color: #000000;\"> k\nEnabling module streams:\n mysql                        </span><span style=\"color: #800080;\">8.0</span><span style=\"color: #000000;\">                                                 \n\nTransaction Summary\n</span>===================================================================================<span style=\"color: #000000;\">\nInstall  </span><span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> Packages\n\nTotal download size: </span><span style=\"color: #800080;\">55</span><span style=\"color: #000000;\"> M\nInstalled size: </span><span style=\"color: #800080;\">279</span><span style=\"color: #000000;\"> M\nDownloading Packages:\n(</span><span style=\"color: #800080;\">1</span>/<span style=\"color: #800080;\">69</span>): mariadb-connector-c-config-<span style=\"color: #800080;\">3.0</span>.<span style=\"color: #800080;\">7</span>-<span style=\"color: #800080;\">1</span>.el8.noa  <span style=\"color: #800080;\">71</span> kB/s |  <span style=\"color: #800080;\">13</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n[MIRROR] mysql</span>-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_64.rpm: Curl error (<span style=\"color: #800080;\">56</span>): Failure when receiving data <span style=\"color: #0000ff;\">from</span> the peer <span style=\"color: #0000ff;\">for</span> http:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">mirror.lzu.edu.cn/centos/8.2.2004/AppStream/x86_64/os/Packages/mysql-8.0.17-3.module_el8.0.0+181+899d6349.x86_64.rpm [Recv failure: Connection reset by peer]</span>\n[MIRROR] mysql-common-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_64.rpm: Curl error (<span style=\"color: #800080;\">56</span>): Failure when receiving data <span style=\"color: #0000ff;\">from</span> the peer <span style=\"color: #0000ff;\">for</span> http:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">mirror.lzu.edu.cn/centos/8.2.2004/AppStream/x86_64/os/Packages/mysql-common-8.0.17-3.module_el8.0.0+181+899d6349.x86_64.rpm [Recv failure: Connection reset by peer]</span>\n(<span style=\"color: #800080;\">2</span>/<span style=\"color: #800080;\">69</span>): mysql-common-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #800080;\">8</span> <span style=\"color: #800080;\">602</span> kB/s | <span style=\"color: #800080;\">143</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">3</span>/<span style=\"color: #800080;\">69</span>): mysql-devel-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #800080;\">89</span> <span style=\"color: #800080;\">2.3</span> MB/s | <span style=\"color: #800080;\">147</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">4</span>/<span style=\"color: #800080;\">69</span>): mecab-<span style=\"color: #800080;\">0.996</span>-<span style=\"color: #800080;\">1</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">41</span>+ca30bab6.<span style=\"color: #800080;\">9</span> <span style=\"color: #800080;\">562</span> kB/s | <span style=\"color: #800080;\">397</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">5</span>/<span style=\"color: #800080;\">69</span>): mysql-errmsg-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #800080;\">8</span> <span style=\"color: #800080;\">2.5</span> MB/s | <span style=\"color: #800080;\">557</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n[MIRROR] mysql</span>-libs-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_64.rpm: Curl error (<span style=\"color: #800080;\">56</span>): Failure when receiving data <span style=\"color: #0000ff;\">from</span> the peer <span style=\"color: #0000ff;\">for</span> http:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">mirror.lzu.edu.cn/centos/8.2.2004/AppStream/x86_64/os/Packages/mysql-libs-8.0.17-3.module_el8.0.0+181+899d6349.x86_64.rpm [Recv failure: Connection reset by peer]</span>\n(<span style=\"color: #800080;\">6</span>/<span style=\"color: #800080;\">69</span>): mysql-libs-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #800080;\">899</span> <span style=\"color: #800080;\">2.2</span> MB/s | <span style=\"color: #800080;\">1.2</span> MB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">7</span>/<span style=\"color: #800080;\">69</span>): perl-Digest-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span>.el8.noarch.rpm        <span style=\"color: #800080;\">379</span> kB/s |  <span style=\"color: #800080;\">27</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">8</span>/<span style=\"color: #800080;\">69</span>): perl-Digest-MD5-<span style=\"color: #800080;\">2.55</span>-<span style=\"color: #800080;\">396</span>.el8.x86_64.rpm    <span style=\"color: #800080;\">1.4</span> MB/s |  <span style=\"color: #800080;\">37</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">9</span>/<span style=\"color: #800080;\">69</span>): perl-IO-Socket-IP-<span style=\"color: #800080;\">0.39</span>-<span style=\"color: #800080;\">5</span>.el8.noarch.rpm    <span style=\"color: #800080;\">1.5</span> MB/s |  <span style=\"color: #800080;\">47</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">10</span>/<span style=\"color: #800080;\">69</span>): perl-IO-Socket-SSL-<span style=\"color: #800080;\">2.066</span>-<span style=\"color: #800080;\">4</span>.el8.noarch.rpm <span style=\"color: #800080;\">264</span> kB/s | <span style=\"color: #800080;\">297</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">01</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">11</span>/<span style=\"color: #800080;\">69</span>): perl-Mozilla-CA-<span style=\"color: #800080;\">20160104</span>-<span style=\"color: #800080;\">7</span>.el8.noarch.rpm <span style=\"color: #800080;\">413</span> kB/s |  <span style=\"color: #800080;\">15</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">12</span>/<span style=\"color: #800080;\">69</span>): perl-Net-SSLeay-<span style=\"color: #800080;\">1.88</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64.rpm     <span style=\"color: #800080;\">3.6</span> MB/s | <span style=\"color: #800080;\">379</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">13</span>/<span style=\"color: #800080;\">69</span>): perl-URI-<span style=\"color: #800080;\">1.73</span>-<span style=\"color: #800080;\">3</span>.el8.noarch.rpm            <span style=\"color: #800080;\">2.8</span> MB/s | <span style=\"color: #800080;\">116</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">14</span>/<span style=\"color: #800080;\">69</span>): perl-libnet-<span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span>.el8.noarch.rpm         <span style=\"color: #800080;\">3.4</span> MB/s | <span style=\"color: #800080;\">121</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">15</span>/<span style=\"color: #800080;\">69</span>): protobuf-lite-<span style=\"color: #800080;\">3.5</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">7</span>.el8.x86_64.rpm      <span style=\"color: #800080;\">4.0</span> MB/s | <span style=\"color: #800080;\">150</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">16</span>/<span style=\"color: #800080;\">69</span>): checkpolicy-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64.rpm          <span style=\"color: #800080;\">831</span> kB/s | <span style=\"color: #800080;\">348</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">17</span>/<span style=\"color: #800080;\">69</span>): keyutils-libs-devel-<span style=\"color: #800080;\">1.5</span>.<span style=\"color: #800080;\">10</span>-<span style=\"color: #800080;\">6</span>.el8.x86_64.r <span style=\"color: #800080;\">470</span> kB/s |  <span style=\"color: #800080;\">48</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">18</span>/<span style=\"color: #800080;\">69</span>): krb5-devel-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span>.el8.x86_64.rpm         <span style=\"color: #800080;\">1.4</span> MB/s | <span style=\"color: #800080;\">549</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">19</span>/<span style=\"color: #800080;\">69</span>): libcom_err-devel-<span style=\"color: #800080;\">1.45</span>.<span style=\"color: #800080;\">4</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64.rpm  <span style=\"color: #800080;\">304</span> kB/s |  <span style=\"color: #800080;\">38</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">20</span>/<span style=\"color: #800080;\">69</span>): libevent-<span style=\"color: #800080;\">2.1</span>.<span style=\"color: #800080;\">8</span>-<span style=\"color: #800080;\">5</span>.el8.x86_64.rpm           <span style=\"color: #800080;\">1.6</span> MB/s | <span style=\"color: #800080;\">253</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">21</span>/<span style=\"color: #800080;\">69</span>): libkadm5-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span>.el8.x86_64.rpm           <span style=\"color: #800080;\">1.6</span> MB/s | <span style=\"color: #800080;\">185</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">22</span>/<span style=\"color: #800080;\">69</span>): libselinux-devel-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64.rpm     <span style=\"color: #800080;\">1.7</span> MB/s | <span style=\"color: #800080;\">199</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">23</span>/<span style=\"color: #800080;\">69</span>): libsepol-devel-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64.rpm       <span style=\"color: #800080;\">994</span> kB/s |  <span style=\"color: #800080;\">86</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">24</span>/<span style=\"color: #800080;\">69</span>): libverto-devel-<span style=\"color: #800080;\">0.3</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">5</span>.el8.x86_64.rpm     <span style=\"color: #800080;\">367</span> kB/s |  <span style=\"color: #800080;\">18</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">25</span>/<span style=\"color: #800080;\">69</span>): openssl-devel-<span style=\"color: #800080;\">1.1</span>.1c-<span style=\"color: #800080;\">15</span>.el8.x86_64.rpm    <span style=\"color: #800080;\">2.2</span> MB/s | <span style=\"color: #800080;\">2.3</span> MB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">01</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">26</span>/<span style=\"color: #800080;\">69</span>): mysql-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d634 <span style=\"color: #800080;\">1.9</span> MB/s |  <span style=\"color: #800080;\">11</span> MB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">05</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">27</span>/<span style=\"color: #800080;\">69</span>): mysql-server-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+ <span style=\"color: #800080;\">4.3</span> MB/s |  <span style=\"color: #800080;\">22</span> MB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">04</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">28</span>/<span style=\"color: #800080;\">69</span>): pcre2-devel-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64.rpm        <span style=\"color: #800080;\">1.8</span> MB/s | <span style=\"color: #800080;\">605</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">29</span>/<span style=\"color: #800080;\">69</span>): perl-Carp-<span style=\"color: #800080;\">1.42</span>-<span style=\"color: #800080;\">396</span>.el8.noarch.rpm         <span style=\"color: #800080;\">442</span> kB/s |  <span style=\"color: #800080;\">30</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">30</span>/<span style=\"color: #800080;\">69</span>): pcre2-utf16-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64.rpm        <span style=\"color: #800080;\">678</span> kB/s | <span style=\"color: #800080;\">228</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">31</span>/<span style=\"color: #800080;\">69</span>): perl-Data-Dumper-<span style=\"color: #800080;\">2.167</span>-<span style=\"color: #800080;\">399</span>.el8.x86_64.rpm <span style=\"color: #800080;\">755</span> kB/s |  <span style=\"color: #800080;\">58</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">32</span>/<span style=\"color: #800080;\">69</span>): perl-Errno-<span style=\"color: #800080;\">1.28</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64.rpm        <span style=\"color: #800080;\">557</span> kB/s |  <span style=\"color: #800080;\">76</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">33</span>/<span style=\"color: #800080;\">69</span>): pcre2-utf32-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64.rpm        <span style=\"color: #800080;\">631</span> kB/s | <span style=\"color: #800080;\">220</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">34</span>/<span style=\"color: #800080;\">69</span>): perl-Exporter-<span style=\"color: #800080;\">5.72</span>-<span style=\"color: #800080;\">396</span>.el8.noarch.rpm     <span style=\"color: #800080;\">476</span> kB/s |  <span style=\"color: #800080;\">34</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">35</span>/<span style=\"color: #800080;\">69</span>): perl-File-Path-<span style=\"color: #800080;\">2.15</span>-<span style=\"color: #800080;\">2</span>.el8.noarch.rpm      <span style=\"color: #800080;\">503</span> kB/s |  <span style=\"color: #800080;\">38</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">36</span>/<span style=\"color: #800080;\">69</span>): perl-File-Temp-<span style=\"color: #800080;\">0.230</span>.<span style=\"color: #800080;\">600</span>-<span style=\"color: #800080;\">1</span>.el8.noarch.rpm <span style=\"color: #800080;\">580</span> kB/s |  <span style=\"color: #800080;\">63</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">37</span>/<span style=\"color: #800080;\">69</span>): perl-Getopt-Long-<span style=\"color: #800080;\">2.50</span>-<span style=\"color: #800080;\">4</span>.el8.noarch.rpm    <span style=\"color: #800080;\">593</span> kB/s |  <span style=\"color: #800080;\">63</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">38</span>/<span style=\"color: #800080;\">69</span>): perl-HTTP-Tiny-<span style=\"color: #800080;\">0.074</span>-<span style=\"color: #800080;\">1</span>.el8.noarch.rpm     <span style=\"color: #800080;\">544</span> kB/s |  <span style=\"color: #800080;\">58</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">39</span>/<span style=\"color: #800080;\">69</span>): perl-MIME-Base64-<span style=\"color: #800080;\">3.15</span>-<span style=\"color: #800080;\">396</span>.el8.x86_64.rpm  <span style=\"color: #800080;\">377</span> kB/s |  <span style=\"color: #800080;\">31</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">40</span>/<span style=\"color: #800080;\">69</span>): perl-IO-<span style=\"color: #800080;\">1.38</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64.rpm           <span style=\"color: #800080;\">738</span> kB/s | <span style=\"color: #800080;\">141</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">41</span>/<span style=\"color: #800080;\">69</span>): perl-Pod-Escapes-<span style=\"color: #800080;\">1.07</span>-<span style=\"color: #800080;\">395</span>.el8.noarch.rpm  <span style=\"color: #800080;\">300</span> kB/s |  <span style=\"color: #800080;\">20</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">42</span>/<span style=\"color: #800080;\">69</span>): perl-PathTools-<span style=\"color: #800080;\">3.74</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64.rpm      <span style=\"color: #800080;\">704</span> kB/s |  <span style=\"color: #800080;\">90</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">43</span>/<span style=\"color: #800080;\">69</span>): perl-Pod-Perldoc-<span style=\"color: #800080;\">3.28</span>-<span style=\"color: #800080;\">396</span>.el8.noarch.rpm  <span style=\"color: #800080;\">628</span> kB/s |  <span style=\"color: #800080;\">86</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">44</span>/<span style=\"color: #800080;\">69</span>): perl-Pod-Usage-<span style=\"color: #800080;\">1.69</span>-<span style=\"color: #800080;\">395</span>.el8.noarch.rpm    <span style=\"color: #800080;\">408</span> kB/s |  <span style=\"color: #800080;\">34</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">45</span>/<span style=\"color: #800080;\">69</span>): perl-Pod-Simple-<span style=\"color: #800080;\">3.35</span>-<span style=\"color: #800080;\">395</span>.el8.noarch.rpm   <span style=\"color: #800080;\">763</span> kB/s | <span style=\"color: #800080;\">213</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">46</span>/<span style=\"color: #800080;\">69</span>): perl-Scalar-List-Utils-<span style=\"color: #800080;\">1.49</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64. <span style=\"color: #800080;\">597</span> kB/s |  <span style=\"color: #800080;\">68</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">47</span>/<span style=\"color: #800080;\">69</span>): perl-Socket-<span style=\"color: #800080;\">2.027</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64.rpm        <span style=\"color: #800080;\">572</span> kB/s |  <span style=\"color: #800080;\">59</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">48</span>/<span style=\"color: #800080;\">69</span>): perl-Storable-<span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64.rpm       <span style=\"color: #800080;\">682</span> kB/s |  <span style=\"color: #800080;\">98</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">49</span>/<span style=\"color: #800080;\">69</span>): perl-Term-ANSIColor-<span style=\"color: #800080;\">4.06</span>-<span style=\"color: #800080;\">396</span>.el8.noarch.r <span style=\"color: #800080;\">502</span> kB/s |  <span style=\"color: #800080;\">46</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">50</span>/<span style=\"color: #800080;\">69</span>): perl-Term-Cap-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span>.el8.noarch.rpm     <span style=\"color: #800080;\">349</span> kB/s |  <span style=\"color: #800080;\">23</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">51</span>/<span style=\"color: #800080;\">69</span>): perl-Text-ParseWords-<span style=\"color: #800080;\">3.30</span>-<span style=\"color: #800080;\">395</span>.el8.noarch. <span style=\"color: #800080;\">327</span> kB/s |  <span style=\"color: #800080;\">18</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">52</span>/<span style=\"color: #800080;\">69</span>): perl-Text-Tabs+Wrap-<span style=\"color: #800080;\">2013.0523</span>-<span style=\"color: #800080;\">395</span>.el8.noa <span style=\"color: #800080;\">334</span> kB/s |  <span style=\"color: #800080;\">24</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">53</span>/<span style=\"color: #800080;\">69</span>): perl-Time-Local-<span style=\"color: #800080;\">1.280</span>-<span style=\"color: #800080;\">1</span>.el8.noarch.rpm    <span style=\"color: #800080;\">424</span> kB/s |  <span style=\"color: #800080;\">34</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">54</span>/<span style=\"color: #800080;\">69</span>): perl-Encode-<span style=\"color: #800080;\">2.97</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64.rpm         <span style=\"color: #800080;\">1.1</span> MB/s | <span style=\"color: #800080;\">1.5</span> MB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">01</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">55</span>/<span style=\"color: #800080;\">69</span>): perl-constant-<span style=\"color: #800080;\">1.33</span>-<span style=\"color: #800080;\">396</span>.el8.noarch.rpm     <span style=\"color: #800080;\">402</span> kB/s |  <span style=\"color: #800080;\">25</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">56</span>/<span style=\"color: #800080;\">69</span>): perl-Unicode-Normalize-<span style=\"color: #800080;\">1.25</span>-<span style=\"color: #800080;\">396</span>.el8.x86_6 <span style=\"color: #800080;\">889</span> kB/s |  <span style=\"color: #800080;\">82</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">57</span>/<span style=\"color: #800080;\">69</span>): perl-macros-<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64.rpm     <span style=\"color: #800080;\">539</span> kB/s |  <span style=\"color: #800080;\">72</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">58</span>/<span style=\"color: #800080;\">69</span>): perl-parent-<span style=\"color: #800080;\">0.237</span>-<span style=\"color: #800080;\">1</span>.el8.noarch.rpm        <span style=\"color: #800080;\">280</span> kB/s |  <span style=\"color: #800080;\">20</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">59</span>/<span style=\"color: #800080;\">69</span>): perl-podlators-<span style=\"color: #800080;\">4.11</span>-<span style=\"color: #800080;\">1</span>.el8.noarch.rpm      <span style=\"color: #800080;\">609</span> kB/s | <span style=\"color: #800080;\">118</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">60</span>/<span style=\"color: #800080;\">69</span>): perl-threads-<span style=\"color: #800080;\">2.21</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64.rpm        <span style=\"color: #800080;\">506</span> kB/s |  <span style=\"color: #800080;\">61</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">61</span>/<span style=\"color: #800080;\">69</span>): perl-threads-shared-<span style=\"color: #800080;\">1.58</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64.rpm <span style=\"color: #800080;\">468</span> kB/s |  <span style=\"color: #800080;\">48</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">62</span>/<span style=\"color: #800080;\">69</span>): policycoreutils-python-utils-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span>.el8.no <span style=\"color: #800080;\">694</span> kB/s | <span style=\"color: #800080;\">251</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">63</span>/<span style=\"color: #800080;\">69</span>): python3-audit-<span style=\"color: #800080;\">3.0</span>-<span style=\"color: #800080;\">0.17</span>.20191104git1c2f876 <span style=\"color: #800080;\">572</span> kB/s |  <span style=\"color: #800080;\">86</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">64</span>/<span style=\"color: #800080;\">69</span>): python3-libsemanage-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64.rpm  <span style=\"color: #800080;\">615</span> kB/s | <span style=\"color: #800080;\">127</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">65</span>/<span style=\"color: #800080;\">69</span>): perl-libs-<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64.rpm       <span style=\"color: #800080;\">839</span> kB/s | <span style=\"color: #800080;\">1.6</span> MB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">01</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">66</span>/<span style=\"color: #800080;\">69</span>): python3-setools-<span style=\"color: #800080;\">4.2</span>.<span style=\"color: #800080;\">2</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64.rpm    <span style=\"color: #800080;\">691</span> kB/s | <span style=\"color: #800080;\">601</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">67</span>/<span style=\"color: #800080;\">69</span>): zlib-devel-<span style=\"color: #800080;\">1.2</span>.<span style=\"color: #800080;\">11</span>-<span style=\"color: #800080;\">13</span>.el8.x86_64.rpm       <span style=\"color: #800080;\">473</span> kB/s |  <span style=\"color: #800080;\">57</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">68</span>/<span style=\"color: #800080;\">69</span>): python3-policycoreutils-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span>.el8.noarch. <span style=\"color: #800080;\">934</span> kB/s | <span style=\"color: #800080;\">2.2</span> MB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">02</span><span style=\"color: #000000;\">    \n(</span><span style=\"color: #800080;\">69</span>/<span style=\"color: #800080;\">69</span>): perl-interpreter-<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64.rp <span style=\"color: #800080;\">1.2</span> MB/s | <span style=\"color: #800080;\">6.3</span> MB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">05</span>    \n-----------------------------------------------------------------------------------<span style=\"color: #000000;\">\nTotal                                              </span><span style=\"color: #800080;\">4.0</span> MB/s |  <span style=\"color: #800080;\">55</span> MB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">13</span><span style=\"color: #000000;\">     \nwarning: </span>/<span style=\"color: #0000ff;\">var</span>/cache/dnf/AppStream-a520ed22b0a8a736/packages/mariadb-connector-c-config-<span style=\"color: #800080;\">3.0</span>.<span style=\"color: #800080;\">7</span>-<span style=\"color: #800080;\">1</span>.el8.noarch.rpm: Header V3 RSA/<span style=\"color: #000000;\">SHA256 Signature, key ID 8483c65d: NOKEY\nCentOS</span>-<span style=\"color: #800080;\">8</span> - AppStream                               <span style=\"color: #800080;\">961</span> kB/s | <span style=\"color: #800080;\">1.6</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\">    \nImporting GPG key </span><span style=\"color: #800080;\">0x8483C65D</span><span style=\"color: #000000;\">:\n Userid     : </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">CentOS (CentOS Official Signing Key) &lt;security@centos.org&gt;</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n Fingerprint: 99DB 70FA E1D7 CE22 7FB6 </span><span style=\"color: #800080;\">4882</span> 05B5 55B3 <span style=\"color: #800080;\">8483</span><span style=\"color: #000000;\"> C65D\n From       : </span>/etc/pki/rpm-gpg/RPM-GPG-KEY-<span style=\"color: #000000;\">centosofficial\nKey imported successfully\nRunning transaction check\nTransaction check succeeded.\nRunning transaction test\nTransaction test succeeded.\nRunning transaction\n  Preparing        :                                                           </span><span style=\"color: #800080;\">1</span>/<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Exporter-<span style=\"color: #800080;\">5.72</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                        <span style=\"color: #800080;\">1</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-libs-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                        <span style=\"color: #800080;\">2</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Carp-<span style=\"color: #800080;\">1.42</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                            <span style=\"color: #800080;\">3</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Scalar-List-Utils-<span style=\"color: #800080;\">3</span>:<span style=\"color: #800080;\">1.49</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64               <span style=\"color: #800080;\">4</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-parent-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">0.237</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                         <span style=\"color: #800080;\">5</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Text-ParseWords-<span style=\"color: #800080;\">3.30</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                 <span style=\"color: #800080;\">6</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : zlib</span>-devel-<span style=\"color: #800080;\">1.2</span>.<span style=\"color: #800080;\">11</span>-<span style=\"color: #800080;\">13</span>.el8.x86_64                          <span style=\"color: #800080;\">7</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : mariadb</span>-connector-c-config-<span style=\"color: #800080;\">3.0</span>.<span style=\"color: #800080;\">7</span>-<span style=\"color: #800080;\">1</span>.el8.noarch            <span style=\"color: #800080;\">8</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : mysql</span>-common-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86    <span style=\"color: #800080;\">9</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : mysql</span>-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_64       <span style=\"color: #800080;\">10</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : mysql</span>-errmsg-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86   <span style=\"color: #800080;\">11</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : mysql</span>-libs-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_6   <span style=\"color: #800080;\">12</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Term-ANSIColor-<span style=\"color: #800080;\">4.06</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                 <span style=\"color: #800080;\">13</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-macros-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                     <span style=\"color: #800080;\">14</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Errno-<span style=\"color: #800080;\">1.28</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                          <span style=\"color: #800080;\">15</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Socket-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">2.027</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                        <span style=\"color: #800080;\">16</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Text-Tabs+Wrap-<span style=\"color: #800080;\">2013.0523</span>-<span style=\"color: #800080;\">395</span>.el8.noarch            <span style=\"color: #800080;\">17</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Unicode-Normalize-<span style=\"color: #800080;\">1.25</span>-<span style=\"color: #800080;\">396</span>.el8.x86_64              <span style=\"color: #800080;\">18</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-File-Path-<span style=\"color: #800080;\">2.15</span>-<span style=\"color: #800080;\">2</span>.el8.noarch                        <span style=\"color: #800080;\">19</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-IO-<span style=\"color: #800080;\">1.38</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                             <span style=\"color: #800080;\">20</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-PathTools-<span style=\"color: #800080;\">3.74</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                        <span style=\"color: #800080;\">21</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-constant-<span style=\"color: #800080;\">1.33</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                       <span style=\"color: #800080;\">22</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-threads-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">2.21</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64                        <span style=\"color: #800080;\">23</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-threads-shared-<span style=\"color: #800080;\">1.58</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64                   <span style=\"color: #800080;\">24</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-interpreter-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                <span style=\"color: #800080;\">25</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-MIME-Base64-<span style=\"color: #800080;\">3.15</span>-<span style=\"color: #800080;\">396</span>.el8.x86_64                    <span style=\"color: #800080;\">26</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-IO-Socket-IP-<span style=\"color: #800080;\">0.39</span>-<span style=\"color: #800080;\">5</span>.el8.noarch                     <span style=\"color: #800080;\">27</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Time-Local-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.280</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                    <span style=\"color: #800080;\">28</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Digest-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                         <span style=\"color: #800080;\">29</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Digest-MD5-<span style=\"color: #800080;\">2.55</span>-<span style=\"color: #800080;\">396</span>.el8.x86_64                     <span style=\"color: #800080;\">30</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Net-SSLeay-<span style=\"color: #800080;\">1.88</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                       <span style=\"color: #800080;\">31</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Data-Dumper-<span style=\"color: #800080;\">2.167</span>-<span style=\"color: #800080;\">399</span>.el8.x86_64                   <span style=\"color: #800080;\">32</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-File-Temp-<span style=\"color: #800080;\">0.230</span>.<span style=\"color: #800080;\">600</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                   <span style=\"color: #800080;\">33</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Pod-Escapes-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.07</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                  <span style=\"color: #800080;\">34</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Storable-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                       <span style=\"color: #800080;\">35</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Term-Cap-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                       <span style=\"color: #800080;\">36</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Mozilla-CA-<span style=\"color: #800080;\">20160104</span>-<span style=\"color: #800080;\">7</span>.el8.noarch                   <span style=\"color: #800080;\">37</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Encode-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">2.97</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                         <span style=\"color: #800080;\">38</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Pod-Simple-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">3.35</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                   <span style=\"color: #800080;\">39</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Getopt-Long-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">2.50</span>-<span style=\"color: #800080;\">4</span>.el8.noarch                    <span style=\"color: #800080;\">40</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-podlators-<span style=\"color: #800080;\">4.11</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                        <span style=\"color: #800080;\">41</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Pod-Usage-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">1.69</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                    <span style=\"color: #800080;\">42</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-Pod-Perldoc-<span style=\"color: #800080;\">3.28</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                    <span style=\"color: #800080;\">43</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-HTTP-Tiny-<span style=\"color: #800080;\">0.074</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                       <span style=\"color: #800080;\">44</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-IO-Socket-SSL-<span style=\"color: #800080;\">2.066</span>-<span style=\"color: #800080;\">4</span>.el8.noarch                   <span style=\"color: #800080;\">45</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-libnet-<span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span>.el8.noarch                           <span style=\"color: #800080;\">46</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : perl</span>-URI-<span style=\"color: #800080;\">1.73</span>-<span style=\"color: #800080;\">3</span>.el8.noarch                              <span style=\"color: #800080;\">47</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : python3</span>-setools-<span style=\"color: #800080;\">4.2</span>.<span style=\"color: #800080;\">2</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64                      <span style=\"color: #800080;\">48</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : python3</span>-libsemanage-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64                    <span style=\"color: #800080;\">49</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : python3</span>-audit-<span style=\"color: #800080;\">3.0</span>-<span style=\"color: #800080;\">0.17</span>.20191104git1c2f876.el8.x86_64    <span style=\"color: #800080;\">50</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : pcre2</span>-utf32-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                          <span style=\"color: #800080;\">51</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : pcre2</span>-utf16-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                          <span style=\"color: #800080;\">52</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : pcre2</span>-devel-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                          <span style=\"color: #800080;\">53</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : libverto</span>-devel-<span style=\"color: #800080;\">0.3</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">5</span>.el8.x86_64                       <span style=\"color: #800080;\">54</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : libsepol</span>-devel-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                         <span style=\"color: #800080;\">55</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : libselinux</span>-devel-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                       <span style=\"color: #800080;\">56</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : libkadm5</span>-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span>.el8.x86_64                             <span style=\"color: #800080;\">57</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : libevent</span>-<span style=\"color: #800080;\">2.1</span>.<span style=\"color: #800080;\">8</span>-<span style=\"color: #800080;\">5</span>.el8.x86_64                             <span style=\"color: #800080;\">58</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : libcom_err</span>-devel-<span style=\"color: #800080;\">1.45</span>.<span style=\"color: #800080;\">4</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                    <span style=\"color: #800080;\">59</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : keyutils</span>-libs-devel-<span style=\"color: #800080;\">1.5</span>.<span style=\"color: #800080;\">10</span>-<span style=\"color: #800080;\">6</span>.el8.x86_64                 <span style=\"color: #800080;\">60</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : krb5</span>-devel-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span>.el8.x86_64                           <span style=\"color: #800080;\">61</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : openssl</span>-devel-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.1</span>.1c-<span style=\"color: #800080;\">15</span>.el8.x86_64                    <span style=\"color: #800080;\">62</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : checkpolicy</span>-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                            <span style=\"color: #800080;\">63</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : python3</span>-policycoreutils-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span>.el8.noarch                <span style=\"color: #800080;\">64</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : policycoreutils</span>-python-utils-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span>.el8.noarch           <span style=\"color: #800080;\">65</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : protobuf</span>-lite-<span style=\"color: #800080;\">3.5</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">7</span>.el8.x86_64                        <span style=\"color: #800080;\">66</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : mecab</span>-<span style=\"color: #800080;\">0.996</span>-<span style=\"color: #800080;\">1</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">41</span>+ca30bab6.<span style=\"color: #800080;\">9</span>.x86_64       <span style=\"color: #800080;\">67</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Running scriptlet: mecab</span>-<span style=\"color: #800080;\">0.996</span>-<span style=\"color: #800080;\">1</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">41</span>+ca30bab6.<span style=\"color: #800080;\">9</span>.x86_64       <span style=\"color: #800080;\">67</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Running scriptlet: mysql</span>-server-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86   <span style=\"color: #800080;\">68</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Installing       : mysql</span>-server-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86   <span style=\"color: #800080;\">68</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Running scriptlet: mysql</span>-server-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86   <span style=\"color: #800080;\">68</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \nValueError: File context </span><span style=\"color: #0000ff;\">for</span> /<span style=\"color: #0000ff;\">var</span>/log/mysql(/.*)?<span style=\"color: #000000;\"> already defined\n\n  Installing       : mysql</span>-devel-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_   <span style=\"color: #800080;\">69</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Running scriptlet: mysql</span>-devel-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_   <span style=\"color: #800080;\">69</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : mariadb</span>-connector-c-config-<span style=\"color: #800080;\">3.0</span>.<span style=\"color: #800080;\">7</span>-<span style=\"color: #800080;\">1</span>.el8.noarch            <span style=\"color: #800080;\">1</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : mecab</span>-<span style=\"color: #800080;\">0.996</span>-<span style=\"color: #800080;\">1</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">41</span>+ca30bab6.<span style=\"color: #800080;\">9</span>.x86_64        <span style=\"color: #800080;\">2</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : mysql</span>-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_64        <span style=\"color: #800080;\">3</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : mysql</span>-common-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86    <span style=\"color: #800080;\">4</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : mysql</span>-devel-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_    <span style=\"color: #800080;\">5</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : mysql</span>-errmsg-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86    <span style=\"color: #800080;\">6</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : mysql</span>-libs-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_6    <span style=\"color: #800080;\">7</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : mysql</span>-server-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86    <span style=\"color: #800080;\">8</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Digest-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                          <span style=\"color: #800080;\">9</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Digest-MD5-<span style=\"color: #800080;\">2.55</span>-<span style=\"color: #800080;\">396</span>.el8.x86_64                     <span style=\"color: #800080;\">10</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-IO-Socket-IP-<span style=\"color: #800080;\">0.39</span>-<span style=\"color: #800080;\">5</span>.el8.noarch                     <span style=\"color: #800080;\">11</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-IO-Socket-SSL-<span style=\"color: #800080;\">2.066</span>-<span style=\"color: #800080;\">4</span>.el8.noarch                   <span style=\"color: #800080;\">12</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Mozilla-CA-<span style=\"color: #800080;\">20160104</span>-<span style=\"color: #800080;\">7</span>.el8.noarch                   <span style=\"color: #800080;\">13</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Net-SSLeay-<span style=\"color: #800080;\">1.88</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                       <span style=\"color: #800080;\">14</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-URI-<span style=\"color: #800080;\">1.73</span>-<span style=\"color: #800080;\">3</span>.el8.noarch                              <span style=\"color: #800080;\">15</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-libnet-<span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span>.el8.noarch                           <span style=\"color: #800080;\">16</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : protobuf</span>-lite-<span style=\"color: #800080;\">3.5</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">7</span>.el8.x86_64                        <span style=\"color: #800080;\">17</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : checkpolicy</span>-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                            <span style=\"color: #800080;\">18</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : keyutils</span>-libs-devel-<span style=\"color: #800080;\">1.5</span>.<span style=\"color: #800080;\">10</span>-<span style=\"color: #800080;\">6</span>.el8.x86_64                 <span style=\"color: #800080;\">19</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : krb5</span>-devel-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span>.el8.x86_64                           <span style=\"color: #800080;\">20</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : libcom_err</span>-devel-<span style=\"color: #800080;\">1.45</span>.<span style=\"color: #800080;\">4</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                    <span style=\"color: #800080;\">21</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : libevent</span>-<span style=\"color: #800080;\">2.1</span>.<span style=\"color: #800080;\">8</span>-<span style=\"color: #800080;\">5</span>.el8.x86_64                             <span style=\"color: #800080;\">22</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : libkadm5</span>-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span>.el8.x86_64                             <span style=\"color: #800080;\">23</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : libselinux</span>-devel-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                       <span style=\"color: #800080;\">24</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : libsepol</span>-devel-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                         <span style=\"color: #800080;\">25</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : libverto</span>-devel-<span style=\"color: #800080;\">0.3</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">5</span>.el8.x86_64                       <span style=\"color: #800080;\">26</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : openssl</span>-devel-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.1</span>.1c-<span style=\"color: #800080;\">15</span>.el8.x86_64                    <span style=\"color: #800080;\">27</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : pcre2</span>-devel-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                          <span style=\"color: #800080;\">28</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : pcre2</span>-utf16-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                          <span style=\"color: #800080;\">29</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : pcre2</span>-utf32-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                          <span style=\"color: #800080;\">30</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Carp-<span style=\"color: #800080;\">1.42</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                           <span style=\"color: #800080;\">31</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Data-Dumper-<span style=\"color: #800080;\">2.167</span>-<span style=\"color: #800080;\">399</span>.el8.x86_64                   <span style=\"color: #800080;\">32</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Encode-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">2.97</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                         <span style=\"color: #800080;\">33</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Errno-<span style=\"color: #800080;\">1.28</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                          <span style=\"color: #800080;\">34</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Exporter-<span style=\"color: #800080;\">5.72</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                       <span style=\"color: #800080;\">35</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-File-Path-<span style=\"color: #800080;\">2.15</span>-<span style=\"color: #800080;\">2</span>.el8.noarch                        <span style=\"color: #800080;\">36</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-File-Temp-<span style=\"color: #800080;\">0.230</span>.<span style=\"color: #800080;\">600</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                   <span style=\"color: #800080;\">37</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Getopt-Long-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">2.50</span>-<span style=\"color: #800080;\">4</span>.el8.noarch                    <span style=\"color: #800080;\">38</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-HTTP-Tiny-<span style=\"color: #800080;\">0.074</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                       <span style=\"color: #800080;\">39</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-IO-<span style=\"color: #800080;\">1.38</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                             <span style=\"color: #800080;\">40</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-MIME-Base64-<span style=\"color: #800080;\">3.15</span>-<span style=\"color: #800080;\">396</span>.el8.x86_64                    <span style=\"color: #800080;\">41</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-PathTools-<span style=\"color: #800080;\">3.74</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                        <span style=\"color: #800080;\">42</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Pod-Escapes-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.07</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                  <span style=\"color: #800080;\">43</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Pod-Perldoc-<span style=\"color: #800080;\">3.28</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                    <span style=\"color: #800080;\">44</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Pod-Simple-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">3.35</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                   <span style=\"color: #800080;\">45</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Pod-Usage-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">1.69</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                    <span style=\"color: #800080;\">46</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Scalar-List-Utils-<span style=\"color: #800080;\">3</span>:<span style=\"color: #800080;\">1.49</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64              <span style=\"color: #800080;\">47</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Socket-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">2.027</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                        <span style=\"color: #800080;\">48</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Storable-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                       <span style=\"color: #800080;\">49</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Term-ANSIColor-<span style=\"color: #800080;\">4.06</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                 <span style=\"color: #800080;\">50</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Term-Cap-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                       <span style=\"color: #800080;\">51</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Text-ParseWords-<span style=\"color: #800080;\">3.30</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                <span style=\"color: #800080;\">52</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Text-Tabs+Wrap-<span style=\"color: #800080;\">2013.0523</span>-<span style=\"color: #800080;\">395</span>.el8.noarch            <span style=\"color: #800080;\">53</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Time-Local-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.280</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                    <span style=\"color: #800080;\">54</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-Unicode-Normalize-<span style=\"color: #800080;\">1.25</span>-<span style=\"color: #800080;\">396</span>.el8.x86_64              <span style=\"color: #800080;\">55</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-constant-<span style=\"color: #800080;\">1.33</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                       <span style=\"color: #800080;\">56</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-interpreter-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                <span style=\"color: #800080;\">57</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-libs-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                       <span style=\"color: #800080;\">58</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-macros-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                     <span style=\"color: #800080;\">59</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-parent-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">0.237</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                        <span style=\"color: #800080;\">60</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-podlators-<span style=\"color: #800080;\">4.11</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                        <span style=\"color: #800080;\">61</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-threads-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">2.21</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64                        <span style=\"color: #800080;\">62</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : perl</span>-threads-shared-<span style=\"color: #800080;\">1.58</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64                   <span style=\"color: #800080;\">63</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : policycoreutils</span>-python-utils-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span>.el8.noarch           <span style=\"color: #800080;\">64</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : python3</span>-audit-<span style=\"color: #800080;\">3.0</span>-<span style=\"color: #800080;\">0.17</span>.20191104git1c2f876.el8.x86_64    <span style=\"color: #800080;\">65</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : python3</span>-libsemanage-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64                    <span style=\"color: #800080;\">66</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : python3</span>-policycoreutils-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span>.el8.noarch                <span style=\"color: #800080;\">67</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : python3</span>-setools-<span style=\"color: #800080;\">4.2</span>.<span style=\"color: #800080;\">2</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64                      <span style=\"color: #800080;\">68</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n  Verifying        : zlib</span>-devel-<span style=\"color: #800080;\">1.2</span>.<span style=\"color: #800080;\">11</span>-<span style=\"color: #800080;\">13</span>.el8.x86_64                         <span style=\"color: #800080;\">69</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> \n\nInstalled:\n  checkpolicy</span>-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.x86_64                                                     \n  keyutils</span>-libs-devel-<span style=\"color: #800080;\">1.5</span>.<span style=\"color: #800080;\">10</span>-<span style=\"color: #800080;\">6</span><span style=\"color: #000000;\">.el8.x86_64                                          \n  krb5</span>-devel-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span><span style=\"color: #000000;\">.el8.x86_64                                                    \n  libcom_err</span>-devel-<span style=\"color: #800080;\">1.45</span>.<span style=\"color: #800080;\">4</span>-<span style=\"color: #800080;\">3</span><span style=\"color: #000000;\">.el8.x86_64                                             \n  libevent</span>-<span style=\"color: #800080;\">2.1</span>.<span style=\"color: #800080;\">8</span>-<span style=\"color: #800080;\">5</span><span style=\"color: #000000;\">.el8.x86_64                                                      \n  libkadm5</span>-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span><span style=\"color: #000000;\">.el8.x86_64                                                      \n  libselinux</span>-devel-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">3</span><span style=\"color: #000000;\">.el8.x86_64                                                \n  libsepol</span>-devel-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.x86_64                                                  \n  libverto</span>-devel-<span style=\"color: #800080;\">0.3</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">5</span><span style=\"color: #000000;\">.el8.x86_64                                                \n  mariadb</span>-connector-c-config-<span style=\"color: #800080;\">3.0</span>.<span style=\"color: #800080;\">7</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.noarch                                    \n  mecab</span>-<span style=\"color: #800080;\">0.996</span>-<span style=\"color: #800080;\">1</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">41</span>+ca30bab6.<span style=\"color: #800080;\">9</span><span style=\"color: #000000;\">.x86_64                                \n  mysql</span>-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #000000;\">899d6349.x86_64                                \n  mysql</span>-common-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #000000;\">899d6349.x86_64                         \n  mysql</span>-devel-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #000000;\">899d6349.x86_64                          \n  mysql</span>-errmsg-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #000000;\">899d6349.x86_64                         \n  mysql</span>-libs-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #000000;\">899d6349.x86_64                           \n  mysql</span>-server-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #000000;\">899d6349.x86_64                         \n  openssl</span>-devel-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.1</span>.1c-<span style=\"color: #800080;\">15</span><span style=\"color: #000000;\">.el8.x86_64                                             \n  pcre2</span>-devel-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.x86_64                                                   \n  pcre2</span>-utf16-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.x86_64                                                   \n  pcre2</span>-utf32-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.x86_64                                                   \n  perl</span>-Carp-<span style=\"color: #800080;\">1.42</span>-<span style=\"color: #800080;\">396</span><span style=\"color: #000000;\">.el8.noarch                                                    \n  perl</span>-Data-Dumper-<span style=\"color: #800080;\">2.167</span>-<span style=\"color: #800080;\">399</span><span style=\"color: #000000;\">.el8.x86_64                                            \n  perl</span>-Digest-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span><span style=\"color: #000000;\">.el8.noarch                                                  \n  perl</span>-Digest-MD5-<span style=\"color: #800080;\">2.55</span>-<span style=\"color: #800080;\">396</span><span style=\"color: #000000;\">.el8.x86_64                                              \n  perl</span>-Encode-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">2.97</span>-<span style=\"color: #800080;\">3</span><span style=\"color: #000000;\">.el8.x86_64                                                  \n  perl</span>-Errno-<span style=\"color: #800080;\">1.28</span>-<span style=\"color: #800080;\">416</span><span style=\"color: #000000;\">.el8.x86_64                                                   \n  perl</span>-Exporter-<span style=\"color: #800080;\">5.72</span>-<span style=\"color: #800080;\">396</span><span style=\"color: #000000;\">.el8.noarch                                                \n  perl</span>-File-Path-<span style=\"color: #800080;\">2.15</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el8.noarch                                                 \n  perl</span>-File-Temp-<span style=\"color: #800080;\">0.230</span>.<span style=\"color: #800080;\">600</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.noarch                                            \n  perl</span>-Getopt-Long-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">2.50</span>-<span style=\"color: #800080;\">4</span><span style=\"color: #000000;\">.el8.noarch                                             \n  perl</span>-HTTP-Tiny-<span style=\"color: #800080;\">0.074</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.noarch                                                \n  perl</span>-IO-<span style=\"color: #800080;\">1.38</span>-<span style=\"color: #800080;\">416</span><span style=\"color: #000000;\">.el8.x86_64                                                      \n  perl</span>-IO-Socket-IP-<span style=\"color: #800080;\">0.39</span>-<span style=\"color: #800080;\">5</span><span style=\"color: #000000;\">.el8.noarch                                              \n  perl</span>-IO-Socket-SSL-<span style=\"color: #800080;\">2.066</span>-<span style=\"color: #800080;\">4</span><span style=\"color: #000000;\">.el8.noarch                                            \n  perl</span>-MIME-Base64-<span style=\"color: #800080;\">3.15</span>-<span style=\"color: #800080;\">396</span><span style=\"color: #000000;\">.el8.x86_64                                             \n  perl</span>-Mozilla-CA-<span style=\"color: #800080;\">20160104</span>-<span style=\"color: #800080;\">7</span><span style=\"color: #000000;\">.el8.noarch                                            \n  perl</span>-Net-SSLeay-<span style=\"color: #800080;\">1.88</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.x86_64                                                \n  perl</span>-PathTools-<span style=\"color: #800080;\">3.74</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.x86_64                                                 \n  perl</span>-Pod-Escapes-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.07</span>-<span style=\"color: #800080;\">395</span><span style=\"color: #000000;\">.el8.noarch                                           \n  perl</span>-Pod-Perldoc-<span style=\"color: #800080;\">3.28</span>-<span style=\"color: #800080;\">396</span><span style=\"color: #000000;\">.el8.noarch                                             \n  perl</span>-Pod-Simple-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">3.35</span>-<span style=\"color: #800080;\">395</span><span style=\"color: #000000;\">.el8.noarch                                            \n  perl</span>-Pod-Usage-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">1.69</span>-<span style=\"color: #800080;\">395</span><span style=\"color: #000000;\">.el8.noarch                                             \n  perl</span>-Scalar-List-Utils-<span style=\"color: #800080;\">3</span>:<span style=\"color: #800080;\">1.49</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el8.x86_64                                       \n  perl</span>-Socket-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">2.027</span>-<span style=\"color: #800080;\">3</span><span style=\"color: #000000;\">.el8.x86_64                                                 \n  perl</span>-Storable-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span><span style=\"color: #000000;\">.el8.x86_64                                                \n  perl</span>-Term-ANSIColor-<span style=\"color: #800080;\">4.06</span>-<span style=\"color: #800080;\">396</span><span style=\"color: #000000;\">.el8.noarch                                          \n  perl</span>-Term-Cap-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span><span style=\"color: #000000;\">.el8.noarch                                                \n  perl</span>-Text-ParseWords-<span style=\"color: #800080;\">3.30</span>-<span style=\"color: #800080;\">395</span><span style=\"color: #000000;\">.el8.noarch                                         \n  perl</span>-Text-Tabs+Wrap-<span style=\"color: #800080;\">2013.0523</span>-<span style=\"color: #800080;\">395</span><span style=\"color: #000000;\">.el8.noarch                                     \n  perl</span>-Time-Local-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.280</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.noarch                                             \n  perl</span>-URI-<span style=\"color: #800080;\">1.73</span>-<span style=\"color: #800080;\">3</span><span style=\"color: #000000;\">.el8.noarch                                                       \n  perl</span>-Unicode-Normalize-<span style=\"color: #800080;\">1.25</span>-<span style=\"color: #800080;\">396</span><span style=\"color: #000000;\">.el8.x86_64                                       \n  perl</span>-constant-<span style=\"color: #800080;\">1.33</span>-<span style=\"color: #800080;\">396</span><span style=\"color: #000000;\">.el8.noarch                                                \n  perl</span>-interpreter-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span><span style=\"color: #000000;\">.el8.x86_64                                         \n  perl</span>-libnet-<span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span><span style=\"color: #000000;\">.el8.noarch                                                    \n  perl</span>-libs-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span><span style=\"color: #000000;\">.el8.x86_64                                                \n  perl</span>-macros-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span><span style=\"color: #000000;\">.el8.x86_64                                              \n  perl</span>-parent-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">0.237</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.noarch                                                 \n  perl</span>-podlators-<span style=\"color: #800080;\">4.11</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.noarch                                                 \n  perl</span>-threads-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">2.21</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el8.x86_64                                                 \n  perl</span>-threads-shared-<span style=\"color: #800080;\">1.58</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el8.x86_64                                            \n  policycoreutils</span>-python-utils-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span><span style=\"color: #000000;\">.el8.noarch                                    \n  protobuf</span>-lite-<span style=\"color: #800080;\">3.5</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">7</span><span style=\"color: #000000;\">.el8.x86_64                                                 \n  python3</span>-audit-<span style=\"color: #800080;\">3.0</span>-<span style=\"color: #800080;\">0.17</span><span style=\"color: #000000;\">.20191104git1c2f876.el8.x86_64                             \n  python3</span>-libsemanage-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el8.x86_64                                             \n  python3</span>-policycoreutils-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span><span style=\"color: #000000;\">.el8.noarch                                         \n  python3</span>-setools-<span style=\"color: #800080;\">4.2</span>.<span style=\"color: #800080;\">2</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el8.x86_64                                               \n  zlib</span>-devel-<span style=\"color: #800080;\">1.2</span>.<span style=\"color: #800080;\">11</span>-<span style=\"color: #800080;\">13</span><span style=\"color: #000000;\">.el8.x86_64                                                  \n\nComplete</span>!<span style=\"color: #000000;\">\n[root@localhost </span>~]# mysqld --install --user=<span style=\"color: #000000;\">root\n[root@localhost </span>~]# mysqld --initialize --user=<span style=\"color: #000000;\">mysql\n[root@localhost </span>~]# mysqld --initialize --lower-<span style=\"color: #0000ff;\">case</span>-table-names=<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">\n[root@localhost </span>~]# cat /<span style=\"color: #0000ff;\">var</span>/log/mysql/<span style=\"color: #000000;\">mysqld.log\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.286242Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010116</span>] [Server] /usr/libexec/mysqld (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>) starting <span style=\"color: #0000ff;\">as</span> process <span style=\"color: #800080;\">8036</span>\n<span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.300375Z <span style=\"color: #800080;\">1</span> [ERROR] [MY-<span style=\"color: #800080;\">011011</span><span style=\"color: #000000;\">] [Server] Failed to find valid data directory.\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.300446Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010020</span><span style=\"color: #000000;\">] [Server] <span style=\"color: #ff0000;\">Data Dictionary initialization failed</span>.\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.300498Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010119</span><span style=\"color: #000000;\">] [Server] Aborting\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.300755Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010910</span>] [Server] /usr/libexec/mysqld: Shutdown complete (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span><span style=\"color: #000000;\">)  Source distribution.\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.523538Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">013169</span>] [Server] /usr/libexec/mysqld (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>) initializing of server <span style=\"color: #0000ff;\">in</span> progress <span style=\"color: #0000ff;\">as</span> process <span style=\"color: #800080;\">22923</span>\n<span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.524591Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010457</span>] [Server] --initialize specified but the data directory has files <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> it. Aborting.\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.524614Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">013236</span>] [Server] The designated data directory /<span style=\"color: #0000ff;\">var</span>/lib/mysql/ <span style=\"color: #0000ff;\">is</span><span style=\"color: #000000;\"> unusable. You can remove all files that the server added to it.\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.524676Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010119</span><span style=\"color: #000000;\">] [Server] Aborting\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.524752Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010910</span>] [Server] /usr/libexec/mysqld: Shutdown complete (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span><span style=\"color: #000000;\">)  Source distribution.\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.984050Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">013169</span>] [Server] /usr/libexec/mysqld (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>) initializing of server <span style=\"color: #0000ff;\">in</span> progress <span style=\"color: #0000ff;\">as</span> process <span style=\"color: #800080;\">28279</span>\n<span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.985204Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010457</span>] [Server] --initialize specified but the data directory has files <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> it. Aborting.\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.985285Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">013236</span>] [Server] The designated data directory /<span style=\"color: #0000ff;\">var</span>/lib/mysql/ <span style=\"color: #0000ff;\">is</span><span style=\"color: #000000;\"> unusable. You can remove all files that the server added to it.\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.985321Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010119</span><span style=\"color: #000000;\">] [Server] Aborting\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.985395Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010910</span>] [Server] /usr/libexec/mysqld: Shutdown complete (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span><span style=\"color: #000000;\">)  Source distribution.\n[root@localhost </span>~]# rm -rf /<span style=\"color: #0000ff;\">var</span>/lib/<span style=\"color: #000000;\">mysql\n[root@localhost </span>~]# mysqld --initialize --<span style=\"color: #000000;\">console\n[root@localhost </span>~]# chown -R mysql:mysql /<span style=\"color: #0000ff;\">var</span>/lib/mysql/<span style=\"color: #000000;\">\n[root@localhost </span>~<span style=\"color: #000000;\">]# systemctl start mysqld\n[root@localhost </span>~<span style=\"color: #000000;\">]# systemctl status mysqld\n● mysqld.service </span>- MySQL <span style=\"color: #800080;\">8.0</span><span style=\"color: #000000;\"> database server\n   Loaded: loaded (</span>/usr/lib/systemd/system/mysqld.service; disabled; vendor preset&gt;<span style=\"color: #000000;\">\n   Active: active (running) since Tue </span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-<span style=\"color: #800080;\">01</span> <span style=\"color: #800080;\">16</span>:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span><span style=\"color: #000000;\"> CST; 5s ago\n  Process: </span><span style=\"color: #800080;\">28436</span> ExecStartPost=/usr/libexec/mysql-check-upgrade (code=exited, stat&gt;<span style=\"color: #000000;\">\n  Process: </span><span style=\"color: #800080;\">28356</span> ExecStartPre=/usr/libexec/mysql-prepare-db-dir mysqld.service (co&gt;<span style=\"color: #000000;\">\n  Process: </span><span style=\"color: #800080;\">28332</span> ExecStartPre=/usr/libexec/mysql-check-socket (code=exited, status&gt;<span style=\"color: #000000;\">\n Main PID: </span><span style=\"color: #800080;\">28393</span><span style=\"color: #000000;\"> (mysqld)\n   Status: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Server is operational</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n    Tasks: </span><span style=\"color: #800080;\">39</span> (limit: <span style=\"color: #800080;\">11302</span><span style=\"color: #000000;\">)\n   Memory: </span><span style=\"color: #800080;\">382.4M</span><span style=\"color: #000000;\">\n   CGroup: </span>/system.slice/<span style=\"color: #000000;\">mysqld.service\n           └─</span><span style=\"color: #800080;\">28393</span> /usr/libexec/mysqld --basedir=/<span style=\"color: #000000;\">usr\n\nSep </span><span style=\"color: #800080;\">01</span> <span style=\"color: #800080;\">16</span>:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">18</span> localhost.localdomain systemd[<span style=\"color: #800080;\">1</span>]: Starting MySQL <span style=\"color: #800080;\">8.0</span> database serv&gt;<span style=\"color: #000000;\">\nSep </span><span style=\"color: #800080;\">01</span> <span style=\"color: #800080;\">16</span>:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span> localhost.localdomain mysql-check-upgrade[<span style=\"color: #800080;\">28436</span>]: The datadir loca&gt;<span style=\"color: #000000;\">\nSep </span><span style=\"color: #800080;\">01</span> <span style=\"color: #800080;\">16</span>:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span> localhost.localdomain mysql-check-upgrade[<span style=\"color: #800080;\">28436</span>]:   <span style=\"color: #800080;\">1</span>. Back-up you&gt;<span style=\"color: #000000;\">\nSep </span><span style=\"color: #800080;\">01</span> <span style=\"color: #800080;\">16</span>:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span> localhost.localdomain mysql-check-upgrade[<span style=\"color: #800080;\">28436</span>]:   <span style=\"color: #800080;\">2</span>. Start the d&gt;<span style=\"color: #000000;\">\nSep </span><span style=\"color: #800080;\">01</span> <span style=\"color: #800080;\">16</span>:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span> localhost.localdomain mysql-check-upgrade[<span style=\"color: #800080;\">28436</span>]:   <span style=\"color: #800080;\">3</span>. Run <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">mysql_&gt;</span>\nSep <span style=\"color: #800080;\">01</span> <span style=\"color: #800080;\">16</span>:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span> localhost.localdomain mysql-check-upgrade[<span style=\"color: #800080;\">28436</span>]: Read more about &gt;<span style=\"color: #000000;\">\nSep </span><span style=\"color: #800080;\">01</span> <span style=\"color: #800080;\">16</span>:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span> localhost.localdomain mysql-check-upgrade[<span style=\"color: #800080;\">28436</span>]: http:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">dev.mysql&gt;</span>\nSep <span style=\"color: #800080;\">01</span> <span style=\"color: #800080;\">16</span>:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span> localhost.localdomain systemd[<span style=\"color: #800080;\">1</span>]: Started MySQL <span style=\"color: #800080;\">8.0</span> database serve&gt;<span style=\"color: #000000;\">\n\n[root@localhost </span>~]# ^<span style=\"color: #000000;\">C\n[root@localhost </span>~]# cat /<span style=\"color: #0000ff;\">var</span>/log/mysql/<span style=\"color: #000000;\">mysqld.log\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.286242Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010116</span>] [Server] /usr/libexec/mysqld (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>) starting <span style=\"color: #0000ff;\">as</span> process <span style=\"color: #800080;\">8036</span>\n<span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.300375Z <span style=\"color: #800080;\">1</span> [ERROR] [MY-<span style=\"color: #800080;\">011011</span><span style=\"color: #000000;\">] [Server] Failed to find valid data directory.\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.300446Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010020</span><span style=\"color: #000000;\">] [Server] Data Dictionary initialization failed.\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.300498Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010119</span><span style=\"color: #000000;\">] [Server] Aborting\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.300755Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010910</span>] [Server] /usr/libexec/mysqld: Shutdown complete (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span><span style=\"color: #000000;\">)  Source distribution.\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.523538Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">013169</span>] [Server] /usr/libexec/mysqld (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>) initializing of server <span style=\"color: #0000ff;\">in</span> progress <span style=\"color: #0000ff;\">as</span> process <span style=\"color: #800080;\">22923</span>\n<span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.524591Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010457</span>] [Server] --initialize specified but the data directory has files <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> it. Aborting.\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.524614Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">013236</span>] [Server] The designated data directory /<span style=\"color: #0000ff;\">var</span>/lib/mysql/ <span style=\"color: #0000ff;\">is</span><span style=\"color: #000000;\"> unusable. You can remove all files that the server added to it.\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.524676Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010119</span><span style=\"color: #000000;\">] [Server] Aborting\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.524752Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010910</span>] [Server] /usr/libexec/mysqld: Shutdown complete (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span><span style=\"color: #000000;\">)  Source distribution.\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.984050Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">013169</span>] [Server] /usr/libexec/mysqld (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>) initializing of server <span style=\"color: #0000ff;\">in</span> progress <span style=\"color: #0000ff;\">as</span> process <span style=\"color: #800080;\">28279</span>\n<span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.985204Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010457</span>] [Server] --initialize specified but the data directory has files <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> it. Aborting.\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.985285Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">013236</span>] [Server] The designated data directory /<span style=\"color: #0000ff;\">var</span>/lib/mysql/ <span style=\"color: #0000ff;\">is</span><span style=\"color: #000000;\"> unusable. You can remove all files that the server added to it.\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.985321Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010119</span><span style=\"color: #000000;\">] [Server] Aborting\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.985395Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010910</span>] [Server] /usr/libexec/mysqld: Shutdown complete (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span><span style=\"color: #000000;\">)  Source distribution.\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">00</span>.208778Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">013169</span>] [Server] /usr/libexec/mysqld (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>) initializing of server <span style=\"color: #0000ff;\">in</span> progress <span style=\"color: #0000ff;\">as</span> process <span style=\"color: #800080;\">28282</span>\n<span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">02</span>.022251Z <span style=\"color: #800080;\">5</span> [Note] [MY-<span style=\"color: #800080;\">010454</span>] [Server] A temporary password <span style=\"color: #0000ff;\">is</span> generated <span style=\"color: #0000ff;\">for</span> root@localhost: <span style=\"color: #ff0000;\">u;*pHkkhe13T\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">02</span>.704903Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">013170</span>] [Server] /usr/libexec/mysqld (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span><span style=\"color: #000000;\">) initializing of server has completed\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">19</span>.678034Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010116</span>] [Server] /usr/libexec/mysqld (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>) starting <span style=\"color: #0000ff;\">as</span> process <span style=\"color: #800080;\">28393</span>\n<span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span>.444889Z <span style=\"color: #800080;\">0</span> [Warning] [MY-<span style=\"color: #800080;\">010068</span>] [Server] CA certificate ca.pem <span style=\"color: #0000ff;\">is</span><span style=\"color: #000000;\"> self signed.\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span>.463100Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010931</span>] [Server] /usr/libexec/mysqld: ready <span style=\"color: #0000ff;\">for</span> connections. Version: <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">8.0.17</span><span style=\"color: #800000;\">'</span>  socket: <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">/var/lib/mysql/mysql.sock</span><span style=\"color: #800000;\">'</span>  port: <span style=\"color: #800080;\">3306</span><span style=\"color: #000000;\">  Source distribution.\n</span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span>.531457Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">011323</span>] [Server] X Plugin ready <span style=\"color: #0000ff;\">for</span> connections. Socket: <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">/var/lib/mysql/mysqlx.sock</span><span style=\"color: #800000;\">'</span> bind-address: <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">::</span><span style=\"color: #800000;\">'</span> port: <span style=\"color: #800080;\">33060</span><span style=\"color: #000000;\">\n[root@localhost </span>~]# mysql -u root -<span style=\"color: #000000;\">p\nEnter password: \nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id </span><span style=\"color: #0000ff;\">is</span> <span style=\"color: #800080;\">8</span><span style=\"color: #000000;\">\nServer version: </span><span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span><span style=\"color: #000000;\">\n\nCopyright (c) </span><span style=\"color: #800080;\">2000</span>, <span style=\"color: #800080;\">2019</span>, Oracle and/<span style=\"color: #000000;\">or its affiliates. All rights reserved.\n\nOracle </span><span style=\"color: #0000ff;\">is</span> a registered trademark of Oracle Corporation and/<span style=\"color: #000000;\">or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType </span><span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">help;</span><span style=\"color: #800000;\">'</span> or <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">\\h</span><span style=\"color: #800000;\">'</span> <span style=\"color: #0000ff;\">for</span> help. Type <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">\\c</span><span style=\"color: #800000;\">'</span><span style=\"color: #000000;\"> to clear the current input statement.\n\nmysql</span>&gt; ALTER USER <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">root</span><span style=\"color: #800000;\">'</span>@<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">localhost</span><span style=\"color: #800000;\">'</span> IDENTIFIED WITH mysql_native_password BY <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">test@123</span><span style=\"color: #800000;\">'</span><span style=\"color: #000000;\">;\nQuery OK, </span><span style=\"color: #800080;\">0</span> rows affected (<span style=\"color: #800080;\">0.01</span><span style=\"color: #000000;\"> sec)\n\nmysql</span>&gt;<span style=\"color: #000000;\"> use mysql\nReading table information </span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\"> completion of table and column names\nYou can turn off </span><span style=\"color: #0000ff;\">this</span> feature to <span style=\"color: #0000ff;\">get</span> a quicker startup with -<span style=\"color: #000000;\">A\n\nDatabase changed\nmysql</span>&gt; <span style=\"color: #0000ff;\">select</span> Host,User <span style=\"color: #0000ff;\">from</span><span style=\"color: #000000;\"> user;\n</span>+-----------+------------------+\n| Host      | User             |\n+-----------+------------------+\n| localhost | mysql.infoschema |\n| localhost | mysql.session    |\n| localhost | mysql.sys        |\n| localhost | root             |\n+-----------+------------------+\n<span style=\"color: #800080;\">4</span> rows <span style=\"color: #0000ff;\">in</span> <span style=\"color: #0000ff;\">set</span> (<span style=\"color: #800080;\">0.00</span><span style=\"color: #000000;\"> sec)\n\nmysql</span>&gt; update user <span style=\"color: #0000ff;\">set</span> host = <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">%</span><span style=\"color: #800000;\">'</span> <span style=\"color: #0000ff;\">where</span> user =<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">root</span><span style=\"color: #800000;\">'</span><span style=\"color: #000000;\">;\nQuery OK, </span><span style=\"color: #800080;\">1</span> row affected (<span style=\"color: #800080;\">0.00</span><span style=\"color: #000000;\"> sec)\nRows matched: </span><span style=\"color: #800080;\">1</span>  Changed: <span style=\"color: #800080;\">1</span>  Warnings: <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">\n\nmysql</span>&gt;<span style=\"color: #000000;\"> flush privileges;\nQuery OK, </span><span style=\"color: #800080;\">0</span> rows affected (<span style=\"color: #800080;\">0.01</span><span style=\"color: #000000;\"> sec)\n\nmysql</span>&gt;<span style=\"color: #000000;\"> exit\nBye\n[root@localhost </span>~]# </pre>\n</div>\n<p>&nbsp;</p>","slug":"cnblogs/13596927","published":1,"updated":"2022-07-10T13:01:06.591Z","_id":"cl5f7imq3000yc0una3tbhgyv","comments":1,"layout":"post","photos":[],"link":"","content":"<h1>本文适用于centos 8及以上安装mysql 8.0，整体耗时20分钟内，不需要翻墙</h1>\n<h2>1.环境先搞好</h2>\n<div class=\"cnblogs_code\">\n<pre> systemctl stop firewalld    <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">关闭防火墙</span>\n systemctl disable firewalld    <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">禁用防火墙</span>\n setenforce <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">\n sed </span>-i <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">s/^SELINUX=.*/SELINUX=disabled/</span><span style=\"color: #800000;\">'</span> /etc/selinux/<span style=\"color: #000000;\">config \n timedatectl </span><span style=\"color: #0000ff;\">set</span>-timezone Asia/Shanghai</pre>\n</div>\n<h2>2.开始安装</h2>\n<div class=\"cnblogs_code\">\n<pre>yum -y install mysql-server mysql mysql-devel  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">快速安装mysql</span>\nmysqld --install --user=<span style=\"color: #000000;\">root  \nmysqld </span>--initialize --user=<span style=\"color: #000000;\">mysql\nmysqld </span>--initialize --lower-<span style=\"color: #0000ff;\">case</span>-table-names=<span style=\"color: #800080;\">1</span>\n\n<p><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">查看mysql日志，密码在日志中  mysql的安装位置在/var/lib/mysql/</span><br>cat /<span style=\"color: #0000ff;\">var</span>/log/mysql/<span style=\"color: #000000;\">mysqld.log<br></span><span style=\"color: #808080;\">///</span><span style=\"color: #008000;\">发现错误 Data Dictionary initialization failed    </span></pre></p>\n</div>\n<h2>3.Data Dictionary initialization failed解决办法</h2>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">  rm </span>-rf /<span style=\"color: #0000ff;\">var</span>/lib/<span style=\"color: #000000;\">mysql\n\n<p>  mysqld </span>–initialize –<span style=\"color: #000000;\">console</p>\n<p>  chown </span>-R mysql:mysql /<span style=\"color: #0000ff;\">var</span>/lib/mysql/<span style=\"color: #000000;\"></p>\n<p>  systemctl start mysqld</p>\n<p>  systemctl status mysqld</p>\n<p>  cat </span>/<span style=\"color: #0000ff;\">var</span>/log/mysql/<span style=\"color: #000000;\">mysqld.log </p>\n<p>  </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">A temporary password is generated for root@localhost: 冒号后面的就是初始密码</span></pre></p>\n</div>\n<h2>4.修改密码并开启远程访问</h2>\n<div class=\"cnblogs_code\">\n<pre>mysql -u root -<span style=\"color: #000000;\">p  <br />//需要输入初始密码，进入mysql控制台  \nALTER USER </span><span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">root</span><span style=\"color: #800000;\">'</span>@<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">localhost</span><span style=\"color: #800000;\">'</span> IDENTIFIED WITH mysql_native_password BY <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">test@123</span><span style=\"color: #800000;\">'</span><span style=\"color: #000000;\">;  //修改密码为test@123\nuse mysql\n</span><span style=\"color: #0000ff;\">select</span> Host,User <span style=\"color: #0000ff;\">from</span><span style=\"color: #000000;\"> user;\nupdate user </span><span style=\"color: #0000ff;\">set</span> host = <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">%</span><span style=\"color: #800000;\">'</span> <span style=\"color: #0000ff;\">where</span> user =<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">root</span><span style=\"color: #800000;\">'</span><span style=\"color: #000000;\">;    //将host从localhost修改为全部\nflush privileges;\nexit</span></pre>\n</div>\n<h2>5.其他操作</h2>\n<div class=\"cnblogs_code\">\n<pre>rpm -qa |<span style=\"color: #000000;\"> grep mysql\n\n<p>yum </span>-y remove mysql….  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">如果mysql已安装，执行删除</span><br><span style=\"color: #000000;\"><br>systemctl  enable</span>/start/stop/status servicename   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> enable </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">设置开机启动 ； start  </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">启动 ； stop  </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">停止 ；status状态</span></pre></p>\n</div>\n<h2>6.连接mysql</h2>\n<p>&nbsp;<img src=\"/cnblogs/13596927/789895-20200901161634167-1622109568.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<h1>在虚拟机上的输入输出记录</h1>\n<div class=\"cnblogs_code\">\n<pre>Xshell <span style=\"color: #800080;\">6</span> (Build <span style=\"color: #800080;\">0189</span><span style=\"color: #000000;\">)\nCopyright (c) </span><span style=\"color: #800080;\">2002</span><span style=\"color: #000000;\"> NetSarang Computer, Inc. All rights reserved.\n\n<p>Type `help</span><span style=\"color: #800000;\">‘</span><span style=\"color: #800000;\"> to learn how to use Xshell prompt.</span><br>[D:~<span style=\"color: #000000;\">]$ </p>\n<p>Connecting to </span><span style=\"color: #800080;\">192.168</span>.<span style=\"color: #800080;\">5.133</span>:<span style=\"color: #800080;\">22</span><span style=\"color: #000000;\">…<br>Connection established.<br>To escape to local shell, press </span><span style=\"color: #800000;\">‘</span><span style=\"color: #800000;\">Ctrl+Alt+]</span><span style=\"color: #800000;\">‘</span><span style=\"color: #000000;\">.</p>\n<p>WARNING</span>!<span style=\"color: #000000;\"> The remote SSH server rejected X11 forwarding request.<br>Activate the web console with: systemctl enable </span>–<span style=\"color: #000000;\">now cockpit.socket</p>\n<p>Last login: Tue Sep  </span><span style=\"color: #800080;\">1</span> <span style=\"color: #800080;\">15</span>:<span style=\"color: #800080;\">41</span>:<span style=\"color: #800080;\">10</span> <span style=\"color: #800080;\">2020</span><span style=\"color: #000000;\"><br>[root@localhost </span><del><span style=\"color: #000000;\">]# systemctl stop firewalld<br>[root@localhost </span></del><span style=\"color: #000000;\">]# systemctl disable firewalld<br>Removed </span>/etc/systemd/system/multi-user.target.wants/<span style=\"color: #000000;\">firewalld.service.<br>Removed </span>/etc/systemd/system/dbus-<span style=\"color: #000000;\">org.fedoraproject.FirewallD1.service.<br>[root@localhost </span><del>]# setenforce <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\"><br>[root@localhost </span></del>]# sed -i <span style=\"color: #800000;\">‘</span><span style=\"color: #800000;\">s/^SELINUX=.*/SELINUX=disabled/</span><span style=\"color: #800000;\">‘</span> /etc/selinux/<span style=\"color: #000000;\">config<br>[root@localhost </span><del>]# timedatectl <span style=\"color: #0000ff;\">set</span>-timezone Asia/<span style=\"color: #000000;\">Shanghai<br>[root@localhost </span></del>]# yum -y install mysql-server mysql mysql-<span style=\"color: #000000;\">devel<br>Last metadata expiration check: </span><span style=\"color: #800080;\">0</span>:<span style=\"color: #800080;\">11</span>:<span style=\"color: #800080;\">14</span> ago on Tue <span style=\"color: #800080;\">01</span> Sep <span style=\"color: #800080;\">2020</span> <span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">51</span>:<span style=\"color: #800080;\">03</span><span style=\"color: #000000;\"> PM CST.<br>Dependencies resolved.<br></span>===================================================================================<span style=\"color: #000000;\"><br> Package               Arch   Version                              Repo       Size<br></span>===================================================================================<span style=\"color: #000000;\"><br>Installing:<br> mysql                 x86_64 </span><span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349 AppStream  <span style=\"color: #800080;\">11</span><span style=\"color: #000000;\"> M<br> mysql</span>-devel           x86_64 <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349 AppStream <span style=\"color: #800080;\">147</span><span style=\"color: #000000;\"> k<br> mysql</span>-server          x86_64 <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349 AppStream  <span style=\"color: #800080;\">22</span><span style=\"color: #000000;\"> M<br>Installing dependencies:<br> checkpolicy           x86_64 </span><span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span>.el8                            BaseOS    <span style=\"color: #800080;\">348</span><span style=\"color: #000000;\"> k<br> keyutils</span>-libs-devel   x86_64 <span style=\"color: #800080;\">1.5</span>.<span style=\"color: #800080;\">10</span>-<span style=\"color: #800080;\">6</span>.el8                         BaseOS     <span style=\"color: #800080;\">48</span><span style=\"color: #000000;\"> k<br> krb5</span>-devel            x86_64 <span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span>.el8                          BaseOS    <span style=\"color: #800080;\">549</span><span style=\"color: #000000;\"> k<br> libcom_err</span>-devel      x86_64 <span style=\"color: #800080;\">1.45</span>.<span style=\"color: #800080;\">4</span>-<span style=\"color: #800080;\">3</span>.el8                         BaseOS     <span style=\"color: #800080;\">38</span><span style=\"color: #000000;\"> k<br> libevent              x86_64 </span><span style=\"color: #800080;\">2.1</span>.<span style=\"color: #800080;\">8</span>-<span style=\"color: #800080;\">5</span>.el8                          BaseOS    <span style=\"color: #800080;\">253</span><span style=\"color: #000000;\"> k<br> libkadm5              x86_64 </span><span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span>.el8                          BaseOS    <span style=\"color: #800080;\">185</span><span style=\"color: #000000;\"> k<br> libselinux</span>-devel      x86_64 <span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">3</span>.el8                            BaseOS    <span style=\"color: #800080;\">199</span><span style=\"color: #000000;\"> k<br> libsepol</span>-devel        x86_64 <span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span>.el8                            BaseOS     <span style=\"color: #800080;\">86</span><span style=\"color: #000000;\"> k<br> libverto</span>-devel        x86_64 <span style=\"color: #800080;\">0.3</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">5</span>.el8                          BaseOS     <span style=\"color: #800080;\">18</span><span style=\"color: #000000;\"> k<br> mariadb</span>-connector-c-<span style=\"color: #000000;\">config<br>                       noarch </span><span style=\"color: #800080;\">3.0</span>.<span style=\"color: #800080;\">7</span>-<span style=\"color: #800080;\">1</span>.el8                          AppStream  <span style=\"color: #800080;\">13</span><span style=\"color: #000000;\"> k<br> mecab                 x86_64 </span><span style=\"color: #800080;\">0.996</span>-<span style=\"color: #800080;\">1</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">41</span>+ca30bab6.<span style=\"color: #800080;\">9</span> AppStream <span style=\"color: #800080;\">397</span><span style=\"color: #000000;\"> k<br> mysql</span>-common          x86_64 <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349 AppStream <span style=\"color: #800080;\">143</span><span style=\"color: #000000;\"> k<br> mysql</span>-errmsg          x86_64 <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349 AppStream <span style=\"color: #800080;\">557</span><span style=\"color: #000000;\"> k<br> mysql</span>-libs            x86_64 <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349 AppStream <span style=\"color: #800080;\">1.2</span><span style=\"color: #000000;\"> M<br> openssl</span>-devel         x86_64 <span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.1</span>.1c-<span style=\"color: #800080;\">15</span>.el8                      BaseOS    <span style=\"color: #800080;\">2.3</span><span style=\"color: #000000;\"> M<br> pcre2</span>-devel           x86_64 <span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8                          BaseOS    <span style=\"color: #800080;\">605</span><span style=\"color: #000000;\"> k<br> pcre2</span>-utf16           x86_64 <span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8                          BaseOS    <span style=\"color: #800080;\">228</span><span style=\"color: #000000;\"> k<br> pcre2</span>-utf32           x86_64 <span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8                          BaseOS    <span style=\"color: #800080;\">220</span><span style=\"color: #000000;\"> k<br> perl</span>-Carp             noarch <span style=\"color: #800080;\">1.42</span>-<span style=\"color: #800080;\">396</span>.el8                         BaseOS     <span style=\"color: #800080;\">30</span><span style=\"color: #000000;\"> k<br> perl</span>-Data-Dumper      x86_64 <span style=\"color: #800080;\">2.167</span>-<span style=\"color: #800080;\">399</span>.el8                        BaseOS     <span style=\"color: #800080;\">58</span><span style=\"color: #000000;\"> k<br> perl</span>-Digest           noarch <span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span>.el8                         AppStream  <span style=\"color: #800080;\">27</span><span style=\"color: #000000;\"> k<br> perl</span>-Digest-MD5       x86_64 <span style=\"color: #800080;\">2.55</span>-<span style=\"color: #800080;\">396</span>.el8                         AppStream  <span style=\"color: #800080;\">37</span><span style=\"color: #000000;\"> k<br> perl</span>-Encode           x86_64 <span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">2.97</span>-<span style=\"color: #800080;\">3</span>.el8                         BaseOS    <span style=\"color: #800080;\">1.5</span><span style=\"color: #000000;\"> M<br> perl</span>-Errno            x86_64 <span style=\"color: #800080;\">1.28</span>-<span style=\"color: #800080;\">416</span>.el8                         BaseOS     <span style=\"color: #800080;\">76</span><span style=\"color: #000000;\"> k<br> perl</span>-Exporter         noarch <span style=\"color: #800080;\">5.72</span>-<span style=\"color: #800080;\">396</span>.el8                         BaseOS     <span style=\"color: #800080;\">34</span><span style=\"color: #000000;\"> k<br> perl</span>-File-Path        noarch <span style=\"color: #800080;\">2.15</span>-<span style=\"color: #800080;\">2</span>.el8                           BaseOS     <span style=\"color: #800080;\">38</span><span style=\"color: #000000;\"> k<br> perl</span>-File-Temp        noarch <span style=\"color: #800080;\">0.230</span>.<span style=\"color: #800080;\">600</span>-<span style=\"color: #800080;\">1</span>.el8                      BaseOS     <span style=\"color: #800080;\">63</span><span style=\"color: #000000;\"> k<br> perl</span>-Getopt-Long      noarch <span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">2.50</span>-<span style=\"color: #800080;\">4</span>.el8                         BaseOS     <span style=\"color: #800080;\">63</span><span style=\"color: #000000;\"> k<br> perl</span>-HTTP-Tiny        noarch <span style=\"color: #800080;\">0.074</span>-<span style=\"color: #800080;\">1</span>.el8                          BaseOS     <span style=\"color: #800080;\">58</span><span style=\"color: #000000;\"> k<br> perl</span>-IO               x86_64 <span style=\"color: #800080;\">1.38</span>-<span style=\"color: #800080;\">416</span>.el8                         BaseOS    <span style=\"color: #800080;\">141</span><span style=\"color: #000000;\"> k<br> perl</span>-MIME-Base64      x86_64 <span style=\"color: #800080;\">3.15</span>-<span style=\"color: #800080;\">396</span>.el8                         BaseOS     <span style=\"color: #800080;\">31</span><span style=\"color: #000000;\"> k<br> perl</span>-Net-SSLeay       x86_64 <span style=\"color: #800080;\">1.88</span>-<span style=\"color: #800080;\">1</span>.el8                           AppStream <span style=\"color: #800080;\">379</span><span style=\"color: #000000;\"> k<br> perl</span>-PathTools        x86_64 <span style=\"color: #800080;\">3.74</span>-<span style=\"color: #800080;\">1</span>.el8                           BaseOS     <span style=\"color: #800080;\">90</span><span style=\"color: #000000;\"> k<br> perl</span>-Pod-Escapes      noarch <span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.07</span>-<span style=\"color: #800080;\">395</span>.el8                       BaseOS     <span style=\"color: #800080;\">20</span><span style=\"color: #000000;\"> k<br> perl</span>-Pod-Perldoc      noarch <span style=\"color: #800080;\">3.28</span>-<span style=\"color: #800080;\">396</span>.el8                         BaseOS     <span style=\"color: #800080;\">86</span><span style=\"color: #000000;\"> k<br> perl</span>-Pod-Simple       noarch <span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">3.35</span>-<span style=\"color: #800080;\">395</span>.el8                       BaseOS    <span style=\"color: #800080;\">213</span><span style=\"color: #000000;\"> k<br> perl</span>-Pod-Usage        noarch <span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">1.69</span>-<span style=\"color: #800080;\">395</span>.el8                       BaseOS     <span style=\"color: #800080;\">34</span><span style=\"color: #000000;\"> k<br> perl</span>-Scalar-List-<span style=\"color: #000000;\">Utils<br>                       x86_64 </span><span style=\"color: #800080;\">3</span>:<span style=\"color: #800080;\">1.49</span>-<span style=\"color: #800080;\">2</span>.el8                         BaseOS     <span style=\"color: #800080;\">68</span><span style=\"color: #000000;\"> k<br> perl</span>-Socket           x86_64 <span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">2.027</span>-<span style=\"color: #800080;\">3</span>.el8                        BaseOS     <span style=\"color: #800080;\">59</span><span style=\"color: #000000;\"> k<br> perl</span>-Storable         x86_64 <span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span>.el8                         BaseOS     <span style=\"color: #800080;\">98</span><span style=\"color: #000000;\"> k<br> perl</span>-Term-ANSIColor   noarch <span style=\"color: #800080;\">4.06</span>-<span style=\"color: #800080;\">396</span>.el8                         BaseOS     <span style=\"color: #800080;\">46</span><span style=\"color: #000000;\"> k<br> perl</span>-Term-Cap         noarch <span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span>.el8                         BaseOS     <span style=\"color: #800080;\">23</span><span style=\"color: #000000;\"> k<br> perl</span>-Text-ParseWords  noarch <span style=\"color: #800080;\">3.30</span>-<span style=\"color: #800080;\">395</span>.el8                         BaseOS     <span style=\"color: #800080;\">18</span><span style=\"color: #000000;\"> k<br> perl</span>-Text-Tabs+Wrap   noarch <span style=\"color: #800080;\">2013.0523</span>-<span style=\"color: #800080;\">395</span>.el8                    BaseOS     <span style=\"color: #800080;\">24</span><span style=\"color: #000000;\"> k<br> perl</span>-Time-Local       noarch <span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.280</span>-<span style=\"color: #800080;\">1</span>.el8                        BaseOS     <span style=\"color: #800080;\">34</span><span style=\"color: #000000;\"> k<br> perl</span>-URI              noarch <span style=\"color: #800080;\">1.73</span>-<span style=\"color: #800080;\">3</span>.el8                           AppStream <span style=\"color: #800080;\">116</span><span style=\"color: #000000;\"> k<br> perl</span>-Unicode-<span style=\"color: #000000;\">Normalize<br>                       x86_64 </span><span style=\"color: #800080;\">1.25</span>-<span style=\"color: #800080;\">396</span>.el8                         BaseOS     <span style=\"color: #800080;\">82</span><span style=\"color: #000000;\"> k<br> perl</span>-constant         noarch <span style=\"color: #800080;\">1.33</span>-<span style=\"color: #800080;\">396</span>.el8                         BaseOS     <span style=\"color: #800080;\">25</span><span style=\"color: #000000;\"> k<br> perl</span>-interpreter      x86_64 <span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8                     BaseOS    <span style=\"color: #800080;\">6.3</span><span style=\"color: #000000;\"> M<br> perl</span>-libnet           noarch <span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span>.el8                           AppStream <span style=\"color: #800080;\">121</span><span style=\"color: #000000;\"> k<br> perl</span>-libs             x86_64 <span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8                     BaseOS    <span style=\"color: #800080;\">1.6</span><span style=\"color: #000000;\"> M<br> perl</span>-macros           x86_64 <span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8                     BaseOS     <span style=\"color: #800080;\">72</span><span style=\"color: #000000;\"> k<br> perl</span>-parent           noarch <span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">0.237</span>-<span style=\"color: #800080;\">1</span>.el8                        BaseOS     <span style=\"color: #800080;\">20</span><span style=\"color: #000000;\"> k<br> perl</span>-podlators        noarch <span style=\"color: #800080;\">4.11</span>-<span style=\"color: #800080;\">1</span>.el8                           BaseOS    <span style=\"color: #800080;\">118</span><span style=\"color: #000000;\"> k<br> perl</span>-threads          x86_64 <span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">2.21</span>-<span style=\"color: #800080;\">2</span>.el8                         BaseOS     <span style=\"color: #800080;\">61</span><span style=\"color: #000000;\"> k<br> perl</span>-threads-shared   x86_64 <span style=\"color: #800080;\">1.58</span>-<span style=\"color: #800080;\">2</span>.el8                           BaseOS     <span style=\"color: #800080;\">48</span><span style=\"color: #000000;\"> k<br> policycoreutils</span>-python-<span style=\"color: #000000;\">utils<br>                       noarch </span><span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span>.el8                            BaseOS    <span style=\"color: #800080;\">251</span><span style=\"color: #000000;\"> k<br> protobuf</span>-lite         x86_64 <span style=\"color: #800080;\">3.5</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">7</span>.el8                          AppStream <span style=\"color: #800080;\">150</span><span style=\"color: #000000;\"> k<br> python3</span>-audit         x86_64 <span style=\"color: #800080;\">3.0</span>-<span style=\"color: #800080;\">0.17</span>.20191104git1c2f876.el8      BaseOS     <span style=\"color: #800080;\">86</span><span style=\"color: #000000;\"> k<br> python3</span>-libsemanage   x86_64 <span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">2</span>.el8                            BaseOS    <span style=\"color: #800080;\">127</span><span style=\"color: #000000;\"> k<br> python3</span>-<span style=\"color: #000000;\">policycoreutils<br>                       noarch </span><span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span>.el8                            BaseOS    <span style=\"color: #800080;\">2.2</span><span style=\"color: #000000;\"> M<br> python3</span>-setools       x86_64 <span style=\"color: #800080;\">4.2</span>.<span style=\"color: #800080;\">2</span>-<span style=\"color: #800080;\">2</span>.el8                          BaseOS    <span style=\"color: #800080;\">601</span><span style=\"color: #000000;\"> k<br> zlib</span>-devel            x86_64 <span style=\"color: #800080;\">1.2</span>.<span style=\"color: #800080;\">11</span>-<span style=\"color: #800080;\">13</span>.el8                        BaseOS     <span style=\"color: #800080;\">57</span><span style=\"color: #000000;\"> k<br>Installing weak dependencies:<br> perl</span>-IO-Socket-IP     noarch <span style=\"color: #800080;\">0.39</span>-<span style=\"color: #800080;\">5</span>.el8                           AppStream  <span style=\"color: #800080;\">47</span><span style=\"color: #000000;\"> k<br> perl</span>-IO-Socket-SSL    noarch <span style=\"color: #800080;\">2.066</span>-<span style=\"color: #800080;\">4</span>.el8                          AppStream <span style=\"color: #800080;\">297</span><span style=\"color: #000000;\"> k<br> perl</span>-Mozilla-CA       noarch <span style=\"color: #800080;\">20160104</span>-<span style=\"color: #800080;\">7</span>.el8                       AppStream  <span style=\"color: #800080;\">15</span><span style=\"color: #000000;\"> k<br>Enabling module streams:<br> mysql                        </span><span style=\"color: #800080;\">8.0</span><span style=\"color: #000000;\">                                                 </p>\n<p>Transaction Summary<br></span>===================================================================================<span style=\"color: #000000;\"><br>Install  </span><span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> Packages</p>\n<p>Total download size: </span><span style=\"color: #800080;\">55</span><span style=\"color: #000000;\"> M<br>Installed size: </span><span style=\"color: #800080;\">279</span><span style=\"color: #000000;\"> M<br>Downloading Packages:<br>(</span><span style=\"color: #800080;\">1</span>/<span style=\"color: #800080;\">69</span>): mariadb-connector-c-config-<span style=\"color: #800080;\">3.0</span>.<span style=\"color: #800080;\">7</span>-<span style=\"color: #800080;\">1</span>.el8.noa  <span style=\"color: #800080;\">71</span> kB/s |  <span style=\"color: #800080;\">13</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>[MIRROR] mysql</span>-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_64.rpm: Curl error (<span style=\"color: #800080;\">56</span>): Failure when receiving data <span style=\"color: #0000ff;\">from</span> the peer <span style=\"color: #0000ff;\">for</span> http:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">mirror.lzu.edu.cn/centos/8.2.2004/AppStream/x86_64/os/Packages/mysql-8.0.17-3.module_el8.0.0+181+899d6349.x86_64.rpm [Recv failure: Connection reset by peer]</span><br>[MIRROR] mysql-common-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_64.rpm: Curl error (<span style=\"color: #800080;\">56</span>): Failure when receiving data <span style=\"color: #0000ff;\">from</span> the peer <span style=\"color: #0000ff;\">for</span> http:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">mirror.lzu.edu.cn/centos/8.2.2004/AppStream/x86_64/os/Packages/mysql-common-8.0.17-3.module_el8.0.0+181+899d6349.x86_64.rpm [Recv failure: Connection reset by peer]</span><br>(<span style=\"color: #800080;\">2</span>/<span style=\"color: #800080;\">69</span>): mysql-common-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #800080;\">8</span> <span style=\"color: #800080;\">602</span> kB/s | <span style=\"color: #800080;\">143</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">3</span>/<span style=\"color: #800080;\">69</span>): mysql-devel-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #800080;\">89</span> <span style=\"color: #800080;\">2.3</span> MB/s | <span style=\"color: #800080;\">147</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">4</span>/<span style=\"color: #800080;\">69</span>): mecab-<span style=\"color: #800080;\">0.996</span>-<span style=\"color: #800080;\">1</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">41</span>+ca30bab6.<span style=\"color: #800080;\">9</span> <span style=\"color: #800080;\">562</span> kB/s | <span style=\"color: #800080;\">397</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">5</span>/<span style=\"color: #800080;\">69</span>): mysql-errmsg-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #800080;\">8</span> <span style=\"color: #800080;\">2.5</span> MB/s | <span style=\"color: #800080;\">557</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>[MIRROR] mysql</span>-libs-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_64.rpm: Curl error (<span style=\"color: #800080;\">56</span>): Failure when receiving data <span style=\"color: #0000ff;\">from</span> the peer <span style=\"color: #0000ff;\">for</span> http:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">mirror.lzu.edu.cn/centos/8.2.2004/AppStream/x86_64/os/Packages/mysql-libs-8.0.17-3.module_el8.0.0+181+899d6349.x86_64.rpm [Recv failure: Connection reset by peer]</span><br>(<span style=\"color: #800080;\">6</span>/<span style=\"color: #800080;\">69</span>): mysql-libs-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #800080;\">899</span> <span style=\"color: #800080;\">2.2</span> MB/s | <span style=\"color: #800080;\">1.2</span> MB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">7</span>/<span style=\"color: #800080;\">69</span>): perl-Digest-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span>.el8.noarch.rpm        <span style=\"color: #800080;\">379</span> kB/s |  <span style=\"color: #800080;\">27</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">8</span>/<span style=\"color: #800080;\">69</span>): perl-Digest-MD5-<span style=\"color: #800080;\">2.55</span>-<span style=\"color: #800080;\">396</span>.el8.x86_64.rpm    <span style=\"color: #800080;\">1.4</span> MB/s |  <span style=\"color: #800080;\">37</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">9</span>/<span style=\"color: #800080;\">69</span>): perl-IO-Socket-IP-<span style=\"color: #800080;\">0.39</span>-<span style=\"color: #800080;\">5</span>.el8.noarch.rpm    <span style=\"color: #800080;\">1.5</span> MB/s |  <span style=\"color: #800080;\">47</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">10</span>/<span style=\"color: #800080;\">69</span>): perl-IO-Socket-SSL-<span style=\"color: #800080;\">2.066</span>-<span style=\"color: #800080;\">4</span>.el8.noarch.rpm <span style=\"color: #800080;\">264</span> kB/s | <span style=\"color: #800080;\">297</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">01</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">11</span>/<span style=\"color: #800080;\">69</span>): perl-Mozilla-CA-<span style=\"color: #800080;\">20160104</span>-<span style=\"color: #800080;\">7</span>.el8.noarch.rpm <span style=\"color: #800080;\">413</span> kB/s |  <span style=\"color: #800080;\">15</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">12</span>/<span style=\"color: #800080;\">69</span>): perl-Net-SSLeay-<span style=\"color: #800080;\">1.88</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64.rpm     <span style=\"color: #800080;\">3.6</span> MB/s | <span style=\"color: #800080;\">379</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">13</span>/<span style=\"color: #800080;\">69</span>): perl-URI-<span style=\"color: #800080;\">1.73</span>-<span style=\"color: #800080;\">3</span>.el8.noarch.rpm            <span style=\"color: #800080;\">2.8</span> MB/s | <span style=\"color: #800080;\">116</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">14</span>/<span style=\"color: #800080;\">69</span>): perl-libnet-<span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span>.el8.noarch.rpm         <span style=\"color: #800080;\">3.4</span> MB/s | <span style=\"color: #800080;\">121</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">15</span>/<span style=\"color: #800080;\">69</span>): protobuf-lite-<span style=\"color: #800080;\">3.5</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">7</span>.el8.x86_64.rpm      <span style=\"color: #800080;\">4.0</span> MB/s | <span style=\"color: #800080;\">150</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">16</span>/<span style=\"color: #800080;\">69</span>): checkpolicy-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64.rpm          <span style=\"color: #800080;\">831</span> kB/s | <span style=\"color: #800080;\">348</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">17</span>/<span style=\"color: #800080;\">69</span>): keyutils-libs-devel-<span style=\"color: #800080;\">1.5</span>.<span style=\"color: #800080;\">10</span>-<span style=\"color: #800080;\">6</span>.el8.x86_64.r <span style=\"color: #800080;\">470</span> kB/s |  <span style=\"color: #800080;\">48</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">18</span>/<span style=\"color: #800080;\">69</span>): krb5-devel-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span>.el8.x86_64.rpm         <span style=\"color: #800080;\">1.4</span> MB/s | <span style=\"color: #800080;\">549</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">19</span>/<span style=\"color: #800080;\">69</span>): libcom_err-devel-<span style=\"color: #800080;\">1.45</span>.<span style=\"color: #800080;\">4</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64.rpm  <span style=\"color: #800080;\">304</span> kB/s |  <span style=\"color: #800080;\">38</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">20</span>/<span style=\"color: #800080;\">69</span>): libevent-<span style=\"color: #800080;\">2.1</span>.<span style=\"color: #800080;\">8</span>-<span style=\"color: #800080;\">5</span>.el8.x86_64.rpm           <span style=\"color: #800080;\">1.6</span> MB/s | <span style=\"color: #800080;\">253</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">21</span>/<span style=\"color: #800080;\">69</span>): libkadm5-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span>.el8.x86_64.rpm           <span style=\"color: #800080;\">1.6</span> MB/s | <span style=\"color: #800080;\">185</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">22</span>/<span style=\"color: #800080;\">69</span>): libselinux-devel-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64.rpm     <span style=\"color: #800080;\">1.7</span> MB/s | <span style=\"color: #800080;\">199</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">23</span>/<span style=\"color: #800080;\">69</span>): libsepol-devel-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64.rpm       <span style=\"color: #800080;\">994</span> kB/s |  <span style=\"color: #800080;\">86</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">24</span>/<span style=\"color: #800080;\">69</span>): libverto-devel-<span style=\"color: #800080;\">0.3</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">5</span>.el8.x86_64.rpm     <span style=\"color: #800080;\">367</span> kB/s |  <span style=\"color: #800080;\">18</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">25</span>/<span style=\"color: #800080;\">69</span>): openssl-devel-<span style=\"color: #800080;\">1.1</span>.1c-<span style=\"color: #800080;\">15</span>.el8.x86_64.rpm    <span style=\"color: #800080;\">2.2</span> MB/s | <span style=\"color: #800080;\">2.3</span> MB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">01</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">26</span>/<span style=\"color: #800080;\">69</span>): mysql-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d634 <span style=\"color: #800080;\">1.9</span> MB/s |  <span style=\"color: #800080;\">11</span> MB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">05</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">27</span>/<span style=\"color: #800080;\">69</span>): mysql-server-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+ <span style=\"color: #800080;\">4.3</span> MB/s |  <span style=\"color: #800080;\">22</span> MB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">04</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">28</span>/<span style=\"color: #800080;\">69</span>): pcre2-devel-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64.rpm        <span style=\"color: #800080;\">1.8</span> MB/s | <span style=\"color: #800080;\">605</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">29</span>/<span style=\"color: #800080;\">69</span>): perl-Carp-<span style=\"color: #800080;\">1.42</span>-<span style=\"color: #800080;\">396</span>.el8.noarch.rpm         <span style=\"color: #800080;\">442</span> kB/s |  <span style=\"color: #800080;\">30</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">30</span>/<span style=\"color: #800080;\">69</span>): pcre2-utf16-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64.rpm        <span style=\"color: #800080;\">678</span> kB/s | <span style=\"color: #800080;\">228</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">31</span>/<span style=\"color: #800080;\">69</span>): perl-Data-Dumper-<span style=\"color: #800080;\">2.167</span>-<span style=\"color: #800080;\">399</span>.el8.x86_64.rpm <span style=\"color: #800080;\">755</span> kB/s |  <span style=\"color: #800080;\">58</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">32</span>/<span style=\"color: #800080;\">69</span>): perl-Errno-<span style=\"color: #800080;\">1.28</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64.rpm        <span style=\"color: #800080;\">557</span> kB/s |  <span style=\"color: #800080;\">76</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">33</span>/<span style=\"color: #800080;\">69</span>): pcre2-utf32-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64.rpm        <span style=\"color: #800080;\">631</span> kB/s | <span style=\"color: #800080;\">220</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">34</span>/<span style=\"color: #800080;\">69</span>): perl-Exporter-<span style=\"color: #800080;\">5.72</span>-<span style=\"color: #800080;\">396</span>.el8.noarch.rpm     <span style=\"color: #800080;\">476</span> kB/s |  <span style=\"color: #800080;\">34</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">35</span>/<span style=\"color: #800080;\">69</span>): perl-File-Path-<span style=\"color: #800080;\">2.15</span>-<span style=\"color: #800080;\">2</span>.el8.noarch.rpm      <span style=\"color: #800080;\">503</span> kB/s |  <span style=\"color: #800080;\">38</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">36</span>/<span style=\"color: #800080;\">69</span>): perl-File-Temp-<span style=\"color: #800080;\">0.230</span>.<span style=\"color: #800080;\">600</span>-<span style=\"color: #800080;\">1</span>.el8.noarch.rpm <span style=\"color: #800080;\">580</span> kB/s |  <span style=\"color: #800080;\">63</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">37</span>/<span style=\"color: #800080;\">69</span>): perl-Getopt-Long-<span style=\"color: #800080;\">2.50</span>-<span style=\"color: #800080;\">4</span>.el8.noarch.rpm    <span style=\"color: #800080;\">593</span> kB/s |  <span style=\"color: #800080;\">63</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">38</span>/<span style=\"color: #800080;\">69</span>): perl-HTTP-Tiny-<span style=\"color: #800080;\">0.074</span>-<span style=\"color: #800080;\">1</span>.el8.noarch.rpm     <span style=\"color: #800080;\">544</span> kB/s |  <span style=\"color: #800080;\">58</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">39</span>/<span style=\"color: #800080;\">69</span>): perl-MIME-Base64-<span style=\"color: #800080;\">3.15</span>-<span style=\"color: #800080;\">396</span>.el8.x86_64.rpm  <span style=\"color: #800080;\">377</span> kB/s |  <span style=\"color: #800080;\">31</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">40</span>/<span style=\"color: #800080;\">69</span>): perl-IO-<span style=\"color: #800080;\">1.38</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64.rpm           <span style=\"color: #800080;\">738</span> kB/s | <span style=\"color: #800080;\">141</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">41</span>/<span style=\"color: #800080;\">69</span>): perl-Pod-Escapes-<span style=\"color: #800080;\">1.07</span>-<span style=\"color: #800080;\">395</span>.el8.noarch.rpm  <span style=\"color: #800080;\">300</span> kB/s |  <span style=\"color: #800080;\">20</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">42</span>/<span style=\"color: #800080;\">69</span>): perl-PathTools-<span style=\"color: #800080;\">3.74</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64.rpm      <span style=\"color: #800080;\">704</span> kB/s |  <span style=\"color: #800080;\">90</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">43</span>/<span style=\"color: #800080;\">69</span>): perl-Pod-Perldoc-<span style=\"color: #800080;\">3.28</span>-<span style=\"color: #800080;\">396</span>.el8.noarch.rpm  <span style=\"color: #800080;\">628</span> kB/s |  <span style=\"color: #800080;\">86</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">44</span>/<span style=\"color: #800080;\">69</span>): perl-Pod-Usage-<span style=\"color: #800080;\">1.69</span>-<span style=\"color: #800080;\">395</span>.el8.noarch.rpm    <span style=\"color: #800080;\">408</span> kB/s |  <span style=\"color: #800080;\">34</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">45</span>/<span style=\"color: #800080;\">69</span>): perl-Pod-Simple-<span style=\"color: #800080;\">3.35</span>-<span style=\"color: #800080;\">395</span>.el8.noarch.rpm   <span style=\"color: #800080;\">763</span> kB/s | <span style=\"color: #800080;\">213</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">46</span>/<span style=\"color: #800080;\">69</span>): perl-Scalar-List-Utils-<span style=\"color: #800080;\">1.49</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64. <span style=\"color: #800080;\">597</span> kB/s |  <span style=\"color: #800080;\">68</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">47</span>/<span style=\"color: #800080;\">69</span>): perl-Socket-<span style=\"color: #800080;\">2.027</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64.rpm        <span style=\"color: #800080;\">572</span> kB/s |  <span style=\"color: #800080;\">59</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">48</span>/<span style=\"color: #800080;\">69</span>): perl-Storable-<span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64.rpm       <span style=\"color: #800080;\">682</span> kB/s |  <span style=\"color: #800080;\">98</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">49</span>/<span style=\"color: #800080;\">69</span>): perl-Term-ANSIColor-<span style=\"color: #800080;\">4.06</span>-<span style=\"color: #800080;\">396</span>.el8.noarch.r <span style=\"color: #800080;\">502</span> kB/s |  <span style=\"color: #800080;\">46</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">50</span>/<span style=\"color: #800080;\">69</span>): perl-Term-Cap-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span>.el8.noarch.rpm     <span style=\"color: #800080;\">349</span> kB/s |  <span style=\"color: #800080;\">23</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">51</span>/<span style=\"color: #800080;\">69</span>): perl-Text-ParseWords-<span style=\"color: #800080;\">3.30</span>-<span style=\"color: #800080;\">395</span>.el8.noarch. <span style=\"color: #800080;\">327</span> kB/s |  <span style=\"color: #800080;\">18</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">52</span>/<span style=\"color: #800080;\">69</span>): perl-Text-Tabs+Wrap-<span style=\"color: #800080;\">2013.0523</span>-<span style=\"color: #800080;\">395</span>.el8.noa <span style=\"color: #800080;\">334</span> kB/s |  <span style=\"color: #800080;\">24</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">53</span>/<span style=\"color: #800080;\">69</span>): perl-Time-Local-<span style=\"color: #800080;\">1.280</span>-<span style=\"color: #800080;\">1</span>.el8.noarch.rpm    <span style=\"color: #800080;\">424</span> kB/s |  <span style=\"color: #800080;\">34</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">54</span>/<span style=\"color: #800080;\">69</span>): perl-Encode-<span style=\"color: #800080;\">2.97</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64.rpm         <span style=\"color: #800080;\">1.1</span> MB/s | <span style=\"color: #800080;\">1.5</span> MB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">01</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">55</span>/<span style=\"color: #800080;\">69</span>): perl-constant-<span style=\"color: #800080;\">1.33</span>-<span style=\"color: #800080;\">396</span>.el8.noarch.rpm     <span style=\"color: #800080;\">402</span> kB/s |  <span style=\"color: #800080;\">25</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">56</span>/<span style=\"color: #800080;\">69</span>): perl-Unicode-Normalize-<span style=\"color: #800080;\">1.25</span>-<span style=\"color: #800080;\">396</span>.el8.x86_6 <span style=\"color: #800080;\">889</span> kB/s |  <span style=\"color: #800080;\">82</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">57</span>/<span style=\"color: #800080;\">69</span>): perl-macros-<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64.rpm     <span style=\"color: #800080;\">539</span> kB/s |  <span style=\"color: #800080;\">72</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">58</span>/<span style=\"color: #800080;\">69</span>): perl-parent-<span style=\"color: #800080;\">0.237</span>-<span style=\"color: #800080;\">1</span>.el8.noarch.rpm        <span style=\"color: #800080;\">280</span> kB/s |  <span style=\"color: #800080;\">20</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">59</span>/<span style=\"color: #800080;\">69</span>): perl-podlators-<span style=\"color: #800080;\">4.11</span>-<span style=\"color: #800080;\">1</span>.el8.noarch.rpm      <span style=\"color: #800080;\">609</span> kB/s | <span style=\"color: #800080;\">118</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">60</span>/<span style=\"color: #800080;\">69</span>): perl-threads-<span style=\"color: #800080;\">2.21</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64.rpm        <span style=\"color: #800080;\">506</span> kB/s |  <span style=\"color: #800080;\">61</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">61</span>/<span style=\"color: #800080;\">69</span>): perl-threads-shared-<span style=\"color: #800080;\">1.58</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64.rpm <span style=\"color: #800080;\">468</span> kB/s |  <span style=\"color: #800080;\">48</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">62</span>/<span style=\"color: #800080;\">69</span>): policycoreutils-python-utils-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span>.el8.no <span style=\"color: #800080;\">694</span> kB/s | <span style=\"color: #800080;\">251</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">63</span>/<span style=\"color: #800080;\">69</span>): python3-audit-<span style=\"color: #800080;\">3.0</span>-<span style=\"color: #800080;\">0.17</span>.20191104git1c2f876 <span style=\"color: #800080;\">572</span> kB/s |  <span style=\"color: #800080;\">86</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">64</span>/<span style=\"color: #800080;\">69</span>): python3-libsemanage-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64.rpm  <span style=\"color: #800080;\">615</span> kB/s | <span style=\"color: #800080;\">127</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">65</span>/<span style=\"color: #800080;\">69</span>): perl-libs-<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64.rpm       <span style=\"color: #800080;\">839</span> kB/s | <span style=\"color: #800080;\">1.6</span> MB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">01</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">66</span>/<span style=\"color: #800080;\">69</span>): python3-setools-<span style=\"color: #800080;\">4.2</span>.<span style=\"color: #800080;\">2</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64.rpm    <span style=\"color: #800080;\">691</span> kB/s | <span style=\"color: #800080;\">601</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">67</span>/<span style=\"color: #800080;\">69</span>): zlib-devel-<span style=\"color: #800080;\">1.2</span>.<span style=\"color: #800080;\">11</span>-<span style=\"color: #800080;\">13</span>.el8.x86_64.rpm       <span style=\"color: #800080;\">473</span> kB/s |  <span style=\"color: #800080;\">57</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">68</span>/<span style=\"color: #800080;\">69</span>): python3-policycoreutils-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span>.el8.noarch. <span style=\"color: #800080;\">934</span> kB/s | <span style=\"color: #800080;\">2.2</span> MB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">02</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">69</span>/<span style=\"color: #800080;\">69</span>): perl-interpreter-<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64.rp <span style=\"color: #800080;\">1.2</span> MB/s | <span style=\"color: #800080;\">6.3</span> MB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">05</span><br>———————————————————————————–<span style=\"color: #000000;\"><br>Total                                              </span><span style=\"color: #800080;\">4.0</span> MB/s |  <span style=\"color: #800080;\">55</span> MB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">13</span><span style=\"color: #000000;\"><br>warning: </span>/<span style=\"color: #0000ff;\">var</span>/cache/dnf/AppStream-a520ed22b0a8a736/packages/mariadb-connector-c-config-<span style=\"color: #800080;\">3.0</span>.<span style=\"color: #800080;\">7</span>-<span style=\"color: #800080;\">1</span>.el8.noarch.rpm: Header V3 RSA/<span style=\"color: #000000;\">SHA256 Signature, key ID 8483c65d: NOKEY<br>CentOS</span>-<span style=\"color: #800080;\">8</span> - AppStream                               <span style=\"color: #800080;\">961</span> kB/s | <span style=\"color: #800080;\">1.6</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>Importing GPG key </span><span style=\"color: #800080;\">0x8483C65D</span><span style=\"color: #000000;\">:<br> Userid     : </span><span style=\"color: #800000;\">“</span><span style=\"color: #800000;\">CentOS (CentOS Official Signing Key) &lt;<a href=\"mailto:&#115;&#x65;&#x63;&#x75;&#114;&#105;&#116;&#x79;&#x40;&#99;&#x65;&#110;&#116;&#111;&#x73;&#x2e;&#111;&#114;&#x67;\">&#115;&#x65;&#x63;&#x75;&#114;&#105;&#116;&#x79;&#x40;&#99;&#x65;&#110;&#116;&#111;&#x73;&#x2e;&#111;&#114;&#x67;</a>&gt;</span><span style=\"color: #800000;\">“</span><span style=\"color: #000000;\"><br> Fingerprint: 99DB 70FA E1D7 CE22 7FB6 </span><span style=\"color: #800080;\">4882</span> 05B5 55B3 <span style=\"color: #800080;\">8483</span><span style=\"color: #000000;\"> C65D<br> From       : </span>/etc/pki/rpm-gpg/RPM-GPG-KEY-<span style=\"color: #000000;\">centosofficial<br>Key imported successfully<br>Running transaction check<br>Transaction check succeeded.<br>Running transaction test<br>Transaction test succeeded.<br>Running transaction<br>  Preparing        :                                                           </span><span style=\"color: #800080;\">1</span>/<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Exporter-<span style=\"color: #800080;\">5.72</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                        <span style=\"color: #800080;\">1</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-libs-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                        <span style=\"color: #800080;\">2</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Carp-<span style=\"color: #800080;\">1.42</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                            <span style=\"color: #800080;\">3</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Scalar-List-Utils-<span style=\"color: #800080;\">3</span>:<span style=\"color: #800080;\">1.49</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64               <span style=\"color: #800080;\">4</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-parent-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">0.237</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                         <span style=\"color: #800080;\">5</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Text-ParseWords-<span style=\"color: #800080;\">3.30</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                 <span style=\"color: #800080;\">6</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : zlib</span>-devel-<span style=\"color: #800080;\">1.2</span>.<span style=\"color: #800080;\">11</span>-<span style=\"color: #800080;\">13</span>.el8.x86_64                          <span style=\"color: #800080;\">7</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : mariadb</span>-connector-c-config-<span style=\"color: #800080;\">3.0</span>.<span style=\"color: #800080;\">7</span>-<span style=\"color: #800080;\">1</span>.el8.noarch            <span style=\"color: #800080;\">8</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : mysql</span>-common-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86    <span style=\"color: #800080;\">9</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : mysql</span>-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_64       <span style=\"color: #800080;\">10</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : mysql</span>-errmsg-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86   <span style=\"color: #800080;\">11</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : mysql</span>-libs-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_6   <span style=\"color: #800080;\">12</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Term-ANSIColor-<span style=\"color: #800080;\">4.06</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                 <span style=\"color: #800080;\">13</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-macros-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                     <span style=\"color: #800080;\">14</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Errno-<span style=\"color: #800080;\">1.28</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                          <span style=\"color: #800080;\">15</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Socket-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">2.027</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                        <span style=\"color: #800080;\">16</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Text-Tabs+Wrap-<span style=\"color: #800080;\">2013.0523</span>-<span style=\"color: #800080;\">395</span>.el8.noarch            <span style=\"color: #800080;\">17</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Unicode-Normalize-<span style=\"color: #800080;\">1.25</span>-<span style=\"color: #800080;\">396</span>.el8.x86_64              <span style=\"color: #800080;\">18</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-File-Path-<span style=\"color: #800080;\">2.15</span>-<span style=\"color: #800080;\">2</span>.el8.noarch                        <span style=\"color: #800080;\">19</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-IO-<span style=\"color: #800080;\">1.38</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                             <span style=\"color: #800080;\">20</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-PathTools-<span style=\"color: #800080;\">3.74</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                        <span style=\"color: #800080;\">21</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-constant-<span style=\"color: #800080;\">1.33</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                       <span style=\"color: #800080;\">22</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-threads-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">2.21</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64                        <span style=\"color: #800080;\">23</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-threads-shared-<span style=\"color: #800080;\">1.58</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64                   <span style=\"color: #800080;\">24</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-interpreter-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                <span style=\"color: #800080;\">25</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-MIME-Base64-<span style=\"color: #800080;\">3.15</span>-<span style=\"color: #800080;\">396</span>.el8.x86_64                    <span style=\"color: #800080;\">26</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-IO-Socket-IP-<span style=\"color: #800080;\">0.39</span>-<span style=\"color: #800080;\">5</span>.el8.noarch                     <span style=\"color: #800080;\">27</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Time-Local-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.280</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                    <span style=\"color: #800080;\">28</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Digest-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                         <span style=\"color: #800080;\">29</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Digest-MD5-<span style=\"color: #800080;\">2.55</span>-<span style=\"color: #800080;\">396</span>.el8.x86_64                     <span style=\"color: #800080;\">30</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Net-SSLeay-<span style=\"color: #800080;\">1.88</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                       <span style=\"color: #800080;\">31</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Data-Dumper-<span style=\"color: #800080;\">2.167</span>-<span style=\"color: #800080;\">399</span>.el8.x86_64                   <span style=\"color: #800080;\">32</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-File-Temp-<span style=\"color: #800080;\">0.230</span>.<span style=\"color: #800080;\">600</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                   <span style=\"color: #800080;\">33</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Pod-Escapes-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.07</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                  <span style=\"color: #800080;\">34</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Storable-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                       <span style=\"color: #800080;\">35</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Term-Cap-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                       <span style=\"color: #800080;\">36</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Mozilla-CA-<span style=\"color: #800080;\">20160104</span>-<span style=\"color: #800080;\">7</span>.el8.noarch                   <span style=\"color: #800080;\">37</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Encode-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">2.97</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                         <span style=\"color: #800080;\">38</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Pod-Simple-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">3.35</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                   <span style=\"color: #800080;\">39</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Getopt-Long-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">2.50</span>-<span style=\"color: #800080;\">4</span>.el8.noarch                    <span style=\"color: #800080;\">40</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-podlators-<span style=\"color: #800080;\">4.11</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                        <span style=\"color: #800080;\">41</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Pod-Usage-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">1.69</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                    <span style=\"color: #800080;\">42</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Pod-Perldoc-<span style=\"color: #800080;\">3.28</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                    <span style=\"color: #800080;\">43</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-HTTP-Tiny-<span style=\"color: #800080;\">0.074</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                       <span style=\"color: #800080;\">44</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-IO-Socket-SSL-<span style=\"color: #800080;\">2.066</span>-<span style=\"color: #800080;\">4</span>.el8.noarch                   <span style=\"color: #800080;\">45</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-libnet-<span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span>.el8.noarch                           <span style=\"color: #800080;\">46</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-URI-<span style=\"color: #800080;\">1.73</span>-<span style=\"color: #800080;\">3</span>.el8.noarch                              <span style=\"color: #800080;\">47</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : python3</span>-setools-<span style=\"color: #800080;\">4.2</span>.<span style=\"color: #800080;\">2</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64                      <span style=\"color: #800080;\">48</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : python3</span>-libsemanage-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64                    <span style=\"color: #800080;\">49</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : python3</span>-audit-<span style=\"color: #800080;\">3.0</span>-<span style=\"color: #800080;\">0.17</span>.20191104git1c2f876.el8.x86_64    <span style=\"color: #800080;\">50</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : pcre2</span>-utf32-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                          <span style=\"color: #800080;\">51</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : pcre2</span>-utf16-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                          <span style=\"color: #800080;\">52</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : pcre2</span>-devel-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                          <span style=\"color: #800080;\">53</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : libverto</span>-devel-<span style=\"color: #800080;\">0.3</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">5</span>.el8.x86_64                       <span style=\"color: #800080;\">54</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : libsepol</span>-devel-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                         <span style=\"color: #800080;\">55</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : libselinux</span>-devel-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                       <span style=\"color: #800080;\">56</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : libkadm5</span>-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span>.el8.x86_64                             <span style=\"color: #800080;\">57</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : libevent</span>-<span style=\"color: #800080;\">2.1</span>.<span style=\"color: #800080;\">8</span>-<span style=\"color: #800080;\">5</span>.el8.x86_64                             <span style=\"color: #800080;\">58</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : libcom_err</span>-devel-<span style=\"color: #800080;\">1.45</span>.<span style=\"color: #800080;\">4</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                    <span style=\"color: #800080;\">59</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : keyutils</span>-libs-devel-<span style=\"color: #800080;\">1.5</span>.<span style=\"color: #800080;\">10</span>-<span style=\"color: #800080;\">6</span>.el8.x86_64                 <span style=\"color: #800080;\">60</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : krb5</span>-devel-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span>.el8.x86_64                           <span style=\"color: #800080;\">61</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : openssl</span>-devel-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.1</span>.1c-<span style=\"color: #800080;\">15</span>.el8.x86_64                    <span style=\"color: #800080;\">62</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : checkpolicy</span>-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                            <span style=\"color: #800080;\">63</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : python3</span>-policycoreutils-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span>.el8.noarch                <span style=\"color: #800080;\">64</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : policycoreutils</span>-python-utils-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span>.el8.noarch           <span style=\"color: #800080;\">65</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : protobuf</span>-lite-<span style=\"color: #800080;\">3.5</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">7</span>.el8.x86_64                        <span style=\"color: #800080;\">66</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : mecab</span>-<span style=\"color: #800080;\">0.996</span>-<span style=\"color: #800080;\">1</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">41</span>+ca30bab6.<span style=\"color: #800080;\">9</span>.x86_64       <span style=\"color: #800080;\">67</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Running scriptlet: mecab</span>-<span style=\"color: #800080;\">0.996</span>-<span style=\"color: #800080;\">1</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">41</span>+ca30bab6.<span style=\"color: #800080;\">9</span>.x86_64       <span style=\"color: #800080;\">67</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Running scriptlet: mysql</span>-server-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86   <span style=\"color: #800080;\">68</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : mysql</span>-server-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86   <span style=\"color: #800080;\">68</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Running scriptlet: mysql</span>-server-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86   <span style=\"color: #800080;\">68</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>ValueError: File context </span><span style=\"color: #0000ff;\">for</span> /<span style=\"color: #0000ff;\">var</span>/log/mysql(/.*)?<span style=\"color: #000000;\"> already defined</p>\n<p>  Installing       : mysql</span>-devel-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_   <span style=\"color: #800080;\">69</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Running scriptlet: mysql</span>-devel-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_   <span style=\"color: #800080;\">69</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : mariadb</span>-connector-c-config-<span style=\"color: #800080;\">3.0</span>.<span style=\"color: #800080;\">7</span>-<span style=\"color: #800080;\">1</span>.el8.noarch            <span style=\"color: #800080;\">1</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : mecab</span>-<span style=\"color: #800080;\">0.996</span>-<span style=\"color: #800080;\">1</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">41</span>+ca30bab6.<span style=\"color: #800080;\">9</span>.x86_64        <span style=\"color: #800080;\">2</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : mysql</span>-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_64        <span style=\"color: #800080;\">3</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : mysql</span>-common-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86    <span style=\"color: #800080;\">4</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : mysql</span>-devel-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_    <span style=\"color: #800080;\">5</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : mysql</span>-errmsg-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86    <span style=\"color: #800080;\">6</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : mysql</span>-libs-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_6    <span style=\"color: #800080;\">7</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : mysql</span>-server-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86    <span style=\"color: #800080;\">8</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Digest-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                          <span style=\"color: #800080;\">9</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Digest-MD5-<span style=\"color: #800080;\">2.55</span>-<span style=\"color: #800080;\">396</span>.el8.x86_64                     <span style=\"color: #800080;\">10</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-IO-Socket-IP-<span style=\"color: #800080;\">0.39</span>-<span style=\"color: #800080;\">5</span>.el8.noarch                     <span style=\"color: #800080;\">11</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-IO-Socket-SSL-<span style=\"color: #800080;\">2.066</span>-<span style=\"color: #800080;\">4</span>.el8.noarch                   <span style=\"color: #800080;\">12</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Mozilla-CA-<span style=\"color: #800080;\">20160104</span>-<span style=\"color: #800080;\">7</span>.el8.noarch                   <span style=\"color: #800080;\">13</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Net-SSLeay-<span style=\"color: #800080;\">1.88</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                       <span style=\"color: #800080;\">14</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-URI-<span style=\"color: #800080;\">1.73</span>-<span style=\"color: #800080;\">3</span>.el8.noarch                              <span style=\"color: #800080;\">15</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-libnet-<span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span>.el8.noarch                           <span style=\"color: #800080;\">16</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : protobuf</span>-lite-<span style=\"color: #800080;\">3.5</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">7</span>.el8.x86_64                        <span style=\"color: #800080;\">17</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : checkpolicy</span>-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                            <span style=\"color: #800080;\">18</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : keyutils</span>-libs-devel-<span style=\"color: #800080;\">1.5</span>.<span style=\"color: #800080;\">10</span>-<span style=\"color: #800080;\">6</span>.el8.x86_64                 <span style=\"color: #800080;\">19</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : krb5</span>-devel-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span>.el8.x86_64                           <span style=\"color: #800080;\">20</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : libcom_err</span>-devel-<span style=\"color: #800080;\">1.45</span>.<span style=\"color: #800080;\">4</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                    <span style=\"color: #800080;\">21</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : libevent</span>-<span style=\"color: #800080;\">2.1</span>.<span style=\"color: #800080;\">8</span>-<span style=\"color: #800080;\">5</span>.el8.x86_64                             <span style=\"color: #800080;\">22</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : libkadm5</span>-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span>.el8.x86_64                             <span style=\"color: #800080;\">23</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : libselinux</span>-devel-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                       <span style=\"color: #800080;\">24</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : libsepol</span>-devel-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                         <span style=\"color: #800080;\">25</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : libverto</span>-devel-<span style=\"color: #800080;\">0.3</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">5</span>.el8.x86_64                       <span style=\"color: #800080;\">26</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : openssl</span>-devel-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.1</span>.1c-<span style=\"color: #800080;\">15</span>.el8.x86_64                    <span style=\"color: #800080;\">27</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : pcre2</span>-devel-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                          <span style=\"color: #800080;\">28</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : pcre2</span>-utf16-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                          <span style=\"color: #800080;\">29</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : pcre2</span>-utf32-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                          <span style=\"color: #800080;\">30</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Carp-<span style=\"color: #800080;\">1.42</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                           <span style=\"color: #800080;\">31</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Data-Dumper-<span style=\"color: #800080;\">2.167</span>-<span style=\"color: #800080;\">399</span>.el8.x86_64                   <span style=\"color: #800080;\">32</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Encode-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">2.97</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                         <span style=\"color: #800080;\">33</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Errno-<span style=\"color: #800080;\">1.28</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                          <span style=\"color: #800080;\">34</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Exporter-<span style=\"color: #800080;\">5.72</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                       <span style=\"color: #800080;\">35</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-File-Path-<span style=\"color: #800080;\">2.15</span>-<span style=\"color: #800080;\">2</span>.el8.noarch                        <span style=\"color: #800080;\">36</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-File-Temp-<span style=\"color: #800080;\">0.230</span>.<span style=\"color: #800080;\">600</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                   <span style=\"color: #800080;\">37</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Getopt-Long-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">2.50</span>-<span style=\"color: #800080;\">4</span>.el8.noarch                    <span style=\"color: #800080;\">38</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-HTTP-Tiny-<span style=\"color: #800080;\">0.074</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                       <span style=\"color: #800080;\">39</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-IO-<span style=\"color: #800080;\">1.38</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                             <span style=\"color: #800080;\">40</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-MIME-Base64-<span style=\"color: #800080;\">3.15</span>-<span style=\"color: #800080;\">396</span>.el8.x86_64                    <span style=\"color: #800080;\">41</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-PathTools-<span style=\"color: #800080;\">3.74</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                        <span style=\"color: #800080;\">42</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Pod-Escapes-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.07</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                  <span style=\"color: #800080;\">43</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Pod-Perldoc-<span style=\"color: #800080;\">3.28</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                    <span style=\"color: #800080;\">44</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Pod-Simple-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">3.35</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                   <span style=\"color: #800080;\">45</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Pod-Usage-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">1.69</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                    <span style=\"color: #800080;\">46</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Scalar-List-Utils-<span style=\"color: #800080;\">3</span>:<span style=\"color: #800080;\">1.49</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64              <span style=\"color: #800080;\">47</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Socket-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">2.027</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                        <span style=\"color: #800080;\">48</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Storable-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                       <span style=\"color: #800080;\">49</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Term-ANSIColor-<span style=\"color: #800080;\">4.06</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                 <span style=\"color: #800080;\">50</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Term-Cap-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                       <span style=\"color: #800080;\">51</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Text-ParseWords-<span style=\"color: #800080;\">3.30</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                <span style=\"color: #800080;\">52</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Text-Tabs+Wrap-<span style=\"color: #800080;\">2013.0523</span>-<span style=\"color: #800080;\">395</span>.el8.noarch            <span style=\"color: #800080;\">53</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Time-Local-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.280</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                    <span style=\"color: #800080;\">54</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Unicode-Normalize-<span style=\"color: #800080;\">1.25</span>-<span style=\"color: #800080;\">396</span>.el8.x86_64              <span style=\"color: #800080;\">55</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-constant-<span style=\"color: #800080;\">1.33</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                       <span style=\"color: #800080;\">56</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-interpreter-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                <span style=\"color: #800080;\">57</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-libs-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                       <span style=\"color: #800080;\">58</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-macros-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                     <span style=\"color: #800080;\">59</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-parent-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">0.237</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                        <span style=\"color: #800080;\">60</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-podlators-<span style=\"color: #800080;\">4.11</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                        <span style=\"color: #800080;\">61</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-threads-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">2.21</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64                        <span style=\"color: #800080;\">62</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-threads-shared-<span style=\"color: #800080;\">1.58</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64                   <span style=\"color: #800080;\">63</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : policycoreutils</span>-python-utils-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span>.el8.noarch           <span style=\"color: #800080;\">64</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : python3</span>-audit-<span style=\"color: #800080;\">3.0</span>-<span style=\"color: #800080;\">0.17</span>.20191104git1c2f876.el8.x86_64    <span style=\"color: #800080;\">65</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : python3</span>-libsemanage-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64                    <span style=\"color: #800080;\">66</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : python3</span>-policycoreutils-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span>.el8.noarch                <span style=\"color: #800080;\">67</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : python3</span>-setools-<span style=\"color: #800080;\">4.2</span>.<span style=\"color: #800080;\">2</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64                      <span style=\"color: #800080;\">68</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : zlib</span>-devel-<span style=\"color: #800080;\">1.2</span>.<span style=\"color: #800080;\">11</span>-<span style=\"color: #800080;\">13</span>.el8.x86_64                         <span style=\"color: #800080;\">69</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> </p>\n<p>Installed:<br>  checkpolicy</span>-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.x86_64<br>  keyutils</span>-libs-devel-<span style=\"color: #800080;\">1.5</span>.<span style=\"color: #800080;\">10</span>-<span style=\"color: #800080;\">6</span><span style=\"color: #000000;\">.el8.x86_64<br>  krb5</span>-devel-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span><span style=\"color: #000000;\">.el8.x86_64<br>  libcom_err</span>-devel-<span style=\"color: #800080;\">1.45</span>.<span style=\"color: #800080;\">4</span>-<span style=\"color: #800080;\">3</span><span style=\"color: #000000;\">.el8.x86_64<br>  libevent</span>-<span style=\"color: #800080;\">2.1</span>.<span style=\"color: #800080;\">8</span>-<span style=\"color: #800080;\">5</span><span style=\"color: #000000;\">.el8.x86_64<br>  libkadm5</span>-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span><span style=\"color: #000000;\">.el8.x86_64<br>  libselinux</span>-devel-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">3</span><span style=\"color: #000000;\">.el8.x86_64<br>  libsepol</span>-devel-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.x86_64<br>  libverto</span>-devel-<span style=\"color: #800080;\">0.3</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">5</span><span style=\"color: #000000;\">.el8.x86_64<br>  mariadb</span>-connector-c-config-<span style=\"color: #800080;\">3.0</span>.<span style=\"color: #800080;\">7</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.noarch<br>  mecab</span>-<span style=\"color: #800080;\">0.996</span>-<span style=\"color: #800080;\">1</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">41</span>+ca30bab6.<span style=\"color: #800080;\">9</span><span style=\"color: #000000;\">.x86_64<br>  mysql</span>-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #000000;\">899d6349.x86_64<br>  mysql</span>-common-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #000000;\">899d6349.x86_64<br>  mysql</span>-devel-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #000000;\">899d6349.x86_64<br>  mysql</span>-errmsg-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #000000;\">899d6349.x86_64<br>  mysql</span>-libs-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #000000;\">899d6349.x86_64<br>  mysql</span>-server-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #000000;\">899d6349.x86_64<br>  openssl</span>-devel-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.1</span>.1c-<span style=\"color: #800080;\">15</span><span style=\"color: #000000;\">.el8.x86_64<br>  pcre2</span>-devel-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.x86_64<br>  pcre2</span>-utf16-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.x86_64<br>  pcre2</span>-utf32-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.x86_64<br>  perl</span>-Carp-<span style=\"color: #800080;\">1.42</span>-<span style=\"color: #800080;\">396</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-Data-Dumper-<span style=\"color: #800080;\">2.167</span>-<span style=\"color: #800080;\">399</span><span style=\"color: #000000;\">.el8.x86_64<br>  perl</span>-Digest-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-Digest-MD5-<span style=\"color: #800080;\">2.55</span>-<span style=\"color: #800080;\">396</span><span style=\"color: #000000;\">.el8.x86_64<br>  perl</span>-Encode-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">2.97</span>-<span style=\"color: #800080;\">3</span><span style=\"color: #000000;\">.el8.x86_64<br>  perl</span>-Errno-<span style=\"color: #800080;\">1.28</span>-<span style=\"color: #800080;\">416</span><span style=\"color: #000000;\">.el8.x86_64<br>  perl</span>-Exporter-<span style=\"color: #800080;\">5.72</span>-<span style=\"color: #800080;\">396</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-File-Path-<span style=\"color: #800080;\">2.15</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-File-Temp-<span style=\"color: #800080;\">0.230</span>.<span style=\"color: #800080;\">600</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-Getopt-Long-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">2.50</span>-<span style=\"color: #800080;\">4</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-HTTP-Tiny-<span style=\"color: #800080;\">0.074</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-IO-<span style=\"color: #800080;\">1.38</span>-<span style=\"color: #800080;\">416</span><span style=\"color: #000000;\">.el8.x86_64<br>  perl</span>-IO-Socket-IP-<span style=\"color: #800080;\">0.39</span>-<span style=\"color: #800080;\">5</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-IO-Socket-SSL-<span style=\"color: #800080;\">2.066</span>-<span style=\"color: #800080;\">4</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-MIME-Base64-<span style=\"color: #800080;\">3.15</span>-<span style=\"color: #800080;\">396</span><span style=\"color: #000000;\">.el8.x86_64<br>  perl</span>-Mozilla-CA-<span style=\"color: #800080;\">20160104</span>-<span style=\"color: #800080;\">7</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-Net-SSLeay-<span style=\"color: #800080;\">1.88</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.x86_64<br>  perl</span>-PathTools-<span style=\"color: #800080;\">3.74</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.x86_64<br>  perl</span>-Pod-Escapes-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.07</span>-<span style=\"color: #800080;\">395</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-Pod-Perldoc-<span style=\"color: #800080;\">3.28</span>-<span style=\"color: #800080;\">396</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-Pod-Simple-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">3.35</span>-<span style=\"color: #800080;\">395</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-Pod-Usage-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">1.69</span>-<span style=\"color: #800080;\">395</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-Scalar-List-Utils-<span style=\"color: #800080;\">3</span>:<span style=\"color: #800080;\">1.49</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el8.x86_64<br>  perl</span>-Socket-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">2.027</span>-<span style=\"color: #800080;\">3</span><span style=\"color: #000000;\">.el8.x86_64<br>  perl</span>-Storable-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span><span style=\"color: #000000;\">.el8.x86_64<br>  perl</span>-Term-ANSIColor-<span style=\"color: #800080;\">4.06</span>-<span style=\"color: #800080;\">396</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-Term-Cap-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-Text-ParseWords-<span style=\"color: #800080;\">3.30</span>-<span style=\"color: #800080;\">395</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-Text-Tabs+Wrap-<span style=\"color: #800080;\">2013.0523</span>-<span style=\"color: #800080;\">395</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-Time-Local-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.280</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-URI-<span style=\"color: #800080;\">1.73</span>-<span style=\"color: #800080;\">3</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-Unicode-Normalize-<span style=\"color: #800080;\">1.25</span>-<span style=\"color: #800080;\">396</span><span style=\"color: #000000;\">.el8.x86_64<br>  perl</span>-constant-<span style=\"color: #800080;\">1.33</span>-<span style=\"color: #800080;\">396</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-interpreter-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span><span style=\"color: #000000;\">.el8.x86_64<br>  perl</span>-libnet-<span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-libs-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span><span style=\"color: #000000;\">.el8.x86_64<br>  perl</span>-macros-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span><span style=\"color: #000000;\">.el8.x86_64<br>  perl</span>-parent-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">0.237</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-podlators-<span style=\"color: #800080;\">4.11</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-threads-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">2.21</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el8.x86_64<br>  perl</span>-threads-shared-<span style=\"color: #800080;\">1.58</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el8.x86_64<br>  policycoreutils</span>-python-utils-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span><span style=\"color: #000000;\">.el8.noarch<br>  protobuf</span>-lite-<span style=\"color: #800080;\">3.5</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">7</span><span style=\"color: #000000;\">.el8.x86_64<br>  python3</span>-audit-<span style=\"color: #800080;\">3.0</span>-<span style=\"color: #800080;\">0.17</span><span style=\"color: #000000;\">.20191104git1c2f876.el8.x86_64<br>  python3</span>-libsemanage-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el8.x86_64<br>  python3</span>-policycoreutils-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span><span style=\"color: #000000;\">.el8.noarch<br>  python3</span>-setools-<span style=\"color: #800080;\">4.2</span>.<span style=\"color: #800080;\">2</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el8.x86_64<br>  zlib</span>-devel-<span style=\"color: #800080;\">1.2</span>.<span style=\"color: #800080;\">11</span>-<span style=\"color: #800080;\">13</span><span style=\"color: #000000;\">.el8.x86_64                                                  </p>\n<p>Complete</span>!<span style=\"color: #000000;\"><br>[root@localhost </span><del>]# mysqld –install –user=<span style=\"color: #000000;\">root<br>[root@localhost </span></del>]# mysqld –initialize –user=<span style=\"color: #000000;\">mysql<br>[root@localhost </span><del>]# mysqld –initialize –lower-<span style=\"color: #0000ff;\">case</span>-table-names=<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\"><br>[root@localhost </span></del>]# cat /<span style=\"color: #0000ff;\">var</span>/log/mysql/<span style=\"color: #000000;\">mysqld.log<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.286242Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010116</span>] [Server] /usr/libexec/mysqld (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>) starting <span style=\"color: #0000ff;\">as</span> process <span style=\"color: #800080;\">8036</span><br><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.300375Z <span style=\"color: #800080;\">1</span> [ERROR] [MY-<span style=\"color: #800080;\">011011</span><span style=\"color: #000000;\">] [Server] Failed to find valid data directory.<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.300446Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010020</span><span style=\"color: #000000;\">] [Server] <span style=\"color: #ff0000;\">Data Dictionary initialization failed</span>.<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.300498Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010119</span><span style=\"color: #000000;\">] [Server] Aborting<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.300755Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010910</span>] [Server] /usr/libexec/mysqld: Shutdown complete (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span><span style=\"color: #000000;\">)  Source distribution.<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.523538Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">013169</span>] [Server] /usr/libexec/mysqld (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>) initializing of server <span style=\"color: #0000ff;\">in</span> progress <span style=\"color: #0000ff;\">as</span> process <span style=\"color: #800080;\">22923</span><br><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.524591Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010457</span>] [Server] –initialize specified but the data directory has files <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> it. Aborting.<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.524614Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">013236</span>] [Server] The designated data directory /<span style=\"color: #0000ff;\">var</span>/lib/mysql/ <span style=\"color: #0000ff;\">is</span><span style=\"color: #000000;\"> unusable. You can remove all files that the server added to it.<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.524676Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010119</span><span style=\"color: #000000;\">] [Server] Aborting<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.524752Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010910</span>] [Server] /usr/libexec/mysqld: Shutdown complete (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span><span style=\"color: #000000;\">)  Source distribution.<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.984050Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">013169</span>] [Server] /usr/libexec/mysqld (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>) initializing of server <span style=\"color: #0000ff;\">in</span> progress <span style=\"color: #0000ff;\">as</span> process <span style=\"color: #800080;\">28279</span><br><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.985204Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010457</span>] [Server] –initialize specified but the data directory has files <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> it. Aborting.<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.985285Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">013236</span>] [Server] The designated data directory /<span style=\"color: #0000ff;\">var</span>/lib/mysql/ <span style=\"color: #0000ff;\">is</span><span style=\"color: #000000;\"> unusable. You can remove all files that the server added to it.<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.985321Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010119</span><span style=\"color: #000000;\">] [Server] Aborting<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.985395Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010910</span>] [Server] /usr/libexec/mysqld: Shutdown complete (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span><span style=\"color: #000000;\">)  Source distribution.<br>[root@localhost </span><del>]# rm -rf /<span style=\"color: #0000ff;\">var</span>/lib/<span style=\"color: #000000;\">mysql<br>[root@localhost </span></del>]# mysqld –initialize –<span style=\"color: #000000;\">console<br>[root@localhost </span><del>]# chown -R mysql:mysql /<span style=\"color: #0000ff;\">var</span>/lib/mysql/<span style=\"color: #000000;\"><br>[root@localhost </span></del><span style=\"color: #000000;\">]# systemctl start mysqld<br>[root@localhost </span>~<span style=\"color: #000000;\">]# systemctl status mysqld<br>● mysqld.service </span>- MySQL <span style=\"color: #800080;\">8.0</span><span style=\"color: #000000;\"> database server<br>   Loaded: loaded (</span>/usr/lib/systemd/system/mysqld.service; disabled; vendor preset&gt;<span style=\"color: #000000;\"><br>   Active: active (running) since Tue </span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-<span style=\"color: #800080;\">01</span> <span style=\"color: #800080;\">16</span>:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span><span style=\"color: #000000;\"> CST; 5s ago<br>  Process: </span><span style=\"color: #800080;\">28436</span> ExecStartPost=/usr/libexec/mysql-check-upgrade (code=exited, stat&gt;<span style=\"color: #000000;\"><br>  Process: </span><span style=\"color: #800080;\">28356</span> ExecStartPre=/usr/libexec/mysql-prepare-db-dir mysqld.service (co&gt;<span style=\"color: #000000;\"><br>  Process: </span><span style=\"color: #800080;\">28332</span> ExecStartPre=/usr/libexec/mysql-check-socket (code=exited, status&gt;<span style=\"color: #000000;\"><br> Main PID: </span><span style=\"color: #800080;\">28393</span><span style=\"color: #000000;\"> (mysqld)<br>   Status: </span><span style=\"color: #800000;\">“</span><span style=\"color: #800000;\">Server is operational</span><span style=\"color: #800000;\">“</span><span style=\"color: #000000;\"><br>    Tasks: </span><span style=\"color: #800080;\">39</span> (limit: <span style=\"color: #800080;\">11302</span><span style=\"color: #000000;\">)<br>   Memory: </span><span style=\"color: #800080;\">382.4M</span><span style=\"color: #000000;\"><br>   CGroup: </span>/system.slice/<span style=\"color: #000000;\">mysqld.service<br>           └─</span><span style=\"color: #800080;\">28393</span> /usr/libexec/mysqld –basedir=/<span style=\"color: #000000;\">usr</p>\n<p>Sep </span><span style=\"color: #800080;\">01</span> <span style=\"color: #800080;\">16</span>:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">18</span> localhost.localdomain systemd[<span style=\"color: #800080;\">1</span>]: Starting MySQL <span style=\"color: #800080;\">8.0</span> database serv&gt;<span style=\"color: #000000;\"><br>Sep </span><span style=\"color: #800080;\">01</span> <span style=\"color: #800080;\">16</span>:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span> localhost.localdomain mysql-check-upgrade[<span style=\"color: #800080;\">28436</span>]: The datadir loca&gt;<span style=\"color: #000000;\"><br>Sep </span><span style=\"color: #800080;\">01</span> <span style=\"color: #800080;\">16</span>:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span> localhost.localdomain mysql-check-upgrade[<span style=\"color: #800080;\">28436</span>]:   <span style=\"color: #800080;\">1</span>. Back-up you&gt;<span style=\"color: #000000;\"><br>Sep </span><span style=\"color: #800080;\">01</span> <span style=\"color: #800080;\">16</span>:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span> localhost.localdomain mysql-check-upgrade[<span style=\"color: #800080;\">28436</span>]:   <span style=\"color: #800080;\">2</span>. Start the d&gt;<span style=\"color: #000000;\"><br>Sep </span><span style=\"color: #800080;\">01</span> <span style=\"color: #800080;\">16</span>:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span> localhost.localdomain mysql-check-upgrade[<span style=\"color: #800080;\">28436</span>]:   <span style=\"color: #800080;\">3</span>. Run <span style=\"color: #800000;\">‘</span><span style=\"color: #800000;\">mysql_&gt;</span><br>Sep <span style=\"color: #800080;\">01</span> <span style=\"color: #800080;\">16</span>:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span> localhost.localdomain mysql-check-upgrade[<span style=\"color: #800080;\">28436</span>]: Read more about &gt;<span style=\"color: #000000;\"><br>Sep </span><span style=\"color: #800080;\">01</span> <span style=\"color: #800080;\">16</span>:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span> localhost.localdomain mysql-check-upgrade[<span style=\"color: #800080;\">28436</span>]: http:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">dev.mysql&gt;</span><br>Sep <span style=\"color: #800080;\">01</span> <span style=\"color: #800080;\">16</span>:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span> localhost.localdomain systemd[<span style=\"color: #800080;\">1</span>]: Started MySQL <span style=\"color: #800080;\">8.0</span> database serve&gt;<span style=\"color: #000000;\"></p>\n<p>[root@localhost </span><del>]# ^<span style=\"color: #000000;\">C<br>[root@localhost </span></del>]# cat /<span style=\"color: #0000ff;\">var</span>/log/mysql/<span style=\"color: #000000;\">mysqld.log<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.286242Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010116</span>] [Server] /usr/libexec/mysqld (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>) starting <span style=\"color: #0000ff;\">as</span> process <span style=\"color: #800080;\">8036</span><br><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.300375Z <span style=\"color: #800080;\">1</span> [ERROR] [MY-<span style=\"color: #800080;\">011011</span><span style=\"color: #000000;\">] [Server] Failed to find valid data directory.<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.300446Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010020</span><span style=\"color: #000000;\">] [Server] Data Dictionary initialization failed.<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.300498Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010119</span><span style=\"color: #000000;\">] [Server] Aborting<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.300755Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010910</span>] [Server] /usr/libexec/mysqld: Shutdown complete (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span><span style=\"color: #000000;\">)  Source distribution.<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.523538Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">013169</span>] [Server] /usr/libexec/mysqld (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>) initializing of server <span style=\"color: #0000ff;\">in</span> progress <span style=\"color: #0000ff;\">as</span> process <span style=\"color: #800080;\">22923</span><br><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.524591Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010457</span>] [Server] –initialize specified but the data directory has files <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> it. Aborting.<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.524614Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">013236</span>] [Server] The designated data directory /<span style=\"color: #0000ff;\">var</span>/lib/mysql/ <span style=\"color: #0000ff;\">is</span><span style=\"color: #000000;\"> unusable. You can remove all files that the server added to it.<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.524676Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010119</span><span style=\"color: #000000;\">] [Server] Aborting<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.524752Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010910</span>] [Server] /usr/libexec/mysqld: Shutdown complete (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span><span style=\"color: #000000;\">)  Source distribution.<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.984050Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">013169</span>] [Server] /usr/libexec/mysqld (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>) initializing of server <span style=\"color: #0000ff;\">in</span> progress <span style=\"color: #0000ff;\">as</span> process <span style=\"color: #800080;\">28279</span><br><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.985204Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010457</span>] [Server] –initialize specified but the data directory has files <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> it. Aborting.<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.985285Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">013236</span>] [Server] The designated data directory /<span style=\"color: #0000ff;\">var</span>/lib/mysql/ <span style=\"color: #0000ff;\">is</span><span style=\"color: #000000;\"> unusable. You can remove all files that the server added to it.<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.985321Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010119</span><span style=\"color: #000000;\">] [Server] Aborting<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.985395Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010910</span>] [Server] /usr/libexec/mysqld: Shutdown complete (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span><span style=\"color: #000000;\">)  Source distribution.<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">00</span>.208778Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">013169</span>] [Server] /usr/libexec/mysqld (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>) initializing of server <span style=\"color: #0000ff;\">in</span> progress <span style=\"color: #0000ff;\">as</span> process <span style=\"color: #800080;\">28282</span><br><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">02</span>.022251Z <span style=\"color: #800080;\">5</span> [Note] [MY-<span style=\"color: #800080;\">010454</span>] [Server] A temporary password <span style=\"color: #0000ff;\">is</span> generated <span style=\"color: #0000ff;\">for</span> root@localhost: <span style=\"color: #ff0000;\">u;*pHkkhe13T<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">02</span>.704903Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">013170</span>] [Server] /usr/libexec/mysqld (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span><span style=\"color: #000000;\">) initializing of server has completed<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">19</span>.678034Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010116</span>] [Server] /usr/libexec/mysqld (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>) starting <span style=\"color: #0000ff;\">as</span> process <span style=\"color: #800080;\">28393</span><br><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span>.444889Z <span style=\"color: #800080;\">0</span> [Warning] [MY-<span style=\"color: #800080;\">010068</span>] [Server] CA certificate ca.pem <span style=\"color: #0000ff;\">is</span><span style=\"color: #000000;\"> self signed.<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span>.463100Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010931</span>] [Server] /usr/libexec/mysqld: ready <span style=\"color: #0000ff;\">for</span> connections. Version: <span style=\"color: #800000;\">‘</span><span style=\"color: #800000;\">8.0.17</span><span style=\"color: #800000;\">‘</span>  socket: <span style=\"color: #800000;\">‘</span><span style=\"color: #800000;\">/var/lib/mysql/mysql.sock</span><span style=\"color: #800000;\">‘</span>  port: <span style=\"color: #800080;\">3306</span><span style=\"color: #000000;\">  Source distribution.<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span>.531457Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">011323</span>] [Server] X Plugin ready <span style=\"color: #0000ff;\">for</span> connections. Socket: <span style=\"color: #800000;\">‘</span><span style=\"color: #800000;\">/var/lib/mysql/mysqlx.sock</span><span style=\"color: #800000;\">‘</span> bind-address: <span style=\"color: #800000;\">‘</span><span style=\"color: #800000;\">::</span><span style=\"color: #800000;\">‘</span> port: <span style=\"color: #800080;\">33060</span><span style=\"color: #000000;\"><br>[root@localhost </span>~]# mysql -u root -<span style=\"color: #000000;\">p<br>Enter password:<br>Welcome to the MySQL monitor.  Commands end with ; or \\g.<br>Your MySQL connection id </span><span style=\"color: #0000ff;\">is</span> <span style=\"color: #800080;\">8</span><span style=\"color: #000000;\"><br>Server version: </span><span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span><span style=\"color: #000000;\"></p>\n<p>Copyright (c) </span><span style=\"color: #800080;\">2000</span>, <span style=\"color: #800080;\">2019</span>, Oracle and/<span style=\"color: #000000;\">or its affiliates. All rights reserved.</p>\n<p>Oracle </span><span style=\"color: #0000ff;\">is</span> a registered trademark of Oracle Corporation and/<span style=\"color: #000000;\">or its<br>affiliates. Other names may be trademarks of their respective<br>owners.</p>\n<p>Type </span><span style=\"color: #800000;\">‘</span><span style=\"color: #800000;\">help;</span><span style=\"color: #800000;\">‘</span> or <span style=\"color: #800000;\">‘</span><span style=\"color: #800000;\">\\h</span><span style=\"color: #800000;\">‘</span> <span style=\"color: #0000ff;\">for</span> help. Type <span style=\"color: #800000;\">‘</span><span style=\"color: #800000;\">\\c</span><span style=\"color: #800000;\">‘</span><span style=\"color: #000000;\"> to clear the current input statement.</p>\n<p>mysql</span>&gt; ALTER USER <span style=\"color: #800000;\">‘</span><span style=\"color: #800000;\">root</span><span style=\"color: #800000;\">‘</span>@<span style=\"color: #800000;\">‘</span><span style=\"color: #800000;\">localhost</span><span style=\"color: #800000;\">‘</span> IDENTIFIED WITH mysql_native_password BY <span style=\"color: #800000;\">‘</span><span style=\"color: #800000;\">test@123</span><span style=\"color: #800000;\">‘</span><span style=\"color: #000000;\">;<br>Query OK, </span><span style=\"color: #800080;\">0</span> rows affected (<span style=\"color: #800080;\">0.01</span><span style=\"color: #000000;\"> sec)</p>\n<p>mysql</span>&gt;<span style=\"color: #000000;\"> use mysql<br>Reading table information </span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\"> completion of table and column names<br>You can turn off </span><span style=\"color: #0000ff;\">this</span> feature to <span style=\"color: #0000ff;\">get</span> a quicker startup with -<span style=\"color: #000000;\">A</p>\n<p>Database changed<br>mysql</span>&gt; <span style=\"color: #0000ff;\">select</span> Host,User <span style=\"color: #0000ff;\">from</span><span style=\"color: #000000;\"> user;<br></span>+———–+——————+<br>| Host      | User             |<br>+———–+——————+<br>| localhost | mysql.infoschema |<br>| localhost | mysql.session    |<br>| localhost | mysql.sys        |<br>| localhost | root             |<br>+———–+——————+<br><span style=\"color: #800080;\">4</span> rows <span style=\"color: #0000ff;\">in</span> <span style=\"color: #0000ff;\">set</span> (<span style=\"color: #800080;\">0.00</span><span style=\"color: #000000;\"> sec)</p>\n<p>mysql</span>&gt; update user <span style=\"color: #0000ff;\">set</span> host = <span style=\"color: #800000;\">‘</span><span style=\"color: #800000;\">%</span><span style=\"color: #800000;\">‘</span> <span style=\"color: #0000ff;\">where</span> user =<span style=\"color: #800000;\">‘</span><span style=\"color: #800000;\">root</span><span style=\"color: #800000;\">‘</span><span style=\"color: #000000;\">;<br>Query OK, </span><span style=\"color: #800080;\">1</span> row affected (<span style=\"color: #800080;\">0.00</span><span style=\"color: #000000;\"> sec)<br>Rows matched: </span><span style=\"color: #800080;\">1</span>  Changed: <span style=\"color: #800080;\">1</span>  Warnings: <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\"></p>\n<p>mysql</span>&gt;<span style=\"color: #000000;\"> flush privileges;<br>Query OK, </span><span style=\"color: #800080;\">0</span> rows affected (<span style=\"color: #800080;\">0.01</span><span style=\"color: #000000;\"> sec)</p>\n<p>mysql</span>&gt;<span style=\"color: #000000;\"> exit<br>Bye<br>[root@localhost </span>~]# </pre></p>\n</div>\n<p>&nbsp;</p>","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"spatxos","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/spatxos","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"<h1>本文适用于centos 8及以上安装mysql 8.0，整体耗时20分钟内，不需要翻墙</h1>\n<h2>1.环境先搞好</h2>\n<div class=\"cnblogs_code\">\n<pre> systemctl stop firewalld    <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">关闭防火墙</span>\n systemctl disable firewalld    <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">禁用防火墙</span>\n setenforce <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">\n sed </span>-i <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">s/^SELINUX=.*/SELINUX=disabled/</span><span style=\"color: #800000;\">'</span> /etc/selinux/<span style=\"color: #000000;\">config \n timedatectl </span><span style=\"color: #0000ff;\">set</span>-timezone Asia/Shanghai</pre>\n</div>\n<h2>2.开始安装</h2>\n<div class=\"cnblogs_code\">\n<pre>yum -y install mysql-server mysql mysql-devel  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">快速安装mysql</span>\nmysqld --install --user=<span style=\"color: #000000;\">root  \nmysqld </span>--initialize --user=<span style=\"color: #000000;\">mysql\nmysqld </span>--initialize --lower-<span style=\"color: #0000ff;\">case</span>-table-names=<span style=\"color: #800080;\">1</span>\n\n<p><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">查看mysql日志，密码在日志中  mysql的安装位置在/var/lib/mysql/</span><br>cat /<span style=\"color: #0000ff;\">var</span>/log/mysql/<span style=\"color: #000000;\">mysqld.log<br></span><span style=\"color: #808080;\">///</span><span style=\"color: #008000;\">发现错误 Data Dictionary initialization failed    </span></pre></p>\n</div>\n<h2>3.Data Dictionary initialization failed解决办法</h2>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">  rm </span>-rf /<span style=\"color: #0000ff;\">var</span>/lib/<span style=\"color: #000000;\">mysql\n\n<p>  mysqld </span>–initialize –<span style=\"color: #000000;\">console</p>\n<p>  chown </span>-R mysql:mysql /<span style=\"color: #0000ff;\">var</span>/lib/mysql/<span style=\"color: #000000;\"></p>\n<p>  systemctl start mysqld</p>\n<p>  systemctl status mysqld</p>\n<p>  cat </span>/<span style=\"color: #0000ff;\">var</span>/log/mysql/<span style=\"color: #000000;\">mysqld.log </p>\n<p>  </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">A temporary password is generated for root@localhost: 冒号后面的就是初始密码</span></pre></p>\n</div>\n<h2>4.修改密码并开启远程访问</h2>\n<div class=\"cnblogs_code\">\n<pre>mysql -u root -<span style=\"color: #000000;\">p  <br />//需要输入初始密码，进入mysql控制台  \nALTER USER </span><span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">root</span><span style=\"color: #800000;\">'</span>@<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">localhost</span><span style=\"color: #800000;\">'</span> IDENTIFIED WITH mysql_native_password BY <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">test@123</span><span style=\"color: #800000;\">'</span><span style=\"color: #000000;\">;  //修改密码为test@123\nuse mysql\n</span><span style=\"color: #0000ff;\">select</span> Host,User <span style=\"color: #0000ff;\">from</span><span style=\"color: #000000;\"> user;\nupdate user </span><span style=\"color: #0000ff;\">set</span> host = <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">%</span><span style=\"color: #800000;\">'</span> <span style=\"color: #0000ff;\">where</span> user =<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">root</span><span style=\"color: #800000;\">'</span><span style=\"color: #000000;\">;    //将host从localhost修改为全部\nflush privileges;\nexit</span></pre>\n</div>\n<h2>5.其他操作</h2>\n<div class=\"cnblogs_code\">\n<pre>rpm -qa |<span style=\"color: #000000;\"> grep mysql\n\n<p>yum </span>-y remove mysql….  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">如果mysql已安装，执行删除</span><br><span style=\"color: #000000;\"><br>systemctl  enable</span>/start/stop/status servicename   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> enable </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">设置开机启动 ； start  </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">启动 ； stop  </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">停止 ；status状态</span></pre></p>\n</div>\n<h2>6.连接mysql</h2>\n<p>&nbsp;<img src=\"/cnblogs/13596927/789895-20200901161634167-1622109568.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<h1>在虚拟机上的输入输出记录</h1>\n<div class=\"cnblogs_code\">\n<pre>Xshell <span style=\"color: #800080;\">6</span> (Build <span style=\"color: #800080;\">0189</span><span style=\"color: #000000;\">)\nCopyright (c) </span><span style=\"color: #800080;\">2002</span><span style=\"color: #000000;\"> NetSarang Computer, Inc. All rights reserved.\n\n<p>Type `help</span><span style=\"color: #800000;\">‘</span><span style=\"color: #800000;\"> to learn how to use Xshell prompt.</span><br>[D:~<span style=\"color: #000000;\">]$ </p>\n<p>Connecting to </span><span style=\"color: #800080;\">192.168</span>.<span style=\"color: #800080;\">5.133</span>:<span style=\"color: #800080;\">22</span><span style=\"color: #000000;\">…<br>Connection established.<br>To escape to local shell, press </span><span style=\"color: #800000;\">‘</span><span style=\"color: #800000;\">Ctrl+Alt+]</span><span style=\"color: #800000;\">‘</span><span style=\"color: #000000;\">.</p>\n<p>WARNING</span>!<span style=\"color: #000000;\"> The remote SSH server rejected X11 forwarding request.<br>Activate the web console with: systemctl enable </span>–<span style=\"color: #000000;\">now cockpit.socket</p>\n<p>Last login: Tue Sep  </span><span style=\"color: #800080;\">1</span> <span style=\"color: #800080;\">15</span>:<span style=\"color: #800080;\">41</span>:<span style=\"color: #800080;\">10</span> <span style=\"color: #800080;\">2020</span><span style=\"color: #000000;\"><br>[root@localhost </span><del><span style=\"color: #000000;\">]# systemctl stop firewalld<br>[root@localhost </span></del><span style=\"color: #000000;\">]# systemctl disable firewalld<br>Removed </span>/etc/systemd/system/multi-user.target.wants/<span style=\"color: #000000;\">firewalld.service.<br>Removed </span>/etc/systemd/system/dbus-<span style=\"color: #000000;\">org.fedoraproject.FirewallD1.service.<br>[root@localhost </span><del>]# setenforce <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\"><br>[root@localhost </span></del>]# sed -i <span style=\"color: #800000;\">‘</span><span style=\"color: #800000;\">s/^SELINUX=.*/SELINUX=disabled/</span><span style=\"color: #800000;\">‘</span> /etc/selinux/<span style=\"color: #000000;\">config<br>[root@localhost </span><del>]# timedatectl <span style=\"color: #0000ff;\">set</span>-timezone Asia/<span style=\"color: #000000;\">Shanghai<br>[root@localhost </span></del>]# yum -y install mysql-server mysql mysql-<span style=\"color: #000000;\">devel<br>Last metadata expiration check: </span><span style=\"color: #800080;\">0</span>:<span style=\"color: #800080;\">11</span>:<span style=\"color: #800080;\">14</span> ago on Tue <span style=\"color: #800080;\">01</span> Sep <span style=\"color: #800080;\">2020</span> <span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">51</span>:<span style=\"color: #800080;\">03</span><span style=\"color: #000000;\"> PM CST.<br>Dependencies resolved.<br></span>===================================================================================<span style=\"color: #000000;\"><br> Package               Arch   Version                              Repo       Size<br></span>===================================================================================<span style=\"color: #000000;\"><br>Installing:<br> mysql                 x86_64 </span><span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349 AppStream  <span style=\"color: #800080;\">11</span><span style=\"color: #000000;\"> M<br> mysql</span>-devel           x86_64 <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349 AppStream <span style=\"color: #800080;\">147</span><span style=\"color: #000000;\"> k<br> mysql</span>-server          x86_64 <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349 AppStream  <span style=\"color: #800080;\">22</span><span style=\"color: #000000;\"> M<br>Installing dependencies:<br> checkpolicy           x86_64 </span><span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span>.el8                            BaseOS    <span style=\"color: #800080;\">348</span><span style=\"color: #000000;\"> k<br> keyutils</span>-libs-devel   x86_64 <span style=\"color: #800080;\">1.5</span>.<span style=\"color: #800080;\">10</span>-<span style=\"color: #800080;\">6</span>.el8                         BaseOS     <span style=\"color: #800080;\">48</span><span style=\"color: #000000;\"> k<br> krb5</span>-devel            x86_64 <span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span>.el8                          BaseOS    <span style=\"color: #800080;\">549</span><span style=\"color: #000000;\"> k<br> libcom_err</span>-devel      x86_64 <span style=\"color: #800080;\">1.45</span>.<span style=\"color: #800080;\">4</span>-<span style=\"color: #800080;\">3</span>.el8                         BaseOS     <span style=\"color: #800080;\">38</span><span style=\"color: #000000;\"> k<br> libevent              x86_64 </span><span style=\"color: #800080;\">2.1</span>.<span style=\"color: #800080;\">8</span>-<span style=\"color: #800080;\">5</span>.el8                          BaseOS    <span style=\"color: #800080;\">253</span><span style=\"color: #000000;\"> k<br> libkadm5              x86_64 </span><span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span>.el8                          BaseOS    <span style=\"color: #800080;\">185</span><span style=\"color: #000000;\"> k<br> libselinux</span>-devel      x86_64 <span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">3</span>.el8                            BaseOS    <span style=\"color: #800080;\">199</span><span style=\"color: #000000;\"> k<br> libsepol</span>-devel        x86_64 <span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span>.el8                            BaseOS     <span style=\"color: #800080;\">86</span><span style=\"color: #000000;\"> k<br> libverto</span>-devel        x86_64 <span style=\"color: #800080;\">0.3</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">5</span>.el8                          BaseOS     <span style=\"color: #800080;\">18</span><span style=\"color: #000000;\"> k<br> mariadb</span>-connector-c-<span style=\"color: #000000;\">config<br>                       noarch </span><span style=\"color: #800080;\">3.0</span>.<span style=\"color: #800080;\">7</span>-<span style=\"color: #800080;\">1</span>.el8                          AppStream  <span style=\"color: #800080;\">13</span><span style=\"color: #000000;\"> k<br> mecab                 x86_64 </span><span style=\"color: #800080;\">0.996</span>-<span style=\"color: #800080;\">1</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">41</span>+ca30bab6.<span style=\"color: #800080;\">9</span> AppStream <span style=\"color: #800080;\">397</span><span style=\"color: #000000;\"> k<br> mysql</span>-common          x86_64 <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349 AppStream <span style=\"color: #800080;\">143</span><span style=\"color: #000000;\"> k<br> mysql</span>-errmsg          x86_64 <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349 AppStream <span style=\"color: #800080;\">557</span><span style=\"color: #000000;\"> k<br> mysql</span>-libs            x86_64 <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349 AppStream <span style=\"color: #800080;\">1.2</span><span style=\"color: #000000;\"> M<br> openssl</span>-devel         x86_64 <span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.1</span>.1c-<span style=\"color: #800080;\">15</span>.el8                      BaseOS    <span style=\"color: #800080;\">2.3</span><span style=\"color: #000000;\"> M<br> pcre2</span>-devel           x86_64 <span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8                          BaseOS    <span style=\"color: #800080;\">605</span><span style=\"color: #000000;\"> k<br> pcre2</span>-utf16           x86_64 <span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8                          BaseOS    <span style=\"color: #800080;\">228</span><span style=\"color: #000000;\"> k<br> pcre2</span>-utf32           x86_64 <span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8                          BaseOS    <span style=\"color: #800080;\">220</span><span style=\"color: #000000;\"> k<br> perl</span>-Carp             noarch <span style=\"color: #800080;\">1.42</span>-<span style=\"color: #800080;\">396</span>.el8                         BaseOS     <span style=\"color: #800080;\">30</span><span style=\"color: #000000;\"> k<br> perl</span>-Data-Dumper      x86_64 <span style=\"color: #800080;\">2.167</span>-<span style=\"color: #800080;\">399</span>.el8                        BaseOS     <span style=\"color: #800080;\">58</span><span style=\"color: #000000;\"> k<br> perl</span>-Digest           noarch <span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span>.el8                         AppStream  <span style=\"color: #800080;\">27</span><span style=\"color: #000000;\"> k<br> perl</span>-Digest-MD5       x86_64 <span style=\"color: #800080;\">2.55</span>-<span style=\"color: #800080;\">396</span>.el8                         AppStream  <span style=\"color: #800080;\">37</span><span style=\"color: #000000;\"> k<br> perl</span>-Encode           x86_64 <span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">2.97</span>-<span style=\"color: #800080;\">3</span>.el8                         BaseOS    <span style=\"color: #800080;\">1.5</span><span style=\"color: #000000;\"> M<br> perl</span>-Errno            x86_64 <span style=\"color: #800080;\">1.28</span>-<span style=\"color: #800080;\">416</span>.el8                         BaseOS     <span style=\"color: #800080;\">76</span><span style=\"color: #000000;\"> k<br> perl</span>-Exporter         noarch <span style=\"color: #800080;\">5.72</span>-<span style=\"color: #800080;\">396</span>.el8                         BaseOS     <span style=\"color: #800080;\">34</span><span style=\"color: #000000;\"> k<br> perl</span>-File-Path        noarch <span style=\"color: #800080;\">2.15</span>-<span style=\"color: #800080;\">2</span>.el8                           BaseOS     <span style=\"color: #800080;\">38</span><span style=\"color: #000000;\"> k<br> perl</span>-File-Temp        noarch <span style=\"color: #800080;\">0.230</span>.<span style=\"color: #800080;\">600</span>-<span style=\"color: #800080;\">1</span>.el8                      BaseOS     <span style=\"color: #800080;\">63</span><span style=\"color: #000000;\"> k<br> perl</span>-Getopt-Long      noarch <span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">2.50</span>-<span style=\"color: #800080;\">4</span>.el8                         BaseOS     <span style=\"color: #800080;\">63</span><span style=\"color: #000000;\"> k<br> perl</span>-HTTP-Tiny        noarch <span style=\"color: #800080;\">0.074</span>-<span style=\"color: #800080;\">1</span>.el8                          BaseOS     <span style=\"color: #800080;\">58</span><span style=\"color: #000000;\"> k<br> perl</span>-IO               x86_64 <span style=\"color: #800080;\">1.38</span>-<span style=\"color: #800080;\">416</span>.el8                         BaseOS    <span style=\"color: #800080;\">141</span><span style=\"color: #000000;\"> k<br> perl</span>-MIME-Base64      x86_64 <span style=\"color: #800080;\">3.15</span>-<span style=\"color: #800080;\">396</span>.el8                         BaseOS     <span style=\"color: #800080;\">31</span><span style=\"color: #000000;\"> k<br> perl</span>-Net-SSLeay       x86_64 <span style=\"color: #800080;\">1.88</span>-<span style=\"color: #800080;\">1</span>.el8                           AppStream <span style=\"color: #800080;\">379</span><span style=\"color: #000000;\"> k<br> perl</span>-PathTools        x86_64 <span style=\"color: #800080;\">3.74</span>-<span style=\"color: #800080;\">1</span>.el8                           BaseOS     <span style=\"color: #800080;\">90</span><span style=\"color: #000000;\"> k<br> perl</span>-Pod-Escapes      noarch <span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.07</span>-<span style=\"color: #800080;\">395</span>.el8                       BaseOS     <span style=\"color: #800080;\">20</span><span style=\"color: #000000;\"> k<br> perl</span>-Pod-Perldoc      noarch <span style=\"color: #800080;\">3.28</span>-<span style=\"color: #800080;\">396</span>.el8                         BaseOS     <span style=\"color: #800080;\">86</span><span style=\"color: #000000;\"> k<br> perl</span>-Pod-Simple       noarch <span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">3.35</span>-<span style=\"color: #800080;\">395</span>.el8                       BaseOS    <span style=\"color: #800080;\">213</span><span style=\"color: #000000;\"> k<br> perl</span>-Pod-Usage        noarch <span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">1.69</span>-<span style=\"color: #800080;\">395</span>.el8                       BaseOS     <span style=\"color: #800080;\">34</span><span style=\"color: #000000;\"> k<br> perl</span>-Scalar-List-<span style=\"color: #000000;\">Utils<br>                       x86_64 </span><span style=\"color: #800080;\">3</span>:<span style=\"color: #800080;\">1.49</span>-<span style=\"color: #800080;\">2</span>.el8                         BaseOS     <span style=\"color: #800080;\">68</span><span style=\"color: #000000;\"> k<br> perl</span>-Socket           x86_64 <span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">2.027</span>-<span style=\"color: #800080;\">3</span>.el8                        BaseOS     <span style=\"color: #800080;\">59</span><span style=\"color: #000000;\"> k<br> perl</span>-Storable         x86_64 <span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span>.el8                         BaseOS     <span style=\"color: #800080;\">98</span><span style=\"color: #000000;\"> k<br> perl</span>-Term-ANSIColor   noarch <span style=\"color: #800080;\">4.06</span>-<span style=\"color: #800080;\">396</span>.el8                         BaseOS     <span style=\"color: #800080;\">46</span><span style=\"color: #000000;\"> k<br> perl</span>-Term-Cap         noarch <span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span>.el8                         BaseOS     <span style=\"color: #800080;\">23</span><span style=\"color: #000000;\"> k<br> perl</span>-Text-ParseWords  noarch <span style=\"color: #800080;\">3.30</span>-<span style=\"color: #800080;\">395</span>.el8                         BaseOS     <span style=\"color: #800080;\">18</span><span style=\"color: #000000;\"> k<br> perl</span>-Text-Tabs+Wrap   noarch <span style=\"color: #800080;\">2013.0523</span>-<span style=\"color: #800080;\">395</span>.el8                    BaseOS     <span style=\"color: #800080;\">24</span><span style=\"color: #000000;\"> k<br> perl</span>-Time-Local       noarch <span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.280</span>-<span style=\"color: #800080;\">1</span>.el8                        BaseOS     <span style=\"color: #800080;\">34</span><span style=\"color: #000000;\"> k<br> perl</span>-URI              noarch <span style=\"color: #800080;\">1.73</span>-<span style=\"color: #800080;\">3</span>.el8                           AppStream <span style=\"color: #800080;\">116</span><span style=\"color: #000000;\"> k<br> perl</span>-Unicode-<span style=\"color: #000000;\">Normalize<br>                       x86_64 </span><span style=\"color: #800080;\">1.25</span>-<span style=\"color: #800080;\">396</span>.el8                         BaseOS     <span style=\"color: #800080;\">82</span><span style=\"color: #000000;\"> k<br> perl</span>-constant         noarch <span style=\"color: #800080;\">1.33</span>-<span style=\"color: #800080;\">396</span>.el8                         BaseOS     <span style=\"color: #800080;\">25</span><span style=\"color: #000000;\"> k<br> perl</span>-interpreter      x86_64 <span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8                     BaseOS    <span style=\"color: #800080;\">6.3</span><span style=\"color: #000000;\"> M<br> perl</span>-libnet           noarch <span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span>.el8                           AppStream <span style=\"color: #800080;\">121</span><span style=\"color: #000000;\"> k<br> perl</span>-libs             x86_64 <span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8                     BaseOS    <span style=\"color: #800080;\">1.6</span><span style=\"color: #000000;\"> M<br> perl</span>-macros           x86_64 <span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8                     BaseOS     <span style=\"color: #800080;\">72</span><span style=\"color: #000000;\"> k<br> perl</span>-parent           noarch <span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">0.237</span>-<span style=\"color: #800080;\">1</span>.el8                        BaseOS     <span style=\"color: #800080;\">20</span><span style=\"color: #000000;\"> k<br> perl</span>-podlators        noarch <span style=\"color: #800080;\">4.11</span>-<span style=\"color: #800080;\">1</span>.el8                           BaseOS    <span style=\"color: #800080;\">118</span><span style=\"color: #000000;\"> k<br> perl</span>-threads          x86_64 <span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">2.21</span>-<span style=\"color: #800080;\">2</span>.el8                         BaseOS     <span style=\"color: #800080;\">61</span><span style=\"color: #000000;\"> k<br> perl</span>-threads-shared   x86_64 <span style=\"color: #800080;\">1.58</span>-<span style=\"color: #800080;\">2</span>.el8                           BaseOS     <span style=\"color: #800080;\">48</span><span style=\"color: #000000;\"> k<br> policycoreutils</span>-python-<span style=\"color: #000000;\">utils<br>                       noarch </span><span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span>.el8                            BaseOS    <span style=\"color: #800080;\">251</span><span style=\"color: #000000;\"> k<br> protobuf</span>-lite         x86_64 <span style=\"color: #800080;\">3.5</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">7</span>.el8                          AppStream <span style=\"color: #800080;\">150</span><span style=\"color: #000000;\"> k<br> python3</span>-audit         x86_64 <span style=\"color: #800080;\">3.0</span>-<span style=\"color: #800080;\">0.17</span>.20191104git1c2f876.el8      BaseOS     <span style=\"color: #800080;\">86</span><span style=\"color: #000000;\"> k<br> python3</span>-libsemanage   x86_64 <span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">2</span>.el8                            BaseOS    <span style=\"color: #800080;\">127</span><span style=\"color: #000000;\"> k<br> python3</span>-<span style=\"color: #000000;\">policycoreutils<br>                       noarch </span><span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span>.el8                            BaseOS    <span style=\"color: #800080;\">2.2</span><span style=\"color: #000000;\"> M<br> python3</span>-setools       x86_64 <span style=\"color: #800080;\">4.2</span>.<span style=\"color: #800080;\">2</span>-<span style=\"color: #800080;\">2</span>.el8                          BaseOS    <span style=\"color: #800080;\">601</span><span style=\"color: #000000;\"> k<br> zlib</span>-devel            x86_64 <span style=\"color: #800080;\">1.2</span>.<span style=\"color: #800080;\">11</span>-<span style=\"color: #800080;\">13</span>.el8                        BaseOS     <span style=\"color: #800080;\">57</span><span style=\"color: #000000;\"> k<br>Installing weak dependencies:<br> perl</span>-IO-Socket-IP     noarch <span style=\"color: #800080;\">0.39</span>-<span style=\"color: #800080;\">5</span>.el8                           AppStream  <span style=\"color: #800080;\">47</span><span style=\"color: #000000;\"> k<br> perl</span>-IO-Socket-SSL    noarch <span style=\"color: #800080;\">2.066</span>-<span style=\"color: #800080;\">4</span>.el8                          AppStream <span style=\"color: #800080;\">297</span><span style=\"color: #000000;\"> k<br> perl</span>-Mozilla-CA       noarch <span style=\"color: #800080;\">20160104</span>-<span style=\"color: #800080;\">7</span>.el8                       AppStream  <span style=\"color: #800080;\">15</span><span style=\"color: #000000;\"> k<br>Enabling module streams:<br> mysql                        </span><span style=\"color: #800080;\">8.0</span><span style=\"color: #000000;\">                                                 </p>\n<p>Transaction Summary<br></span>===================================================================================<span style=\"color: #000000;\"><br>Install  </span><span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> Packages</p>\n<p>Total download size: </span><span style=\"color: #800080;\">55</span><span style=\"color: #000000;\"> M<br>Installed size: </span><span style=\"color: #800080;\">279</span><span style=\"color: #000000;\"> M<br>Downloading Packages:<br>(</span><span style=\"color: #800080;\">1</span>/<span style=\"color: #800080;\">69</span>): mariadb-connector-c-config-<span style=\"color: #800080;\">3.0</span>.<span style=\"color: #800080;\">7</span>-<span style=\"color: #800080;\">1</span>.el8.noa  <span style=\"color: #800080;\">71</span> kB/s |  <span style=\"color: #800080;\">13</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>[MIRROR] mysql</span>-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_64.rpm: Curl error (<span style=\"color: #800080;\">56</span>): Failure when receiving data <span style=\"color: #0000ff;\">from</span> the peer <span style=\"color: #0000ff;\">for</span> http:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">mirror.lzu.edu.cn/centos/8.2.2004/AppStream/x86_64/os/Packages/mysql-8.0.17-3.module_el8.0.0+181+899d6349.x86_64.rpm [Recv failure: Connection reset by peer]</span><br>[MIRROR] mysql-common-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_64.rpm: Curl error (<span style=\"color: #800080;\">56</span>): Failure when receiving data <span style=\"color: #0000ff;\">from</span> the peer <span style=\"color: #0000ff;\">for</span> http:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">mirror.lzu.edu.cn/centos/8.2.2004/AppStream/x86_64/os/Packages/mysql-common-8.0.17-3.module_el8.0.0+181+899d6349.x86_64.rpm [Recv failure: Connection reset by peer]</span><br>(<span style=\"color: #800080;\">2</span>/<span style=\"color: #800080;\">69</span>): mysql-common-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #800080;\">8</span> <span style=\"color: #800080;\">602</span> kB/s | <span style=\"color: #800080;\">143</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">3</span>/<span style=\"color: #800080;\">69</span>): mysql-devel-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #800080;\">89</span> <span style=\"color: #800080;\">2.3</span> MB/s | <span style=\"color: #800080;\">147</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">4</span>/<span style=\"color: #800080;\">69</span>): mecab-<span style=\"color: #800080;\">0.996</span>-<span style=\"color: #800080;\">1</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">41</span>+ca30bab6.<span style=\"color: #800080;\">9</span> <span style=\"color: #800080;\">562</span> kB/s | <span style=\"color: #800080;\">397</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">5</span>/<span style=\"color: #800080;\">69</span>): mysql-errmsg-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #800080;\">8</span> <span style=\"color: #800080;\">2.5</span> MB/s | <span style=\"color: #800080;\">557</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>[MIRROR] mysql</span>-libs-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_64.rpm: Curl error (<span style=\"color: #800080;\">56</span>): Failure when receiving data <span style=\"color: #0000ff;\">from</span> the peer <span style=\"color: #0000ff;\">for</span> http:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">mirror.lzu.edu.cn/centos/8.2.2004/AppStream/x86_64/os/Packages/mysql-libs-8.0.17-3.module_el8.0.0+181+899d6349.x86_64.rpm [Recv failure: Connection reset by peer]</span><br>(<span style=\"color: #800080;\">6</span>/<span style=\"color: #800080;\">69</span>): mysql-libs-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #800080;\">899</span> <span style=\"color: #800080;\">2.2</span> MB/s | <span style=\"color: #800080;\">1.2</span> MB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">7</span>/<span style=\"color: #800080;\">69</span>): perl-Digest-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span>.el8.noarch.rpm        <span style=\"color: #800080;\">379</span> kB/s |  <span style=\"color: #800080;\">27</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">8</span>/<span style=\"color: #800080;\">69</span>): perl-Digest-MD5-<span style=\"color: #800080;\">2.55</span>-<span style=\"color: #800080;\">396</span>.el8.x86_64.rpm    <span style=\"color: #800080;\">1.4</span> MB/s |  <span style=\"color: #800080;\">37</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">9</span>/<span style=\"color: #800080;\">69</span>): perl-IO-Socket-IP-<span style=\"color: #800080;\">0.39</span>-<span style=\"color: #800080;\">5</span>.el8.noarch.rpm    <span style=\"color: #800080;\">1.5</span> MB/s |  <span style=\"color: #800080;\">47</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">10</span>/<span style=\"color: #800080;\">69</span>): perl-IO-Socket-SSL-<span style=\"color: #800080;\">2.066</span>-<span style=\"color: #800080;\">4</span>.el8.noarch.rpm <span style=\"color: #800080;\">264</span> kB/s | <span style=\"color: #800080;\">297</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">01</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">11</span>/<span style=\"color: #800080;\">69</span>): perl-Mozilla-CA-<span style=\"color: #800080;\">20160104</span>-<span style=\"color: #800080;\">7</span>.el8.noarch.rpm <span style=\"color: #800080;\">413</span> kB/s |  <span style=\"color: #800080;\">15</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">12</span>/<span style=\"color: #800080;\">69</span>): perl-Net-SSLeay-<span style=\"color: #800080;\">1.88</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64.rpm     <span style=\"color: #800080;\">3.6</span> MB/s | <span style=\"color: #800080;\">379</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">13</span>/<span style=\"color: #800080;\">69</span>): perl-URI-<span style=\"color: #800080;\">1.73</span>-<span style=\"color: #800080;\">3</span>.el8.noarch.rpm            <span style=\"color: #800080;\">2.8</span> MB/s | <span style=\"color: #800080;\">116</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">14</span>/<span style=\"color: #800080;\">69</span>): perl-libnet-<span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span>.el8.noarch.rpm         <span style=\"color: #800080;\">3.4</span> MB/s | <span style=\"color: #800080;\">121</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">15</span>/<span style=\"color: #800080;\">69</span>): protobuf-lite-<span style=\"color: #800080;\">3.5</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">7</span>.el8.x86_64.rpm      <span style=\"color: #800080;\">4.0</span> MB/s | <span style=\"color: #800080;\">150</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">16</span>/<span style=\"color: #800080;\">69</span>): checkpolicy-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64.rpm          <span style=\"color: #800080;\">831</span> kB/s | <span style=\"color: #800080;\">348</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">17</span>/<span style=\"color: #800080;\">69</span>): keyutils-libs-devel-<span style=\"color: #800080;\">1.5</span>.<span style=\"color: #800080;\">10</span>-<span style=\"color: #800080;\">6</span>.el8.x86_64.r <span style=\"color: #800080;\">470</span> kB/s |  <span style=\"color: #800080;\">48</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">18</span>/<span style=\"color: #800080;\">69</span>): krb5-devel-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span>.el8.x86_64.rpm         <span style=\"color: #800080;\">1.4</span> MB/s | <span style=\"color: #800080;\">549</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">19</span>/<span style=\"color: #800080;\">69</span>): libcom_err-devel-<span style=\"color: #800080;\">1.45</span>.<span style=\"color: #800080;\">4</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64.rpm  <span style=\"color: #800080;\">304</span> kB/s |  <span style=\"color: #800080;\">38</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">20</span>/<span style=\"color: #800080;\">69</span>): libevent-<span style=\"color: #800080;\">2.1</span>.<span style=\"color: #800080;\">8</span>-<span style=\"color: #800080;\">5</span>.el8.x86_64.rpm           <span style=\"color: #800080;\">1.6</span> MB/s | <span style=\"color: #800080;\">253</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">21</span>/<span style=\"color: #800080;\">69</span>): libkadm5-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span>.el8.x86_64.rpm           <span style=\"color: #800080;\">1.6</span> MB/s | <span style=\"color: #800080;\">185</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">22</span>/<span style=\"color: #800080;\">69</span>): libselinux-devel-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64.rpm     <span style=\"color: #800080;\">1.7</span> MB/s | <span style=\"color: #800080;\">199</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">23</span>/<span style=\"color: #800080;\">69</span>): libsepol-devel-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64.rpm       <span style=\"color: #800080;\">994</span> kB/s |  <span style=\"color: #800080;\">86</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">24</span>/<span style=\"color: #800080;\">69</span>): libverto-devel-<span style=\"color: #800080;\">0.3</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">5</span>.el8.x86_64.rpm     <span style=\"color: #800080;\">367</span> kB/s |  <span style=\"color: #800080;\">18</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">25</span>/<span style=\"color: #800080;\">69</span>): openssl-devel-<span style=\"color: #800080;\">1.1</span>.1c-<span style=\"color: #800080;\">15</span>.el8.x86_64.rpm    <span style=\"color: #800080;\">2.2</span> MB/s | <span style=\"color: #800080;\">2.3</span> MB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">01</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">26</span>/<span style=\"color: #800080;\">69</span>): mysql-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d634 <span style=\"color: #800080;\">1.9</span> MB/s |  <span style=\"color: #800080;\">11</span> MB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">05</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">27</span>/<span style=\"color: #800080;\">69</span>): mysql-server-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+ <span style=\"color: #800080;\">4.3</span> MB/s |  <span style=\"color: #800080;\">22</span> MB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">04</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">28</span>/<span style=\"color: #800080;\">69</span>): pcre2-devel-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64.rpm        <span style=\"color: #800080;\">1.8</span> MB/s | <span style=\"color: #800080;\">605</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">29</span>/<span style=\"color: #800080;\">69</span>): perl-Carp-<span style=\"color: #800080;\">1.42</span>-<span style=\"color: #800080;\">396</span>.el8.noarch.rpm         <span style=\"color: #800080;\">442</span> kB/s |  <span style=\"color: #800080;\">30</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">30</span>/<span style=\"color: #800080;\">69</span>): pcre2-utf16-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64.rpm        <span style=\"color: #800080;\">678</span> kB/s | <span style=\"color: #800080;\">228</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">31</span>/<span style=\"color: #800080;\">69</span>): perl-Data-Dumper-<span style=\"color: #800080;\">2.167</span>-<span style=\"color: #800080;\">399</span>.el8.x86_64.rpm <span style=\"color: #800080;\">755</span> kB/s |  <span style=\"color: #800080;\">58</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">32</span>/<span style=\"color: #800080;\">69</span>): perl-Errno-<span style=\"color: #800080;\">1.28</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64.rpm        <span style=\"color: #800080;\">557</span> kB/s |  <span style=\"color: #800080;\">76</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">33</span>/<span style=\"color: #800080;\">69</span>): pcre2-utf32-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64.rpm        <span style=\"color: #800080;\">631</span> kB/s | <span style=\"color: #800080;\">220</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">34</span>/<span style=\"color: #800080;\">69</span>): perl-Exporter-<span style=\"color: #800080;\">5.72</span>-<span style=\"color: #800080;\">396</span>.el8.noarch.rpm     <span style=\"color: #800080;\">476</span> kB/s |  <span style=\"color: #800080;\">34</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">35</span>/<span style=\"color: #800080;\">69</span>): perl-File-Path-<span style=\"color: #800080;\">2.15</span>-<span style=\"color: #800080;\">2</span>.el8.noarch.rpm      <span style=\"color: #800080;\">503</span> kB/s |  <span style=\"color: #800080;\">38</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">36</span>/<span style=\"color: #800080;\">69</span>): perl-File-Temp-<span style=\"color: #800080;\">0.230</span>.<span style=\"color: #800080;\">600</span>-<span style=\"color: #800080;\">1</span>.el8.noarch.rpm <span style=\"color: #800080;\">580</span> kB/s |  <span style=\"color: #800080;\">63</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">37</span>/<span style=\"color: #800080;\">69</span>): perl-Getopt-Long-<span style=\"color: #800080;\">2.50</span>-<span style=\"color: #800080;\">4</span>.el8.noarch.rpm    <span style=\"color: #800080;\">593</span> kB/s |  <span style=\"color: #800080;\">63</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">38</span>/<span style=\"color: #800080;\">69</span>): perl-HTTP-Tiny-<span style=\"color: #800080;\">0.074</span>-<span style=\"color: #800080;\">1</span>.el8.noarch.rpm     <span style=\"color: #800080;\">544</span> kB/s |  <span style=\"color: #800080;\">58</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">39</span>/<span style=\"color: #800080;\">69</span>): perl-MIME-Base64-<span style=\"color: #800080;\">3.15</span>-<span style=\"color: #800080;\">396</span>.el8.x86_64.rpm  <span style=\"color: #800080;\">377</span> kB/s |  <span style=\"color: #800080;\">31</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">40</span>/<span style=\"color: #800080;\">69</span>): perl-IO-<span style=\"color: #800080;\">1.38</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64.rpm           <span style=\"color: #800080;\">738</span> kB/s | <span style=\"color: #800080;\">141</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">41</span>/<span style=\"color: #800080;\">69</span>): perl-Pod-Escapes-<span style=\"color: #800080;\">1.07</span>-<span style=\"color: #800080;\">395</span>.el8.noarch.rpm  <span style=\"color: #800080;\">300</span> kB/s |  <span style=\"color: #800080;\">20</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">42</span>/<span style=\"color: #800080;\">69</span>): perl-PathTools-<span style=\"color: #800080;\">3.74</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64.rpm      <span style=\"color: #800080;\">704</span> kB/s |  <span style=\"color: #800080;\">90</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">43</span>/<span style=\"color: #800080;\">69</span>): perl-Pod-Perldoc-<span style=\"color: #800080;\">3.28</span>-<span style=\"color: #800080;\">396</span>.el8.noarch.rpm  <span style=\"color: #800080;\">628</span> kB/s |  <span style=\"color: #800080;\">86</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">44</span>/<span style=\"color: #800080;\">69</span>): perl-Pod-Usage-<span style=\"color: #800080;\">1.69</span>-<span style=\"color: #800080;\">395</span>.el8.noarch.rpm    <span style=\"color: #800080;\">408</span> kB/s |  <span style=\"color: #800080;\">34</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">45</span>/<span style=\"color: #800080;\">69</span>): perl-Pod-Simple-<span style=\"color: #800080;\">3.35</span>-<span style=\"color: #800080;\">395</span>.el8.noarch.rpm   <span style=\"color: #800080;\">763</span> kB/s | <span style=\"color: #800080;\">213</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">46</span>/<span style=\"color: #800080;\">69</span>): perl-Scalar-List-Utils-<span style=\"color: #800080;\">1.49</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64. <span style=\"color: #800080;\">597</span> kB/s |  <span style=\"color: #800080;\">68</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">47</span>/<span style=\"color: #800080;\">69</span>): perl-Socket-<span style=\"color: #800080;\">2.027</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64.rpm        <span style=\"color: #800080;\">572</span> kB/s |  <span style=\"color: #800080;\">59</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">48</span>/<span style=\"color: #800080;\">69</span>): perl-Storable-<span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64.rpm       <span style=\"color: #800080;\">682</span> kB/s |  <span style=\"color: #800080;\">98</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">49</span>/<span style=\"color: #800080;\">69</span>): perl-Term-ANSIColor-<span style=\"color: #800080;\">4.06</span>-<span style=\"color: #800080;\">396</span>.el8.noarch.r <span style=\"color: #800080;\">502</span> kB/s |  <span style=\"color: #800080;\">46</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">50</span>/<span style=\"color: #800080;\">69</span>): perl-Term-Cap-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span>.el8.noarch.rpm     <span style=\"color: #800080;\">349</span> kB/s |  <span style=\"color: #800080;\">23</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">51</span>/<span style=\"color: #800080;\">69</span>): perl-Text-ParseWords-<span style=\"color: #800080;\">3.30</span>-<span style=\"color: #800080;\">395</span>.el8.noarch. <span style=\"color: #800080;\">327</span> kB/s |  <span style=\"color: #800080;\">18</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">52</span>/<span style=\"color: #800080;\">69</span>): perl-Text-Tabs+Wrap-<span style=\"color: #800080;\">2013.0523</span>-<span style=\"color: #800080;\">395</span>.el8.noa <span style=\"color: #800080;\">334</span> kB/s |  <span style=\"color: #800080;\">24</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">53</span>/<span style=\"color: #800080;\">69</span>): perl-Time-Local-<span style=\"color: #800080;\">1.280</span>-<span style=\"color: #800080;\">1</span>.el8.noarch.rpm    <span style=\"color: #800080;\">424</span> kB/s |  <span style=\"color: #800080;\">34</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">54</span>/<span style=\"color: #800080;\">69</span>): perl-Encode-<span style=\"color: #800080;\">2.97</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64.rpm         <span style=\"color: #800080;\">1.1</span> MB/s | <span style=\"color: #800080;\">1.5</span> MB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">01</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">55</span>/<span style=\"color: #800080;\">69</span>): perl-constant-<span style=\"color: #800080;\">1.33</span>-<span style=\"color: #800080;\">396</span>.el8.noarch.rpm     <span style=\"color: #800080;\">402</span> kB/s |  <span style=\"color: #800080;\">25</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">56</span>/<span style=\"color: #800080;\">69</span>): perl-Unicode-Normalize-<span style=\"color: #800080;\">1.25</span>-<span style=\"color: #800080;\">396</span>.el8.x86_6 <span style=\"color: #800080;\">889</span> kB/s |  <span style=\"color: #800080;\">82</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">57</span>/<span style=\"color: #800080;\">69</span>): perl-macros-<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64.rpm     <span style=\"color: #800080;\">539</span> kB/s |  <span style=\"color: #800080;\">72</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">58</span>/<span style=\"color: #800080;\">69</span>): perl-parent-<span style=\"color: #800080;\">0.237</span>-<span style=\"color: #800080;\">1</span>.el8.noarch.rpm        <span style=\"color: #800080;\">280</span> kB/s |  <span style=\"color: #800080;\">20</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">59</span>/<span style=\"color: #800080;\">69</span>): perl-podlators-<span style=\"color: #800080;\">4.11</span>-<span style=\"color: #800080;\">1</span>.el8.noarch.rpm      <span style=\"color: #800080;\">609</span> kB/s | <span style=\"color: #800080;\">118</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">60</span>/<span style=\"color: #800080;\">69</span>): perl-threads-<span style=\"color: #800080;\">2.21</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64.rpm        <span style=\"color: #800080;\">506</span> kB/s |  <span style=\"color: #800080;\">61</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">61</span>/<span style=\"color: #800080;\">69</span>): perl-threads-shared-<span style=\"color: #800080;\">1.58</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64.rpm <span style=\"color: #800080;\">468</span> kB/s |  <span style=\"color: #800080;\">48</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">62</span>/<span style=\"color: #800080;\">69</span>): policycoreutils-python-utils-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span>.el8.no <span style=\"color: #800080;\">694</span> kB/s | <span style=\"color: #800080;\">251</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">63</span>/<span style=\"color: #800080;\">69</span>): python3-audit-<span style=\"color: #800080;\">3.0</span>-<span style=\"color: #800080;\">0.17</span>.20191104git1c2f876 <span style=\"color: #800080;\">572</span> kB/s |  <span style=\"color: #800080;\">86</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">64</span>/<span style=\"color: #800080;\">69</span>): python3-libsemanage-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64.rpm  <span style=\"color: #800080;\">615</span> kB/s | <span style=\"color: #800080;\">127</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">65</span>/<span style=\"color: #800080;\">69</span>): perl-libs-<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64.rpm       <span style=\"color: #800080;\">839</span> kB/s | <span style=\"color: #800080;\">1.6</span> MB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">01</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">66</span>/<span style=\"color: #800080;\">69</span>): python3-setools-<span style=\"color: #800080;\">4.2</span>.<span style=\"color: #800080;\">2</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64.rpm    <span style=\"color: #800080;\">691</span> kB/s | <span style=\"color: #800080;\">601</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">67</span>/<span style=\"color: #800080;\">69</span>): zlib-devel-<span style=\"color: #800080;\">1.2</span>.<span style=\"color: #800080;\">11</span>-<span style=\"color: #800080;\">13</span>.el8.x86_64.rpm       <span style=\"color: #800080;\">473</span> kB/s |  <span style=\"color: #800080;\">57</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">68</span>/<span style=\"color: #800080;\">69</span>): python3-policycoreutils-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span>.el8.noarch. <span style=\"color: #800080;\">934</span> kB/s | <span style=\"color: #800080;\">2.2</span> MB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">02</span><span style=\"color: #000000;\"><br>(</span><span style=\"color: #800080;\">69</span>/<span style=\"color: #800080;\">69</span>): perl-interpreter-<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64.rp <span style=\"color: #800080;\">1.2</span> MB/s | <span style=\"color: #800080;\">6.3</span> MB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">05</span><br>———————————————————————————–<span style=\"color: #000000;\"><br>Total                                              </span><span style=\"color: #800080;\">4.0</span> MB/s |  <span style=\"color: #800080;\">55</span> MB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">13</span><span style=\"color: #000000;\"><br>warning: </span>/<span style=\"color: #0000ff;\">var</span>/cache/dnf/AppStream-a520ed22b0a8a736/packages/mariadb-connector-c-config-<span style=\"color: #800080;\">3.0</span>.<span style=\"color: #800080;\">7</span>-<span style=\"color: #800080;\">1</span>.el8.noarch.rpm: Header V3 RSA/<span style=\"color: #000000;\">SHA256 Signature, key ID 8483c65d: NOKEY<br>CentOS</span>-<span style=\"color: #800080;\">8</span> - AppStream                               <span style=\"color: #800080;\">961</span> kB/s | <span style=\"color: #800080;\">1.6</span> kB     <span style=\"color: #800080;\">00</span>:<span style=\"color: #800080;\">00</span><span style=\"color: #000000;\"><br>Importing GPG key </span><span style=\"color: #800080;\">0x8483C65D</span><span style=\"color: #000000;\">:<br> Userid     : </span><span style=\"color: #800000;\">“</span><span style=\"color: #800000;\">CentOS (CentOS Official Signing Key) &lt;<a href=\"mailto:&#115;&#x65;&#x63;&#x75;&#114;&#105;&#116;&#x79;&#x40;&#99;&#x65;&#110;&#116;&#111;&#x73;&#x2e;&#111;&#114;&#x67;\">&#115;&#x65;&#x63;&#x75;&#114;&#105;&#116;&#x79;&#x40;&#99;&#x65;&#110;&#116;&#111;&#x73;&#x2e;&#111;&#114;&#x67;</a>&gt;</span><span style=\"color: #800000;\">“</span><span style=\"color: #000000;\"><br> Fingerprint: 99DB 70FA E1D7 CE22 7FB6 </span><span style=\"color: #800080;\">4882</span> 05B5 55B3 <span style=\"color: #800080;\">8483</span><span style=\"color: #000000;\"> C65D<br> From       : </span>/etc/pki/rpm-gpg/RPM-GPG-KEY-<span style=\"color: #000000;\">centosofficial<br>Key imported successfully<br>Running transaction check<br>Transaction check succeeded.<br>Running transaction test<br>Transaction test succeeded.<br>Running transaction<br>  Preparing        :                                                           </span><span style=\"color: #800080;\">1</span>/<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Exporter-<span style=\"color: #800080;\">5.72</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                        <span style=\"color: #800080;\">1</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-libs-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                        <span style=\"color: #800080;\">2</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Carp-<span style=\"color: #800080;\">1.42</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                            <span style=\"color: #800080;\">3</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Scalar-List-Utils-<span style=\"color: #800080;\">3</span>:<span style=\"color: #800080;\">1.49</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64               <span style=\"color: #800080;\">4</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-parent-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">0.237</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                         <span style=\"color: #800080;\">5</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Text-ParseWords-<span style=\"color: #800080;\">3.30</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                 <span style=\"color: #800080;\">6</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : zlib</span>-devel-<span style=\"color: #800080;\">1.2</span>.<span style=\"color: #800080;\">11</span>-<span style=\"color: #800080;\">13</span>.el8.x86_64                          <span style=\"color: #800080;\">7</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : mariadb</span>-connector-c-config-<span style=\"color: #800080;\">3.0</span>.<span style=\"color: #800080;\">7</span>-<span style=\"color: #800080;\">1</span>.el8.noarch            <span style=\"color: #800080;\">8</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : mysql</span>-common-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86    <span style=\"color: #800080;\">9</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : mysql</span>-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_64       <span style=\"color: #800080;\">10</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : mysql</span>-errmsg-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86   <span style=\"color: #800080;\">11</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : mysql</span>-libs-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_6   <span style=\"color: #800080;\">12</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Term-ANSIColor-<span style=\"color: #800080;\">4.06</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                 <span style=\"color: #800080;\">13</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-macros-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                     <span style=\"color: #800080;\">14</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Errno-<span style=\"color: #800080;\">1.28</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                          <span style=\"color: #800080;\">15</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Socket-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">2.027</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                        <span style=\"color: #800080;\">16</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Text-Tabs+Wrap-<span style=\"color: #800080;\">2013.0523</span>-<span style=\"color: #800080;\">395</span>.el8.noarch            <span style=\"color: #800080;\">17</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Unicode-Normalize-<span style=\"color: #800080;\">1.25</span>-<span style=\"color: #800080;\">396</span>.el8.x86_64              <span style=\"color: #800080;\">18</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-File-Path-<span style=\"color: #800080;\">2.15</span>-<span style=\"color: #800080;\">2</span>.el8.noarch                        <span style=\"color: #800080;\">19</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-IO-<span style=\"color: #800080;\">1.38</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                             <span style=\"color: #800080;\">20</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-PathTools-<span style=\"color: #800080;\">3.74</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                        <span style=\"color: #800080;\">21</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-constant-<span style=\"color: #800080;\">1.33</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                       <span style=\"color: #800080;\">22</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-threads-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">2.21</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64                        <span style=\"color: #800080;\">23</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-threads-shared-<span style=\"color: #800080;\">1.58</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64                   <span style=\"color: #800080;\">24</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-interpreter-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                <span style=\"color: #800080;\">25</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-MIME-Base64-<span style=\"color: #800080;\">3.15</span>-<span style=\"color: #800080;\">396</span>.el8.x86_64                    <span style=\"color: #800080;\">26</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-IO-Socket-IP-<span style=\"color: #800080;\">0.39</span>-<span style=\"color: #800080;\">5</span>.el8.noarch                     <span style=\"color: #800080;\">27</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Time-Local-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.280</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                    <span style=\"color: #800080;\">28</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Digest-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                         <span style=\"color: #800080;\">29</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Digest-MD5-<span style=\"color: #800080;\">2.55</span>-<span style=\"color: #800080;\">396</span>.el8.x86_64                     <span style=\"color: #800080;\">30</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Net-SSLeay-<span style=\"color: #800080;\">1.88</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                       <span style=\"color: #800080;\">31</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Data-Dumper-<span style=\"color: #800080;\">2.167</span>-<span style=\"color: #800080;\">399</span>.el8.x86_64                   <span style=\"color: #800080;\">32</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-File-Temp-<span style=\"color: #800080;\">0.230</span>.<span style=\"color: #800080;\">600</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                   <span style=\"color: #800080;\">33</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Pod-Escapes-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.07</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                  <span style=\"color: #800080;\">34</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Storable-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                       <span style=\"color: #800080;\">35</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Term-Cap-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                       <span style=\"color: #800080;\">36</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Mozilla-CA-<span style=\"color: #800080;\">20160104</span>-<span style=\"color: #800080;\">7</span>.el8.noarch                   <span style=\"color: #800080;\">37</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Encode-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">2.97</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                         <span style=\"color: #800080;\">38</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Pod-Simple-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">3.35</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                   <span style=\"color: #800080;\">39</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Getopt-Long-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">2.50</span>-<span style=\"color: #800080;\">4</span>.el8.noarch                    <span style=\"color: #800080;\">40</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-podlators-<span style=\"color: #800080;\">4.11</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                        <span style=\"color: #800080;\">41</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Pod-Usage-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">1.69</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                    <span style=\"color: #800080;\">42</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-Pod-Perldoc-<span style=\"color: #800080;\">3.28</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                    <span style=\"color: #800080;\">43</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-HTTP-Tiny-<span style=\"color: #800080;\">0.074</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                       <span style=\"color: #800080;\">44</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-IO-Socket-SSL-<span style=\"color: #800080;\">2.066</span>-<span style=\"color: #800080;\">4</span>.el8.noarch                   <span style=\"color: #800080;\">45</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-libnet-<span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span>.el8.noarch                           <span style=\"color: #800080;\">46</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : perl</span>-URI-<span style=\"color: #800080;\">1.73</span>-<span style=\"color: #800080;\">3</span>.el8.noarch                              <span style=\"color: #800080;\">47</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : python3</span>-setools-<span style=\"color: #800080;\">4.2</span>.<span style=\"color: #800080;\">2</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64                      <span style=\"color: #800080;\">48</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : python3</span>-libsemanage-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64                    <span style=\"color: #800080;\">49</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : python3</span>-audit-<span style=\"color: #800080;\">3.0</span>-<span style=\"color: #800080;\">0.17</span>.20191104git1c2f876.el8.x86_64    <span style=\"color: #800080;\">50</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : pcre2</span>-utf32-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                          <span style=\"color: #800080;\">51</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : pcre2</span>-utf16-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                          <span style=\"color: #800080;\">52</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : pcre2</span>-devel-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                          <span style=\"color: #800080;\">53</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : libverto</span>-devel-<span style=\"color: #800080;\">0.3</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">5</span>.el8.x86_64                       <span style=\"color: #800080;\">54</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : libsepol</span>-devel-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                         <span style=\"color: #800080;\">55</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : libselinux</span>-devel-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                       <span style=\"color: #800080;\">56</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : libkadm5</span>-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span>.el8.x86_64                             <span style=\"color: #800080;\">57</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : libevent</span>-<span style=\"color: #800080;\">2.1</span>.<span style=\"color: #800080;\">8</span>-<span style=\"color: #800080;\">5</span>.el8.x86_64                             <span style=\"color: #800080;\">58</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : libcom_err</span>-devel-<span style=\"color: #800080;\">1.45</span>.<span style=\"color: #800080;\">4</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                    <span style=\"color: #800080;\">59</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : keyutils</span>-libs-devel-<span style=\"color: #800080;\">1.5</span>.<span style=\"color: #800080;\">10</span>-<span style=\"color: #800080;\">6</span>.el8.x86_64                 <span style=\"color: #800080;\">60</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : krb5</span>-devel-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span>.el8.x86_64                           <span style=\"color: #800080;\">61</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : openssl</span>-devel-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.1</span>.1c-<span style=\"color: #800080;\">15</span>.el8.x86_64                    <span style=\"color: #800080;\">62</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : checkpolicy</span>-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                            <span style=\"color: #800080;\">63</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : python3</span>-policycoreutils-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span>.el8.noarch                <span style=\"color: #800080;\">64</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : policycoreutils</span>-python-utils-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span>.el8.noarch           <span style=\"color: #800080;\">65</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : protobuf</span>-lite-<span style=\"color: #800080;\">3.5</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">7</span>.el8.x86_64                        <span style=\"color: #800080;\">66</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : mecab</span>-<span style=\"color: #800080;\">0.996</span>-<span style=\"color: #800080;\">1</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">41</span>+ca30bab6.<span style=\"color: #800080;\">9</span>.x86_64       <span style=\"color: #800080;\">67</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Running scriptlet: mecab</span>-<span style=\"color: #800080;\">0.996</span>-<span style=\"color: #800080;\">1</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">41</span>+ca30bab6.<span style=\"color: #800080;\">9</span>.x86_64       <span style=\"color: #800080;\">67</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Running scriptlet: mysql</span>-server-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86   <span style=\"color: #800080;\">68</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Installing       : mysql</span>-server-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86   <span style=\"color: #800080;\">68</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Running scriptlet: mysql</span>-server-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86   <span style=\"color: #800080;\">68</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>ValueError: File context </span><span style=\"color: #0000ff;\">for</span> /<span style=\"color: #0000ff;\">var</span>/log/mysql(/.*)?<span style=\"color: #000000;\"> already defined</p>\n<p>  Installing       : mysql</span>-devel-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_   <span style=\"color: #800080;\">69</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Running scriptlet: mysql</span>-devel-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_   <span style=\"color: #800080;\">69</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : mariadb</span>-connector-c-config-<span style=\"color: #800080;\">3.0</span>.<span style=\"color: #800080;\">7</span>-<span style=\"color: #800080;\">1</span>.el8.noarch            <span style=\"color: #800080;\">1</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : mecab</span>-<span style=\"color: #800080;\">0.996</span>-<span style=\"color: #800080;\">1</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">41</span>+ca30bab6.<span style=\"color: #800080;\">9</span>.x86_64        <span style=\"color: #800080;\">2</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : mysql</span>-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_64        <span style=\"color: #800080;\">3</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : mysql</span>-common-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86    <span style=\"color: #800080;\">4</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : mysql</span>-devel-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_    <span style=\"color: #800080;\">5</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : mysql</span>-errmsg-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86    <span style=\"color: #800080;\">6</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : mysql</span>-libs-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86_6    <span style=\"color: #800080;\">7</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : mysql</span>-server-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+899d6349.x86    <span style=\"color: #800080;\">8</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Digest-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                          <span style=\"color: #800080;\">9</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Digest-MD5-<span style=\"color: #800080;\">2.55</span>-<span style=\"color: #800080;\">396</span>.el8.x86_64                     <span style=\"color: #800080;\">10</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-IO-Socket-IP-<span style=\"color: #800080;\">0.39</span>-<span style=\"color: #800080;\">5</span>.el8.noarch                     <span style=\"color: #800080;\">11</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-IO-Socket-SSL-<span style=\"color: #800080;\">2.066</span>-<span style=\"color: #800080;\">4</span>.el8.noarch                   <span style=\"color: #800080;\">12</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Mozilla-CA-<span style=\"color: #800080;\">20160104</span>-<span style=\"color: #800080;\">7</span>.el8.noarch                   <span style=\"color: #800080;\">13</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Net-SSLeay-<span style=\"color: #800080;\">1.88</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                       <span style=\"color: #800080;\">14</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-URI-<span style=\"color: #800080;\">1.73</span>-<span style=\"color: #800080;\">3</span>.el8.noarch                              <span style=\"color: #800080;\">15</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-libnet-<span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span>.el8.noarch                           <span style=\"color: #800080;\">16</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : protobuf</span>-lite-<span style=\"color: #800080;\">3.5</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">7</span>.el8.x86_64                        <span style=\"color: #800080;\">17</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : checkpolicy</span>-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                            <span style=\"color: #800080;\">18</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : keyutils</span>-libs-devel-<span style=\"color: #800080;\">1.5</span>.<span style=\"color: #800080;\">10</span>-<span style=\"color: #800080;\">6</span>.el8.x86_64                 <span style=\"color: #800080;\">19</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : krb5</span>-devel-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span>.el8.x86_64                           <span style=\"color: #800080;\">20</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : libcom_err</span>-devel-<span style=\"color: #800080;\">1.45</span>.<span style=\"color: #800080;\">4</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                    <span style=\"color: #800080;\">21</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : libevent</span>-<span style=\"color: #800080;\">2.1</span>.<span style=\"color: #800080;\">8</span>-<span style=\"color: #800080;\">5</span>.el8.x86_64                             <span style=\"color: #800080;\">22</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : libkadm5</span>-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span>.el8.x86_64                             <span style=\"color: #800080;\">23</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : libselinux</span>-devel-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                       <span style=\"color: #800080;\">24</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : libsepol</span>-devel-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                         <span style=\"color: #800080;\">25</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : libverto</span>-devel-<span style=\"color: #800080;\">0.3</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">5</span>.el8.x86_64                       <span style=\"color: #800080;\">26</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : openssl</span>-devel-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.1</span>.1c-<span style=\"color: #800080;\">15</span>.el8.x86_64                    <span style=\"color: #800080;\">27</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : pcre2</span>-devel-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                          <span style=\"color: #800080;\">28</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : pcre2</span>-utf16-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                          <span style=\"color: #800080;\">29</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : pcre2</span>-utf32-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                          <span style=\"color: #800080;\">30</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Carp-<span style=\"color: #800080;\">1.42</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                           <span style=\"color: #800080;\">31</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Data-Dumper-<span style=\"color: #800080;\">2.167</span>-<span style=\"color: #800080;\">399</span>.el8.x86_64                   <span style=\"color: #800080;\">32</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Encode-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">2.97</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                         <span style=\"color: #800080;\">33</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Errno-<span style=\"color: #800080;\">1.28</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                          <span style=\"color: #800080;\">34</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Exporter-<span style=\"color: #800080;\">5.72</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                       <span style=\"color: #800080;\">35</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-File-Path-<span style=\"color: #800080;\">2.15</span>-<span style=\"color: #800080;\">2</span>.el8.noarch                        <span style=\"color: #800080;\">36</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-File-Temp-<span style=\"color: #800080;\">0.230</span>.<span style=\"color: #800080;\">600</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                   <span style=\"color: #800080;\">37</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Getopt-Long-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">2.50</span>-<span style=\"color: #800080;\">4</span>.el8.noarch                    <span style=\"color: #800080;\">38</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-HTTP-Tiny-<span style=\"color: #800080;\">0.074</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                       <span style=\"color: #800080;\">39</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-IO-<span style=\"color: #800080;\">1.38</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                             <span style=\"color: #800080;\">40</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-MIME-Base64-<span style=\"color: #800080;\">3.15</span>-<span style=\"color: #800080;\">396</span>.el8.x86_64                    <span style=\"color: #800080;\">41</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-PathTools-<span style=\"color: #800080;\">3.74</span>-<span style=\"color: #800080;\">1</span>.el8.x86_64                        <span style=\"color: #800080;\">42</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Pod-Escapes-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.07</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                  <span style=\"color: #800080;\">43</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Pod-Perldoc-<span style=\"color: #800080;\">3.28</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                    <span style=\"color: #800080;\">44</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Pod-Simple-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">3.35</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                   <span style=\"color: #800080;\">45</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Pod-Usage-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">1.69</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                    <span style=\"color: #800080;\">46</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Scalar-List-Utils-<span style=\"color: #800080;\">3</span>:<span style=\"color: #800080;\">1.49</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64              <span style=\"color: #800080;\">47</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Socket-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">2.027</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                        <span style=\"color: #800080;\">48</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Storable-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span>.el8.x86_64                       <span style=\"color: #800080;\">49</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Term-ANSIColor-<span style=\"color: #800080;\">4.06</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                 <span style=\"color: #800080;\">50</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Term-Cap-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                       <span style=\"color: #800080;\">51</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Text-ParseWords-<span style=\"color: #800080;\">3.30</span>-<span style=\"color: #800080;\">395</span>.el8.noarch                <span style=\"color: #800080;\">52</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Text-Tabs+Wrap-<span style=\"color: #800080;\">2013.0523</span>-<span style=\"color: #800080;\">395</span>.el8.noarch            <span style=\"color: #800080;\">53</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Time-Local-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.280</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                    <span style=\"color: #800080;\">54</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-Unicode-Normalize-<span style=\"color: #800080;\">1.25</span>-<span style=\"color: #800080;\">396</span>.el8.x86_64              <span style=\"color: #800080;\">55</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-constant-<span style=\"color: #800080;\">1.33</span>-<span style=\"color: #800080;\">396</span>.el8.noarch                       <span style=\"color: #800080;\">56</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-interpreter-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                <span style=\"color: #800080;\">57</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-libs-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                       <span style=\"color: #800080;\">58</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-macros-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span>.el8.x86_64                     <span style=\"color: #800080;\">59</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-parent-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">0.237</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                        <span style=\"color: #800080;\">60</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-podlators-<span style=\"color: #800080;\">4.11</span>-<span style=\"color: #800080;\">1</span>.el8.noarch                        <span style=\"color: #800080;\">61</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-threads-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">2.21</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64                        <span style=\"color: #800080;\">62</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : perl</span>-threads-shared-<span style=\"color: #800080;\">1.58</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64                   <span style=\"color: #800080;\">63</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : policycoreutils</span>-python-utils-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span>.el8.noarch           <span style=\"color: #800080;\">64</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : python3</span>-audit-<span style=\"color: #800080;\">3.0</span>-<span style=\"color: #800080;\">0.17</span>.20191104git1c2f876.el8.x86_64    <span style=\"color: #800080;\">65</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : python3</span>-libsemanage-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64                    <span style=\"color: #800080;\">66</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : python3</span>-policycoreutils-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span>.el8.noarch                <span style=\"color: #800080;\">67</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : python3</span>-setools-<span style=\"color: #800080;\">4.2</span>.<span style=\"color: #800080;\">2</span>-<span style=\"color: #800080;\">2</span>.el8.x86_64                      <span style=\"color: #800080;\">68</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"><br>  Verifying        : zlib</span>-devel-<span style=\"color: #800080;\">1.2</span>.<span style=\"color: #800080;\">11</span>-<span style=\"color: #800080;\">13</span>.el8.x86_64                         <span style=\"color: #800080;\">69</span>/<span style=\"color: #800080;\">69</span><span style=\"color: #000000;\"> </p>\n<p>Installed:<br>  checkpolicy</span>-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.x86_64<br>  keyutils</span>-libs-devel-<span style=\"color: #800080;\">1.5</span>.<span style=\"color: #800080;\">10</span>-<span style=\"color: #800080;\">6</span><span style=\"color: #000000;\">.el8.x86_64<br>  krb5</span>-devel-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span><span style=\"color: #000000;\">.el8.x86_64<br>  libcom_err</span>-devel-<span style=\"color: #800080;\">1.45</span>.<span style=\"color: #800080;\">4</span>-<span style=\"color: #800080;\">3</span><span style=\"color: #000000;\">.el8.x86_64<br>  libevent</span>-<span style=\"color: #800080;\">2.1</span>.<span style=\"color: #800080;\">8</span>-<span style=\"color: #800080;\">5</span><span style=\"color: #000000;\">.el8.x86_64<br>  libkadm5</span>-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">18</span><span style=\"color: #000000;\">.el8.x86_64<br>  libselinux</span>-devel-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">3</span><span style=\"color: #000000;\">.el8.x86_64<br>  libsepol</span>-devel-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.x86_64<br>  libverto</span>-devel-<span style=\"color: #800080;\">0.3</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">5</span><span style=\"color: #000000;\">.el8.x86_64<br>  mariadb</span>-connector-c-config-<span style=\"color: #800080;\">3.0</span>.<span style=\"color: #800080;\">7</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.noarch<br>  mecab</span>-<span style=\"color: #800080;\">0.996</span>-<span style=\"color: #800080;\">1</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">41</span>+ca30bab6.<span style=\"color: #800080;\">9</span><span style=\"color: #000000;\">.x86_64<br>  mysql</span>-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #000000;\">899d6349.x86_64<br>  mysql</span>-common-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #000000;\">899d6349.x86_64<br>  mysql</span>-devel-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #000000;\">899d6349.x86_64<br>  mysql</span>-errmsg-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #000000;\">899d6349.x86_64<br>  mysql</span>-libs-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #000000;\">899d6349.x86_64<br>  mysql</span>-server-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>-<span style=\"color: #800080;\">3</span>.module_el8.<span style=\"color: #800080;\">0.0</span>+<span style=\"color: #800080;\">181</span>+<span style=\"color: #000000;\">899d6349.x86_64<br>  openssl</span>-devel-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.1</span>.1c-<span style=\"color: #800080;\">15</span><span style=\"color: #000000;\">.el8.x86_64<br>  pcre2</span>-devel-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.x86_64<br>  pcre2</span>-utf16-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.x86_64<br>  pcre2</span>-utf32-<span style=\"color: #800080;\">10.32</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.x86_64<br>  perl</span>-Carp-<span style=\"color: #800080;\">1.42</span>-<span style=\"color: #800080;\">396</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-Data-Dumper-<span style=\"color: #800080;\">2.167</span>-<span style=\"color: #800080;\">399</span><span style=\"color: #000000;\">.el8.x86_64<br>  perl</span>-Digest-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-Digest-MD5-<span style=\"color: #800080;\">2.55</span>-<span style=\"color: #800080;\">396</span><span style=\"color: #000000;\">.el8.x86_64<br>  perl</span>-Encode-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">2.97</span>-<span style=\"color: #800080;\">3</span><span style=\"color: #000000;\">.el8.x86_64<br>  perl</span>-Errno-<span style=\"color: #800080;\">1.28</span>-<span style=\"color: #800080;\">416</span><span style=\"color: #000000;\">.el8.x86_64<br>  perl</span>-Exporter-<span style=\"color: #800080;\">5.72</span>-<span style=\"color: #800080;\">396</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-File-Path-<span style=\"color: #800080;\">2.15</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-File-Temp-<span style=\"color: #800080;\">0.230</span>.<span style=\"color: #800080;\">600</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-Getopt-Long-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">2.50</span>-<span style=\"color: #800080;\">4</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-HTTP-Tiny-<span style=\"color: #800080;\">0.074</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-IO-<span style=\"color: #800080;\">1.38</span>-<span style=\"color: #800080;\">416</span><span style=\"color: #000000;\">.el8.x86_64<br>  perl</span>-IO-Socket-IP-<span style=\"color: #800080;\">0.39</span>-<span style=\"color: #800080;\">5</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-IO-Socket-SSL-<span style=\"color: #800080;\">2.066</span>-<span style=\"color: #800080;\">4</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-MIME-Base64-<span style=\"color: #800080;\">3.15</span>-<span style=\"color: #800080;\">396</span><span style=\"color: #000000;\">.el8.x86_64<br>  perl</span>-Mozilla-CA-<span style=\"color: #800080;\">20160104</span>-<span style=\"color: #800080;\">7</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-Net-SSLeay-<span style=\"color: #800080;\">1.88</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.x86_64<br>  perl</span>-PathTools-<span style=\"color: #800080;\">3.74</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.x86_64<br>  perl</span>-Pod-Escapes-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.07</span>-<span style=\"color: #800080;\">395</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-Pod-Perldoc-<span style=\"color: #800080;\">3.28</span>-<span style=\"color: #800080;\">396</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-Pod-Simple-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">3.35</span>-<span style=\"color: #800080;\">395</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-Pod-Usage-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">1.69</span>-<span style=\"color: #800080;\">395</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-Scalar-List-Utils-<span style=\"color: #800080;\">3</span>:<span style=\"color: #800080;\">1.49</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el8.x86_64<br>  perl</span>-Socket-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">2.027</span>-<span style=\"color: #800080;\">3</span><span style=\"color: #000000;\">.el8.x86_64<br>  perl</span>-Storable-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span><span style=\"color: #000000;\">.el8.x86_64<br>  perl</span>-Term-ANSIColor-<span style=\"color: #800080;\">4.06</span>-<span style=\"color: #800080;\">396</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-Term-Cap-<span style=\"color: #800080;\">1.17</span>-<span style=\"color: #800080;\">395</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-Text-ParseWords-<span style=\"color: #800080;\">3.30</span>-<span style=\"color: #800080;\">395</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-Text-Tabs+Wrap-<span style=\"color: #800080;\">2013.0523</span>-<span style=\"color: #800080;\">395</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-Time-Local-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">1.280</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-URI-<span style=\"color: #800080;\">1.73</span>-<span style=\"color: #800080;\">3</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-Unicode-Normalize-<span style=\"color: #800080;\">1.25</span>-<span style=\"color: #800080;\">396</span><span style=\"color: #000000;\">.el8.x86_64<br>  perl</span>-constant-<span style=\"color: #800080;\">1.33</span>-<span style=\"color: #800080;\">396</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-interpreter-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span><span style=\"color: #000000;\">.el8.x86_64<br>  perl</span>-libnet-<span style=\"color: #800080;\">3.11</span>-<span style=\"color: #800080;\">3</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-libs-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span><span style=\"color: #000000;\">.el8.x86_64<br>  perl</span>-macros-<span style=\"color: #800080;\">4</span>:<span style=\"color: #800080;\">5.26</span>.<span style=\"color: #800080;\">3</span>-<span style=\"color: #800080;\">416</span><span style=\"color: #000000;\">.el8.x86_64<br>  perl</span>-parent-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">0.237</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-podlators-<span style=\"color: #800080;\">4.11</span>-<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">.el8.noarch<br>  perl</span>-threads-<span style=\"color: #800080;\">1</span>:<span style=\"color: #800080;\">2.21</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el8.x86_64<br>  perl</span>-threads-shared-<span style=\"color: #800080;\">1.58</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el8.x86_64<br>  policycoreutils</span>-python-utils-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span><span style=\"color: #000000;\">.el8.noarch<br>  protobuf</span>-lite-<span style=\"color: #800080;\">3.5</span>.<span style=\"color: #800080;\">0</span>-<span style=\"color: #800080;\">7</span><span style=\"color: #000000;\">.el8.x86_64<br>  python3</span>-audit-<span style=\"color: #800080;\">3.0</span>-<span style=\"color: #800080;\">0.17</span><span style=\"color: #000000;\">.20191104git1c2f876.el8.x86_64<br>  python3</span>-libsemanage-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el8.x86_64<br>  python3</span>-policycoreutils-<span style=\"color: #800080;\">2.9</span>-<span style=\"color: #800080;\">9</span><span style=\"color: #000000;\">.el8.noarch<br>  python3</span>-setools-<span style=\"color: #800080;\">4.2</span>.<span style=\"color: #800080;\">2</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el8.x86_64<br>  zlib</span>-devel-<span style=\"color: #800080;\">1.2</span>.<span style=\"color: #800080;\">11</span>-<span style=\"color: #800080;\">13</span><span style=\"color: #000000;\">.el8.x86_64                                                  </p>\n<p>Complete</span>!<span style=\"color: #000000;\"><br>[root@localhost </span><del>]# mysqld –install –user=<span style=\"color: #000000;\">root<br>[root@localhost </span></del>]# mysqld –initialize –user=<span style=\"color: #000000;\">mysql<br>[root@localhost </span><del>]# mysqld –initialize –lower-<span style=\"color: #0000ff;\">case</span>-table-names=<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\"><br>[root@localhost </span></del>]# cat /<span style=\"color: #0000ff;\">var</span>/log/mysql/<span style=\"color: #000000;\">mysqld.log<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.286242Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010116</span>] [Server] /usr/libexec/mysqld (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>) starting <span style=\"color: #0000ff;\">as</span> process <span style=\"color: #800080;\">8036</span><br><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.300375Z <span style=\"color: #800080;\">1</span> [ERROR] [MY-<span style=\"color: #800080;\">011011</span><span style=\"color: #000000;\">] [Server] Failed to find valid data directory.<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.300446Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010020</span><span style=\"color: #000000;\">] [Server] <span style=\"color: #ff0000;\">Data Dictionary initialization failed</span>.<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.300498Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010119</span><span style=\"color: #000000;\">] [Server] Aborting<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.300755Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010910</span>] [Server] /usr/libexec/mysqld: Shutdown complete (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span><span style=\"color: #000000;\">)  Source distribution.<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.523538Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">013169</span>] [Server] /usr/libexec/mysqld (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>) initializing of server <span style=\"color: #0000ff;\">in</span> progress <span style=\"color: #0000ff;\">as</span> process <span style=\"color: #800080;\">22923</span><br><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.524591Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010457</span>] [Server] –initialize specified but the data directory has files <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> it. Aborting.<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.524614Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">013236</span>] [Server] The designated data directory /<span style=\"color: #0000ff;\">var</span>/lib/mysql/ <span style=\"color: #0000ff;\">is</span><span style=\"color: #000000;\"> unusable. You can remove all files that the server added to it.<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.524676Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010119</span><span style=\"color: #000000;\">] [Server] Aborting<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.524752Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010910</span>] [Server] /usr/libexec/mysqld: Shutdown complete (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span><span style=\"color: #000000;\">)  Source distribution.<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.984050Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">013169</span>] [Server] /usr/libexec/mysqld (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>) initializing of server <span style=\"color: #0000ff;\">in</span> progress <span style=\"color: #0000ff;\">as</span> process <span style=\"color: #800080;\">28279</span><br><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.985204Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010457</span>] [Server] –initialize specified but the data directory has files <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> it. Aborting.<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.985285Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">013236</span>] [Server] The designated data directory /<span style=\"color: #0000ff;\">var</span>/lib/mysql/ <span style=\"color: #0000ff;\">is</span><span style=\"color: #000000;\"> unusable. You can remove all files that the server added to it.<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.985321Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010119</span><span style=\"color: #000000;\">] [Server] Aborting<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.985395Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010910</span>] [Server] /usr/libexec/mysqld: Shutdown complete (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span><span style=\"color: #000000;\">)  Source distribution.<br>[root@localhost </span><del>]# rm -rf /<span style=\"color: #0000ff;\">var</span>/lib/<span style=\"color: #000000;\">mysql<br>[root@localhost </span></del>]# mysqld –initialize –<span style=\"color: #000000;\">console<br>[root@localhost </span><del>]# chown -R mysql:mysql /<span style=\"color: #0000ff;\">var</span>/lib/mysql/<span style=\"color: #000000;\"><br>[root@localhost </span></del><span style=\"color: #000000;\">]# systemctl start mysqld<br>[root@localhost </span>~<span style=\"color: #000000;\">]# systemctl status mysqld<br>● mysqld.service </span>- MySQL <span style=\"color: #800080;\">8.0</span><span style=\"color: #000000;\"> database server<br>   Loaded: loaded (</span>/usr/lib/systemd/system/mysqld.service; disabled; vendor preset&gt;<span style=\"color: #000000;\"><br>   Active: active (running) since Tue </span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-<span style=\"color: #800080;\">01</span> <span style=\"color: #800080;\">16</span>:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span><span style=\"color: #000000;\"> CST; 5s ago<br>  Process: </span><span style=\"color: #800080;\">28436</span> ExecStartPost=/usr/libexec/mysql-check-upgrade (code=exited, stat&gt;<span style=\"color: #000000;\"><br>  Process: </span><span style=\"color: #800080;\">28356</span> ExecStartPre=/usr/libexec/mysql-prepare-db-dir mysqld.service (co&gt;<span style=\"color: #000000;\"><br>  Process: </span><span style=\"color: #800080;\">28332</span> ExecStartPre=/usr/libexec/mysql-check-socket (code=exited, status&gt;<span style=\"color: #000000;\"><br> Main PID: </span><span style=\"color: #800080;\">28393</span><span style=\"color: #000000;\"> (mysqld)<br>   Status: </span><span style=\"color: #800000;\">“</span><span style=\"color: #800000;\">Server is operational</span><span style=\"color: #800000;\">“</span><span style=\"color: #000000;\"><br>    Tasks: </span><span style=\"color: #800080;\">39</span> (limit: <span style=\"color: #800080;\">11302</span><span style=\"color: #000000;\">)<br>   Memory: </span><span style=\"color: #800080;\">382.4M</span><span style=\"color: #000000;\"><br>   CGroup: </span>/system.slice/<span style=\"color: #000000;\">mysqld.service<br>           └─</span><span style=\"color: #800080;\">28393</span> /usr/libexec/mysqld –basedir=/<span style=\"color: #000000;\">usr</p>\n<p>Sep </span><span style=\"color: #800080;\">01</span> <span style=\"color: #800080;\">16</span>:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">18</span> localhost.localdomain systemd[<span style=\"color: #800080;\">1</span>]: Starting MySQL <span style=\"color: #800080;\">8.0</span> database serv&gt;<span style=\"color: #000000;\"><br>Sep </span><span style=\"color: #800080;\">01</span> <span style=\"color: #800080;\">16</span>:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span> localhost.localdomain mysql-check-upgrade[<span style=\"color: #800080;\">28436</span>]: The datadir loca&gt;<span style=\"color: #000000;\"><br>Sep </span><span style=\"color: #800080;\">01</span> <span style=\"color: #800080;\">16</span>:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span> localhost.localdomain mysql-check-upgrade[<span style=\"color: #800080;\">28436</span>]:   <span style=\"color: #800080;\">1</span>. Back-up you&gt;<span style=\"color: #000000;\"><br>Sep </span><span style=\"color: #800080;\">01</span> <span style=\"color: #800080;\">16</span>:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span> localhost.localdomain mysql-check-upgrade[<span style=\"color: #800080;\">28436</span>]:   <span style=\"color: #800080;\">2</span>. Start the d&gt;<span style=\"color: #000000;\"><br>Sep </span><span style=\"color: #800080;\">01</span> <span style=\"color: #800080;\">16</span>:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span> localhost.localdomain mysql-check-upgrade[<span style=\"color: #800080;\">28436</span>]:   <span style=\"color: #800080;\">3</span>. Run <span style=\"color: #800000;\">‘</span><span style=\"color: #800000;\">mysql_&gt;</span><br>Sep <span style=\"color: #800080;\">01</span> <span style=\"color: #800080;\">16</span>:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span> localhost.localdomain mysql-check-upgrade[<span style=\"color: #800080;\">28436</span>]: Read more about &gt;<span style=\"color: #000000;\"><br>Sep </span><span style=\"color: #800080;\">01</span> <span style=\"color: #800080;\">16</span>:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span> localhost.localdomain mysql-check-upgrade[<span style=\"color: #800080;\">28436</span>]: http:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">dev.mysql&gt;</span><br>Sep <span style=\"color: #800080;\">01</span> <span style=\"color: #800080;\">16</span>:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span> localhost.localdomain systemd[<span style=\"color: #800080;\">1</span>]: Started MySQL <span style=\"color: #800080;\">8.0</span> database serve&gt;<span style=\"color: #000000;\"></p>\n<p>[root@localhost </span><del>]# ^<span style=\"color: #000000;\">C<br>[root@localhost </span></del>]# cat /<span style=\"color: #0000ff;\">var</span>/log/mysql/<span style=\"color: #000000;\">mysqld.log<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.286242Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010116</span>] [Server] /usr/libexec/mysqld (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>) starting <span style=\"color: #0000ff;\">as</span> process <span style=\"color: #800080;\">8036</span><br><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.300375Z <span style=\"color: #800080;\">1</span> [ERROR] [MY-<span style=\"color: #800080;\">011011</span><span style=\"color: #000000;\">] [Server] Failed to find valid data directory.<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.300446Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010020</span><span style=\"color: #000000;\">] [Server] Data Dictionary initialization failed.<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.300498Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010119</span><span style=\"color: #000000;\">] [Server] Aborting<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">16</span>.300755Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010910</span>] [Server] /usr/libexec/mysqld: Shutdown complete (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span><span style=\"color: #000000;\">)  Source distribution.<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.523538Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">013169</span>] [Server] /usr/libexec/mysqld (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>) initializing of server <span style=\"color: #0000ff;\">in</span> progress <span style=\"color: #0000ff;\">as</span> process <span style=\"color: #800080;\">22923</span><br><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.524591Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010457</span>] [Server] –initialize specified but the data directory has files <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> it. Aborting.<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.524614Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">013236</span>] [Server] The designated data directory /<span style=\"color: #0000ff;\">var</span>/lib/mysql/ <span style=\"color: #0000ff;\">is</span><span style=\"color: #000000;\"> unusable. You can remove all files that the server added to it.<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.524676Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010119</span><span style=\"color: #000000;\">] [Server] Aborting<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">25</span>.524752Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010910</span>] [Server] /usr/libexec/mysqld: Shutdown complete (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span><span style=\"color: #000000;\">)  Source distribution.<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.984050Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">013169</span>] [Server] /usr/libexec/mysqld (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>) initializing of server <span style=\"color: #0000ff;\">in</span> progress <span style=\"color: #0000ff;\">as</span> process <span style=\"color: #800080;\">28279</span><br><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.985204Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010457</span>] [Server] –initialize specified but the data directory has files <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> it. Aborting.<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.985285Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">013236</span>] [Server] The designated data directory /<span style=\"color: #0000ff;\">var</span>/lib/mysql/ <span style=\"color: #0000ff;\">is</span><span style=\"color: #000000;\"> unusable. You can remove all files that the server added to it.<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.985321Z <span style=\"color: #800080;\">0</span> [ERROR] [MY-<span style=\"color: #800080;\">010119</span><span style=\"color: #000000;\">] [Server] Aborting<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">03</span>:<span style=\"color: #800080;\">35</span>.985395Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010910</span>] [Server] /usr/libexec/mysqld: Shutdown complete (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span><span style=\"color: #000000;\">)  Source distribution.<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">00</span>.208778Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">013169</span>] [Server] /usr/libexec/mysqld (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>) initializing of server <span style=\"color: #0000ff;\">in</span> progress <span style=\"color: #0000ff;\">as</span> process <span style=\"color: #800080;\">28282</span><br><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">02</span>.022251Z <span style=\"color: #800080;\">5</span> [Note] [MY-<span style=\"color: #800080;\">010454</span>] [Server] A temporary password <span style=\"color: #0000ff;\">is</span> generated <span style=\"color: #0000ff;\">for</span> root@localhost: <span style=\"color: #ff0000;\">u;*pHkkhe13T<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">02</span>.704903Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">013170</span>] [Server] /usr/libexec/mysqld (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span><span style=\"color: #000000;\">) initializing of server has completed<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">19</span>.678034Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010116</span>] [Server] /usr/libexec/mysqld (mysqld <span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span>) starting <span style=\"color: #0000ff;\">as</span> process <span style=\"color: #800080;\">28393</span><br><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span>.444889Z <span style=\"color: #800080;\">0</span> [Warning] [MY-<span style=\"color: #800080;\">010068</span>] [Server] CA certificate ca.pem <span style=\"color: #0000ff;\">is</span><span style=\"color: #000000;\"> self signed.<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span>.463100Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">010931</span>] [Server] /usr/libexec/mysqld: ready <span style=\"color: #0000ff;\">for</span> connections. Version: <span style=\"color: #800000;\">‘</span><span style=\"color: #800000;\">8.0.17</span><span style=\"color: #800000;\">‘</span>  socket: <span style=\"color: #800000;\">‘</span><span style=\"color: #800000;\">/var/lib/mysql/mysql.sock</span><span style=\"color: #800000;\">‘</span>  port: <span style=\"color: #800080;\">3306</span><span style=\"color: #000000;\">  Source distribution.<br></span><span style=\"color: #800080;\">2020</span>-<span style=\"color: #800080;\">09</span>-01T08:<span style=\"color: #800080;\">04</span>:<span style=\"color: #800080;\">21</span>.531457Z <span style=\"color: #800080;\">0</span> [System] [MY-<span style=\"color: #800080;\">011323</span>] [Server] X Plugin ready <span style=\"color: #0000ff;\">for</span> connections. Socket: <span style=\"color: #800000;\">‘</span><span style=\"color: #800000;\">/var/lib/mysql/mysqlx.sock</span><span style=\"color: #800000;\">‘</span> bind-address: <span style=\"color: #800000;\">‘</span><span style=\"color: #800000;\">::</span><span style=\"color: #800000;\">‘</span> port: <span style=\"color: #800080;\">33060</span><span style=\"color: #000000;\"><br>[root@localhost </span>~]# mysql -u root -<span style=\"color: #000000;\">p<br>Enter password:<br>Welcome to the MySQL monitor.  Commands end with ; or \\g.<br>Your MySQL connection id </span><span style=\"color: #0000ff;\">is</span> <span style=\"color: #800080;\">8</span><span style=\"color: #000000;\"><br>Server version: </span><span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">17</span><span style=\"color: #000000;\"></p>\n<p>Copyright (c) </span><span style=\"color: #800080;\">2000</span>, <span style=\"color: #800080;\">2019</span>, Oracle and/<span style=\"color: #000000;\">or its affiliates. All rights reserved.</p>\n<p>Oracle </span><span style=\"color: #0000ff;\">is</span> a registered trademark of Oracle Corporation and/<span style=\"color: #000000;\">or its<br>affiliates. Other names may be trademarks of their respective<br>owners.</p>\n<p>Type </span><span style=\"color: #800000;\">‘</span><span style=\"color: #800000;\">help;</span><span style=\"color: #800000;\">‘</span> or <span style=\"color: #800000;\">‘</span><span style=\"color: #800000;\">\\h</span><span style=\"color: #800000;\">‘</span> <span style=\"color: #0000ff;\">for</span> help. Type <span style=\"color: #800000;\">‘</span><span style=\"color: #800000;\">\\c</span><span style=\"color: #800000;\">‘</span><span style=\"color: #000000;\"> to clear the current input statement.</p>\n<p>mysql</span>&gt; ALTER USER <span style=\"color: #800000;\">‘</span><span style=\"color: #800000;\">root</span><span style=\"color: #800000;\">‘</span>@<span style=\"color: #800000;\">‘</span><span style=\"color: #800000;\">localhost</span><span style=\"color: #800000;\">‘</span> IDENTIFIED WITH mysql_native_password BY <span style=\"color: #800000;\">‘</span><span style=\"color: #800000;\">test@123</span><span style=\"color: #800000;\">‘</span><span style=\"color: #000000;\">;<br>Query OK, </span><span style=\"color: #800080;\">0</span> rows affected (<span style=\"color: #800080;\">0.01</span><span style=\"color: #000000;\"> sec)</p>\n<p>mysql</span>&gt;<span style=\"color: #000000;\"> use mysql<br>Reading table information </span><span style=\"color: #0000ff;\">for</span><span style=\"color: #000000;\"> completion of table and column names<br>You can turn off </span><span style=\"color: #0000ff;\">this</span> feature to <span style=\"color: #0000ff;\">get</span> a quicker startup with -<span style=\"color: #000000;\">A</p>\n<p>Database changed<br>mysql</span>&gt; <span style=\"color: #0000ff;\">select</span> Host,User <span style=\"color: #0000ff;\">from</span><span style=\"color: #000000;\"> user;<br></span>+———–+——————+<br>| Host      | User             |<br>+———–+——————+<br>| localhost | mysql.infoschema |<br>| localhost | mysql.session    |<br>| localhost | mysql.sys        |<br>| localhost | root             |<br>+———–+——————+<br><span style=\"color: #800080;\">4</span> rows <span style=\"color: #0000ff;\">in</span> <span style=\"color: #0000ff;\">set</span> (<span style=\"color: #800080;\">0.00</span><span style=\"color: #000000;\"> sec)</p>\n<p>mysql</span>&gt; update user <span style=\"color: #0000ff;\">set</span> host = <span style=\"color: #800000;\">‘</span><span style=\"color: #800000;\">%</span><span style=\"color: #800000;\">‘</span> <span style=\"color: #0000ff;\">where</span> user =<span style=\"color: #800000;\">‘</span><span style=\"color: #800000;\">root</span><span style=\"color: #800000;\">‘</span><span style=\"color: #000000;\">;<br>Query OK, </span><span style=\"color: #800080;\">1</span> row affected (<span style=\"color: #800080;\">0.00</span><span style=\"color: #000000;\"> sec)<br>Rows matched: </span><span style=\"color: #800080;\">1</span>  Changed: <span style=\"color: #800080;\">1</span>  Warnings: <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\"></p>\n<p>mysql</span>&gt;<span style=\"color: #000000;\"> flush privileges;<br>Query OK, </span><span style=\"color: #800080;\">0</span> rows affected (<span style=\"color: #800080;\">0.01</span><span style=\"color: #000000;\"> sec)</p>\n<p>mysql</span>&gt;<span style=\"color: #000000;\"> exit<br>Bye<br>[root@localhost </span>~]# </pre></p>\n</div>\n<p>&nbsp;</p>"},{"title":".net core3.1 abp动态菜单和动态权限（动态权限思路和实现）  （四）","date":"2020-06-15T13:15:00.000Z","author":"wpzblog","_content":"<h2>一、寻找权限加载的位置</h2>\n<p>我们按照<a href=\"https://www.cnblogs.com/wangpengzong/p/13089690.html\">https://www.cnblogs.com/wangpengzong/p/13089690.html</a>里面的思路寻找权限的加载位置</p>\n<div class=\"cnblogs_code\">\n<pre>_authorizationScriptManager=&gt;（接口）IAuthorizationScriptManager=&gt;（接口实现）AuthorizationScriptManager=&gt;（方法）GetScriptAsync=&gt;（调用）_permissionManager.GetAllPermissions=&gt;<br />（接口）IPermissionManager=&gt;（接口实现）PermissionManager=&gt;（方法）GetAllPermissions=&gt;（初始化）Initialize</pre>\n</div>\n<p>在PermissionManager的初始化地方，对权限进行加载，调用的地方在AbpKernelModule的提交初始化方法中，也是在模板中写的，这样，我们在获取权限时，其实不是根据当前租户、角色、用户来获取的</p>\n<div class=\"cnblogs_code\">\n<pre>AbpKernelModule.cs<br /><br /></pre>\n<p>public override void PostInitialize()<br />        {</p>\n<p>&nbsp; &nbsp; &nbsp;...do same thing<br />&nbsp; &nbsp; &nbsp;IocManager.Resolve&lt;PermissionManager&gt;().Initialize();&nbsp;&nbsp;</p>\n<p>&nbsp; &nbsp; &nbsp;...do same thing</p>\n<p>        }</p>\n\n</div>\n<h2>二、动态权限需要做到什么？</h2>\n<p>&nbsp;我们需要什么样子的动态权限呐？</p>\n<p>&nbsp;1.按照配置好的租户、角色、用户动态加载</p>","source":"_posts/cnblogs/13137930.md","raw":"---\ntitle: .net core3.1 abp动态菜单和动态权限（动态权限思路和实现）  （四）\ndate: 2020-06-15T21:15:00\nauthor: wpzblog\ntags: []\n---\n<h2>一、寻找权限加载的位置</h2>\n<p>我们按照<a href=\"https://www.cnblogs.com/wangpengzong/p/13089690.html\">https://www.cnblogs.com/wangpengzong/p/13089690.html</a>里面的思路寻找权限的加载位置</p>\n<div class=\"cnblogs_code\">\n<pre>_authorizationScriptManager=&gt;（接口）IAuthorizationScriptManager=&gt;（接口实现）AuthorizationScriptManager=&gt;（方法）GetScriptAsync=&gt;（调用）_permissionManager.GetAllPermissions=&gt;<br />（接口）IPermissionManager=&gt;（接口实现）PermissionManager=&gt;（方法）GetAllPermissions=&gt;（初始化）Initialize</pre>\n</div>\n<p>在PermissionManager的初始化地方，对权限进行加载，调用的地方在AbpKernelModule的提交初始化方法中，也是在模板中写的，这样，我们在获取权限时，其实不是根据当前租户、角色、用户来获取的</p>\n<div class=\"cnblogs_code\">\n<pre>AbpKernelModule.cs<br /><br /></pre>\n<p>public override void PostInitialize()<br />        {</p>\n<p>&nbsp; &nbsp; &nbsp;...do same thing<br />&nbsp; &nbsp; &nbsp;IocManager.Resolve&lt;PermissionManager&gt;().Initialize();&nbsp;&nbsp;</p>\n<p>&nbsp; &nbsp; &nbsp;...do same thing</p>\n<p>        }</p>\n\n</div>\n<h2>二、动态权限需要做到什么？</h2>\n<p>&nbsp;我们需要什么样子的动态权限呐？</p>\n<p>&nbsp;1.按照配置好的租户、角色、用户动态加载</p>","slug":"cnblogs/13137930","published":1,"updated":"2022-07-10T11:02:56.683Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl5f7imsl0013c0undovxaiv8","content":"<h2>一、寻找权限加载的位置</h2>\n<p>我们按照<a href=\"https://www.cnblogs.com/wangpengzong/p/13089690.html\">https://www.cnblogs.com/wangpengzong/p/13089690.html</a>里面的思路寻找权限的加载位置</p>\n<div class=\"cnblogs_code\">\n<pre>_authorizationScriptManager=&gt;（接口）IAuthorizationScriptManager=&gt;（接口实现）AuthorizationScriptManager=&gt;（方法）GetScriptAsync=&gt;（调用）_permissionManager.GetAllPermissions=&gt;<br />（接口）IPermissionManager=&gt;（接口实现）PermissionManager=&gt;（方法）GetAllPermissions=&gt;（初始化）Initialize</pre>\n</div>\n<p>在PermissionManager的初始化地方，对权限进行加载，调用的地方在AbpKernelModule的提交初始化方法中，也是在模板中写的，这样，我们在获取权限时，其实不是根据当前租户、角色、用户来获取的</p>\n<div class=\"cnblogs_code\">\n<pre>AbpKernelModule.cs<br /><br /></pre>\n<p>public override void PostInitialize()<br />        {</p>\n<p>&nbsp; &nbsp; &nbsp;...do same thing<br />&nbsp; &nbsp; &nbsp;IocManager.Resolve&lt;PermissionManager&gt;().Initialize();&nbsp;&nbsp;</p>\n<p>&nbsp; &nbsp; &nbsp;...do same thing</p>\n<p>        }</p>\n\n</div>\n<h2>二、动态权限需要做到什么？</h2>\n<p>&nbsp;我们需要什么样子的动态权限呐？</p>\n<p>&nbsp;1.按照配置好的租户、角色、用户动态加载</p>","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"wangpengzong","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/wangpengzong","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"<h2>一、寻找权限加载的位置</h2>\n<p>我们按照<a href=\"https://www.cnblogs.com/wangpengzong/p/13089690.html\">https://www.cnblogs.com/wangpengzong/p/13089690.html</a>里面的思路寻找权限的加载位置</p>\n<div class=\"cnblogs_code\">\n<pre>_authorizationScriptManager=&gt;（接口）IAuthorizationScriptManager=&gt;（接口实现）AuthorizationScriptManager=&gt;（方法）GetScriptAsync=&gt;（调用）_permissionManager.GetAllPermissions=&gt;<br />（接口）IPermissionManager=&gt;（接口实现）PermissionManager=&gt;（方法）GetAllPermissions=&gt;（初始化）Initialize</pre>\n</div>\n<p>在PermissionManager的初始化地方，对权限进行加载，调用的地方在AbpKernelModule的提交初始化方法中，也是在模板中写的，这样，我们在获取权限时，其实不是根据当前租户、角色、用户来获取的</p>\n<div class=\"cnblogs_code\">\n<pre>AbpKernelModule.cs<br /><br /></pre>\n<p>public override void PostInitialize()<br />        {</p>\n<p>&nbsp; &nbsp; &nbsp;...do same thing<br />&nbsp; &nbsp; &nbsp;IocManager.Resolve&lt;PermissionManager&gt;().Initialize();&nbsp;&nbsp;</p>\n<p>&nbsp; &nbsp; &nbsp;...do same thing</p>\n<p>        }</p>\n\n</div>\n<h2>二、动态权限需要做到什么？</h2>\n<p>&nbsp;我们需要什么样子的动态权限呐？</p>\n<p>&nbsp;1.按照配置好的租户、角色、用户动态加载</p>"},{"title":".net core3.1 abp动态菜单和动态权限（动态菜单实现和动态权限添加）  （三）","date":"2020-06-13T10:16:00.000Z","author":"wpzblog","_content":"<p>我们来创建动态菜单吧&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre>首先，先对动态菜单的概念、操作、流程进行约束：<br />1.Host和各个Tenant有自己的自定义菜单<br />2.Host和各个Tenant的权限与自定义菜单相关联<br />2.Tenant有一套默认的菜单，规定对应的TenantId=-1，在添加租户时自动将标准菜单和标准菜单的权限初始化到添加的租户</pre>\n</div>\n<h2>一、先实现菜单在数据库中的增删改查</h2>\n<h3>第一步：创建表、实体，添加DbContext</h3>\n<p>我们需要创建一个菜单表，延续Abp的命名方法，表名叫AbpMenus吧（菜单和权限、验证我们要关联，所以文件尽量放在Authorization文件夹下）</p>\n<p>把创建的实体放在AbpLearn.Core/Authorization下面，新建一个Menus文件夹，再创建Menus实体</p>\n<div class=\"cnblogs_code\">\n<pre>    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span> AbpMenus : Entity&lt;int&gt;<span style=\"color: #000000;\">\n    {\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> MenuName { <span style=\"color: #0000ff;\">set</span>; <span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> PageName { <span style=\"color: #0000ff;\">set</span>; <span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> Name { <span style=\"color: #0000ff;\">set</span>; <span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> Url { <span style=\"color: #0000ff;\">set</span>; <span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> Icon { <span style=\"color: #0000ff;\">set</span>; <span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">int</span> ParentId { <span style=\"color: #0000ff;\">set</span>; <span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">bool</span> IsActive { <span style=\"color: #0000ff;\">set</span>; <span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">int</span> Orders { <span style=\"color: #0000ff;\">set</span>; <span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">int</span>? TenantId { <span style=\"color: #0000ff;\">set</span>; <span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\">; }\n    }</span></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>如果翻过源码中实体的定义，可以发现很多实体的继承，例如：<br /><br />1.继承接口 IMayHaveTenant，继承后生成的sql语句将自动增加TenantId的查询条件，表中必须包含TenantId列<br />2.继承接口 IPassivable，继承后表中必须包含IsActive列<br />3.继承接口 FullAuditedEntity&lt;TPrimaryKey&gt; TPrimaryKey可以是long、int等值类型，必须包含IsDeleted、DeleterUserId、DeletionTime，其中这个接口<br />        还继承了AuditedEntity&lt;TPrimaryKey&gt;, IFullAudited, IAudited, ICreationAudited, IHasCreationTime, IModificationAudited, IHasModificationTime, IDeletionAudited, IHasDeletionTime, ISoftDelete，这些父类型、接口的定义自己F12就可以看到</pre>\n</div>\n<p>&nbsp;</p>\n<p>AbpLearn.EntityFrameworkCore/EntityFrameworkCore/AbpLearnDbContext.cs增加DbSet</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span> AbpLearnDbContext : AbpZeroDbContext&lt;Tenant, Role, User, AbpLearnDbContext&gt;<span style=\"color: #000000;\">\n    {\n        </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\"> Define a DbSet for each entity of the application </span><span style=\"color: #008000;\">*/</span>\n        \n        <span style=\"color: #0000ff;\">public</span> AbpLearnDbContext(DbContextOptions&lt;AbpLearnDbContext&gt;<span style=\"color: #000000;\"> options)\n            : </span><span style=\"color: #0000ff;\">base</span><span style=\"color: #000000;\">(options)\n        {\n            \n        }\n\n        </span><span style=\"color: #0000ff;\">public</span> DbSet&lt;AbpMenus&gt; AbpMenus { <span style=\"color: #0000ff;\">set</span>; <span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\">; }\n\n    }</span></pre>\n</div>\n<p>再去数据库中添加AbpMenus表 字段长度请自行调整</p>\n<div class=\"cnblogs_code\">\n<p>DROP TABLE IF EXISTS `AbpMenus`;<br />CREATE TABLE `AbpMenus` (<br />  `Id` int NOT NULL AUTO_INCREMENT,<br />  `MenuName` varchar(50) DEFAULT NULL,<br />  `PageName` varchar(50) DEFAULT NULL,<br />  `LName` varchar(50) DEFAULT NULL,<br />  `Url` varchar(50) DEFAULT NULL,<br />  `Icon` varchar(20) DEFAULT NULL,<br />  `ParentId` int DEFAULT NULL,<br />  `IsActive` bit(1) NOT NULL DEFAULT b'0',<br />  `Orders` int DEFAULT NULL,<br />  `TenantId` int DEFAULT NULL,<br />  PRIMARY KEY (`Id`)<br />) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n</div>\n<h3>第二步：添加Service和Dto</h3>\n<p>AbpLearn.Application/Authorization下添加Menus文件夹，然后添加IMenusAppService、MenusAppService，然后添加Dto文件夹</p>\n<p><img src=\"/cnblogs/13096427/789895-20200611210551368-1414077737.png\" alt=\"\" loading=\"lazy\" /></p>\n<h3>第三步：添加控制器和前台页面、js</h3>\n<p>Controller文件，MenusController.cs</p>\n<p>&nbsp;<img src=\"/cnblogs/13096427/789895-20200613120436495-1821816057.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;前台添加Menus及对应的js文件，可以简单省事的把其他文件夹复制粘贴一份，然后关键词修改下</p>\n<p><img src=\"/cnblogs/13096427/789895-20200611210653597-521335150.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>这些文件太多了，我会把这套代码上传到github中，文章最低部会把链接挂出来</p>\n<p>添加完之后我们就可以生成预览一下Menus，因为SetNavigation中未将Menus的url加进去，我们自己手打链接进入<img src=\"/cnblogs/13096427/789895-20200613122433371-1340406219.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>此时， 我们的菜单这一块的crud已经做好了，我们可以看到有一个Host管理员这个部分是什么意思哪？</p>\n<p>我们为了在当前Host中可以控制所有租户的菜单和权限，将当前Host、标准菜单、租户做一个select，代码如下</p>\n<div class=\"cnblogs_code\">\n<pre>    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> ChangeModalViewModel\n    {\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">int</span>? TenantId { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> TenancyName { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">int</span>? TenantMenuType { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n\n\n        </span><span style=\"color: #0000ff;\">public</span> List&lt;ComboboxItemDto&gt; TeneacyItems { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n    }</span></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">async</span> Task&lt;IActionResult&gt; IndexAsync(<span style=\"color: #0000ff;\">int</span>? id = <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">)\n        {\n            </span><span style=\"color: #0000ff;\">var</span> loginTenant = id &lt;= <span style=\"color: #800080;\">0</span> ? <span style=\"color: #0000ff;\">null</span> : _tenantManager.GetById((<span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\">)id);\n\n            </span><span style=\"color: #0000ff;\">var</span> viewModel = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ChangeModalViewModel\n            {\n                TenancyName </span>= loginTenant?<span style=\"color: #000000;\">.TenancyName,\n                TenantId </span>=<span style=\"color: #000000;\"> id\n            };\n\n            viewModel.TeneacyItems </span>=<span style=\"color: #000000;\"> _tenantManager.Tenants\n                .Select(p </span>=&gt; <span style=\"color: #0000ff;\">new</span> ComboboxItemDto(p.Id.ToString(), p.Name) { IsSelected = viewModel.TenancyName ==<span style=\"color: #000000;\"> p.TenancyName })\n                .ToList();\n\n            viewModel.TeneacyItems.Add(</span><span style=\"color: #0000ff;\">new</span> ComboboxItemDto(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">0</span><span style=\"color: #800000;\">\"</span>,<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Host管理员</span><span style=\"color: #800000;\">\"</span>) { IsSelected = id == <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\"> });\n\n            viewModel.TeneacyItems.Add(</span><span style=\"color: #0000ff;\">new</span> ComboboxItemDto(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">-1</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">默认菜单</span><span style=\"color: #800000;\">\"</span>) { IsSelected = id == -<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\"> });\n\n            ViewBag.LoginInfo </span>= <span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _sessionAppService.GetCurrentLoginInformations();\n\n            </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> View(viewModel);\n        }</span></pre>\n</div>\n<p>然后在Index.cshtml中添加或修改</p>\n<div class=\"cnblogs_code\">\n<pre>@model ChangeModalViewModel  // 添加<br /><br /><br /></pre>\n<p>&nbsp; @await Html.PartialAsync(\"~/Views/Menus/Index.AdvancedSearch.cshtml\", Model)&nbsp; //修改</p>\n<p>&nbsp;&nbsp;</p>\n<p>&nbsp; @await Html.PartialAsync(\"~/Views/Menus/_CreateModal.cshtml\",Model.TenantId)&nbsp; //修改</p>\n<p>&nbsp;&nbsp;</p>\n<p>&nbsp; //添加</p>\n<p>&nbsp; $(\"#ChangeTenancyName\").change(function (e) {<br />&nbsp; &nbsp; &nbsp;location.href = \"/Menus/Index/\" + this.options[this.selectedIndex].value;<br />&nbsp; });</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n</div>\n<p>修改_CreateModal.cshtml</p>\n<div class=\"cnblogs_code\" onclick=\"cnblogs_code_show('eb1b27ba-ce7d-494f-b2a1-896ae90bfd6b')\"><img src=\"http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif\" id=\"code_img_closed_eb1b27ba-ce7d-494f-b2a1-896ae90bfd6b\" class=\"code_img_closed\" /><img src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" id=\"code_img_opened_eb1b27ba-ce7d-494f-b2a1-896ae90bfd6b\" class=\"code_img_opened\" style=\"display: none;\" />\n<div id=\"cnblogs_code_open_eb1b27ba-ce7d-494f-b2a1-896ae90bfd6b\" class=\"cnblogs_code_hide\">\n<pre><span style=\"color: #000000;\">@using Abp.Authorization.Users\n@using Abp.MultiTenancy\n@using AbpLearn.MultiTenancy\n@using AbpLearn.Web.Models.Common.Modals\n@model </span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\">\n@{\n    Layout </span>= <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n}\n</span>&lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">modal fade</span><span style=\"color: #800000;\">\"</span> id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MenuCreateModal</span><span style=\"color: #800000;\">\"</span> tabindex=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">-1</span><span style=\"color: #800000;\">\"</span> role=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">dialog</span><span style=\"color: #800000;\">\"</span> aria-labelledby=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MenuCreateModalLabel</span><span style=\"color: #800000;\">\"</span> data-backdrop=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">static</span><span style=\"color: #800000;\">\"</span>&gt;\n    &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">modal-dialog modal-lg</span><span style=\"color: #800000;\">\"</span> role=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">document</span><span style=\"color: #800000;\">\"</span>&gt;\n        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">modal-content</span><span style=\"color: #800000;\">\"</span>&gt;<span style=\"color: #000000;\">\n            @await Html.PartialAsync(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">~/Views/Shared/Modals/_ModalHeader.cshtml</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #0000ff;\">new</span> ModalHeaderViewModel(L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">CreateNewMenu</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)))\n            </span>&lt;form name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">systemMenuCreateForm</span><span style=\"color: #800000;\">\"</span> role=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-horizontal</span><span style=\"color: #800000;\">\"</span>&gt;\n                &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">modal-body</span><span style=\"color: #800000;\">\"</span>&gt;\n                    &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row required</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MenuName</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n                        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                            &lt;input type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MenuName</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span> required minlength=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">2</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row required</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">LName</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n                        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                            &lt;input type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">LName</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span> required&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row required</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Url</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n                        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                            &lt;input type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Url</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">PageName</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n                        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                            &lt;input type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">PageName</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ParentId</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n                        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                            &lt;input type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ParentId</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Orders</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n                        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                            &lt;input type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Orders</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">for</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">CreateMenuIsActive</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">IsActive</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n                        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                            &lt;input id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">CreateMenuIsActive</span><span style=\"color: #800000;\">\"</span> type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">checkbox</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">IsActive</span><span style=\"color: #800000;\">\"</span> value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">true</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">checked</span> /&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n                &lt;input type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">hidden</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">TenantId</span><span style=\"color: #800000;\">\"</span> value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">@(Model)</span><span style=\"color: #800000;\">\"</span> /&gt;<span style=\"color: #000000;\">\n                @await Html.PartialAsync(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">~/Views/Shared/Modals/_ModalFooterWithSaveAndCancel.cshtml</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)\n            </span>&lt;/form&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;</pre>\n</div>\n<span class=\"cnblogs_code_collapse\">View Code</span></div>\n<p>&nbsp;</p>\n<p>修改_EditModal.cshtml</p>\n<div class=\"cnblogs_code\" onclick=\"cnblogs_code_show('3cac859e-397f-41e9-9596-025466ee5cbc')\"><img src=\"http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif\" id=\"code_img_closed_3cac859e-397f-41e9-9596-025466ee5cbc\" class=\"code_img_closed\" /><img src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" id=\"code_img_opened_3cac859e-397f-41e9-9596-025466ee5cbc\" class=\"code_img_opened\" style=\"display: none;\" />\n<div id=\"cnblogs_code_open_3cac859e-397f-41e9-9596-025466ee5cbc\" class=\"cnblogs_code_hide\">\n<pre><span style=\"color: #000000;\">@using AbpLearn.Authorization.Menus.Dto\n@using AbpLearn.Web.Models.Common.Modals\n@model MenuDto\n@{\n    Layout </span>= <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n}\n@await Html.PartialAsync(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">~/Views/Shared/Modals/_ModalHeader.cshtml</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #0000ff;\">new</span> ModalHeaderViewModel(L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">EditMenu</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)))\n</span>&lt;form name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MenuEditForm</span><span style=\"color: #800000;\">\"</span> role=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-horizontal</span><span style=\"color: #800000;\">\"</span>&gt;\n    &lt;input type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">hidden</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Id</span><span style=\"color: #800000;\">\"</span> value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">@Model.Id</span><span style=\"color: #800000;\">\"</span> /&gt;\n    &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">modal-body</span><span style=\"color: #800000;\">\"</span>&gt;\n        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row required</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">for</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">tenancy-name</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MenuName</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n            &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                &lt;input id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">tenancy-name</span><span style=\"color: #800000;\">\"</span> type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MenuName</span><span style=\"color: #800000;\">\"</span> value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">@Model.MenuName</span><span style=\"color: #800000;\">\"</span> required maxlength=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">64</span><span style=\"color: #800000;\">\"</span> minlength=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">2</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row required</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">for</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">name</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">LName</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n            &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                &lt;input id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">name</span><span style=\"color: #800000;\">\"</span> type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">LName</span><span style=\"color: #800000;\">\"</span> value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">@Model.LName</span><span style=\"color: #800000;\">\"</span> required maxlength=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">128</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row required</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">for</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">name</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Url</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n            &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                &lt;input id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">name</span><span style=\"color: #800000;\">\"</span> type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Url</span><span style=\"color: #800000;\">\"</span> value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">@Model.Url</span><span style=\"color: #800000;\">\"</span> required maxlength=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">128</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n\n        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row required</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">for</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">name</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">PageName</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n            &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                &lt;input id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">name</span><span style=\"color: #800000;\">\"</span> type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">PageName</span><span style=\"color: #800000;\">\"</span> value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">@Model.PageName</span><span style=\"color: #800000;\">\"</span> required maxlength=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">128</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row required</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">for</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">name</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ParentId</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n            &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                &lt;input id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">name</span><span style=\"color: #800000;\">\"</span> type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ParentId</span><span style=\"color: #800000;\">\"</span> value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">@Model.ParentId</span><span style=\"color: #800000;\">\"</span> required maxlength=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">128</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row required</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">for</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">name</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Orders</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n            &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                &lt;input id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">name</span><span style=\"color: #800000;\">\"</span> type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Orders</span><span style=\"color: #800000;\">\"</span> value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">@Model.Orders</span><span style=\"color: #800000;\">\"</span> required maxlength=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">128</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">for</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">isactive</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">IsActive</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n            &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                &lt;input id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">isactive</span><span style=\"color: #800000;\">\"</span> type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">checkbox</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">IsActive</span><span style=\"color: #800000;\">\"</span> value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">true</span><span style=\"color: #800000;\">\"</span> @(Model.IsActive ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">checked</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>) /&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;<span style=\"color: #000000;\">\n    @await Html.PartialAsync(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">~/Views/Shared/Modals/_ModalFooterWithSaveAndCancel.cshtml</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)\n</span>&lt;/form&gt;\n\n&lt;script src=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">~/view-resources/Views/Menus/_EditModal.js</span><span style=\"color: #800000;\">\"</span> asp-append-version=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">true</span><span style=\"color: #800000;\">\"</span>&gt;&lt;/script&gt;</pre>\n</div>\n<span class=\"cnblogs_code_collapse\">View Code</span></div>\n<p>修改Index.AdvancedSearch.cshtml</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">@using AbpLearn.Web.Views.Shared.Components.TenantChange\n@using Abp.Application.Services.Dto\n@model ChangeModalViewModel\n\n    </span>&lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">abp-advanced-search</span><span style=\"color: #800000;\">\"</span>&gt;\n        &lt;form id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MenusSearchForm</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-horizontal</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;input type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">hidden</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">TenantId</span><span style=\"color: #800000;\">\"</span> value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">@Model.TenantId</span><span style=\"color: #800000;\">\"</span> /&gt;\n            &lt;/form&gt;\n            &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-horizontal</span><span style=\"color: #800000;\">\"</span>&gt;\n                &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group</span><span style=\"color: #800000;\">\"</span>&gt;<span style=\"color: #000000;\">\n                    @Html.DropDownList(\n                       </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ChangeTenancyNames</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                       Model.TeneacyItems.Select(i </span>=&gt;<span style=\"color: #000000;\"> i.ToSelectListItem()),\n                       </span><span style=\"color: #0000ff;\">new</span> { @class = <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control edited</span><span style=\"color: #800000;\">\"</span>, id = <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ChangeTenancyName</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\"> })\n                </span>&lt;/div&gt;\n            &lt;/div&gt;\n    &lt;/div&gt;</pre>\n</div>\n<p>因为在abp里面加载当前列表调用的是abp.services.app.menus.getAll方法，我们还需要对MenusAppService中的GetAllAsync做一下修改</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">    [Serializable]\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> MenusPagedResultRequestDto: PagedResultRequestDto, IPagedAndSortedResultRequest\n    {\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">int</span>? TenantId { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">string</span> Sorting { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">bool</span> ShowAll { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n\n    }</span></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #0000ff;\">#region</span> 查询全部菜单\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 查询全部菜单\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"input\"&gt;&lt;/param&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">override</span> <span style=\"color: #0000ff;\">async</span> Task&lt;PagedResultDto&lt;MenuDto&gt;&gt;<span style=\"color: #000000;\"> GetAllAsync(MenusPagedResultRequestDto input)\n        {\n            IQueryable</span>&lt;AbpMenus&gt;<span style=\"color: #000000;\"> query;\n\n            query </span>= CreateFilteredQuery(input).Where(o =&gt; o.TenantId == (input.TenantId == <span style=\"color: #800080;\">0</span> ? <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\"> : input.TenantId));\n\n            </span><span style=\"color: #0000ff;\">var</span> totalCount = <span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> AsyncQueryableExecuter.CountAsync(query);\n\n            query </span>=<span style=\"color: #000000;\"> ApplySorting(query, input);\n            </span><span style=\"color: #0000ff;\">if</span> (!input.ShowAll) query =<span style=\"color: #000000;\"> ApplyPaging(query, input);\n\n            </span><span style=\"color: #0000ff;\">var</span> entities = <span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> AsyncQueryableExecuter.ToListAsync(query);\n\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">new</span> PagedResultDto&lt;MenuDto&gt;<span style=\"color: #000000;\">(\n                totalCount,\n                entities.Select(MapToEntityDto).ToList()\n            );\n        }\n\n        </span><span style=\"color: #0000ff;\">#endregion</span></pre>\n</div>\n<p>这样，我们在选中下面中的任意一个Tenant时，将会跳到对应的菜单里面了</p>\n<p>&nbsp;</p>\n<p><img src=\"/cnblogs/13096427/789895-20200613122549077-374827601.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;我们先把Host管理员菜单和默认菜单配置一下</p>\n<p><img src=\"/cnblogs/13096427/789895-20200613131544727-322024248.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;<img src=\"/cnblogs/13096427/789895-20200613131507643-1916575069.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<h2>二、实现添加租户时，初始化标准菜单和权限</h2>\n<p>首先我们找到添加租户的地方，去TenantAppService里面去找，可以看到有CreateAsync的重写</p>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">override</span> <span style=\"color: #0000ff;\">async</span> Task&lt;TenantDto&gt;<span style=\"color: #000000;\"> CreateAsync(CreateTenantDto input)\n        {\n            CheckCreatePermission();\n\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> Create tenant</span>\n            <span style=\"color: #0000ff;\">var</span> tenant = ObjectMapper.Map&lt;Tenant&gt;<span style=\"color: #000000;\">(input);\n            tenant.ConnectionString </span>=<span style=\"color: #000000;\"> input.ConnectionString.IsNullOrEmpty()\n                </span>? <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">\n                : SimpleStringCipher.Instance.Encrypt(input.ConnectionString);\n\n            </span><span style=\"color: #0000ff;\">var</span> defaultEdition = <span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _editionManager.FindByNameAsync(EditionManager.DefaultEditionName);\n            </span><span style=\"color: #0000ff;\">if</span> (defaultEdition != <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)\n            {\n                tenant.EditionId </span>=<span style=\"color: #000000;\"> defaultEdition.Id;\n            }\n\n            </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _tenantManager.CreateAsync(tenant);\n            </span><span style=\"color: #0000ff;\">await</span> CurrentUnitOfWork.SaveChangesAsync(); <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> To get new tenant's id.\n\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> Create tenant database</span>\n<span style=\"color: #000000;\">            _abpZeroDbMigrator.CreateOrMigrateForTenant(tenant);\n\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> We are working entities of new tenant, so changing tenant filter</span>\n            <span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> (CurrentUnitOfWork.SetTenantId(tenant.Id))\n            {\n                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> Create static roles for new tenant</span>\n                CheckErrors(<span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _roleManager.CreateStaticRoles(tenant.Id));\n\n                </span><span style=\"color: #0000ff;\">await</span> CurrentUnitOfWork.SaveChangesAsync(); <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> To get static role ids\n\n                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> Grant all permissions to admin role</span>\n                <span style=\"color: #0000ff;\">var</span> adminRole = _roleManager.Roles.Single(r =&gt; r.Name ==<span style=\"color: #000000;\"> StaticRoleNames.Tenants.Admin);\n                </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _roleManager.GrantAllPermissionsAsync(adminRole);\n\n                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> Create admin user for the tenant</span>\n                <span style=\"color: #0000ff;\">var</span> adminUser =<span style=\"color: #000000;\"> User.CreateTenantAdminUser(tenant.Id, input.AdminEmailAddress);\n                </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _userManager.InitializeOptionsAsync(tenant.Id);\n                CheckErrors(</span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _userManager.CreateAsync(adminUser, User.DefaultPassword));\n                </span><span style=\"color: #0000ff;\">await</span> CurrentUnitOfWork.SaveChangesAsync(); <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> To get admin user's id\n\n                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> Assign admin user to role!</span>\n                CheckErrors(<span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _userManager.AddToRoleAsync(adminUser, adminRole.Name));\n                </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> CurrentUnitOfWork.SaveChangesAsync();\n            }\n\n            </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> MapToEntityDto(tenant);\n        }</span></pre>\n</div>\n<p>我们需要做的是，在&nbsp;using (CurrentUnitOfWork.SetTenantId(tenant.Id)) 的内部尾部添加赋予菜单和权限的方法即可</p>\n<p>赋予菜单和权限的方法我们分开写，都放在MenusAppService中，</p>\n<div class=\"cnblogs_code\">\n<pre>    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">interface</span> IMenusAppService : IAsyncCrudAppService&lt;MenuDto, <span style=\"color: #0000ff;\">int</span>, MenusPagedResultRequestDto, CreateMenuDto, MenuDto&gt;<span style=\"color: #000000;\">\n    {\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 赋予默认菜单\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"input\"&gt;&lt;/param&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n        Task GiveMenusAsync(EntityDto&lt;<span style=\"color: #0000ff;\">int</span>&gt;<span style=\"color: #000000;\"> input);\n\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 赋予当前租户Admin角色菜单权限\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"input\"&gt;&lt;/param&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n        Task GivePermissionsAsync(EntityDto&lt;<span style=\"color: #0000ff;\">int</span>&gt;<span style=\"color: #000000;\"> input);\n    }</span></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>        #region 赋予默认菜单\n        public async Task GiveMenusAsync(EntityDto&lt;int&gt; input)\n        {\n            if (input.Id &gt; 0)\n            {\n                var tenant = await _tenantManager.GetByIdAsync(input.Id);\n\n                using (_unitOfWorkManager.Current.SetTenantId(tenant.Id))\n                {\n                    var query = CreateFilteredQuery(new MenusPagedResultRequestDto()).Where(o =&gt; o.TenantId == tenant.Id);\n\n                    var systemMenus = await AsyncQueryableExecuter.ToListAsync(query);\n\n                    if (!systemMenus.Any())\n                    {\n                        query = CreateFilteredQuery(new MenusPagedResultRequestDto()).Where(o =&gt; o.TenantId == -1);\n\n                        var defaultMenus = await AsyncQueryableExecuter.ToListAsync(query);\n                        if (defaultMenus.Any())\n                        {\n                            List&lt;MenusInsert&gt; GetMenusInserts(List&lt;AbpMenus&gt; abpMenus,int parentId = 0)\n                            {\n                                List&lt;MenusInsert&gt; menusInserts = new List&lt;MenusInsert&gt;();\n                                foreach (var entity in abpMenus.Where(o =&gt; o.ParentId == parentId))\n                                {\n                                    var insert = new MenusInsert()\n                                    {\n                                        LName = entity.LName,\n                                        MenuName = entity.MenuName,\n                                        PageName = entity.PageName,\n                                        Icon = entity.Icon,\n                                        Url = entity.Url,\n                                        IsActive = entity.IsActive,\n                                        Orders = entity.Orders,\n                                        ParentId = entity.ParentId,\n                                        TenantId = tenant.Id\n                                    };\n                                    insert.menusInserts = GetMenusInserts(abpMenus, entity.Id);\n                                    menusInserts.Add(insert);\n                                }\n                                return menusInserts;\n                            }\n\n                            async Task InsertMenusAsync(List&lt;MenusInsert&gt; inserts,int parentId = 0)\n                            {\n                                foreach (var insert in inserts)\n                                {\n                                    var entity = await CreateAsync(new AbpMenus()\n                                    {\n                                        LName = insert.LName,\n                                        MenuName = insert.MenuName,\n                                        PageName = insert.PageName,\n                                        Icon = insert.Icon,\n                                        Url = insert.Url,\n                                        IsActive = insert.IsActive,\n                                        Orders = insert.Orders,\n                                        ParentId = parentId,\n                                        TenantId = tenant.Id\n                                    });\n                                    if (insert.menusInserts.Any())\n                                    {\n                                        await InsertMenusAsync(insert.menusInserts, entity.Id);\n                                    }\n                                }\n                            }\n                            await InsertMenusAsync(GetMenusInserts(defaultMenus));\n                            \n                        }\n                    }\n                }\n            }\n\n        }\n        #endregion\n\n\n        <span style=\"color: #0000ff;\">#region</span> 赋予当前租户Admin角色菜单权限\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 赋予当前租户Admin角色菜单权限\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"input\"&gt;&lt;/param&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">async</span> Task GivePermissionsAsync(EntityDto&lt;<span style=\"color: #0000ff;\">int</span>&gt;<span style=\"color: #000000;\"> input)\n        {\n            </span><span style=\"color: #0000ff;\">if</span> (input.Id &gt; <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">)\n            {\n                </span><span style=\"color: #0000ff;\">var</span> tenant = <span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _tenantManager.GetByIdAsync(input.Id);\n\n                </span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> (_unitOfWorkManager.Current.SetTenantId(tenant.Id))\n                {\n                    </span><span style=\"color: #0000ff;\">var</span> adminRoles = <span style=\"color: #0000ff;\">await</span> _roleRepository.GetAllListAsync(o =&gt; o.Name == StaticRoleNames.Tenants.Admin &amp;&amp; o.TenantId ==<span style=\"color: #000000;\"> tenant.Id);\n                    </span><span style=\"color: #0000ff;\">if</span> (adminRoles.FirstOrDefault() != <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)\n                    {\n                        </span><span style=\"color: #0000ff;\">var</span> adminRole =<span style=\"color: #000000;\"> adminRoles.FirstOrDefault();\n\n                        </span><span style=\"color: #0000ff;\">var</span> query = CreateFilteredQuery(<span style=\"color: #0000ff;\">new</span> MenusPagedResultRequestDto()).Where(o =&gt; o.TenantId ==<span style=\"color: #000000;\"> tenant.Id);\n\n                        </span><span style=\"color: #0000ff;\">var</span> systemMenus = <span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> AsyncQueryableExecuter.ToListAsync(query);\n\n                        </span><span style=\"color: #0000ff;\">var</span> permissions =<span style=\"color: #000000;\"> ConvertTenantPermissions(systemMenus);\n\n                        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">await _roleManager.ResetAllPermissionsAsync(adminRole.FirstOrDefault()); </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">重置授权</span>\n\n                        <span style=\"color: #0000ff;\">var</span> active_BatchCount = <span style=\"color: #800080;\">10</span><span style=\"color: #000000;\">;\n                        </span><span style=\"color: #0000ff;\">var</span> active_permissions = ConvertTenantPermissions(systemMenus.Where(o =&gt;<span style=\"color: #000000;\"> o.IsActive).ToList());\n                        </span><span style=\"color: #0000ff;\">for</span> (<span style=\"color: #0000ff;\">int</span> i = <span style=\"color: #800080;\">0</span>; i &lt; active_permissions.Count(); i += <span style=\"color: #800080;\">10</span>)<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">每次后移5位</span>\n<span style=\"color: #000000;\">                        {\n                            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">await _roleManager.SetGrantedPermissionsAsync(adminRole.FirstOrDefault().Id, active_permissions.Take(active_BatchCount).Skip(i));</span>\n                            <span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #0000ff;\">var</span> notActive_permission <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> active_permissions.Take(active_BatchCount).Skip(i))\n                            {\n                                </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _roleManager.GrantPermissionAsync(adminRole, notActive_permission);\n                            }\n                            active_BatchCount </span>+= <span style=\"color: #800080;\">10</span>;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">每次从数组中选出N+10位，skip前N位</span>\n<span style=\"color: #000000;\">                        }\n\n                        </span><span style=\"color: #0000ff;\">var</span> notActive_BatchCount = <span style=\"color: #800080;\">10</span><span style=\"color: #000000;\">;\n                        </span><span style=\"color: #0000ff;\">var</span> notActive_permissions = ConvertTenantPermissions(systemMenus.Where(o =&gt; !<span style=\"color: #000000;\">o.IsActive).ToList());\n                        </span><span style=\"color: #0000ff;\">for</span> (<span style=\"color: #0000ff;\">int</span> i = <span style=\"color: #800080;\">0</span>; i &lt; notActive_permissions.Count(); i += <span style=\"color: #800080;\">10</span>)<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">每次后移5位</span>\n<span style=\"color: #000000;\">                        {\n                            </span><span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #0000ff;\">var</span> notActive_permission <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> notActive_permissions.Take(notActive_BatchCount).Skip(i))\n                            {\n                                </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _roleManager.ProhibitPermissionAsync(adminRole, notActive_permission);\n                            }\n                            notActive_BatchCount </span>+= <span style=\"color: #800080;\">10</span>;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">每次从数组中选出N+10位，skip前N位</span>\n<span style=\"color: #000000;\">                        }\n                    }\n                    </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">\n                    {\n                        </span><span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> AbpDbConcurrencyException(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">未获取到当前租户的Admin角色！</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n                    }\n                }\n            }\n            </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">\n            {\n                </span><span style=\"color: #0000ff;\">var</span> adminRoles = <span style=\"color: #0000ff;\">await</span> _roleRepository.GetAllListAsync(o =&gt; o.Name == StaticRoleNames.Tenants.Admin &amp;&amp; o.TenantId == <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">);\n                </span><span style=\"color: #0000ff;\">if</span> (adminRoles.FirstOrDefault() != <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)\n                {\n                    </span><span style=\"color: #0000ff;\">var</span> adminRole =<span style=\"color: #000000;\"> adminRoles.FirstOrDefault();\n\n                    </span><span style=\"color: #0000ff;\">var</span> query = CreateFilteredQuery(<span style=\"color: #0000ff;\">new</span> MenusPagedResultRequestDto()).Where(o =&gt; o.TenantId == <span style=\"color: #0000ff;\">null</span> || o.TenantId == <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">);\n\n                    </span><span style=\"color: #0000ff;\">var</span> systemMenus = <span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> AsyncQueryableExecuter.ToListAsync(query);\n\n                    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">await _roleManager.ResetAllPermissionsAsync(adminRole.FirstOrDefault()); </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">重置授权</span>\n\n                    <span style=\"color: #0000ff;\">var</span> active_BatchCount = <span style=\"color: #800080;\">10</span><span style=\"color: #000000;\">;\n                    </span><span style=\"color: #0000ff;\">var</span> active_permissions = ConvertHostPermissions(systemMenus.Where(o =&gt;<span style=\"color: #000000;\"> o.IsActive).ToList());\n                    </span><span style=\"color: #0000ff;\">for</span> (<span style=\"color: #0000ff;\">int</span> i = <span style=\"color: #800080;\">0</span>; i &lt; active_permissions.Count(); i += <span style=\"color: #800080;\">10</span>)<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">每次后移5位</span>\n<span style=\"color: #000000;\">                    {\n                        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">await _roleManager.SetGrantedPermissionsAsync(adminRole.FirstOrDefault().Id, active_permissions.Take(active_BatchCount).Skip(i));</span>\n                        <span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #0000ff;\">var</span> notActive_permission <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> active_permissions.Take(active_BatchCount).Skip(i))\n                        {\n                            </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _roleManager.GrantPermissionAsync(adminRole, notActive_permission);\n                        }\n                        active_BatchCount </span>+= <span style=\"color: #800080;\">10</span>;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">每次从数组中选出N+10位，skip前N位</span>\n<span style=\"color: #000000;\">                    }\n\n                    </span><span style=\"color: #0000ff;\">var</span> notActive_BatchCount = <span style=\"color: #800080;\">10</span><span style=\"color: #000000;\">;\n                    </span><span style=\"color: #0000ff;\">var</span> notActive_permissions = ConvertHostPermissions(systemMenus.Where(o =&gt; !<span style=\"color: #000000;\">o.IsActive).ToList());\n                    </span><span style=\"color: #0000ff;\">for</span> (<span style=\"color: #0000ff;\">int</span> i = <span style=\"color: #800080;\">0</span>; i &lt; notActive_permissions.Count(); i += <span style=\"color: #800080;\">10</span>)<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">每次后移5位</span>\n<span style=\"color: #000000;\">                    {\n                        </span><span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #0000ff;\">var</span> notActive_permission <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> notActive_permissions.Take(notActive_BatchCount).Skip(i))\n                        {\n                            </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _roleManager.ProhibitPermissionAsync(adminRole, notActive_permission);\n                        }\n                        notActive_BatchCount </span>+= <span style=\"color: #800080;\">10</span>;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">每次从数组中选出N+10位，skip前N位</span>\n<span style=\"color: #000000;\">                    }\n                }\n            }\n        }\n\n        </span><span style=\"color: #0000ff;\">public</span> IEnumerable&lt;Permission&gt; ConvertTenantPermissions(IReadOnlyList&lt;AbpMenus&gt;<span style=\"color: #000000;\"> systemMenus)\n        {\n            </span><span style=\"color: #0000ff;\">return</span> systemMenus.Select(o =&gt; <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Permission(o.PageName, L(o.MenuName), L(o.LName), MultiTenancySides.Tenant));\n        }\n\n        </span><span style=\"color: #0000ff;\">public</span> IEnumerable&lt;Permission&gt; ConvertHostPermissions(IReadOnlyList&lt;AbpMenus&gt;<span style=\"color: #000000;\"> systemMenus)\n        {\n            </span><span style=\"color: #0000ff;\">return</span> systemMenus.Select(o =&gt; <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Permission(o.PageName, L(o.MenuName), L(o.LName), MultiTenancySides.Host));\n        }\n        </span><span style=\"color: #0000ff;\">#endregion</span></pre>\n</div>\n<p>TenantAppService.cs中做一下修改</p>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">override</span> <span style=\"color: #0000ff;\">async</span> Task&lt;TenantDto&gt;<span style=\"color: #000000;\"> CreateAsync(CreateTenantDto input)\n        {\n            CheckCreatePermission();\n\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> Create tenant</span>\n            <span style=\"color: #0000ff;\">var</span> tenant = ObjectMapper.Map&lt;Tenant&gt;<span style=\"color: #000000;\">(input);\n            tenant.ConnectionString </span>=<span style=\"color: #000000;\"> input.ConnectionString.IsNullOrEmpty()\n                </span>? <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">\n                : SimpleStringCipher.Instance.Encrypt(input.ConnectionString);\n\n            </span><span style=\"color: #0000ff;\">var</span> defaultEdition = <span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _editionManager.FindByNameAsync(EditionManager.DefaultEditionName);\n            </span><span style=\"color: #0000ff;\">if</span> (defaultEdition != <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)\n            {\n                tenant.EditionId </span>=<span style=\"color: #000000;\"> defaultEdition.Id;\n            }\n\n            </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _tenantManager.CreateAsync(tenant);\n            </span><span style=\"color: #0000ff;\">await</span> CurrentUnitOfWork.SaveChangesAsync(); <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> To get new tenant's id.\n\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> Create tenant database</span>\n<span style=\"color: #000000;\">            _abpZeroDbMigrator.CreateOrMigrateForTenant(tenant);\n\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> We are working entities of new tenant, so changing tenant filter</span>\n            <span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> (CurrentUnitOfWork.SetTenantId(tenant.Id))\n            {\n                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> Create static roles for new tenant</span>\n                CheckErrors(<span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _roleManager.CreateStaticRoles(tenant.Id));\n\n                </span><span style=\"color: #0000ff;\">await</span> CurrentUnitOfWork.SaveChangesAsync(); <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> To get static role ids\n\n                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> Grant all permissions to admin role</span>\n                <span style=\"color: #0000ff;\">var</span> adminRole = _roleManager.Roles.Single(r =&gt; r.Name ==<span style=\"color: #000000;\"> StaticRoleNames.Tenants.Admin);\n                </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _roleManager.GrantAllPermissionsAsync(adminRole);\n\n                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> Create admin user for the tenant</span>\n                <span style=\"color: #0000ff;\">var</span> adminUser =<span style=\"color: #000000;\"> User.CreateTenantAdminUser(tenant.Id, input.AdminEmailAddress);\n                </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _userManager.InitializeOptionsAsync(tenant.Id);\n                CheckErrors(</span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _userManager.CreateAsync(adminUser, User.DefaultPassword));\n                </span><span style=\"color: #0000ff;\">await</span> CurrentUnitOfWork.SaveChangesAsync(); <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> To get admin user's id\n\n                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> Assign admin user to role!</span>\n                CheckErrors(<span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _userManager.AddToRoleAsync(adminUser, adminRole.Name));\n                </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> CurrentUnitOfWork.SaveChangesAsync();\n\n                </span><span style=\"color: #ff0000;\">await _menusAppService.GiveMenusAsync(new EntityDto&lt;int&gt;() { Id = tenant.Id });\n                await CurrentUnitOfWork.SaveChangesAsync();\n\n                await _menusAppService.GivePermissionsAsync(new EntityDto&lt;int&gt;() { Id = tenant.Id });\n                await</span><span style=\"color: #000000;\"><span style=\"color: #ff0000;\"> CurrentUnitOfWork.SaveChangesAsync();</span>\n            }\n\n            </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> MapToEntityDto(tenant);\n        }</span></pre>\n</div>\n<p>现在我们添加租户企业1、企业2</p>\n<p><img src=\"/cnblogs/13096427/789895-20200613151834645-748331091.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;<img src=\"/cnblogs/13096427/789895-20200613151852573-1477272883.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;现在菜单已经同步好了，我们去数据库看下权限的同步</p>\n<p><img src=\"/cnblogs/13096427/789895-20200613152221722-277186366.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>TenantId：</p>\n<p>null是Host</p>\n<p>1是abp页面第一次加载时初始化的Default租户</p>\n<p>2是我之前添加的旧的企业1，那个时候方法没写好，就把2的删掉了</p>\n<p>3是企业2</p>\n<p>4是企业1</p>\n<p>由此可以看出，我们添加的菜单对应的PageName已经作为权限添加到权限表了</p>\n<p>&nbsp;</p>\n<h2>三、实现菜单修改后，权限赋予对应租户</h2>\n<p>这一个其实在二里面已经写好了，前台做一个按钮，赋予权限，调用一下就好了</p>\n<p>例如：</p>\n<p>Index.cshtml&nbsp; &nbsp;//为什么要加getCurrentLoginInformationsOutput.Tenant == null的判断？是因为租户在进入菜单管理的地方，我们不给他们添加、赋予权限的权限</p>\n<p><img src=\"/cnblogs/13096427/789895-20200613152628601-193312193.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;在/wwwroot/view-resources/Views/Menus/Index.js中添加</p>\n<div class=\"cnblogs_code\">\n<pre>    $(document).on(<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">click</span><span style=\"color: #800000;\">'</span>, <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">#GivePermissions</span><span style=\"color: #800000;\">'</span><span style=\"color: #000000;\">, function (e) {\n        </span><span style=\"color: #0000ff;\">var</span> tenantId = $(<span style=\"color: #0000ff;\">this</span>).attr(<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">data-tenant-id</span><span style=\"color: #800000;\">'</span><span style=\"color: #000000;\">);\n\n        abp.message.confirm(\n            abp.utils.formatString(\n                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">是否赋予当前租户管理员账号所有权限？</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">系统</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n            ),\n            </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">,\n            (isConfirmed) </span>=&gt;<span style=\"color: #000000;\"> {\n                </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (isConfirmed) {\n                    _menuService\n                        .givePermissions({\n                            id: tenantId\n                        })\n                        .done(() </span>=&gt;<span style=\"color: #000000;\"> {\n                            abp.notify.info(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">操作成功！</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n                            _$menusTable.ajax.reload();\n                        });\n                }\n            }\n        );\n    });</span></pre>\n</div>\n<h2>四、实现菜单的动态加载</h2>\n<p>在<a href=\"https://www.cnblogs.com/wangpengzong/p/13089690.html\">https://www.cnblogs.com/wangpengzong/p/13089690.html</a>中我们找到了菜单生成的地方，在最底部，通过<span style=\"font-family: 'Courier New'; font-size: 12px; white-space: pre-wrap;\">NavigationManager来获取到Menus，这里其实有一个初始化方法（</span><span style=\"font-family: 'Courier New'; font-size: 12px; white-space: pre-wrap;\">Initialize</span><span style=\"font-family: 'Courier New'; font-size: 12px; white-space: pre-wrap;\">），调用的是</span><span style=\"font-family: 'Courier New';\"><span style=\"font-size: 12px; white-space: pre-wrap;\">AbpLearnNavigationProvider的</span></span><span style=\"font-family: 'Courier New'; font-size: 12px; white-space: pre-wrap;\">SetNavigation方法来进行本地化，然后在</span></p>\n<pre><span style=\"margin: 0px; padding: 0px; line-height: 1.5 !important;\">NavigationManager的非静态构造函数中去获取已经本地化的Menus，但是本地化Menus因为是在初始化时，程序的初始化我们无法获取到当前的Tenant信息，所以只能将获取Menus的地方推迟，放在倒数第二个类</span>UserNavigationManager里面的GetMenuAsync方法中，我们来看下GetMenuAsync</pre>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">async</span> Task&lt;UserMenu&gt; GetMenuAsync(<span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> menuName, UserIdentifier user)\n        {\n            </span><span style=\"color: #0000ff;\">var</span> menuDefinition =<span style=\"color: #000000;\"> _navigationManager.Menus.GetOrDefault(menuName);\n            </span><span style=\"color: #0000ff;\">if</span> (menuDefinition == <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)\n            {\n                </span><span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> AbpException(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">There is no menu with given name: </span><span style=\"color: #800000;\">\"</span> +<span style=\"color: #000000;\"> menuName);\n            }\n\n            </span><span style=\"color: #0000ff;\">var</span> userMenu = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> UserMenu(menuDefinition, _localizationContext);\n            </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> FillUserMenuItems(user, menuDefinition.Items, userMenu.Items);\n            </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> userMenu;\n        }</span></pre>\n</div>\n<p>第一句话获取menuDefinition是关键点，我们将menuDefinition修改为从数据库中获取，在AbpLearn.Application/Authorization/Menus下添加UserNavigationManager.cs</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #0000ff;\"><span style=\"color: #0000ff;\">using Abp;\nusing Abp.Application.Features;\nusing Abp.Application.Navigation;\nusing Abp.Authorization;\nusing Abp.Dependency;\nusing Abp.Localization;\nusing Abp.MultiTenancy;\nusing Abp.Runtime.Session;\nusing AbpLearn.Authorization.Menus.Dto;\nusing AbpLearn.Sessions;\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace AbpLearn.Authorization.Menus\n{\n    public class UserNavigationManager : IUserNavigationManager, ITransientDependency\n    {\n        public IAbpSession AbpSession { get; set; }\n\n        private readonly INavigationManager _navigationManager;\n        private readonly ILocalizationContext _localizationContext;\n        private readonly IIocResolver _iocResolver;\n        private readonly IMenusAppService _menuAppService;\n        private readonly ISessionAppService _sessionAppService;\n\n        public IDictionary&lt;string, MenuDefinition&gt; Menus { get; private set; }\n        public MenuDefinition MainMenu\n        {\n            get { return Menus[\"MainMenu\"]; }\n        }\n        public UserNavigationManager(\n            INavigationManager navigationManager,\n            ILocalizationContext localizationContext,\n            IMenusAppService menuAppService,\n            ISessionAppService sessionAppService,\n            IIocResolver iocResolver)\n        {\n            _navigationManager = navigationManager;\n            _localizationContext = localizationContext;\n            _iocResolver = iocResolver;\n            AbpSession = NullAbpSession.Instance;\n            _menuAppService = menuAppService;\n            _sessionAppService = sessionAppService;\n        }\n\n        public async Task&lt;UserMenu&gt; GetMenuAsync(string menuName, UserIdentifier user)\n        {\n            var loginInfo = await _sessionAppService.GetCurrentLoginInformations();\n\n            Menus = new Dictionary&lt;string, MenuDefinition&gt;\n                    {\n                        {\"MainMenu\", new MenuDefinition(\"MainMenu\", new LocalizableString(\"MainMenu\", AbpConsts.LocalizationSourceName))}\n                    };\n\n            var lists = await _menuAppService.GetAllAsync(new MenusPagedResultRequestDto() { ShowAll = true, TenantId = (loginInfo.Tenant == null ? 0 : loginInfo.Tenant.Id) });\n            var ParentMenu = lists.Items.Where(k =&gt; k.IsActive).ToList().Where(x =&gt; x.ParentId == 0).ToList();\n            if (ParentMenu.Any())\n            {\n                ParentMenu.ForEach(g =&gt;\n                {\n                    var menu = new MenuItemDefinition(\n                          g.LName,\n                          MenuL(g.MenuName),\n                          g.Icon,\n                          g.Url,\n                          false,\n                          g.Orders\n                          );\n                    BuildSubMenu(menu, g.Id, lists.Items.Where(k =&gt; k.IsActive).ToList());\n                    MainMenu.AddItem(menu);\n                });\n            }\n            \n            var menuDefinition = MainMenu;\n            if (menuDefinition == null)\n            {\n                throw new AbpException(\"There is no menu with given name: \" + menuName);\n            }\n            var userMenu = new UserMenu();\n            userMenu.Name = menuDefinition.Name;\n            userMenu.DisplayName = menuDefinition.DisplayName.Localize(_localizationContext);\n            userMenu.CustomData = menuDefinition.CustomData;\n            userMenu.Items = new List&lt;UserMenuItem&gt;();\n            await FillUserMenuItems(user, menuDefinition.Items, userMenu.Items);\n            return userMenu;\n        }\n\n        public async Task&lt;IReadOnlyList&lt;UserMenu&gt;&gt; GetMenusAsync(UserIdentifier user)\n        {\n            var userMenus = new List&lt;UserMenu&gt;();\n\n            foreach (var menu in _navigationManager.Menus.Values)\n            {\n                userMenus.Add(await GetMenuAsync(menu.Name, user));\n            }\n\n            return userMenus;\n        }\n        public void BuildSubMenu(MenuItemDefinition menu, int parentId, List&lt;MenuDto&gt; list)\n        {\n            var nList = list.Where(x =&gt; x.ParentId == parentId).ToList();\n            if (nList != null &amp;&amp; nList.Count &gt; 0)\n            {\n                nList.ForEach(g =&gt;\n                {\n                    var subMenu = new MenuItemDefinition(\n                         g.PageName,\n                        MenuL(g.MenuName),\n                        g.Icon,\n                        g.Url,\n                        false,\n                      g.Orders\n                        );\n                    menu.AddItem(subMenu);\n                    BuildSubMenu(subMenu, g.Id, list);\n                });\n            }\n        }\n\n        private static ILocalizableString MenuL(string name)\n        {\n            return new LocalizableString(name, AbpLearnConsts.LocalizationSourceName);\n        }\n        private async Task&lt;int&gt; FillUserMenuItems(UserIdentifier user, IList&lt;MenuItemDefinition&gt; menuItemDefinitions, IList&lt;UserMenuItem&gt; userMenuItems)\n        {\n            //TODO: Can be optimized by re-using FeatureDependencyContext.\n\n            var addedMenuItemCount = 0;\n\n            using (var scope = _iocResolver.CreateScope())\n            {\n                var permissionDependencyContext = scope.Resolve&lt;PermissionDependencyContext&gt;();\n                permissionDependencyContext.User = user;\n\n                var featureDependencyContext = scope.Resolve&lt;FeatureDependencyContext&gt;();\n                featureDependencyContext.TenantId = user == null ? null : user.TenantId;\n\n                foreach (var menuItemDefinition in menuItemDefinitions)\n                {\n                    if (menuItemDefinition.RequiresAuthentication &amp;&amp; user == null)\n                    {\n                        continue;\n                    }\n\n                    if (menuItemDefinition.PermissionDependency != null &amp;&amp;\n                        (user == null || !(await menuItemDefinition.PermissionDependency.IsSatisfiedAsync(permissionDependencyContext))))\n                    {\n                        continue;\n                    }\n\n                    if (menuItemDefinition.FeatureDependency != null &amp;&amp;\n                        (AbpSession.MultiTenancySide == MultiTenancySides.Tenant || (user != null &amp;&amp; user.TenantId != null)) &amp;&amp;\n                        !(await menuItemDefinition.FeatureDependency.IsSatisfiedAsync(featureDependencyContext)))\n                    {\n                        continue;\n                    }\n\n                    var userMenuItem = new UserMenuItem(menuItemDefinition, _localizationContext);\n                    if (menuItemDefinition.IsLeaf || (await FillUserMenuItems(user, menuItemDefinition.Items, userMenuItem.Items)) &gt; 0)\n                    {\n                        userMenuItems.Add(userMenuItem);\n                        ++addedMenuItemCount;\n                    }\n                }\n            }\n\n            return addedMenuItemCount;\n        }\n    }\n}</span></span></pre>\n<p><span style=\"color: #0000ff;\">&nbsp;</span></p>\n</div>\n<p>然后在Mvc项目的Startup.cs/ConfigureServices下增加</p>\n<div class=\"cnblogs_code\">\n<pre>            services.AddScoped&lt;IUserNavigationManager, UserNavigationManager&gt;();</pre>\n</div>\n<p>因为在abp中菜单被做做成了模块，在程序初始化时模块添加进去，但是我们将菜单修改成了每次读取数据库加载，那么我们就不需要加载这个模块了<span style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12px;\"><br /></span></p>\n<p>在mvc项目的AbpLearnWebMvcModule.cs注释下面这句话</p>\n<div class=\"cnblogs_code\">\n<pre>            <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Configuration.Navigation.Providers.Add&lt;AbpLearnNavigationProvider&gt;();</span></pre>\n</div>\n<p>将AbpLearnNavigationProvider.cs/SetNavigation方法的内容全部注释掉</p>\n<p>预览一下mvc，用Host登录一下</p>\n<p><img src=\"/cnblogs/13096427/789895-20200613155431331-1058862470.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;用企业1登陆下，登录切换Host和Tenant，是在登录界面&nbsp;<span style=\"color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\">Current tenant:&nbsp;</span><span style=\"box-sizing: border-box; color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\">未选</span><span style=\"color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\">&nbsp;(</span><a style=\"box-sizing: border-box; color: #007bff; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\" data-toggle=\"modal\" data-target=\"#TenantChangeModal\">Change</a><span style=\"color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\">) 点击Change，在弹框中输入 E1（因为上面设置的企业1标识是E1），点击save，页面刷新后就变为了&nbsp;</span><span style=\"color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\">Current tenant:&nbsp;</span><span style=\"box-sizing: border-box; color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\" title=\"企业1\"><span style=\"box-sizing: border-box; font-weight: bolder;\">E1</span></span><span style=\"color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\">&nbsp;(</span><a style=\"box-sizing: border-box; color: #007bff; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\" data-toggle=\"modal\" data-target=\"#TenantChangeModal\">Change</a><span style=\"color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\">) ，输入账号密码登录</span></p>\n<p>&nbsp;<img src=\"/cnblogs/13096427/789895-20200613164737035-1698740974.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;OK，我们的动态菜单已经完成了</p>\n<p>&nbsp;</p>\n<h2>添加jstree</h2>\n<p>&nbsp;当然，我的菜单使用的是table来显示，你也可以使用tree来，我找到了一个jstree，下面修改一下</p>\n<p>MenusAppService.cs</p>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #0000ff;\">#region</span> 获取当前账户的菜单树\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 获取当前账户的菜单树\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"input\"&gt;&lt;/param&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">async</span> Task&lt;<span style=\"color: #0000ff;\">string</span>&gt;<span style=\"color: #000000;\"> GetTreeAsync(MenusPagedResultRequestDto input)\n        {\n            </span><span style=\"color: #0000ff;\">var</span> query = CreateFilteredQuery(<span style=\"color: #0000ff;\">new</span> MenusPagedResultRequestDto()).Where(o =&gt; o.TenantId ==<span style=\"color: #000000;\"> input.TenantId);\n\n            </span><span style=\"color: #0000ff;\">var</span> systemMenus = <span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> AsyncQueryableExecuter.ToListAsync(query);\n\n            </span><span style=\"color: #0000ff;\">var</span> childJObject = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> JObject();\n            </span><span style=\"color: #0000ff;\">var</span> openJObject = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> JObject();\n            openJObject.Add(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">opened</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);\n            childJObject.Add(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">id</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">);\n            childJObject.Add(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">根目录</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n            childJObject.Add(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">icon</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #800000;\">\"\"</span><span style=\"color: #000000;\">);\n            childJObject.Add(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">state</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">, openJObject);\n            childJObject.Add(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">children</span><span style=\"color: #800000;\">\"</span>, GetJArray(systemMenus, <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">));\n            </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> childJObject.ToString();\n        }\n\n        </span><span style=\"color: #0000ff;\">#region</span> 获取目录Array\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 获取目录Array\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"systemMenus\"&gt;&lt;/param&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"parentdId\"&gt;&lt;/param&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n        <span style=\"color: #0000ff;\">private</span> JArray GetJArray(List&lt;AbpMenus&gt; systemMenus, <span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> parentdId)\n        {\n            JArray jArray </span>= <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> JArray();\n            </span><span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #0000ff;\">var</span> menu <span style=\"color: #0000ff;\">in</span> systemMenus.Where(o =&gt; o.ParentId ==<span style=\"color: #000000;\"> parentdId))\n            {\n                </span><span style=\"color: #0000ff;\">var</span> jObject = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> JObject();\n                jObject.Add(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">id</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">, menu.Id);\n                jObject.Add(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">, menu.MenuName);\n                jObject.Add(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">icon</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">, menu.Icon);\n                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">jObject.Add(\"state\", menu.Icon);</span>\n                <span style=\"color: #0000ff;\">if</span> (systemMenus.Any(o =&gt; o.ParentId ==<span style=\"color: #000000;\"> menu.Id))\n                {\n                    jObject.Add(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">children</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">, GetJArray(systemMenus, menu.Id));\n                }\n                jArray.Add(jObject);\n            }\n            </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> jArray;\n        }\n\n        </span><span style=\"color: #0000ff;\">#endregion</span>\n\n        <span style=\"color: #0000ff;\">#endregion</span></pre>\n</div>\n<p>&nbsp;</p>\n<p>&nbsp;前端Index.cshtml&nbsp;&nbsp;<span style=\"color: #800000; font-family: 'Courier New'; font-size: 12px;\">jstree去</span><span style=\"color: #800000; font-family: 'Courier New';\"><span style=\"font-size: 12px;\">https://github.com/vakata/jstree/zipball/3.3.8下载，下载后在mvc项目的wwwroot文件夹下添加jstree文件夹，下载文件的src里面内容全部赋值到jstree文件夹</span></span></p>\n<p>注释掉table标签</p>\n<p>添加<span style=\"color: #800000; font-family: 'Courier New'; font-size: 12px;\">jstree1</span></p>\n<p>例如：</p>\n<div class=\"cnblogs_code\">\n<pre>@section styles\n{\n    &lt;link href=\"~/jstree/themes/default/style.css\" rel=\"stylesheet\" /&gt;\n}                     <br /><br />       &lt;div id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">jstree1</span><span style=\"color: #800000;\">\"</span> style=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">width:100%;</span><span style=\"color: #800000;\">\"</span>&gt;&lt;/div&gt;\n\n\n\n@section scripts\n{\n    &lt;environment names=\"Development\"&gt;\n        &lt;script src=\"~/view-resources/Views/Menus/Index.js\" asp-append-version=\"true\"&gt;&lt;/script&gt;\n    &lt;/environment&gt;\n\n    &lt;environment names=\"Staging,Production\"&gt;\n        &lt;script src=\"~/view-resources/Views/Menus/Index.min.js\" asp-append-version=\"true\"&gt;&lt;/script&gt;\n    &lt;/environment&gt;\n    &lt;script type=\"application/javascript\" src=\"~/jstree/jstree.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"application/javascript\" src=\"~/jstree/jstree.contextmenu.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        $(function () {\n            var _menuService = abp.services.app.menus;\n\n            l = abp.localization.getSource('A_b_p');\n\n            $('#jstree1').jstree({\n                \"core\": {\n                    \"data\": function (node, callback) {\n                        var filter = $('#MenusSearchForm').serializeFormToObject(true);\n                        this, _menuService.getTree(filter).done(function (result) {\n                            callback.call(this, JSON.parse(result));\n                        });\n                    },\n                    \"themes\": {\n                        \"variant\": \"large\",//加大\n                        \"ellipsis\": true //文字多时省略\n                    },\n                    \"check_callback\": true,\n                },\n                \"plugins\": [\"contextmenu\", \"wholerow\", \"themes\"],//\"checkbox\"\n                \"contextmenu\": {\n                    select_node: false,\n                    show_at_node: true,\n                    \"items\": {\n                        \"create\": {\n                            \"label\": \"新增子菜单\",\n                            \"action\": function (obj) {\n                                var inst = jQuery.jstree.reference(obj.reference);\n                                var clickedNode = inst.get_node(obj.reference);\n                                if (parseInt(clickedNode.original.id) &gt;= 0) {\n                                    $(\"#ParentId\").val(clickedNode.original.id);\n                                    $(\"#MenuCreateModal\").modal();\n                                } else {\n                                    abp.notify.info(\"父节点获取出错\");\n                                }\n                            },\n                        },\n                        \"rename\": {\n                            \"label\": \"修改\",\n                            \"action\": function (obj) {\n                                var inst = jQuery.jstree.reference(obj.reference);\n                                var clickedNode = inst.get_node(obj.reference);\n                                if (parseInt(clickedNode.original.id) &gt;= 0) {\n                                    abp.ajax({\n                                        url: abp.appPath + 'Menus/EditModal?menuId=' + clickedNode.original.id,\n                                        type: 'POST',\n                                        dataType: 'html',\n                                        success: function (content) {\n                                            $(\"#MenuEditModal\").modal();\n                                            $('#MenuEditModal div.modal-content').html(content);\n                                        },\n                                        error: function (e) { }\n                                    });\n                                } else {\n                                    abp.notify.info(\"菜单获取出错\");\n                                }\n                            }\n                        },\n                        \"delete\": {\n                            \"label\": \"更改菜单状态\",\n                            \"action\": function (obj) {\n                                var inst = jQuery.jstree.reference(obj.reference);\n                                var clickedNode = inst.get_node(obj.reference);\n                                abp.message.confirm(\n                                    abp.utils.formatString(\"是否\" + (clickedNode.original.state.disabled?\"启用\":\"禁用\") + \"当前菜单：\" + clickedNode.original.text + \"?\"),\n                                    null,\n                                    (isConfirmed) =&gt; {\n                                        if (isConfirmed) {\n                                            _menuService\n                                                .delete({\n                                                    id: clickedNode.original.id\n                                                })\n                                                .done(() =&gt; {\n                                                    abp.notify.info(l('SuccessfullyDeleted'));\n                                                    location.reload();\n                                                });\n                                        }\n                                    }\n                                );\n                            },\n\n                        }\n                    }\n                }\n            }).on('select_node.jstree', function (event, data) {\n                console.log(data.node);\n            }).on('changed.jstree', function (event, data) {\n                console.log(\"-----------changed.jstree\");\n                console.log(\"action:\" + data.action);\n                console.log(data.node);\n            });\n\n        });\n\n\n    &lt;/script&gt;\n}\n</pre>\n<p>&nbsp;</p>\n</div>\n<p>&nbsp;预览一下吧</p>\n<p><img src=\"/cnblogs/13096427/789895-20200613175433971-1845076483.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<h2>github地址</h2>\n<p>本文github：<a href=\"https://github.com/wangpengzong/AbpLearn\">https://github.com/wangpengzong/AbpLearn</a></p>\n<p>下一篇开始动态权限</p>\n<h2 style=\"display: none;\">&nbsp;吐槽区域（写的不好、不对，欢迎吐槽）</h2>","source":"_posts/cnblogs/13096427.md","raw":"---\ntitle: .net core3.1 abp动态菜单和动态权限（动态菜单实现和动态权限添加）  （三）\ndate: 2020-06-13T18:16:00\nauthor: wpzblog\ntags: [\"abp\",\"netcore\"]\n---\n<p>我们来创建动态菜单吧&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre>首先，先对动态菜单的概念、操作、流程进行约束：<br />1.Host和各个Tenant有自己的自定义菜单<br />2.Host和各个Tenant的权限与自定义菜单相关联<br />2.Tenant有一套默认的菜单，规定对应的TenantId=-1，在添加租户时自动将标准菜单和标准菜单的权限初始化到添加的租户</pre>\n</div>\n<h2>一、先实现菜单在数据库中的增删改查</h2>\n<h3>第一步：创建表、实体，添加DbContext</h3>\n<p>我们需要创建一个菜单表，延续Abp的命名方法，表名叫AbpMenus吧（菜单和权限、验证我们要关联，所以文件尽量放在Authorization文件夹下）</p>\n<p>把创建的实体放在AbpLearn.Core/Authorization下面，新建一个Menus文件夹，再创建Menus实体</p>\n<div class=\"cnblogs_code\">\n<pre>    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span> AbpMenus : Entity&lt;int&gt;<span style=\"color: #000000;\">\n    {\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> MenuName { <span style=\"color: #0000ff;\">set</span>; <span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> PageName { <span style=\"color: #0000ff;\">set</span>; <span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> Name { <span style=\"color: #0000ff;\">set</span>; <span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> Url { <span style=\"color: #0000ff;\">set</span>; <span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> Icon { <span style=\"color: #0000ff;\">set</span>; <span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">int</span> ParentId { <span style=\"color: #0000ff;\">set</span>; <span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">bool</span> IsActive { <span style=\"color: #0000ff;\">set</span>; <span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">int</span> Orders { <span style=\"color: #0000ff;\">set</span>; <span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">int</span>? TenantId { <span style=\"color: #0000ff;\">set</span>; <span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\">; }\n    }</span></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>如果翻过源码中实体的定义，可以发现很多实体的继承，例如：<br /><br />1.继承接口 IMayHaveTenant，继承后生成的sql语句将自动增加TenantId的查询条件，表中必须包含TenantId列<br />2.继承接口 IPassivable，继承后表中必须包含IsActive列<br />3.继承接口 FullAuditedEntity&lt;TPrimaryKey&gt; TPrimaryKey可以是long、int等值类型，必须包含IsDeleted、DeleterUserId、DeletionTime，其中这个接口<br />        还继承了AuditedEntity&lt;TPrimaryKey&gt;, IFullAudited, IAudited, ICreationAudited, IHasCreationTime, IModificationAudited, IHasModificationTime, IDeletionAudited, IHasDeletionTime, ISoftDelete，这些父类型、接口的定义自己F12就可以看到</pre>\n</div>\n<p>&nbsp;</p>\n<p>AbpLearn.EntityFrameworkCore/EntityFrameworkCore/AbpLearnDbContext.cs增加DbSet</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span> AbpLearnDbContext : AbpZeroDbContext&lt;Tenant, Role, User, AbpLearnDbContext&gt;<span style=\"color: #000000;\">\n    {\n        </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\"> Define a DbSet for each entity of the application </span><span style=\"color: #008000;\">*/</span>\n        \n        <span style=\"color: #0000ff;\">public</span> AbpLearnDbContext(DbContextOptions&lt;AbpLearnDbContext&gt;<span style=\"color: #000000;\"> options)\n            : </span><span style=\"color: #0000ff;\">base</span><span style=\"color: #000000;\">(options)\n        {\n            \n        }\n\n        </span><span style=\"color: #0000ff;\">public</span> DbSet&lt;AbpMenus&gt; AbpMenus { <span style=\"color: #0000ff;\">set</span>; <span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\">; }\n\n    }</span></pre>\n</div>\n<p>再去数据库中添加AbpMenus表 字段长度请自行调整</p>\n<div class=\"cnblogs_code\">\n<p>DROP TABLE IF EXISTS `AbpMenus`;<br />CREATE TABLE `AbpMenus` (<br />  `Id` int NOT NULL AUTO_INCREMENT,<br />  `MenuName` varchar(50) DEFAULT NULL,<br />  `PageName` varchar(50) DEFAULT NULL,<br />  `LName` varchar(50) DEFAULT NULL,<br />  `Url` varchar(50) DEFAULT NULL,<br />  `Icon` varchar(20) DEFAULT NULL,<br />  `ParentId` int DEFAULT NULL,<br />  `IsActive` bit(1) NOT NULL DEFAULT b'0',<br />  `Orders` int DEFAULT NULL,<br />  `TenantId` int DEFAULT NULL,<br />  PRIMARY KEY (`Id`)<br />) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n</div>\n<h3>第二步：添加Service和Dto</h3>\n<p>AbpLearn.Application/Authorization下添加Menus文件夹，然后添加IMenusAppService、MenusAppService，然后添加Dto文件夹</p>\n<p><img src=\"/cnblogs/13096427/789895-20200611210551368-1414077737.png\" alt=\"\" loading=\"lazy\" /></p>\n<h3>第三步：添加控制器和前台页面、js</h3>\n<p>Controller文件，MenusController.cs</p>\n<p>&nbsp;<img src=\"/cnblogs/13096427/789895-20200613120436495-1821816057.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;前台添加Menus及对应的js文件，可以简单省事的把其他文件夹复制粘贴一份，然后关键词修改下</p>\n<p><img src=\"/cnblogs/13096427/789895-20200611210653597-521335150.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>这些文件太多了，我会把这套代码上传到github中，文章最低部会把链接挂出来</p>\n<p>添加完之后我们就可以生成预览一下Menus，因为SetNavigation中未将Menus的url加进去，我们自己手打链接进入<img src=\"/cnblogs/13096427/789895-20200613122433371-1340406219.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>此时， 我们的菜单这一块的crud已经做好了，我们可以看到有一个Host管理员这个部分是什么意思哪？</p>\n<p>我们为了在当前Host中可以控制所有租户的菜单和权限，将当前Host、标准菜单、租户做一个select，代码如下</p>\n<div class=\"cnblogs_code\">\n<pre>    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> ChangeModalViewModel\n    {\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">int</span>? TenantId { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> TenancyName { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">int</span>? TenantMenuType { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n\n\n        </span><span style=\"color: #0000ff;\">public</span> List&lt;ComboboxItemDto&gt; TeneacyItems { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n    }</span></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">async</span> Task&lt;IActionResult&gt; IndexAsync(<span style=\"color: #0000ff;\">int</span>? id = <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">)\n        {\n            </span><span style=\"color: #0000ff;\">var</span> loginTenant = id &lt;= <span style=\"color: #800080;\">0</span> ? <span style=\"color: #0000ff;\">null</span> : _tenantManager.GetById((<span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\">)id);\n\n            </span><span style=\"color: #0000ff;\">var</span> viewModel = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ChangeModalViewModel\n            {\n                TenancyName </span>= loginTenant?<span style=\"color: #000000;\">.TenancyName,\n                TenantId </span>=<span style=\"color: #000000;\"> id\n            };\n\n            viewModel.TeneacyItems </span>=<span style=\"color: #000000;\"> _tenantManager.Tenants\n                .Select(p </span>=&gt; <span style=\"color: #0000ff;\">new</span> ComboboxItemDto(p.Id.ToString(), p.Name) { IsSelected = viewModel.TenancyName ==<span style=\"color: #000000;\"> p.TenancyName })\n                .ToList();\n\n            viewModel.TeneacyItems.Add(</span><span style=\"color: #0000ff;\">new</span> ComboboxItemDto(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">0</span><span style=\"color: #800000;\">\"</span>,<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Host管理员</span><span style=\"color: #800000;\">\"</span>) { IsSelected = id == <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\"> });\n\n            viewModel.TeneacyItems.Add(</span><span style=\"color: #0000ff;\">new</span> ComboboxItemDto(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">-1</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">默认菜单</span><span style=\"color: #800000;\">\"</span>) { IsSelected = id == -<span style=\"color: #800080;\">1</span><span style=\"color: #000000;\"> });\n\n            ViewBag.LoginInfo </span>= <span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _sessionAppService.GetCurrentLoginInformations();\n\n            </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> View(viewModel);\n        }</span></pre>\n</div>\n<p>然后在Index.cshtml中添加或修改</p>\n<div class=\"cnblogs_code\">\n<pre>@model ChangeModalViewModel  // 添加<br /><br /><br /></pre>\n<p>&nbsp; @await Html.PartialAsync(\"~/Views/Menus/Index.AdvancedSearch.cshtml\", Model)&nbsp; //修改</p>\n<p>&nbsp;&nbsp;</p>\n<p>&nbsp; @await Html.PartialAsync(\"~/Views/Menus/_CreateModal.cshtml\",Model.TenantId)&nbsp; //修改</p>\n<p>&nbsp;&nbsp;</p>\n<p>&nbsp; //添加</p>\n<p>&nbsp; $(\"#ChangeTenancyName\").change(function (e) {<br />&nbsp; &nbsp; &nbsp;location.href = \"/Menus/Index/\" + this.options[this.selectedIndex].value;<br />&nbsp; });</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n</div>\n<p>修改_CreateModal.cshtml</p>\n<div class=\"cnblogs_code\" onclick=\"cnblogs_code_show('eb1b27ba-ce7d-494f-b2a1-896ae90bfd6b')\"><img src=\"http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif\" id=\"code_img_closed_eb1b27ba-ce7d-494f-b2a1-896ae90bfd6b\" class=\"code_img_closed\" /><img src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" id=\"code_img_opened_eb1b27ba-ce7d-494f-b2a1-896ae90bfd6b\" class=\"code_img_opened\" style=\"display: none;\" />\n<div id=\"cnblogs_code_open_eb1b27ba-ce7d-494f-b2a1-896ae90bfd6b\" class=\"cnblogs_code_hide\">\n<pre><span style=\"color: #000000;\">@using Abp.Authorization.Users\n@using Abp.MultiTenancy\n@using AbpLearn.MultiTenancy\n@using AbpLearn.Web.Models.Common.Modals\n@model </span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\">\n@{\n    Layout </span>= <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n}\n</span>&lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">modal fade</span><span style=\"color: #800000;\">\"</span> id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MenuCreateModal</span><span style=\"color: #800000;\">\"</span> tabindex=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">-1</span><span style=\"color: #800000;\">\"</span> role=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">dialog</span><span style=\"color: #800000;\">\"</span> aria-labelledby=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MenuCreateModalLabel</span><span style=\"color: #800000;\">\"</span> data-backdrop=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">static</span><span style=\"color: #800000;\">\"</span>&gt;\n    &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">modal-dialog modal-lg</span><span style=\"color: #800000;\">\"</span> role=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">document</span><span style=\"color: #800000;\">\"</span>&gt;\n        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">modal-content</span><span style=\"color: #800000;\">\"</span>&gt;<span style=\"color: #000000;\">\n            @await Html.PartialAsync(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">~/Views/Shared/Modals/_ModalHeader.cshtml</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #0000ff;\">new</span> ModalHeaderViewModel(L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">CreateNewMenu</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)))\n            </span>&lt;form name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">systemMenuCreateForm</span><span style=\"color: #800000;\">\"</span> role=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-horizontal</span><span style=\"color: #800000;\">\"</span>&gt;\n                &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">modal-body</span><span style=\"color: #800000;\">\"</span>&gt;\n                    &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row required</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MenuName</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n                        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                            &lt;input type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MenuName</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span> required minlength=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">2</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row required</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">LName</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n                        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                            &lt;input type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">LName</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span> required&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row required</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Url</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n                        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                            &lt;input type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Url</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">PageName</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n                        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                            &lt;input type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">PageName</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ParentId</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n                        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                            &lt;input type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ParentId</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Orders</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n                        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                            &lt;input type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Orders</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">for</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">CreateMenuIsActive</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">IsActive</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n                        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                            &lt;input id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">CreateMenuIsActive</span><span style=\"color: #800000;\">\"</span> type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">checkbox</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">IsActive</span><span style=\"color: #800000;\">\"</span> value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">true</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">checked</span> /&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n                &lt;input type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">hidden</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">TenantId</span><span style=\"color: #800000;\">\"</span> value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">@(Model)</span><span style=\"color: #800000;\">\"</span> /&gt;<span style=\"color: #000000;\">\n                @await Html.PartialAsync(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">~/Views/Shared/Modals/_ModalFooterWithSaveAndCancel.cshtml</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)\n            </span>&lt;/form&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;</pre>\n</div>\n<span class=\"cnblogs_code_collapse\">View Code</span></div>\n<p>&nbsp;</p>\n<p>修改_EditModal.cshtml</p>\n<div class=\"cnblogs_code\" onclick=\"cnblogs_code_show('3cac859e-397f-41e9-9596-025466ee5cbc')\"><img src=\"http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif\" id=\"code_img_closed_3cac859e-397f-41e9-9596-025466ee5cbc\" class=\"code_img_closed\" /><img src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" id=\"code_img_opened_3cac859e-397f-41e9-9596-025466ee5cbc\" class=\"code_img_opened\" style=\"display: none;\" />\n<div id=\"cnblogs_code_open_3cac859e-397f-41e9-9596-025466ee5cbc\" class=\"cnblogs_code_hide\">\n<pre><span style=\"color: #000000;\">@using AbpLearn.Authorization.Menus.Dto\n@using AbpLearn.Web.Models.Common.Modals\n@model MenuDto\n@{\n    Layout </span>= <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n}\n@await Html.PartialAsync(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">~/Views/Shared/Modals/_ModalHeader.cshtml</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #0000ff;\">new</span> ModalHeaderViewModel(L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">EditMenu</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)))\n</span>&lt;form name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MenuEditForm</span><span style=\"color: #800000;\">\"</span> role=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-horizontal</span><span style=\"color: #800000;\">\"</span>&gt;\n    &lt;input type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">hidden</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Id</span><span style=\"color: #800000;\">\"</span> value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">@Model.Id</span><span style=\"color: #800000;\">\"</span> /&gt;\n    &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">modal-body</span><span style=\"color: #800000;\">\"</span>&gt;\n        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row required</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">for</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">tenancy-name</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MenuName</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n            &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                &lt;input id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">tenancy-name</span><span style=\"color: #800000;\">\"</span> type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MenuName</span><span style=\"color: #800000;\">\"</span> value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">@Model.MenuName</span><span style=\"color: #800000;\">\"</span> required maxlength=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">64</span><span style=\"color: #800000;\">\"</span> minlength=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">2</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row required</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">for</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">name</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">LName</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n            &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                &lt;input id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">name</span><span style=\"color: #800000;\">\"</span> type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">LName</span><span style=\"color: #800000;\">\"</span> value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">@Model.LName</span><span style=\"color: #800000;\">\"</span> required maxlength=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">128</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row required</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">for</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">name</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Url</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n            &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                &lt;input id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">name</span><span style=\"color: #800000;\">\"</span> type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Url</span><span style=\"color: #800000;\">\"</span> value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">@Model.Url</span><span style=\"color: #800000;\">\"</span> required maxlength=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">128</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n\n        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row required</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">for</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">name</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">PageName</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n            &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                &lt;input id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">name</span><span style=\"color: #800000;\">\"</span> type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">PageName</span><span style=\"color: #800000;\">\"</span> value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">@Model.PageName</span><span style=\"color: #800000;\">\"</span> required maxlength=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">128</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row required</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">for</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">name</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ParentId</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n            &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                &lt;input id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">name</span><span style=\"color: #800000;\">\"</span> type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ParentId</span><span style=\"color: #800000;\">\"</span> value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">@Model.ParentId</span><span style=\"color: #800000;\">\"</span> required maxlength=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">128</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row required</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">for</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">name</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Orders</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n            &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                &lt;input id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">name</span><span style=\"color: #800000;\">\"</span> type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Orders</span><span style=\"color: #800000;\">\"</span> value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">@Model.Orders</span><span style=\"color: #800000;\">\"</span> required maxlength=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">128</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">for</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">isactive</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">IsActive</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n            &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                &lt;input id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">isactive</span><span style=\"color: #800000;\">\"</span> type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">checkbox</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">IsActive</span><span style=\"color: #800000;\">\"</span> value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">true</span><span style=\"color: #800000;\">\"</span> @(Model.IsActive ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">checked</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>) /&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;<span style=\"color: #000000;\">\n    @await Html.PartialAsync(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">~/Views/Shared/Modals/_ModalFooterWithSaveAndCancel.cshtml</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)\n</span>&lt;/form&gt;\n\n&lt;script src=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">~/view-resources/Views/Menus/_EditModal.js</span><span style=\"color: #800000;\">\"</span> asp-append-version=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">true</span><span style=\"color: #800000;\">\"</span>&gt;&lt;/script&gt;</pre>\n</div>\n<span class=\"cnblogs_code_collapse\">View Code</span></div>\n<p>修改Index.AdvancedSearch.cshtml</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">@using AbpLearn.Web.Views.Shared.Components.TenantChange\n@using Abp.Application.Services.Dto\n@model ChangeModalViewModel\n\n    </span>&lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">abp-advanced-search</span><span style=\"color: #800000;\">\"</span>&gt;\n        &lt;form id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MenusSearchForm</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-horizontal</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;input type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">hidden</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">TenantId</span><span style=\"color: #800000;\">\"</span> value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">@Model.TenantId</span><span style=\"color: #800000;\">\"</span> /&gt;\n            &lt;/form&gt;\n            &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-horizontal</span><span style=\"color: #800000;\">\"</span>&gt;\n                &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group</span><span style=\"color: #800000;\">\"</span>&gt;<span style=\"color: #000000;\">\n                    @Html.DropDownList(\n                       </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ChangeTenancyNames</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                       Model.TeneacyItems.Select(i </span>=&gt;<span style=\"color: #000000;\"> i.ToSelectListItem()),\n                       </span><span style=\"color: #0000ff;\">new</span> { @class = <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control edited</span><span style=\"color: #800000;\">\"</span>, id = <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ChangeTenancyName</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\"> })\n                </span>&lt;/div&gt;\n            &lt;/div&gt;\n    &lt;/div&gt;</pre>\n</div>\n<p>因为在abp里面加载当前列表调用的是abp.services.app.menus.getAll方法，我们还需要对MenusAppService中的GetAllAsync做一下修改</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">    [Serializable]\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> MenusPagedResultRequestDto: PagedResultRequestDto, IPagedAndSortedResultRequest\n    {\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">int</span>? TenantId { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">string</span> Sorting { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">bool</span> ShowAll { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n\n    }</span></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #0000ff;\">#region</span> 查询全部菜单\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 查询全部菜单\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"input\"&gt;&lt;/param&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">override</span> <span style=\"color: #0000ff;\">async</span> Task&lt;PagedResultDto&lt;MenuDto&gt;&gt;<span style=\"color: #000000;\"> GetAllAsync(MenusPagedResultRequestDto input)\n        {\n            IQueryable</span>&lt;AbpMenus&gt;<span style=\"color: #000000;\"> query;\n\n            query </span>= CreateFilteredQuery(input).Where(o =&gt; o.TenantId == (input.TenantId == <span style=\"color: #800080;\">0</span> ? <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\"> : input.TenantId));\n\n            </span><span style=\"color: #0000ff;\">var</span> totalCount = <span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> AsyncQueryableExecuter.CountAsync(query);\n\n            query </span>=<span style=\"color: #000000;\"> ApplySorting(query, input);\n            </span><span style=\"color: #0000ff;\">if</span> (!input.ShowAll) query =<span style=\"color: #000000;\"> ApplyPaging(query, input);\n\n            </span><span style=\"color: #0000ff;\">var</span> entities = <span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> AsyncQueryableExecuter.ToListAsync(query);\n\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">new</span> PagedResultDto&lt;MenuDto&gt;<span style=\"color: #000000;\">(\n                totalCount,\n                entities.Select(MapToEntityDto).ToList()\n            );\n        }\n\n        </span><span style=\"color: #0000ff;\">#endregion</span></pre>\n</div>\n<p>这样，我们在选中下面中的任意一个Tenant时，将会跳到对应的菜单里面了</p>\n<p>&nbsp;</p>\n<p><img src=\"/cnblogs/13096427/789895-20200613122549077-374827601.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;我们先把Host管理员菜单和默认菜单配置一下</p>\n<p><img src=\"/cnblogs/13096427/789895-20200613131544727-322024248.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;<img src=\"/cnblogs/13096427/789895-20200613131507643-1916575069.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<h2>二、实现添加租户时，初始化标准菜单和权限</h2>\n<p>首先我们找到添加租户的地方，去TenantAppService里面去找，可以看到有CreateAsync的重写</p>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">override</span> <span style=\"color: #0000ff;\">async</span> Task&lt;TenantDto&gt;<span style=\"color: #000000;\"> CreateAsync(CreateTenantDto input)\n        {\n            CheckCreatePermission();\n\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> Create tenant</span>\n            <span style=\"color: #0000ff;\">var</span> tenant = ObjectMapper.Map&lt;Tenant&gt;<span style=\"color: #000000;\">(input);\n            tenant.ConnectionString </span>=<span style=\"color: #000000;\"> input.ConnectionString.IsNullOrEmpty()\n                </span>? <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">\n                : SimpleStringCipher.Instance.Encrypt(input.ConnectionString);\n\n            </span><span style=\"color: #0000ff;\">var</span> defaultEdition = <span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _editionManager.FindByNameAsync(EditionManager.DefaultEditionName);\n            </span><span style=\"color: #0000ff;\">if</span> (defaultEdition != <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)\n            {\n                tenant.EditionId </span>=<span style=\"color: #000000;\"> defaultEdition.Id;\n            }\n\n            </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _tenantManager.CreateAsync(tenant);\n            </span><span style=\"color: #0000ff;\">await</span> CurrentUnitOfWork.SaveChangesAsync(); <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> To get new tenant's id.\n\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> Create tenant database</span>\n<span style=\"color: #000000;\">            _abpZeroDbMigrator.CreateOrMigrateForTenant(tenant);\n\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> We are working entities of new tenant, so changing tenant filter</span>\n            <span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> (CurrentUnitOfWork.SetTenantId(tenant.Id))\n            {\n                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> Create static roles for new tenant</span>\n                CheckErrors(<span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _roleManager.CreateStaticRoles(tenant.Id));\n\n                </span><span style=\"color: #0000ff;\">await</span> CurrentUnitOfWork.SaveChangesAsync(); <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> To get static role ids\n\n                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> Grant all permissions to admin role</span>\n                <span style=\"color: #0000ff;\">var</span> adminRole = _roleManager.Roles.Single(r =&gt; r.Name ==<span style=\"color: #000000;\"> StaticRoleNames.Tenants.Admin);\n                </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _roleManager.GrantAllPermissionsAsync(adminRole);\n\n                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> Create admin user for the tenant</span>\n                <span style=\"color: #0000ff;\">var</span> adminUser =<span style=\"color: #000000;\"> User.CreateTenantAdminUser(tenant.Id, input.AdminEmailAddress);\n                </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _userManager.InitializeOptionsAsync(tenant.Id);\n                CheckErrors(</span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _userManager.CreateAsync(adminUser, User.DefaultPassword));\n                </span><span style=\"color: #0000ff;\">await</span> CurrentUnitOfWork.SaveChangesAsync(); <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> To get admin user's id\n\n                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> Assign admin user to role!</span>\n                CheckErrors(<span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _userManager.AddToRoleAsync(adminUser, adminRole.Name));\n                </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> CurrentUnitOfWork.SaveChangesAsync();\n            }\n\n            </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> MapToEntityDto(tenant);\n        }</span></pre>\n</div>\n<p>我们需要做的是，在&nbsp;using (CurrentUnitOfWork.SetTenantId(tenant.Id)) 的内部尾部添加赋予菜单和权限的方法即可</p>\n<p>赋予菜单和权限的方法我们分开写，都放在MenusAppService中，</p>\n<div class=\"cnblogs_code\">\n<pre>    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">interface</span> IMenusAppService : IAsyncCrudAppService&lt;MenuDto, <span style=\"color: #0000ff;\">int</span>, MenusPagedResultRequestDto, CreateMenuDto, MenuDto&gt;<span style=\"color: #000000;\">\n    {\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 赋予默认菜单\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"input\"&gt;&lt;/param&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n        Task GiveMenusAsync(EntityDto&lt;<span style=\"color: #0000ff;\">int</span>&gt;<span style=\"color: #000000;\"> input);\n\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 赋予当前租户Admin角色菜单权限\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"input\"&gt;&lt;/param&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n        Task GivePermissionsAsync(EntityDto&lt;<span style=\"color: #0000ff;\">int</span>&gt;<span style=\"color: #000000;\"> input);\n    }</span></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>        #region 赋予默认菜单\n        public async Task GiveMenusAsync(EntityDto&lt;int&gt; input)\n        {\n            if (input.Id &gt; 0)\n            {\n                var tenant = await _tenantManager.GetByIdAsync(input.Id);\n\n                using (_unitOfWorkManager.Current.SetTenantId(tenant.Id))\n                {\n                    var query = CreateFilteredQuery(new MenusPagedResultRequestDto()).Where(o =&gt; o.TenantId == tenant.Id);\n\n                    var systemMenus = await AsyncQueryableExecuter.ToListAsync(query);\n\n                    if (!systemMenus.Any())\n                    {\n                        query = CreateFilteredQuery(new MenusPagedResultRequestDto()).Where(o =&gt; o.TenantId == -1);\n\n                        var defaultMenus = await AsyncQueryableExecuter.ToListAsync(query);\n                        if (defaultMenus.Any())\n                        {\n                            List&lt;MenusInsert&gt; GetMenusInserts(List&lt;AbpMenus&gt; abpMenus,int parentId = 0)\n                            {\n                                List&lt;MenusInsert&gt; menusInserts = new List&lt;MenusInsert&gt;();\n                                foreach (var entity in abpMenus.Where(o =&gt; o.ParentId == parentId))\n                                {\n                                    var insert = new MenusInsert()\n                                    {\n                                        LName = entity.LName,\n                                        MenuName = entity.MenuName,\n                                        PageName = entity.PageName,\n                                        Icon = entity.Icon,\n                                        Url = entity.Url,\n                                        IsActive = entity.IsActive,\n                                        Orders = entity.Orders,\n                                        ParentId = entity.ParentId,\n                                        TenantId = tenant.Id\n                                    };\n                                    insert.menusInserts = GetMenusInserts(abpMenus, entity.Id);\n                                    menusInserts.Add(insert);\n                                }\n                                return menusInserts;\n                            }\n\n                            async Task InsertMenusAsync(List&lt;MenusInsert&gt; inserts,int parentId = 0)\n                            {\n                                foreach (var insert in inserts)\n                                {\n                                    var entity = await CreateAsync(new AbpMenus()\n                                    {\n                                        LName = insert.LName,\n                                        MenuName = insert.MenuName,\n                                        PageName = insert.PageName,\n                                        Icon = insert.Icon,\n                                        Url = insert.Url,\n                                        IsActive = insert.IsActive,\n                                        Orders = insert.Orders,\n                                        ParentId = parentId,\n                                        TenantId = tenant.Id\n                                    });\n                                    if (insert.menusInserts.Any())\n                                    {\n                                        await InsertMenusAsync(insert.menusInserts, entity.Id);\n                                    }\n                                }\n                            }\n                            await InsertMenusAsync(GetMenusInserts(defaultMenus));\n                            \n                        }\n                    }\n                }\n            }\n\n        }\n        #endregion\n\n\n        <span style=\"color: #0000ff;\">#region</span> 赋予当前租户Admin角色菜单权限\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 赋予当前租户Admin角色菜单权限\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"input\"&gt;&lt;/param&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">async</span> Task GivePermissionsAsync(EntityDto&lt;<span style=\"color: #0000ff;\">int</span>&gt;<span style=\"color: #000000;\"> input)\n        {\n            </span><span style=\"color: #0000ff;\">if</span> (input.Id &gt; <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">)\n            {\n                </span><span style=\"color: #0000ff;\">var</span> tenant = <span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _tenantManager.GetByIdAsync(input.Id);\n\n                </span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> (_unitOfWorkManager.Current.SetTenantId(tenant.Id))\n                {\n                    </span><span style=\"color: #0000ff;\">var</span> adminRoles = <span style=\"color: #0000ff;\">await</span> _roleRepository.GetAllListAsync(o =&gt; o.Name == StaticRoleNames.Tenants.Admin &amp;&amp; o.TenantId ==<span style=\"color: #000000;\"> tenant.Id);\n                    </span><span style=\"color: #0000ff;\">if</span> (adminRoles.FirstOrDefault() != <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)\n                    {\n                        </span><span style=\"color: #0000ff;\">var</span> adminRole =<span style=\"color: #000000;\"> adminRoles.FirstOrDefault();\n\n                        </span><span style=\"color: #0000ff;\">var</span> query = CreateFilteredQuery(<span style=\"color: #0000ff;\">new</span> MenusPagedResultRequestDto()).Where(o =&gt; o.TenantId ==<span style=\"color: #000000;\"> tenant.Id);\n\n                        </span><span style=\"color: #0000ff;\">var</span> systemMenus = <span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> AsyncQueryableExecuter.ToListAsync(query);\n\n                        </span><span style=\"color: #0000ff;\">var</span> permissions =<span style=\"color: #000000;\"> ConvertTenantPermissions(systemMenus);\n\n                        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">await _roleManager.ResetAllPermissionsAsync(adminRole.FirstOrDefault()); </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">重置授权</span>\n\n                        <span style=\"color: #0000ff;\">var</span> active_BatchCount = <span style=\"color: #800080;\">10</span><span style=\"color: #000000;\">;\n                        </span><span style=\"color: #0000ff;\">var</span> active_permissions = ConvertTenantPermissions(systemMenus.Where(o =&gt;<span style=\"color: #000000;\"> o.IsActive).ToList());\n                        </span><span style=\"color: #0000ff;\">for</span> (<span style=\"color: #0000ff;\">int</span> i = <span style=\"color: #800080;\">0</span>; i &lt; active_permissions.Count(); i += <span style=\"color: #800080;\">10</span>)<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">每次后移5位</span>\n<span style=\"color: #000000;\">                        {\n                            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">await _roleManager.SetGrantedPermissionsAsync(adminRole.FirstOrDefault().Id, active_permissions.Take(active_BatchCount).Skip(i));</span>\n                            <span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #0000ff;\">var</span> notActive_permission <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> active_permissions.Take(active_BatchCount).Skip(i))\n                            {\n                                </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _roleManager.GrantPermissionAsync(adminRole, notActive_permission);\n                            }\n                            active_BatchCount </span>+= <span style=\"color: #800080;\">10</span>;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">每次从数组中选出N+10位，skip前N位</span>\n<span style=\"color: #000000;\">                        }\n\n                        </span><span style=\"color: #0000ff;\">var</span> notActive_BatchCount = <span style=\"color: #800080;\">10</span><span style=\"color: #000000;\">;\n                        </span><span style=\"color: #0000ff;\">var</span> notActive_permissions = ConvertTenantPermissions(systemMenus.Where(o =&gt; !<span style=\"color: #000000;\">o.IsActive).ToList());\n                        </span><span style=\"color: #0000ff;\">for</span> (<span style=\"color: #0000ff;\">int</span> i = <span style=\"color: #800080;\">0</span>; i &lt; notActive_permissions.Count(); i += <span style=\"color: #800080;\">10</span>)<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">每次后移5位</span>\n<span style=\"color: #000000;\">                        {\n                            </span><span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #0000ff;\">var</span> notActive_permission <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> notActive_permissions.Take(notActive_BatchCount).Skip(i))\n                            {\n                                </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _roleManager.ProhibitPermissionAsync(adminRole, notActive_permission);\n                            }\n                            notActive_BatchCount </span>+= <span style=\"color: #800080;\">10</span>;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">每次从数组中选出N+10位，skip前N位</span>\n<span style=\"color: #000000;\">                        }\n                    }\n                    </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">\n                    {\n                        </span><span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> AbpDbConcurrencyException(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">未获取到当前租户的Admin角色！</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n                    }\n                }\n            }\n            </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">\n            {\n                </span><span style=\"color: #0000ff;\">var</span> adminRoles = <span style=\"color: #0000ff;\">await</span> _roleRepository.GetAllListAsync(o =&gt; o.Name == StaticRoleNames.Tenants.Admin &amp;&amp; o.TenantId == <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">);\n                </span><span style=\"color: #0000ff;\">if</span> (adminRoles.FirstOrDefault() != <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)\n                {\n                    </span><span style=\"color: #0000ff;\">var</span> adminRole =<span style=\"color: #000000;\"> adminRoles.FirstOrDefault();\n\n                    </span><span style=\"color: #0000ff;\">var</span> query = CreateFilteredQuery(<span style=\"color: #0000ff;\">new</span> MenusPagedResultRequestDto()).Where(o =&gt; o.TenantId == <span style=\"color: #0000ff;\">null</span> || o.TenantId == <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">);\n\n                    </span><span style=\"color: #0000ff;\">var</span> systemMenus = <span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> AsyncQueryableExecuter.ToListAsync(query);\n\n                    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">await _roleManager.ResetAllPermissionsAsync(adminRole.FirstOrDefault()); </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">重置授权</span>\n\n                    <span style=\"color: #0000ff;\">var</span> active_BatchCount = <span style=\"color: #800080;\">10</span><span style=\"color: #000000;\">;\n                    </span><span style=\"color: #0000ff;\">var</span> active_permissions = ConvertHostPermissions(systemMenus.Where(o =&gt;<span style=\"color: #000000;\"> o.IsActive).ToList());\n                    </span><span style=\"color: #0000ff;\">for</span> (<span style=\"color: #0000ff;\">int</span> i = <span style=\"color: #800080;\">0</span>; i &lt; active_permissions.Count(); i += <span style=\"color: #800080;\">10</span>)<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">每次后移5位</span>\n<span style=\"color: #000000;\">                    {\n                        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">await _roleManager.SetGrantedPermissionsAsync(adminRole.FirstOrDefault().Id, active_permissions.Take(active_BatchCount).Skip(i));</span>\n                        <span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #0000ff;\">var</span> notActive_permission <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> active_permissions.Take(active_BatchCount).Skip(i))\n                        {\n                            </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _roleManager.GrantPermissionAsync(adminRole, notActive_permission);\n                        }\n                        active_BatchCount </span>+= <span style=\"color: #800080;\">10</span>;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">每次从数组中选出N+10位，skip前N位</span>\n<span style=\"color: #000000;\">                    }\n\n                    </span><span style=\"color: #0000ff;\">var</span> notActive_BatchCount = <span style=\"color: #800080;\">10</span><span style=\"color: #000000;\">;\n                    </span><span style=\"color: #0000ff;\">var</span> notActive_permissions = ConvertHostPermissions(systemMenus.Where(o =&gt; !<span style=\"color: #000000;\">o.IsActive).ToList());\n                    </span><span style=\"color: #0000ff;\">for</span> (<span style=\"color: #0000ff;\">int</span> i = <span style=\"color: #800080;\">0</span>; i &lt; notActive_permissions.Count(); i += <span style=\"color: #800080;\">10</span>)<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">每次后移5位</span>\n<span style=\"color: #000000;\">                    {\n                        </span><span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #0000ff;\">var</span> notActive_permission <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> notActive_permissions.Take(notActive_BatchCount).Skip(i))\n                        {\n                            </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _roleManager.ProhibitPermissionAsync(adminRole, notActive_permission);\n                        }\n                        notActive_BatchCount </span>+= <span style=\"color: #800080;\">10</span>;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">每次从数组中选出N+10位，skip前N位</span>\n<span style=\"color: #000000;\">                    }\n                }\n            }\n        }\n\n        </span><span style=\"color: #0000ff;\">public</span> IEnumerable&lt;Permission&gt; ConvertTenantPermissions(IReadOnlyList&lt;AbpMenus&gt;<span style=\"color: #000000;\"> systemMenus)\n        {\n            </span><span style=\"color: #0000ff;\">return</span> systemMenus.Select(o =&gt; <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Permission(o.PageName, L(o.MenuName), L(o.LName), MultiTenancySides.Tenant));\n        }\n\n        </span><span style=\"color: #0000ff;\">public</span> IEnumerable&lt;Permission&gt; ConvertHostPermissions(IReadOnlyList&lt;AbpMenus&gt;<span style=\"color: #000000;\"> systemMenus)\n        {\n            </span><span style=\"color: #0000ff;\">return</span> systemMenus.Select(o =&gt; <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Permission(o.PageName, L(o.MenuName), L(o.LName), MultiTenancySides.Host));\n        }\n        </span><span style=\"color: #0000ff;\">#endregion</span></pre>\n</div>\n<p>TenantAppService.cs中做一下修改</p>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">override</span> <span style=\"color: #0000ff;\">async</span> Task&lt;TenantDto&gt;<span style=\"color: #000000;\"> CreateAsync(CreateTenantDto input)\n        {\n            CheckCreatePermission();\n\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> Create tenant</span>\n            <span style=\"color: #0000ff;\">var</span> tenant = ObjectMapper.Map&lt;Tenant&gt;<span style=\"color: #000000;\">(input);\n            tenant.ConnectionString </span>=<span style=\"color: #000000;\"> input.ConnectionString.IsNullOrEmpty()\n                </span>? <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">\n                : SimpleStringCipher.Instance.Encrypt(input.ConnectionString);\n\n            </span><span style=\"color: #0000ff;\">var</span> defaultEdition = <span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _editionManager.FindByNameAsync(EditionManager.DefaultEditionName);\n            </span><span style=\"color: #0000ff;\">if</span> (defaultEdition != <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)\n            {\n                tenant.EditionId </span>=<span style=\"color: #000000;\"> defaultEdition.Id;\n            }\n\n            </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _tenantManager.CreateAsync(tenant);\n            </span><span style=\"color: #0000ff;\">await</span> CurrentUnitOfWork.SaveChangesAsync(); <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> To get new tenant's id.\n\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> Create tenant database</span>\n<span style=\"color: #000000;\">            _abpZeroDbMigrator.CreateOrMigrateForTenant(tenant);\n\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> We are working entities of new tenant, so changing tenant filter</span>\n            <span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> (CurrentUnitOfWork.SetTenantId(tenant.Id))\n            {\n                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> Create static roles for new tenant</span>\n                CheckErrors(<span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _roleManager.CreateStaticRoles(tenant.Id));\n\n                </span><span style=\"color: #0000ff;\">await</span> CurrentUnitOfWork.SaveChangesAsync(); <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> To get static role ids\n\n                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> Grant all permissions to admin role</span>\n                <span style=\"color: #0000ff;\">var</span> adminRole = _roleManager.Roles.Single(r =&gt; r.Name ==<span style=\"color: #000000;\"> StaticRoleNames.Tenants.Admin);\n                </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _roleManager.GrantAllPermissionsAsync(adminRole);\n\n                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> Create admin user for the tenant</span>\n                <span style=\"color: #0000ff;\">var</span> adminUser =<span style=\"color: #000000;\"> User.CreateTenantAdminUser(tenant.Id, input.AdminEmailAddress);\n                </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _userManager.InitializeOptionsAsync(tenant.Id);\n                CheckErrors(</span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _userManager.CreateAsync(adminUser, User.DefaultPassword));\n                </span><span style=\"color: #0000ff;\">await</span> CurrentUnitOfWork.SaveChangesAsync(); <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> To get admin user's id\n\n                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> Assign admin user to role!</span>\n                CheckErrors(<span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _userManager.AddToRoleAsync(adminUser, adminRole.Name));\n                </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> CurrentUnitOfWork.SaveChangesAsync();\n\n                </span><span style=\"color: #ff0000;\">await _menusAppService.GiveMenusAsync(new EntityDto&lt;int&gt;() { Id = tenant.Id });\n                await CurrentUnitOfWork.SaveChangesAsync();\n\n                await _menusAppService.GivePermissionsAsync(new EntityDto&lt;int&gt;() { Id = tenant.Id });\n                await</span><span style=\"color: #000000;\"><span style=\"color: #ff0000;\"> CurrentUnitOfWork.SaveChangesAsync();</span>\n            }\n\n            </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> MapToEntityDto(tenant);\n        }</span></pre>\n</div>\n<p>现在我们添加租户企业1、企业2</p>\n<p><img src=\"/cnblogs/13096427/789895-20200613151834645-748331091.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;<img src=\"/cnblogs/13096427/789895-20200613151852573-1477272883.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;现在菜单已经同步好了，我们去数据库看下权限的同步</p>\n<p><img src=\"/cnblogs/13096427/789895-20200613152221722-277186366.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>TenantId：</p>\n<p>null是Host</p>\n<p>1是abp页面第一次加载时初始化的Default租户</p>\n<p>2是我之前添加的旧的企业1，那个时候方法没写好，就把2的删掉了</p>\n<p>3是企业2</p>\n<p>4是企业1</p>\n<p>由此可以看出，我们添加的菜单对应的PageName已经作为权限添加到权限表了</p>\n<p>&nbsp;</p>\n<h2>三、实现菜单修改后，权限赋予对应租户</h2>\n<p>这一个其实在二里面已经写好了，前台做一个按钮，赋予权限，调用一下就好了</p>\n<p>例如：</p>\n<p>Index.cshtml&nbsp; &nbsp;//为什么要加getCurrentLoginInformationsOutput.Tenant == null的判断？是因为租户在进入菜单管理的地方，我们不给他们添加、赋予权限的权限</p>\n<p><img src=\"/cnblogs/13096427/789895-20200613152628601-193312193.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;在/wwwroot/view-resources/Views/Menus/Index.js中添加</p>\n<div class=\"cnblogs_code\">\n<pre>    $(document).on(<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">click</span><span style=\"color: #800000;\">'</span>, <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">#GivePermissions</span><span style=\"color: #800000;\">'</span><span style=\"color: #000000;\">, function (e) {\n        </span><span style=\"color: #0000ff;\">var</span> tenantId = $(<span style=\"color: #0000ff;\">this</span>).attr(<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">data-tenant-id</span><span style=\"color: #800000;\">'</span><span style=\"color: #000000;\">);\n\n        abp.message.confirm(\n            abp.utils.formatString(\n                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">是否赋予当前租户管理员账号所有权限？</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">系统</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n            ),\n            </span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">,\n            (isConfirmed) </span>=&gt;<span style=\"color: #000000;\"> {\n                </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (isConfirmed) {\n                    _menuService\n                        .givePermissions({\n                            id: tenantId\n                        })\n                        .done(() </span>=&gt;<span style=\"color: #000000;\"> {\n                            abp.notify.info(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">操作成功！</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n                            _$menusTable.ajax.reload();\n                        });\n                }\n            }\n        );\n    });</span></pre>\n</div>\n<h2>四、实现菜单的动态加载</h2>\n<p>在<a href=\"https://www.cnblogs.com/wangpengzong/p/13089690.html\">https://www.cnblogs.com/wangpengzong/p/13089690.html</a>中我们找到了菜单生成的地方，在最底部，通过<span style=\"font-family: 'Courier New'; font-size: 12px; white-space: pre-wrap;\">NavigationManager来获取到Menus，这里其实有一个初始化方法（</span><span style=\"font-family: 'Courier New'; font-size: 12px; white-space: pre-wrap;\">Initialize</span><span style=\"font-family: 'Courier New'; font-size: 12px; white-space: pre-wrap;\">），调用的是</span><span style=\"font-family: 'Courier New';\"><span style=\"font-size: 12px; white-space: pre-wrap;\">AbpLearnNavigationProvider的</span></span><span style=\"font-family: 'Courier New'; font-size: 12px; white-space: pre-wrap;\">SetNavigation方法来进行本地化，然后在</span></p>\n<pre><span style=\"margin: 0px; padding: 0px; line-height: 1.5 !important;\">NavigationManager的非静态构造函数中去获取已经本地化的Menus，但是本地化Menus因为是在初始化时，程序的初始化我们无法获取到当前的Tenant信息，所以只能将获取Menus的地方推迟，放在倒数第二个类</span>UserNavigationManager里面的GetMenuAsync方法中，我们来看下GetMenuAsync</pre>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">async</span> Task&lt;UserMenu&gt; GetMenuAsync(<span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> menuName, UserIdentifier user)\n        {\n            </span><span style=\"color: #0000ff;\">var</span> menuDefinition =<span style=\"color: #000000;\"> _navigationManager.Menus.GetOrDefault(menuName);\n            </span><span style=\"color: #0000ff;\">if</span> (menuDefinition == <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)\n            {\n                </span><span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> AbpException(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">There is no menu with given name: </span><span style=\"color: #800000;\">\"</span> +<span style=\"color: #000000;\"> menuName);\n            }\n\n            </span><span style=\"color: #0000ff;\">var</span> userMenu = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> UserMenu(menuDefinition, _localizationContext);\n            </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> FillUserMenuItems(user, menuDefinition.Items, userMenu.Items);\n            </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> userMenu;\n        }</span></pre>\n</div>\n<p>第一句话获取menuDefinition是关键点，我们将menuDefinition修改为从数据库中获取，在AbpLearn.Application/Authorization/Menus下添加UserNavigationManager.cs</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #0000ff;\"><span style=\"color: #0000ff;\">using Abp;\nusing Abp.Application.Features;\nusing Abp.Application.Navigation;\nusing Abp.Authorization;\nusing Abp.Dependency;\nusing Abp.Localization;\nusing Abp.MultiTenancy;\nusing Abp.Runtime.Session;\nusing AbpLearn.Authorization.Menus.Dto;\nusing AbpLearn.Sessions;\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace AbpLearn.Authorization.Menus\n{\n    public class UserNavigationManager : IUserNavigationManager, ITransientDependency\n    {\n        public IAbpSession AbpSession { get; set; }\n\n        private readonly INavigationManager _navigationManager;\n        private readonly ILocalizationContext _localizationContext;\n        private readonly IIocResolver _iocResolver;\n        private readonly IMenusAppService _menuAppService;\n        private readonly ISessionAppService _sessionAppService;\n\n        public IDictionary&lt;string, MenuDefinition&gt; Menus { get; private set; }\n        public MenuDefinition MainMenu\n        {\n            get { return Menus[\"MainMenu\"]; }\n        }\n        public UserNavigationManager(\n            INavigationManager navigationManager,\n            ILocalizationContext localizationContext,\n            IMenusAppService menuAppService,\n            ISessionAppService sessionAppService,\n            IIocResolver iocResolver)\n        {\n            _navigationManager = navigationManager;\n            _localizationContext = localizationContext;\n            _iocResolver = iocResolver;\n            AbpSession = NullAbpSession.Instance;\n            _menuAppService = menuAppService;\n            _sessionAppService = sessionAppService;\n        }\n\n        public async Task&lt;UserMenu&gt; GetMenuAsync(string menuName, UserIdentifier user)\n        {\n            var loginInfo = await _sessionAppService.GetCurrentLoginInformations();\n\n            Menus = new Dictionary&lt;string, MenuDefinition&gt;\n                    {\n                        {\"MainMenu\", new MenuDefinition(\"MainMenu\", new LocalizableString(\"MainMenu\", AbpConsts.LocalizationSourceName))}\n                    };\n\n            var lists = await _menuAppService.GetAllAsync(new MenusPagedResultRequestDto() { ShowAll = true, TenantId = (loginInfo.Tenant == null ? 0 : loginInfo.Tenant.Id) });\n            var ParentMenu = lists.Items.Where(k =&gt; k.IsActive).ToList().Where(x =&gt; x.ParentId == 0).ToList();\n            if (ParentMenu.Any())\n            {\n                ParentMenu.ForEach(g =&gt;\n                {\n                    var menu = new MenuItemDefinition(\n                          g.LName,\n                          MenuL(g.MenuName),\n                          g.Icon,\n                          g.Url,\n                          false,\n                          g.Orders\n                          );\n                    BuildSubMenu(menu, g.Id, lists.Items.Where(k =&gt; k.IsActive).ToList());\n                    MainMenu.AddItem(menu);\n                });\n            }\n            \n            var menuDefinition = MainMenu;\n            if (menuDefinition == null)\n            {\n                throw new AbpException(\"There is no menu with given name: \" + menuName);\n            }\n            var userMenu = new UserMenu();\n            userMenu.Name = menuDefinition.Name;\n            userMenu.DisplayName = menuDefinition.DisplayName.Localize(_localizationContext);\n            userMenu.CustomData = menuDefinition.CustomData;\n            userMenu.Items = new List&lt;UserMenuItem&gt;();\n            await FillUserMenuItems(user, menuDefinition.Items, userMenu.Items);\n            return userMenu;\n        }\n\n        public async Task&lt;IReadOnlyList&lt;UserMenu&gt;&gt; GetMenusAsync(UserIdentifier user)\n        {\n            var userMenus = new List&lt;UserMenu&gt;();\n\n            foreach (var menu in _navigationManager.Menus.Values)\n            {\n                userMenus.Add(await GetMenuAsync(menu.Name, user));\n            }\n\n            return userMenus;\n        }\n        public void BuildSubMenu(MenuItemDefinition menu, int parentId, List&lt;MenuDto&gt; list)\n        {\n            var nList = list.Where(x =&gt; x.ParentId == parentId).ToList();\n            if (nList != null &amp;&amp; nList.Count &gt; 0)\n            {\n                nList.ForEach(g =&gt;\n                {\n                    var subMenu = new MenuItemDefinition(\n                         g.PageName,\n                        MenuL(g.MenuName),\n                        g.Icon,\n                        g.Url,\n                        false,\n                      g.Orders\n                        );\n                    menu.AddItem(subMenu);\n                    BuildSubMenu(subMenu, g.Id, list);\n                });\n            }\n        }\n\n        private static ILocalizableString MenuL(string name)\n        {\n            return new LocalizableString(name, AbpLearnConsts.LocalizationSourceName);\n        }\n        private async Task&lt;int&gt; FillUserMenuItems(UserIdentifier user, IList&lt;MenuItemDefinition&gt; menuItemDefinitions, IList&lt;UserMenuItem&gt; userMenuItems)\n        {\n            //TODO: Can be optimized by re-using FeatureDependencyContext.\n\n            var addedMenuItemCount = 0;\n\n            using (var scope = _iocResolver.CreateScope())\n            {\n                var permissionDependencyContext = scope.Resolve&lt;PermissionDependencyContext&gt;();\n                permissionDependencyContext.User = user;\n\n                var featureDependencyContext = scope.Resolve&lt;FeatureDependencyContext&gt;();\n                featureDependencyContext.TenantId = user == null ? null : user.TenantId;\n\n                foreach (var menuItemDefinition in menuItemDefinitions)\n                {\n                    if (menuItemDefinition.RequiresAuthentication &amp;&amp; user == null)\n                    {\n                        continue;\n                    }\n\n                    if (menuItemDefinition.PermissionDependency != null &amp;&amp;\n                        (user == null || !(await menuItemDefinition.PermissionDependency.IsSatisfiedAsync(permissionDependencyContext))))\n                    {\n                        continue;\n                    }\n\n                    if (menuItemDefinition.FeatureDependency != null &amp;&amp;\n                        (AbpSession.MultiTenancySide == MultiTenancySides.Tenant || (user != null &amp;&amp; user.TenantId != null)) &amp;&amp;\n                        !(await menuItemDefinition.FeatureDependency.IsSatisfiedAsync(featureDependencyContext)))\n                    {\n                        continue;\n                    }\n\n                    var userMenuItem = new UserMenuItem(menuItemDefinition, _localizationContext);\n                    if (menuItemDefinition.IsLeaf || (await FillUserMenuItems(user, menuItemDefinition.Items, userMenuItem.Items)) &gt; 0)\n                    {\n                        userMenuItems.Add(userMenuItem);\n                        ++addedMenuItemCount;\n                    }\n                }\n            }\n\n            return addedMenuItemCount;\n        }\n    }\n}</span></span></pre>\n<p><span style=\"color: #0000ff;\">&nbsp;</span></p>\n</div>\n<p>然后在Mvc项目的Startup.cs/ConfigureServices下增加</p>\n<div class=\"cnblogs_code\">\n<pre>            services.AddScoped&lt;IUserNavigationManager, UserNavigationManager&gt;();</pre>\n</div>\n<p>因为在abp中菜单被做做成了模块，在程序初始化时模块添加进去，但是我们将菜单修改成了每次读取数据库加载，那么我们就不需要加载这个模块了<span style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12px;\"><br /></span></p>\n<p>在mvc项目的AbpLearnWebMvcModule.cs注释下面这句话</p>\n<div class=\"cnblogs_code\">\n<pre>            <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Configuration.Navigation.Providers.Add&lt;AbpLearnNavigationProvider&gt;();</span></pre>\n</div>\n<p>将AbpLearnNavigationProvider.cs/SetNavigation方法的内容全部注释掉</p>\n<p>预览一下mvc，用Host登录一下</p>\n<p><img src=\"/cnblogs/13096427/789895-20200613155431331-1058862470.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;用企业1登陆下，登录切换Host和Tenant，是在登录界面&nbsp;<span style=\"color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\">Current tenant:&nbsp;</span><span style=\"box-sizing: border-box; color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\">未选</span><span style=\"color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\">&nbsp;(</span><a style=\"box-sizing: border-box; color: #007bff; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\" data-toggle=\"modal\" data-target=\"#TenantChangeModal\">Change</a><span style=\"color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\">) 点击Change，在弹框中输入 E1（因为上面设置的企业1标识是E1），点击save，页面刷新后就变为了&nbsp;</span><span style=\"color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\">Current tenant:&nbsp;</span><span style=\"box-sizing: border-box; color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\" title=\"企业1\"><span style=\"box-sizing: border-box; font-weight: bolder;\">E1</span></span><span style=\"color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\">&nbsp;(</span><a style=\"box-sizing: border-box; color: #007bff; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\" data-toggle=\"modal\" data-target=\"#TenantChangeModal\">Change</a><span style=\"color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\">) ，输入账号密码登录</span></p>\n<p>&nbsp;<img src=\"/cnblogs/13096427/789895-20200613164737035-1698740974.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;OK，我们的动态菜单已经完成了</p>\n<p>&nbsp;</p>\n<h2>添加jstree</h2>\n<p>&nbsp;当然，我的菜单使用的是table来显示，你也可以使用tree来，我找到了一个jstree，下面修改一下</p>\n<p>MenusAppService.cs</p>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #0000ff;\">#region</span> 获取当前账户的菜单树\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 获取当前账户的菜单树\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"input\"&gt;&lt;/param&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">async</span> Task&lt;<span style=\"color: #0000ff;\">string</span>&gt;<span style=\"color: #000000;\"> GetTreeAsync(MenusPagedResultRequestDto input)\n        {\n            </span><span style=\"color: #0000ff;\">var</span> query = CreateFilteredQuery(<span style=\"color: #0000ff;\">new</span> MenusPagedResultRequestDto()).Where(o =&gt; o.TenantId ==<span style=\"color: #000000;\"> input.TenantId);\n\n            </span><span style=\"color: #0000ff;\">var</span> systemMenus = <span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> AsyncQueryableExecuter.ToListAsync(query);\n\n            </span><span style=\"color: #0000ff;\">var</span> childJObject = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> JObject();\n            </span><span style=\"color: #0000ff;\">var</span> openJObject = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> JObject();\n            openJObject.Add(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">opened</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);\n            childJObject.Add(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">id</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">);\n            childJObject.Add(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">根目录</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n            childJObject.Add(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">icon</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #800000;\">\"\"</span><span style=\"color: #000000;\">);\n            childJObject.Add(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">state</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">, openJObject);\n            childJObject.Add(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">children</span><span style=\"color: #800000;\">\"</span>, GetJArray(systemMenus, <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">));\n            </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> childJObject.ToString();\n        }\n\n        </span><span style=\"color: #0000ff;\">#region</span> 获取目录Array\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 获取目录Array\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"systemMenus\"&gt;&lt;/param&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"parentdId\"&gt;&lt;/param&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n        <span style=\"color: #0000ff;\">private</span> JArray GetJArray(List&lt;AbpMenus&gt; systemMenus, <span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> parentdId)\n        {\n            JArray jArray </span>= <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> JArray();\n            </span><span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #0000ff;\">var</span> menu <span style=\"color: #0000ff;\">in</span> systemMenus.Where(o =&gt; o.ParentId ==<span style=\"color: #000000;\"> parentdId))\n            {\n                </span><span style=\"color: #0000ff;\">var</span> jObject = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> JObject();\n                jObject.Add(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">id</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">, menu.Id);\n                jObject.Add(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">, menu.MenuName);\n                jObject.Add(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">icon</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">, menu.Icon);\n                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">jObject.Add(\"state\", menu.Icon);</span>\n                <span style=\"color: #0000ff;\">if</span> (systemMenus.Any(o =&gt; o.ParentId ==<span style=\"color: #000000;\"> menu.Id))\n                {\n                    jObject.Add(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">children</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">, GetJArray(systemMenus, menu.Id));\n                }\n                jArray.Add(jObject);\n            }\n            </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> jArray;\n        }\n\n        </span><span style=\"color: #0000ff;\">#endregion</span>\n\n        <span style=\"color: #0000ff;\">#endregion</span></pre>\n</div>\n<p>&nbsp;</p>\n<p>&nbsp;前端Index.cshtml&nbsp;&nbsp;<span style=\"color: #800000; font-family: 'Courier New'; font-size: 12px;\">jstree去</span><span style=\"color: #800000; font-family: 'Courier New';\"><span style=\"font-size: 12px;\">https://github.com/vakata/jstree/zipball/3.3.8下载，下载后在mvc项目的wwwroot文件夹下添加jstree文件夹，下载文件的src里面内容全部赋值到jstree文件夹</span></span></p>\n<p>注释掉table标签</p>\n<p>添加<span style=\"color: #800000; font-family: 'Courier New'; font-size: 12px;\">jstree1</span></p>\n<p>例如：</p>\n<div class=\"cnblogs_code\">\n<pre>@section styles\n{\n    &lt;link href=\"~/jstree/themes/default/style.css\" rel=\"stylesheet\" /&gt;\n}                     <br /><br />       &lt;div id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">jstree1</span><span style=\"color: #800000;\">\"</span> style=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">width:100%;</span><span style=\"color: #800000;\">\"</span>&gt;&lt;/div&gt;\n\n\n\n@section scripts\n{\n    &lt;environment names=\"Development\"&gt;\n        &lt;script src=\"~/view-resources/Views/Menus/Index.js\" asp-append-version=\"true\"&gt;&lt;/script&gt;\n    &lt;/environment&gt;\n\n    &lt;environment names=\"Staging,Production\"&gt;\n        &lt;script src=\"~/view-resources/Views/Menus/Index.min.js\" asp-append-version=\"true\"&gt;&lt;/script&gt;\n    &lt;/environment&gt;\n    &lt;script type=\"application/javascript\" src=\"~/jstree/jstree.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"application/javascript\" src=\"~/jstree/jstree.contextmenu.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        $(function () {\n            var _menuService = abp.services.app.menus;\n\n            l = abp.localization.getSource('A_b_p');\n\n            $('#jstree1').jstree({\n                \"core\": {\n                    \"data\": function (node, callback) {\n                        var filter = $('#MenusSearchForm').serializeFormToObject(true);\n                        this, _menuService.getTree(filter).done(function (result) {\n                            callback.call(this, JSON.parse(result));\n                        });\n                    },\n                    \"themes\": {\n                        \"variant\": \"large\",//加大\n                        \"ellipsis\": true //文字多时省略\n                    },\n                    \"check_callback\": true,\n                },\n                \"plugins\": [\"contextmenu\", \"wholerow\", \"themes\"],//\"checkbox\"\n                \"contextmenu\": {\n                    select_node: false,\n                    show_at_node: true,\n                    \"items\": {\n                        \"create\": {\n                            \"label\": \"新增子菜单\",\n                            \"action\": function (obj) {\n                                var inst = jQuery.jstree.reference(obj.reference);\n                                var clickedNode = inst.get_node(obj.reference);\n                                if (parseInt(clickedNode.original.id) &gt;= 0) {\n                                    $(\"#ParentId\").val(clickedNode.original.id);\n                                    $(\"#MenuCreateModal\").modal();\n                                } else {\n                                    abp.notify.info(\"父节点获取出错\");\n                                }\n                            },\n                        },\n                        \"rename\": {\n                            \"label\": \"修改\",\n                            \"action\": function (obj) {\n                                var inst = jQuery.jstree.reference(obj.reference);\n                                var clickedNode = inst.get_node(obj.reference);\n                                if (parseInt(clickedNode.original.id) &gt;= 0) {\n                                    abp.ajax({\n                                        url: abp.appPath + 'Menus/EditModal?menuId=' + clickedNode.original.id,\n                                        type: 'POST',\n                                        dataType: 'html',\n                                        success: function (content) {\n                                            $(\"#MenuEditModal\").modal();\n                                            $('#MenuEditModal div.modal-content').html(content);\n                                        },\n                                        error: function (e) { }\n                                    });\n                                } else {\n                                    abp.notify.info(\"菜单获取出错\");\n                                }\n                            }\n                        },\n                        \"delete\": {\n                            \"label\": \"更改菜单状态\",\n                            \"action\": function (obj) {\n                                var inst = jQuery.jstree.reference(obj.reference);\n                                var clickedNode = inst.get_node(obj.reference);\n                                abp.message.confirm(\n                                    abp.utils.formatString(\"是否\" + (clickedNode.original.state.disabled?\"启用\":\"禁用\") + \"当前菜单：\" + clickedNode.original.text + \"?\"),\n                                    null,\n                                    (isConfirmed) =&gt; {\n                                        if (isConfirmed) {\n                                            _menuService\n                                                .delete({\n                                                    id: clickedNode.original.id\n                                                })\n                                                .done(() =&gt; {\n                                                    abp.notify.info(l('SuccessfullyDeleted'));\n                                                    location.reload();\n                                                });\n                                        }\n                                    }\n                                );\n                            },\n\n                        }\n                    }\n                }\n            }).on('select_node.jstree', function (event, data) {\n                console.log(data.node);\n            }).on('changed.jstree', function (event, data) {\n                console.log(\"-----------changed.jstree\");\n                console.log(\"action:\" + data.action);\n                console.log(data.node);\n            });\n\n        });\n\n\n    &lt;/script&gt;\n}\n</pre>\n<p>&nbsp;</p>\n</div>\n<p>&nbsp;预览一下吧</p>\n<p><img src=\"/cnblogs/13096427/789895-20200613175433971-1845076483.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<h2>github地址</h2>\n<p>本文github：<a href=\"https://github.com/wangpengzong/AbpLearn\">https://github.com/wangpengzong/AbpLearn</a></p>\n<p>下一篇开始动态权限</p>\n<h2 style=\"display: none;\">&nbsp;吐槽区域（写的不好、不对，欢迎吐槽）</h2>","slug":"cnblogs/13096427","published":1,"updated":"2022-07-10T13:01:11.765Z","_id":"cl5f7ir2a0014c0unea3ebqg5","comments":1,"layout":"post","photos":[],"link":"","content":"<p>我们来创建动态菜单吧&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre>首先，先对动态菜单的概念、操作、流程进行约束：<br />1.Host和各个Tenant有自己的自定义菜单<br />2.Host和各个Tenant的权限与自定义菜单相关联<br />2.Tenant有一套默认的菜单，规定对应的TenantId=-1，在添加租户时自动将标准菜单和标准菜单的权限初始化到添加的租户</pre>\n</div>\n<h2>一、先实现菜单在数据库中的增删改查</h2>\n<h3>第一步：创建表、实体，添加DbContext</h3>\n<p>我们需要创建一个菜单表，延续Abp的命名方法，表名叫AbpMenus吧（菜单和权限、验证我们要关联，所以文件尽量放在Authorization文件夹下）</p>\n<p>把创建的实体放在AbpLearn.Core/Authorization下面，新建一个Menus文件夹，再创建Menus实体</p>\n<div class=\"cnblogs_code\">\n<pre>    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span> AbpMenus : Entity&lt;int&gt;<span style=\"color: #000000;\">\n    {\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> MenuName { <span style=\"color: #0000ff;\">set</span>; <span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> PageName { <span style=\"color: #0000ff;\">set</span>; <span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> Name { <span style=\"color: #0000ff;\">set</span>; <span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> Url { <span style=\"color: #0000ff;\">set</span>; <span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> Icon { <span style=\"color: #0000ff;\">set</span>; <span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">int</span> ParentId { <span style=\"color: #0000ff;\">set</span>; <span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">bool</span> IsActive { <span style=\"color: #0000ff;\">set</span>; <span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">int</span> Orders { <span style=\"color: #0000ff;\">set</span>; <span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">int</span>? TenantId { <span style=\"color: #0000ff;\">set</span>; <span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\">; }\n    }</span></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>如果翻过源码中实体的定义，可以发现很多实体的继承，例如：<br /><br />1.继承接口 IMayHaveTenant，继承后生成的sql语句将自动增加TenantId的查询条件，表中必须包含TenantId列<br />2.继承接口 IPassivable，继承后表中必须包含IsActive列<br />3.继承接口 FullAuditedEntity&lt;TPrimaryKey&gt; TPrimaryKey可以是long、int等值类型，必须包含IsDeleted、DeleterUserId、DeletionTime，其中这个接口<br />        还继承了AuditedEntity&lt;TPrimaryKey&gt;, IFullAudited, IAudited, ICreationAudited, IHasCreationTime, IModificationAudited, IHasModificationTime, IDeletionAudited, IHasDeletionTime, ISoftDelete，这些父类型、接口的定义自己F12就可以看到</pre>\n</div>\n<p>&nbsp;</p>\n<p>AbpLearn.EntityFrameworkCore/EntityFrameworkCore/AbpLearnDbContext.cs增加DbSet</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span> AbpLearnDbContext : AbpZeroDbContext&lt;Tenant, Role, User, AbpLearnDbContext&gt;<span style=\"color: #000000;\">\n    {\n        </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\"> Define a DbSet for each entity of the application </span><span style=\"color: #008000;\">*/</span>\n        \n<pre><code>    &lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; AbpLearnDbContext(DbContextOptions&amp;lt;AbpLearnDbContext&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; options)\n        : &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;base&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;(options)\n    &#123;\n        \n    &#125;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; DbSet&amp;lt;AbpMenus&amp;gt; AbpMenus &#123; &lt;span style=&quot;color: #0000ff;&quot;&gt;set&lt;/span&gt;; &lt;span style=&quot;color: #0000ff;&quot;&gt;get&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;; &#125;\n\n&#125;&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<p>再去数据库中添加AbpMenus表 字段长度请自行调整</p>\n<div class=\"cnblogs_code\">\n<p>DROP TABLE IF EXISTS `AbpMenus`;<br />CREATE TABLE `AbpMenus` (<br />  `Id` int NOT NULL AUTO_INCREMENT,<br />  `MenuName` varchar(50) DEFAULT NULL,<br />  `PageName` varchar(50) DEFAULT NULL,<br />  `LName` varchar(50) DEFAULT NULL,<br />  `Url` varchar(50) DEFAULT NULL,<br />  `Icon` varchar(20) DEFAULT NULL,<br />  `ParentId` int DEFAULT NULL,<br />  `IsActive` bit(1) NOT NULL DEFAULT b'0',<br />  `Orders` int DEFAULT NULL,<br />  `TenantId` int DEFAULT NULL,<br />  PRIMARY KEY (`Id`)<br />) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n</div>\n<h3>第二步：添加Service和Dto</h3>\n<p>AbpLearn.Application/Authorization下添加Menus文件夹，然后添加IMenusAppService、MenusAppService，然后添加Dto文件夹</p>\n<p><img src=\"/cnblogs/13096427/789895-20200611210551368-1414077737.png\" alt=\"\" loading=\"lazy\" /></p>\n<h3>第三步：添加控制器和前台页面、js</h3>\n<p>Controller文件，MenusController.cs</p>\n<p>&nbsp;<img src=\"/cnblogs/13096427/789895-20200613120436495-1821816057.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;前台添加Menus及对应的js文件，可以简单省事的把其他文件夹复制粘贴一份，然后关键词修改下</p>\n<p><img src=\"/cnblogs/13096427/789895-20200611210653597-521335150.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>这些文件太多了，我会把这套代码上传到github中，文章最低部会把链接挂出来</p>\n<p>添加完之后我们就可以生成预览一下Menus，因为SetNavigation中未将Menus的url加进去，我们自己手打链接进入<img src=\"/cnblogs/13096427/789895-20200613122433371-1340406219.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>此时， 我们的菜单这一块的crud已经做好了，我们可以看到有一个Host管理员这个部分是什么意思哪？</p>\n<p>我们为了在当前Host中可以控制所有租户的菜单和权限，将当前Host、标准菜单、租户做一个select，代码如下</p>\n<div class=\"cnblogs_code\">\n<pre>    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> ChangeModalViewModel\n    {\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">int</span>? TenantId { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n\n<pre><code>    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt; TenancyName &#123; &lt;span style=&quot;color: #0000ff;&quot;&gt;get&lt;/span&gt;; &lt;span style=&quot;color: #0000ff;&quot;&gt;set&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;; &#125;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;int&lt;/span&gt;? TenantMenuType &#123; &lt;span style=&quot;color: #0000ff;&quot;&gt;get&lt;/span&gt;; &lt;span style=&quot;color: #0000ff;&quot;&gt;set&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;; &#125;\n\n\n    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; List&amp;lt;ComboboxItemDto&amp;gt; TeneacyItems &#123; &lt;span style=&quot;color: #0000ff;&quot;&gt;get&lt;/span&gt;; &lt;span style=&quot;color: #0000ff;&quot;&gt;set&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;; &#125;\n&#125;&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">async</span> Task&lt;IActionResult&gt; IndexAsync(<span style=\"color: #0000ff;\">int</span>? id = <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">)\n        {\n            </span><span style=\"color: #0000ff;\">var</span> loginTenant = id &lt;= <span style=\"color: #800080;\">0</span> ? <span style=\"color: #0000ff;\">null</span> : _tenantManager.GetById((<span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\">)id);\n\n<pre><code>        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; viewModel = &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; ChangeModalViewModel\n        &#123;\n            TenancyName &lt;/span&gt;= loginTenant?&lt;span style=&quot;color: #000000;&quot;&gt;.TenancyName,\n            TenantId &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; id\n        &#125;;\n\n        viewModel.TeneacyItems &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; _tenantManager.Tenants\n            .Select(p &lt;/span&gt;=&amp;gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; ComboboxItemDto(p.Id.ToString(), p.Name) &#123; IsSelected = viewModel.TenancyName ==&lt;span style=&quot;color: #000000;&quot;&gt; p.TenancyName &#125;)\n            .ToList();\n\n        viewModel.TeneacyItems.Add(&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; ComboboxItemDto(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;,&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;Host管理员&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;) &#123; IsSelected = id == &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; &#125;);\n\n        viewModel.TeneacyItems.Add(&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; ComboboxItemDto(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;-1&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;默认菜单&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;) &#123; IsSelected = id == -&lt;span style=&quot;color: #800080;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; &#125;);\n\n        ViewBag.LoginInfo &lt;/span&gt;= &lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _sessionAppService.GetCurrentLoginInformations();\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; View(viewModel);\n    &#125;&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<p>然后在Index.cshtml中添加或修改</p>\n<div class=\"cnblogs_code\">\n<pre>@model ChangeModalViewModel  // 添加<br /><br /><br /></pre>\n<p>&nbsp; @await Html.PartialAsync(\"~/Views/Menus/Index.AdvancedSearch.cshtml\", Model)&nbsp; //修改</p>\n<p>&nbsp;&nbsp;</p>\n<p>&nbsp; @await Html.PartialAsync(\"~/Views/Menus/_CreateModal.cshtml\",Model.TenantId)&nbsp; //修改</p>\n<p>&nbsp;&nbsp;</p>\n<p>&nbsp; //添加</p>\n<p>&nbsp; $(\"#ChangeTenancyName\").change(function (e) {<br />&nbsp; &nbsp; &nbsp;location.href = \"/Menus/Index/\" + this.options[this.selectedIndex].value;<br />&nbsp; });</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n</div>\n<p>修改_CreateModal.cshtml</p>\n<div class=\"cnblogs_code\" onclick=\"cnblogs_code_show('eb1b27ba-ce7d-494f-b2a1-896ae90bfd6b')\"><img src=\"http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif\" id=\"code_img_closed_eb1b27ba-ce7d-494f-b2a1-896ae90bfd6b\" class=\"code_img_closed\" /><img src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" id=\"code_img_opened_eb1b27ba-ce7d-494f-b2a1-896ae90bfd6b\" class=\"code_img_opened\" style=\"display: none;\" />\n<div id=\"cnblogs_code_open_eb1b27ba-ce7d-494f-b2a1-896ae90bfd6b\" class=\"cnblogs_code_hide\">\n<pre><span style=\"color: #000000;\">@using Abp.Authorization.Users\n@using Abp.MultiTenancy\n@using AbpLearn.MultiTenancy\n@using AbpLearn.Web.Models.Common.Modals\n@model </span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\">\n@{\n    Layout </span>= <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n}\n</span>&lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">modal fade</span><span style=\"color: #800000;\">\"</span> id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MenuCreateModal</span><span style=\"color: #800000;\">\"</span> tabindex=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">-1</span><span style=\"color: #800000;\">\"</span> role=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">dialog</span><span style=\"color: #800000;\">\"</span> aria-labelledby=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MenuCreateModalLabel</span><span style=\"color: #800000;\">\"</span> data-backdrop=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">static</span><span style=\"color: #800000;\">\"</span>&gt;\n    &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">modal-dialog modal-lg</span><span style=\"color: #800000;\">\"</span> role=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">document</span><span style=\"color: #800000;\">\"</span>&gt;\n        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">modal-content</span><span style=\"color: #800000;\">\"</span>&gt;<span style=\"color: #000000;\">\n            @await Html.PartialAsync(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">~/Views/Shared/Modals/_ModalHeader.cshtml</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #0000ff;\">new</span> ModalHeaderViewModel(L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">CreateNewMenu</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)))\n            </span>&lt;form name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">systemMenuCreateForm</span><span style=\"color: #800000;\">\"</span> role=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-horizontal</span><span style=\"color: #800000;\">\"</span>&gt;\n                &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">modal-body</span><span style=\"color: #800000;\">\"</span>&gt;\n                    &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row required</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MenuName</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n                        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                            &lt;input type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MenuName</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span> required minlength=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">2</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row required</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">LName</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n                        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                            &lt;input type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">LName</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span> required&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row required</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Url</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n                        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                            &lt;input type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Url</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">PageName</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n                        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                            &lt;input type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">PageName</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ParentId</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n                        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                            &lt;input type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ParentId</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Orders</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n                        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                            &lt;input type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Orders</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">for</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">CreateMenuIsActive</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">IsActive</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n                        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                            &lt;input id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">CreateMenuIsActive</span><span style=\"color: #800000;\">\"</span> type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">checkbox</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">IsActive</span><span style=\"color: #800000;\">\"</span> value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">true</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">checked</span> /&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n                &lt;input type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">hidden</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">TenantId</span><span style=\"color: #800000;\">\"</span> value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">@(Model)</span><span style=\"color: #800000;\">\"</span> /&gt;<span style=\"color: #000000;\">\n                @await Html.PartialAsync(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">~/Views/Shared/Modals/_ModalFooterWithSaveAndCancel.cshtml</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)\n            </span>&lt;/form&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;</pre>\n</div>\n<span class=\"cnblogs_code_collapse\">View Code</span></div>\n<p>&nbsp;</p>\n<p>修改_EditModal.cshtml</p>\n<div class=\"cnblogs_code\" onclick=\"cnblogs_code_show('3cac859e-397f-41e9-9596-025466ee5cbc')\"><img src=\"http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif\" id=\"code_img_closed_3cac859e-397f-41e9-9596-025466ee5cbc\" class=\"code_img_closed\" /><img src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" id=\"code_img_opened_3cac859e-397f-41e9-9596-025466ee5cbc\" class=\"code_img_opened\" style=\"display: none;\" />\n<div id=\"cnblogs_code_open_3cac859e-397f-41e9-9596-025466ee5cbc\" class=\"cnblogs_code_hide\">\n<pre><span style=\"color: #000000;\">@using AbpLearn.Authorization.Menus.Dto\n@using AbpLearn.Web.Models.Common.Modals\n@model MenuDto\n@{\n    Layout </span>= <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n}\n@await Html.PartialAsync(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">~/Views/Shared/Modals/_ModalHeader.cshtml</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #0000ff;\">new</span> ModalHeaderViewModel(L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">EditMenu</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)))\n</span>&lt;form name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MenuEditForm</span><span style=\"color: #800000;\">\"</span> role=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-horizontal</span><span style=\"color: #800000;\">\"</span>&gt;\n    &lt;input type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">hidden</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Id</span><span style=\"color: #800000;\">\"</span> value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">@Model.Id</span><span style=\"color: #800000;\">\"</span> /&gt;\n    &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">modal-body</span><span style=\"color: #800000;\">\"</span>&gt;\n        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row required</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">for</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">tenancy-name</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MenuName</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n            &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                &lt;input id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">tenancy-name</span><span style=\"color: #800000;\">\"</span> type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MenuName</span><span style=\"color: #800000;\">\"</span> value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">@Model.MenuName</span><span style=\"color: #800000;\">\"</span> required maxlength=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">64</span><span style=\"color: #800000;\">\"</span> minlength=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">2</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row required</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">for</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">name</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">LName</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n            &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                &lt;input id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">name</span><span style=\"color: #800000;\">\"</span> type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">LName</span><span style=\"color: #800000;\">\"</span> value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">@Model.LName</span><span style=\"color: #800000;\">\"</span> required maxlength=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">128</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row required</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">for</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">name</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Url</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n            &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                &lt;input id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">name</span><span style=\"color: #800000;\">\"</span> type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Url</span><span style=\"color: #800000;\">\"</span> value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">@Model.Url</span><span style=\"color: #800000;\">\"</span> required maxlength=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">128</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n\n<pre><code>    &amp;lt;div &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;form-group row required&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;\n        &amp;lt;label &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;col-md-3 col-form-label&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;for&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;@L(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;PageName&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;)&amp;lt;/label&amp;gt;\n        &amp;lt;div &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;col-md-9&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;\n            &amp;lt;input id=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; type=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;text&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;form-control&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; name=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;PageName&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; value=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;@Model.PageName&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; required maxlength=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;128&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;\n        &amp;lt;/div&amp;gt;\n    &amp;lt;/div&amp;gt;\n    &amp;lt;div &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;form-group row required&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;\n        &amp;lt;label &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;col-md-3 col-form-label&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;for&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;@L(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;ParentId&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;)&amp;lt;/label&amp;gt;\n        &amp;lt;div &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;col-md-9&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;\n            &amp;lt;input id=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; type=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;text&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;form-control&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; name=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;ParentId&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; value=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;@Model.ParentId&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; required maxlength=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;128&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;\n        &amp;lt;/div&amp;gt;\n    &amp;lt;/div&amp;gt;\n    &amp;lt;div &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;form-group row required&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;\n        &amp;lt;label &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;col-md-3 col-form-label&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;for&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;@L(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;Orders&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;)&amp;lt;/label&amp;gt;\n        &amp;lt;div &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;col-md-9&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;\n            &amp;lt;input id=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; type=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;text&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;form-control&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; name=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;Orders&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; value=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;@Model.Orders&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; required maxlength=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;128&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;\n        &amp;lt;/div&amp;gt;\n    &amp;lt;/div&amp;gt;\n    &amp;lt;div &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;form-group row&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;\n        &amp;lt;label &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;col-md-3 col-form-label&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;for&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;isactive&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;@L(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;IsActive&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;)&amp;lt;/label&amp;gt;\n        &amp;lt;div &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;col-md-9&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;\n            &amp;lt;input id=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;isactive&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; type=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;checkbox&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; name=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;IsActive&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; value=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; @(Model.IsActive ? &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;checked&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; : &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&quot;&lt;/span&gt;) /&amp;gt;\n        &amp;lt;/div&amp;gt;\n    &amp;lt;/div&amp;gt;\n&amp;lt;/div&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;\n@await Html.PartialAsync(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;~/Views/Shared/Modals/_ModalFooterWithSaveAndCancel.cshtml&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)\n</code></pre>\n<p></span>&lt;/form&gt;</p>\n<p>&lt;script src=<span style=\"color: #800000;\">“</span><span style=\"color: #800000;\">~/view-resources/Views/Menus/_EditModal.js</span><span style=\"color: #800000;\">“</span> asp-append-version=<span style=\"color: #800000;\">“</span><span style=\"color: #800000;\">true</span><span style=\"color: #800000;\">“</span>&gt;&lt;/script&gt;</pre></p>\n</div>\n<span class=\"cnblogs_code_collapse\">View Code</span></div>\n<p>修改Index.AdvancedSearch.cshtml</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">@using AbpLearn.Web.Views.Shared.Components.TenantChange\n@using Abp.Application.Services.Dto\n@model ChangeModalViewModel\n\n<pre><code>&lt;/span&gt;&amp;lt;div &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;abp-advanced-search&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;\n    &amp;lt;form id=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;MenusSearchForm&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;form-horizontal&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;\n        &amp;lt;input type=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;hidden&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; name=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;TenantId&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; value=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;@Model.TenantId&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; /&amp;gt;\n        &amp;lt;/form&amp;gt;\n        &amp;lt;div &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;form-horizontal&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;\n            &amp;lt;div &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;form-group&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;\n                @Html.DropDownList(\n                   &lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;ChangeTenancyNames&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;,\n                   Model.TeneacyItems.Select(i &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; i.ToSelectListItem()),\n                   &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; &#123; @class = &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;form-control edited&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, id = &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;ChangeTenancyName&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; &#125;)\n            &lt;/span&gt;&amp;lt;/div&amp;gt;\n        &amp;lt;/div&amp;gt;\n&amp;lt;/div&amp;gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<p>因为在abp里面加载当前列表调用的是abp.services.app.menus.getAll方法，我们还需要对MenusAppService中的GetAllAsync做一下修改</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">    [Serializable]\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> MenusPagedResultRequestDto: PagedResultRequestDto, IPagedAndSortedResultRequest\n    {\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">int</span>? TenantId { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n\n<pre><code>    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;virtual&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt; Sorting &#123; &lt;span style=&quot;color: #0000ff;&quot;&gt;get&lt;/span&gt;; &lt;span style=&quot;color: #0000ff;&quot;&gt;set&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;; &#125;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;virtual&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;bool&lt;/span&gt; ShowAll &#123; &lt;span style=&quot;color: #0000ff;&quot;&gt;get&lt;/span&gt;; &lt;span style=&quot;color: #0000ff;&quot;&gt;set&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;; &#125;\n\n&#125;&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #0000ff;\">#region</span> 查询全部菜单\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 查询全部菜单\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"input\"&gt;&lt;/param&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">override</span> <span style=\"color: #0000ff;\">async</span> Task&lt;PagedResultDto&lt;MenuDto&gt;&gt;<span style=\"color: #000000;\"> GetAllAsync(MenusPagedResultRequestDto input)\n        {\n            IQueryable</span>&lt;AbpMenus&gt;<span style=\"color: #000000;\"> query;\n\n<pre><code>        query &lt;/span&gt;= CreateFilteredQuery(input).Where(o =&amp;gt; o.TenantId == (input.TenantId == &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt; ? &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; : input.TenantId));\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; totalCount = &lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; AsyncQueryableExecuter.CountAsync(query);\n\n        query &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; ApplySorting(query, input);\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (!input.ShowAll) query =&lt;span style=&quot;color: #000000;&quot;&gt; ApplyPaging(query, input);\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; entities = &lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; AsyncQueryableExecuter.ToListAsync(query);\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; PagedResultDto&amp;lt;MenuDto&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;(\n            totalCount,\n            entities.Select(MapToEntityDto).ToList()\n        );\n    &#125;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;#endregion&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<p>这样，我们在选中下面中的任意一个Tenant时，将会跳到对应的菜单里面了</p>\n<p>&nbsp;</p>\n<p><img src=\"/cnblogs/13096427/789895-20200613122549077-374827601.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;我们先把Host管理员菜单和默认菜单配置一下</p>\n<p><img src=\"/cnblogs/13096427/789895-20200613131544727-322024248.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;<img src=\"/cnblogs/13096427/789895-20200613131507643-1916575069.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<h2>二、实现添加租户时，初始化标准菜单和权限</h2>\n<p>首先我们找到添加租户的地方，去TenantAppService里面去找，可以看到有CreateAsync的重写</p>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">override</span> <span style=\"color: #0000ff;\">async</span> Task&lt;TenantDto&gt;<span style=\"color: #000000;\"> CreateAsync(CreateTenantDto input)\n        {\n            CheckCreatePermission();\n\n<pre><code>        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Create tenant&lt;/span&gt;\n        &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; tenant = ObjectMapper.Map&amp;lt;Tenant&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;(input);\n        tenant.ConnectionString &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; input.ConnectionString.IsNullOrEmpty()\n            &lt;/span&gt;? &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;\n            : SimpleStringCipher.Instance.Encrypt(input.ConnectionString);\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; defaultEdition = &lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _editionManager.FindByNameAsync(EditionManager.DefaultEditionName);\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (defaultEdition != &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)\n        &#123;\n            tenant.EditionId &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; defaultEdition.Id;\n        &#125;\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _tenantManager.CreateAsync(tenant);\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt; CurrentUnitOfWork.SaveChangesAsync(); &lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; To get new tenant&#39;s id.\n\n        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Create tenant database&lt;/span&gt;\n</code></pre>\n<p><span style=\"color: #000000;\">            _abpZeroDbMigrator.CreateOrMigrateForTenant(tenant);</p>\n<pre><code>        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; We are working entities of new tenant, so changing tenant filter&lt;/span&gt;\n        &lt;span style=&quot;color: #0000ff;&quot;&gt;using&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; (CurrentUnitOfWork.SetTenantId(tenant.Id))\n        &#123;\n            &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Create static roles for new tenant&lt;/span&gt;\n            CheckErrors(&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _roleManager.CreateStaticRoles(tenant.Id));\n\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt; CurrentUnitOfWork.SaveChangesAsync(); &lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; To get static role ids\n\n            &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Grant all permissions to admin role&lt;/span&gt;\n            &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; adminRole = _roleManager.Roles.Single(r =&amp;gt; r.Name ==&lt;span style=&quot;color: #000000;&quot;&gt; StaticRoleNames.Tenants.Admin);\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _roleManager.GrantAllPermissionsAsync(adminRole);\n\n            &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Create admin user for the tenant&lt;/span&gt;\n            &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; adminUser =&lt;span style=&quot;color: #000000;&quot;&gt; User.CreateTenantAdminUser(tenant.Id, input.AdminEmailAddress);\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _userManager.InitializeOptionsAsync(tenant.Id);\n            CheckErrors(&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _userManager.CreateAsync(adminUser, User.DefaultPassword));\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt; CurrentUnitOfWork.SaveChangesAsync(); &lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; To get admin user&#39;s id\n\n            &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Assign admin user to role!&lt;/span&gt;\n            CheckErrors(&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _userManager.AddToRoleAsync(adminUser, adminRole.Name));\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; CurrentUnitOfWork.SaveChangesAsync();\n        &#125;\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; MapToEntityDto(tenant);\n    &#125;&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<p>我们需要做的是，在&nbsp;using (CurrentUnitOfWork.SetTenantId(tenant.Id)) 的内部尾部添加赋予菜单和权限的方法即可</p>\n<p>赋予菜单和权限的方法我们分开写，都放在MenusAppService中，</p>\n<div class=\"cnblogs_code\">\n<pre>    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">interface</span> IMenusAppService : IAsyncCrudAppService&lt;MenuDto, <span style=\"color: #0000ff;\">int</span>, MenusPagedResultRequestDto, CreateMenuDto, MenuDto&gt;<span style=\"color: #000000;\">\n    {\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 赋予默认菜单\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"input\"&gt;&lt;/param&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n        Task GiveMenusAsync(EntityDto&lt;<span style=\"color: #0000ff;\">int</span>&gt;<span style=\"color: #000000;\"> input);\n\n<pre><code>    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; 赋予当前租户Admin角色菜单权限\n    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;param name=&quot;input&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;returns&amp;gt;&amp;lt;/returns&amp;gt;&lt;/span&gt;\n    Task GivePermissionsAsync(EntityDto&amp;lt;&lt;span style=&quot;color: #0000ff;&quot;&gt;int&lt;/span&gt;&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; input);\n&#125;&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>        #region 赋予默认菜单\n        public async Task GiveMenusAsync(EntityDto&lt;int&gt; input)\n        {\n            if (input.Id &gt; 0)\n            {\n                var tenant = await _tenantManager.GetByIdAsync(input.Id);\n\n<pre><code>            using (_unitOfWorkManager.Current.SetTenantId(tenant.Id))\n            &#123;\n                var query = CreateFilteredQuery(new MenusPagedResultRequestDto()).Where(o =&amp;gt; o.TenantId == tenant.Id);\n\n                var systemMenus = await AsyncQueryableExecuter.ToListAsync(query);\n\n                if (!systemMenus.Any())\n                &#123;\n                    query = CreateFilteredQuery(new MenusPagedResultRequestDto()).Where(o =&amp;gt; o.TenantId == -1);\n\n                    var defaultMenus = await AsyncQueryableExecuter.ToListAsync(query);\n                    if (defaultMenus.Any())\n                    &#123;\n                        List&amp;lt;MenusInsert&amp;gt; GetMenusInserts(List&amp;lt;AbpMenus&amp;gt; abpMenus,int parentId = 0)\n                        &#123;\n                            List&amp;lt;MenusInsert&amp;gt; menusInserts = new List&amp;lt;MenusInsert&amp;gt;();\n                            foreach (var entity in abpMenus.Where(o =&amp;gt; o.ParentId == parentId))\n                            &#123;\n                                var insert = new MenusInsert()\n                                &#123;\n                                    LName = entity.LName,\n                                    MenuName = entity.MenuName,\n                                    PageName = entity.PageName,\n                                    Icon = entity.Icon,\n                                    Url = entity.Url,\n                                    IsActive = entity.IsActive,\n                                    Orders = entity.Orders,\n                                    ParentId = entity.ParentId,\n                                    TenantId = tenant.Id\n                                &#125;;\n                                insert.menusInserts = GetMenusInserts(abpMenus, entity.Id);\n                                menusInserts.Add(insert);\n                            &#125;\n                            return menusInserts;\n                        &#125;\n\n                        async Task InsertMenusAsync(List&amp;lt;MenusInsert&amp;gt; inserts,int parentId = 0)\n                        &#123;\n                            foreach (var insert in inserts)\n                            &#123;\n                                var entity = await CreateAsync(new AbpMenus()\n                                &#123;\n                                    LName = insert.LName,\n                                    MenuName = insert.MenuName,\n                                    PageName = insert.PageName,\n                                    Icon = insert.Icon,\n                                    Url = insert.Url,\n                                    IsActive = insert.IsActive,\n                                    Orders = insert.Orders,\n                                    ParentId = parentId,\n                                    TenantId = tenant.Id\n                                &#125;);\n                                if (insert.menusInserts.Any())\n                                &#123;\n                                    await InsertMenusAsync(insert.menusInserts, entity.Id);\n                                &#125;\n                            &#125;\n                        &#125;\n                        await InsertMenusAsync(GetMenusInserts(defaultMenus));\n                        \n                    &#125;\n                &#125;\n            &#125;\n        &#125;\n\n    &#125;\n    #endregion\n\n\n    &lt;span style=&quot;color: #0000ff;&quot;&gt;#region&lt;/span&gt; 赋予当前租户Admin角色菜单权限\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; 赋予当前租户Admin角色菜单权限\n    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;param name=&quot;input&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;returns&amp;gt;&amp;lt;/returns&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;async&lt;/span&gt; Task GivePermissionsAsync(EntityDto&amp;lt;&lt;span style=&quot;color: #0000ff;&quot;&gt;int&lt;/span&gt;&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; input)\n    &#123;\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (input.Id &amp;gt; &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)\n        &#123;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; tenant = &lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _tenantManager.GetByIdAsync(input.Id);\n\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;using&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; (_unitOfWorkManager.Current.SetTenantId(tenant.Id))\n            &#123;\n                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; adminRoles = &lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt; _roleRepository.GetAllListAsync(o =&amp;gt; o.Name == StaticRoleNames.Tenants.Admin &amp;amp;&amp;amp; o.TenantId ==&lt;span style=&quot;color: #000000;&quot;&gt; tenant.Id);\n                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (adminRoles.FirstOrDefault() != &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)\n                &#123;\n                    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; adminRole =&lt;span style=&quot;color: #000000;&quot;&gt; adminRoles.FirstOrDefault();\n\n                    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; query = CreateFilteredQuery(&lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; MenusPagedResultRequestDto()).Where(o =&amp;gt; o.TenantId ==&lt;span style=&quot;color: #000000;&quot;&gt; tenant.Id);\n\n                    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; systemMenus = &lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; AsyncQueryableExecuter.ToListAsync(query);\n\n                    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; permissions =&lt;span style=&quot;color: #000000;&quot;&gt; ConvertTenantPermissions(systemMenus);\n\n                    &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;await _roleManager.ResetAllPermissionsAsync(adminRole.FirstOrDefault()); &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;重置授权&lt;/span&gt;\n\n                    &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; active_BatchCount = &lt;span style=&quot;color: #800080;&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;;\n                    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; active_permissions = ConvertTenantPermissions(systemMenus.Where(o =&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; o.IsActive).ToList());\n                    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;for&lt;/span&gt; (&lt;span style=&quot;color: #0000ff;&quot;&gt;int&lt;/span&gt; i = &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt;; i &amp;lt; active_permissions.Count(); i += &lt;span style=&quot;color: #800080;&quot;&gt;10&lt;/span&gt;)&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;每次后移5位&lt;/span&gt;\n</code></pre>\n<p><span style=\"color: #000000;\">                        {<br>                            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">await _roleManager.SetGrantedPermissionsAsync(adminRole.FirstOrDefault().Id, active_permissions.Take(active_BatchCount).Skip(i));</span><br>                            <span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #0000ff;\">var</span> notActive_permission <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> active_permissions.Take(active_BatchCount).Skip(i))<br>                            {<br>                                </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _roleManager.GrantPermissionAsync(adminRole, notActive_permission);<br>                            }<br>                            active_BatchCount </span>+= <span style=\"color: #800080;\">10</span>;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">每次从数组中选出N+10位，skip前N位</span><br><span style=\"color: #000000;\">                        }</p>\n<pre><code>                    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; notActive_BatchCount = &lt;span style=&quot;color: #800080;&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;;\n                    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; notActive_permissions = ConvertTenantPermissions(systemMenus.Where(o =&amp;gt; !&lt;span style=&quot;color: #000000;&quot;&gt;o.IsActive).ToList());\n                    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;for&lt;/span&gt; (&lt;span style=&quot;color: #0000ff;&quot;&gt;int&lt;/span&gt; i = &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt;; i &amp;lt; notActive_permissions.Count(); i += &lt;span style=&quot;color: #800080;&quot;&gt;10&lt;/span&gt;)&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;每次后移5位&lt;/span&gt;\n</code></pre>\n<p><span style=\"color: #000000;\">                        {<br>                            </span><span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #0000ff;\">var</span> notActive_permission <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> notActive_permissions.Take(notActive_BatchCount).Skip(i))<br>                            {<br>                                </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _roleManager.ProhibitPermissionAsync(adminRole, notActive_permission);<br>                            }<br>                            notActive_BatchCount </span>+= <span style=\"color: #800080;\">10</span>;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">每次从数组中选出N+10位，skip前N位</span><br><span style=\"color: #000000;\">                        }<br>                    }<br>                    </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"><br>                    {<br>                        </span><span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> AbpDbConcurrencyException(<span style=\"color: #800000;\">“</span><span style=\"color: #800000;\">未获取到当前租户的Admin角色！</span><span style=\"color: #800000;\">“</span><span style=\"color: #000000;\">);<br>                    }<br>                }<br>            }<br>            </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"><br>            {<br>                </span><span style=\"color: #0000ff;\">var</span> adminRoles = <span style=\"color: #0000ff;\">await</span> _roleRepository.GetAllListAsync(o =&gt; o.Name == StaticRoleNames.Tenants.Admin &amp;&amp; o.TenantId == <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">);<br>                </span><span style=\"color: #0000ff;\">if</span> (adminRoles.FirstOrDefault() != <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)<br>                {<br>                    </span><span style=\"color: #0000ff;\">var</span> adminRole =<span style=\"color: #000000;\"> adminRoles.FirstOrDefault();</p>\n<pre><code>                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; query = CreateFilteredQuery(&lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; MenusPagedResultRequestDto()).Where(o =&amp;gt; o.TenantId == &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt; || o.TenantId == &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n\n                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; systemMenus = &lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; AsyncQueryableExecuter.ToListAsync(query);\n\n                &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;await _roleManager.ResetAllPermissionsAsync(adminRole.FirstOrDefault()); &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;重置授权&lt;/span&gt;\n\n                &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; active_BatchCount = &lt;span style=&quot;color: #800080;&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;;\n                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; active_permissions = ConvertHostPermissions(systemMenus.Where(o =&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; o.IsActive).ToList());\n                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;for&lt;/span&gt; (&lt;span style=&quot;color: #0000ff;&quot;&gt;int&lt;/span&gt; i = &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt;; i &amp;lt; active_permissions.Count(); i += &lt;span style=&quot;color: #800080;&quot;&gt;10&lt;/span&gt;)&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;每次后移5位&lt;/span&gt;\n</code></pre>\n<p><span style=\"color: #000000;\">                    {<br>                        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">await _roleManager.SetGrantedPermissionsAsync(adminRole.FirstOrDefault().Id, active_permissions.Take(active_BatchCount).Skip(i));</span><br>                        <span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #0000ff;\">var</span> notActive_permission <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> active_permissions.Take(active_BatchCount).Skip(i))<br>                        {<br>                            </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _roleManager.GrantPermissionAsync(adminRole, notActive_permission);<br>                        }<br>                        active_BatchCount </span>+= <span style=\"color: #800080;\">10</span>;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">每次从数组中选出N+10位，skip前N位</span><br><span style=\"color: #000000;\">                    }</p>\n<pre><code>                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; notActive_BatchCount = &lt;span style=&quot;color: #800080;&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;;\n                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; notActive_permissions = ConvertHostPermissions(systemMenus.Where(o =&amp;gt; !&lt;span style=&quot;color: #000000;&quot;&gt;o.IsActive).ToList());\n                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;for&lt;/span&gt; (&lt;span style=&quot;color: #0000ff;&quot;&gt;int&lt;/span&gt; i = &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt;; i &amp;lt; notActive_permissions.Count(); i += &lt;span style=&quot;color: #800080;&quot;&gt;10&lt;/span&gt;)&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;每次后移5位&lt;/span&gt;\n</code></pre>\n<p><span style=\"color: #000000;\">                    {<br>                        </span><span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #0000ff;\">var</span> notActive_permission <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> notActive_permissions.Take(notActive_BatchCount).Skip(i))<br>                        {<br>                            </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _roleManager.ProhibitPermissionAsync(adminRole, notActive_permission);<br>                        }<br>                        notActive_BatchCount </span>+= <span style=\"color: #800080;\">10</span>;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">每次从数组中选出N+10位，skip前N位</span><br><span style=\"color: #000000;\">                    }<br>                }<br>            }<br>        }</p>\n<pre><code>    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; IEnumerable&amp;lt;Permission&amp;gt; ConvertTenantPermissions(IReadOnlyList&amp;lt;AbpMenus&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; systemMenus)\n    &#123;\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt; systemMenus.Select(o =&amp;gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; Permission(o.PageName, L(o.MenuName), L(o.LName), MultiTenancySides.Tenant));\n    &#125;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; IEnumerable&amp;lt;Permission&amp;gt; ConvertHostPermissions(IReadOnlyList&amp;lt;AbpMenus&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; systemMenus)\n    &#123;\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt; systemMenus.Select(o =&amp;gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; Permission(o.PageName, L(o.MenuName), L(o.LName), MultiTenancySides.Host));\n    &#125;\n    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;#endregion&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<p>TenantAppService.cs中做一下修改</p>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">override</span> <span style=\"color: #0000ff;\">async</span> Task&lt;TenantDto&gt;<span style=\"color: #000000;\"> CreateAsync(CreateTenantDto input)\n        {\n            CheckCreatePermission();\n\n<pre><code>        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Create tenant&lt;/span&gt;\n        &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; tenant = ObjectMapper.Map&amp;lt;Tenant&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;(input);\n        tenant.ConnectionString &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; input.ConnectionString.IsNullOrEmpty()\n            &lt;/span&gt;? &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;\n            : SimpleStringCipher.Instance.Encrypt(input.ConnectionString);\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; defaultEdition = &lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _editionManager.FindByNameAsync(EditionManager.DefaultEditionName);\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (defaultEdition != &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)\n        &#123;\n            tenant.EditionId &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; defaultEdition.Id;\n        &#125;\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _tenantManager.CreateAsync(tenant);\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt; CurrentUnitOfWork.SaveChangesAsync(); &lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; To get new tenant&#39;s id.\n\n        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Create tenant database&lt;/span&gt;\n</code></pre>\n<p><span style=\"color: #000000;\">            _abpZeroDbMigrator.CreateOrMigrateForTenant(tenant);</p>\n<pre><code>        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; We are working entities of new tenant, so changing tenant filter&lt;/span&gt;\n        &lt;span style=&quot;color: #0000ff;&quot;&gt;using&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; (CurrentUnitOfWork.SetTenantId(tenant.Id))\n        &#123;\n            &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Create static roles for new tenant&lt;/span&gt;\n            CheckErrors(&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _roleManager.CreateStaticRoles(tenant.Id));\n\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt; CurrentUnitOfWork.SaveChangesAsync(); &lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; To get static role ids\n\n            &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Grant all permissions to admin role&lt;/span&gt;\n            &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; adminRole = _roleManager.Roles.Single(r =&amp;gt; r.Name ==&lt;span style=&quot;color: #000000;&quot;&gt; StaticRoleNames.Tenants.Admin);\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _roleManager.GrantAllPermissionsAsync(adminRole);\n\n            &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Create admin user for the tenant&lt;/span&gt;\n            &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; adminUser =&lt;span style=&quot;color: #000000;&quot;&gt; User.CreateTenantAdminUser(tenant.Id, input.AdminEmailAddress);\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _userManager.InitializeOptionsAsync(tenant.Id);\n            CheckErrors(&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _userManager.CreateAsync(adminUser, User.DefaultPassword));\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt; CurrentUnitOfWork.SaveChangesAsync(); &lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; To get admin user&#39;s id\n\n            &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Assign admin user to role!&lt;/span&gt;\n            CheckErrors(&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _userManager.AddToRoleAsync(adminUser, adminRole.Name));\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; CurrentUnitOfWork.SaveChangesAsync();\n\n            &lt;/span&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;await _menusAppService.GiveMenusAsync(new EntityDto&amp;lt;int&amp;gt;() &#123; Id = tenant.Id &#125;);\n            await CurrentUnitOfWork.SaveChangesAsync();\n\n            await _menusAppService.GivePermissionsAsync(new EntityDto&amp;lt;int&amp;gt;() &#123; Id = tenant.Id &#125;);\n            await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt; CurrentUnitOfWork.SaveChangesAsync();&lt;/span&gt;\n        &#125;\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; MapToEntityDto(tenant);\n    &#125;&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<p>现在我们添加租户企业1、企业2</p>\n<p><img src=\"/cnblogs/13096427/789895-20200613151834645-748331091.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;<img src=\"/cnblogs/13096427/789895-20200613151852573-1477272883.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;现在菜单已经同步好了，我们去数据库看下权限的同步</p>\n<p><img src=\"/cnblogs/13096427/789895-20200613152221722-277186366.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>TenantId：</p>\n<p>null是Host</p>\n<p>1是abp页面第一次加载时初始化的Default租户</p>\n<p>2是我之前添加的旧的企业1，那个时候方法没写好，就把2的删掉了</p>\n<p>3是企业2</p>\n<p>4是企业1</p>\n<p>由此可以看出，我们添加的菜单对应的PageName已经作为权限添加到权限表了</p>\n<p>&nbsp;</p>\n<h2>三、实现菜单修改后，权限赋予对应租户</h2>\n<p>这一个其实在二里面已经写好了，前台做一个按钮，赋予权限，调用一下就好了</p>\n<p>例如：</p>\n<p>Index.cshtml&nbsp; &nbsp;//为什么要加getCurrentLoginInformationsOutput.Tenant == null的判断？是因为租户在进入菜单管理的地方，我们不给他们添加、赋予权限的权限</p>\n<p><img src=\"/cnblogs/13096427/789895-20200613152628601-193312193.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;在/wwwroot/view-resources/Views/Menus/Index.js中添加</p>\n<div class=\"cnblogs_code\">\n<pre>    $(document).on(<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">click</span><span style=\"color: #800000;\">'</span>, <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">#GivePermissions</span><span style=\"color: #800000;\">'</span><span style=\"color: #000000;\">, function (e) {\n        </span><span style=\"color: #0000ff;\">var</span> tenantId = $(<span style=\"color: #0000ff;\">this</span>).attr(<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">data-tenant-id</span><span style=\"color: #800000;\">'</span><span style=\"color: #000000;\">);\n\n<pre><code>    abp.message.confirm(\n        abp.utils.formatString(\n            &lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;是否赋予当前租户管理员账号所有权限？&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;,\n            &lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;系统&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;\n        ),\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;,\n        (isConfirmed) &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; &#123;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; (isConfirmed) &#123;\n                _menuService\n                    .givePermissions(&#123;\n                        id: tenantId\n                    &#125;)\n                    .done(() &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; &#123;\n                        abp.notify.info(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;操作成功！&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n                        _$menusTable.ajax.reload();\n                    &#125;);\n            &#125;\n        &#125;\n    );\n&#125;);&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<h2>四、实现菜单的动态加载</h2>\n<p>在<a href=\"https://www.cnblogs.com/wangpengzong/p/13089690.html\">https://www.cnblogs.com/wangpengzong/p/13089690.html</a>中我们找到了菜单生成的地方，在最底部，通过<span style=\"font-family: 'Courier New'; font-size: 12px; white-space: pre-wrap;\">NavigationManager来获取到Menus，这里其实有一个初始化方法（</span><span style=\"font-family: 'Courier New'; font-size: 12px; white-space: pre-wrap;\">Initialize</span><span style=\"font-family: 'Courier New'; font-size: 12px; white-space: pre-wrap;\">），调用的是</span><span style=\"font-family: 'Courier New';\"><span style=\"font-size: 12px; white-space: pre-wrap;\">AbpLearnNavigationProvider的</span></span><span style=\"font-family: 'Courier New'; font-size: 12px; white-space: pre-wrap;\">SetNavigation方法来进行本地化，然后在</span></p>\n<pre><span style=\"margin: 0px; padding: 0px; line-height: 1.5 !important;\">NavigationManager的非静态构造函数中去获取已经本地化的Menus，但是本地化Menus因为是在初始化时，程序的初始化我们无法获取到当前的Tenant信息，所以只能将获取Menus的地方推迟，放在倒数第二个类</span>UserNavigationManager里面的GetMenuAsync方法中，我们来看下GetMenuAsync</pre>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">async</span> Task&lt;UserMenu&gt; GetMenuAsync(<span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> menuName, UserIdentifier user)\n        {\n            </span><span style=\"color: #0000ff;\">var</span> menuDefinition =<span style=\"color: #000000;\"> _navigationManager.Menus.GetOrDefault(menuName);\n            </span><span style=\"color: #0000ff;\">if</span> (menuDefinition == <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)\n            {\n                </span><span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> AbpException(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">There is no menu with given name: </span><span style=\"color: #800000;\">\"</span> +<span style=\"color: #000000;\"> menuName);\n            }\n\n<pre><code>        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; userMenu = &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; UserMenu(menuDefinition, _localizationContext);\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; FillUserMenuItems(user, menuDefinition.Items, userMenu.Items);\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; userMenu;\n    &#125;&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<p>第一句话获取menuDefinition是关键点，我们将menuDefinition修改为从数据库中获取，在AbpLearn.Application/Authorization/Menus下添加UserNavigationManager.cs</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #0000ff;\"><span style=\"color: #0000ff;\">using Abp;\nusing Abp.Application.Features;\nusing Abp.Application.Navigation;\nusing Abp.Authorization;\nusing Abp.Dependency;\nusing Abp.Localization;\nusing Abp.MultiTenancy;\nusing Abp.Runtime.Session;\nusing AbpLearn.Authorization.Menus.Dto;\nusing AbpLearn.Sessions;\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\n<p>namespace AbpLearn.Authorization.Menus<br>{<br>    public class UserNavigationManager : IUserNavigationManager, ITransientDependency<br>    {<br>        public IAbpSession AbpSession { get; set; }</p>\n<pre><code>    private readonly INavigationManager _navigationManager;\n    private readonly ILocalizationContext _localizationContext;\n    private readonly IIocResolver _iocResolver;\n    private readonly IMenusAppService _menuAppService;\n    private readonly ISessionAppService _sessionAppService;\n\n    public IDictionary&amp;lt;string, MenuDefinition&amp;gt; Menus &#123; get; private set; &#125;\n    public MenuDefinition MainMenu\n    &#123;\n        get &#123; return Menus[&quot;MainMenu&quot;]; &#125;\n    &#125;\n    public UserNavigationManager(\n        INavigationManager navigationManager,\n        ILocalizationContext localizationContext,\n        IMenusAppService menuAppService,\n        ISessionAppService sessionAppService,\n        IIocResolver iocResolver)\n    &#123;\n        _navigationManager = navigationManager;\n        _localizationContext = localizationContext;\n        _iocResolver = iocResolver;\n        AbpSession = NullAbpSession.Instance;\n        _menuAppService = menuAppService;\n        _sessionAppService = sessionAppService;\n    &#125;\n\n    public async Task&amp;lt;UserMenu&amp;gt; GetMenuAsync(string menuName, UserIdentifier user)\n    &#123;\n        var loginInfo = await _sessionAppService.GetCurrentLoginInformations();\n\n        Menus = new Dictionary&amp;lt;string, MenuDefinition&amp;gt;\n                &#123;\n                    &#123;&quot;MainMenu&quot;, new MenuDefinition(&quot;MainMenu&quot;, new LocalizableString(&quot;MainMenu&quot;, AbpConsts.LocalizationSourceName))&#125;\n                &#125;;\n\n        var lists = await _menuAppService.GetAllAsync(new MenusPagedResultRequestDto() &#123; ShowAll = true, TenantId = (loginInfo.Tenant == null ? 0 : loginInfo.Tenant.Id) &#125;);\n        var ParentMenu = lists.Items.Where(k =&amp;gt; k.IsActive).ToList().Where(x =&amp;gt; x.ParentId == 0).ToList();\n        if (ParentMenu.Any())\n        &#123;\n            ParentMenu.ForEach(g =&amp;gt;\n            &#123;\n                var menu = new MenuItemDefinition(\n                      g.LName,\n                      MenuL(g.MenuName),\n                      g.Icon,\n                      g.Url,\n                      false,\n                      g.Orders\n                      );\n                BuildSubMenu(menu, g.Id, lists.Items.Where(k =&amp;gt; k.IsActive).ToList());\n                MainMenu.AddItem(menu);\n            &#125;);\n        &#125;\n        \n        var menuDefinition = MainMenu;\n        if (menuDefinition == null)\n        &#123;\n            throw new AbpException(&quot;There is no menu with given name: &quot; + menuName);\n        &#125;\n        var userMenu = new UserMenu();\n        userMenu.Name = menuDefinition.Name;\n        userMenu.DisplayName = menuDefinition.DisplayName.Localize(_localizationContext);\n        userMenu.CustomData = menuDefinition.CustomData;\n        userMenu.Items = new List&amp;lt;UserMenuItem&amp;gt;();\n        await FillUserMenuItems(user, menuDefinition.Items, userMenu.Items);\n        return userMenu;\n    &#125;\n\n    public async Task&amp;lt;IReadOnlyList&amp;lt;UserMenu&amp;gt;&amp;gt; GetMenusAsync(UserIdentifier user)\n    &#123;\n        var userMenus = new List&amp;lt;UserMenu&amp;gt;();\n\n        foreach (var menu in _navigationManager.Menus.Values)\n        &#123;\n            userMenus.Add(await GetMenuAsync(menu.Name, user));\n        &#125;\n\n        return userMenus;\n    &#125;\n    public void BuildSubMenu(MenuItemDefinition menu, int parentId, List&amp;lt;MenuDto&amp;gt; list)\n    &#123;\n        var nList = list.Where(x =&amp;gt; x.ParentId == parentId).ToList();\n        if (nList != null &amp;amp;&amp;amp; nList.Count &amp;gt; 0)\n        &#123;\n            nList.ForEach(g =&amp;gt;\n            &#123;\n                var subMenu = new MenuItemDefinition(\n                     g.PageName,\n                    MenuL(g.MenuName),\n                    g.Icon,\n                    g.Url,\n                    false,\n                  g.Orders\n                    );\n                menu.AddItem(subMenu);\n                BuildSubMenu(subMenu, g.Id, list);\n            &#125;);\n        &#125;\n    &#125;\n\n    private static ILocalizableString MenuL(string name)\n    &#123;\n        return new LocalizableString(name, AbpLearnConsts.LocalizationSourceName);\n    &#125;\n    private async Task&amp;lt;int&amp;gt; FillUserMenuItems(UserIdentifier user, IList&amp;lt;MenuItemDefinition&amp;gt; menuItemDefinitions, IList&amp;lt;UserMenuItem&amp;gt; userMenuItems)\n    &#123;\n        //TODO: Can be optimized by re-using FeatureDependencyContext.\n\n        var addedMenuItemCount = 0;\n\n        using (var scope = _iocResolver.CreateScope())\n        &#123;\n            var permissionDependencyContext = scope.Resolve&amp;lt;PermissionDependencyContext&amp;gt;();\n            permissionDependencyContext.User = user;\n\n            var featureDependencyContext = scope.Resolve&amp;lt;FeatureDependencyContext&amp;gt;();\n            featureDependencyContext.TenantId = user == null ? null : user.TenantId;\n\n            foreach (var menuItemDefinition in menuItemDefinitions)\n            &#123;\n                if (menuItemDefinition.RequiresAuthentication &amp;amp;&amp;amp; user == null)\n                &#123;\n                    continue;\n                &#125;\n\n                if (menuItemDefinition.PermissionDependency != null &amp;amp;&amp;amp;\n                    (user == null || !(await menuItemDefinition.PermissionDependency.IsSatisfiedAsync(permissionDependencyContext))))\n                &#123;\n                    continue;\n                &#125;\n\n                if (menuItemDefinition.FeatureDependency != null &amp;amp;&amp;amp;\n                    (AbpSession.MultiTenancySide == MultiTenancySides.Tenant || (user != null &amp;amp;&amp;amp; user.TenantId != null)) &amp;amp;&amp;amp;\n                    !(await menuItemDefinition.FeatureDependency.IsSatisfiedAsync(featureDependencyContext)))\n                &#123;\n                    continue;\n                &#125;\n\n                var userMenuItem = new UserMenuItem(menuItemDefinition, _localizationContext);\n                if (menuItemDefinition.IsLeaf || (await FillUserMenuItems(user, menuItemDefinition.Items, userMenuItem.Items)) &amp;gt; 0)\n                &#123;\n                    userMenuItems.Add(userMenuItem);\n                    ++addedMenuItemCount;\n                &#125;\n            &#125;\n        &#125;\n\n        return addedMenuItemCount;\n    &#125;\n&#125;\n</code></pre>\n<p>}</span></span></pre></p>\n<p><span style=\"color: #0000ff;\">&nbsp;</span></p>\n</div>\n<p>然后在Mvc项目的Startup.cs/ConfigureServices下增加</p>\n<div class=\"cnblogs_code\">\n<pre>            services.AddScoped&lt;IUserNavigationManager, UserNavigationManager&gt;();</pre>\n</div>\n<p>因为在abp中菜单被做做成了模块，在程序初始化时模块添加进去，但是我们将菜单修改成了每次读取数据库加载，那么我们就不需要加载这个模块了<span style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12px;\"><br /></span></p>\n<p>在mvc项目的AbpLearnWebMvcModule.cs注释下面这句话</p>\n<div class=\"cnblogs_code\">\n<pre>            <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Configuration.Navigation.Providers.Add&lt;AbpLearnNavigationProvider&gt;();</span></pre>\n</div>\n<p>将AbpLearnNavigationProvider.cs/SetNavigation方法的内容全部注释掉</p>\n<p>预览一下mvc，用Host登录一下</p>\n<p><img src=\"/cnblogs/13096427/789895-20200613155431331-1058862470.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;用企业1登陆下，登录切换Host和Tenant，是在登录界面&nbsp;<span style=\"color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\">Current tenant:&nbsp;</span><span style=\"box-sizing: border-box; color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\">未选</span><span style=\"color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\">&nbsp;(</span><a style=\"box-sizing: border-box; color: #007bff; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\" data-toggle=\"modal\" data-target=\"#TenantChangeModal\">Change</a><span style=\"color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\">) 点击Change，在弹框中输入 E1（因为上面设置的企业1标识是E1），点击save，页面刷新后就变为了&nbsp;</span><span style=\"color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\">Current tenant:&nbsp;</span><span style=\"box-sizing: border-box; color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\" title=\"企业1\"><span style=\"box-sizing: border-box; font-weight: bolder;\">E1</span></span><span style=\"color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\">&nbsp;(</span><a style=\"box-sizing: border-box; color: #007bff; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\" data-toggle=\"modal\" data-target=\"#TenantChangeModal\">Change</a><span style=\"color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\">) ，输入账号密码登录</span></p>\n<p>&nbsp;<img src=\"/cnblogs/13096427/789895-20200613164737035-1698740974.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;OK，我们的动态菜单已经完成了</p>\n<p>&nbsp;</p>\n<h2>添加jstree</h2>\n<p>&nbsp;当然，我的菜单使用的是table来显示，你也可以使用tree来，我找到了一个jstree，下面修改一下</p>\n<p>MenusAppService.cs</p>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #0000ff;\">#region</span> 获取当前账户的菜单树\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 获取当前账户的菜单树\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"input\"&gt;&lt;/param&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">async</span> Task&lt;<span style=\"color: #0000ff;\">string</span>&gt;<span style=\"color: #000000;\"> GetTreeAsync(MenusPagedResultRequestDto input)\n        {\n            </span><span style=\"color: #0000ff;\">var</span> query = CreateFilteredQuery(<span style=\"color: #0000ff;\">new</span> MenusPagedResultRequestDto()).Where(o =&gt; o.TenantId ==<span style=\"color: #000000;\"> input.TenantId);\n\n<pre><code>        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; systemMenus = &lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; AsyncQueryableExecuter.ToListAsync(query);\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; childJObject = &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; JObject();\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; openJObject = &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; JObject();\n        openJObject.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;opened&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n        childJObject.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n        childJObject.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;text&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;根目录&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n        childJObject.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;icon&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n        childJObject.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;state&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;, openJObject);\n        childJObject.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;children&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, GetJArray(systemMenus, &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;));\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; childJObject.ToString();\n    &#125;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;#region&lt;/span&gt; 获取目录Array\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; 获取目录Array\n    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;param name=&quot;systemMenus&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;param name=&quot;parentdId&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;returns&amp;gt;&amp;lt;/returns&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #0000ff;&quot;&gt;private&lt;/span&gt; JArray GetJArray(List&amp;lt;AbpMenus&amp;gt; systemMenus, &lt;span style=&quot;color: #0000ff;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; parentdId)\n    &#123;\n        JArray jArray &lt;/span&gt;= &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; JArray();\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;foreach&lt;/span&gt; (&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; menu &lt;span style=&quot;color: #0000ff;&quot;&gt;in&lt;/span&gt; systemMenus.Where(o =&amp;gt; o.ParentId ==&lt;span style=&quot;color: #000000;&quot;&gt; parentdId))\n        &#123;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; jObject = &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; JObject();\n            jObject.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;, menu.Id);\n            jObject.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;text&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;, menu.MenuName);\n            jObject.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;icon&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;, menu.Icon);\n            &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;jObject.Add(&quot;state&quot;, menu.Icon);&lt;/span&gt;\n            &lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (systemMenus.Any(o =&amp;gt; o.ParentId ==&lt;span style=&quot;color: #000000;&quot;&gt; menu.Id))\n            &#123;\n                jObject.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;children&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;, GetJArray(systemMenus, menu.Id));\n            &#125;\n            jArray.Add(jObject);\n        &#125;\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; jArray;\n    &#125;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;#endregion&lt;/span&gt;\n\n    &lt;span style=&quot;color: #0000ff;&quot;&gt;#endregion&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<p>&nbsp;</p>\n<p>&nbsp;前端Index.cshtml&nbsp;&nbsp;<span style=\"color: #800000; font-family: 'Courier New'; font-size: 12px;\">jstree去</span><span style=\"color: #800000; font-family: 'Courier New';\"><span style=\"font-size: 12px;\">https://github.com/vakata/jstree/zipball/3.3.8下载，下载后在mvc项目的wwwroot文件夹下添加jstree文件夹，下载文件的src里面内容全部赋值到jstree文件夹</span></span></p>\n<p>注释掉table标签</p>\n<p>添加<span style=\"color: #800000; font-family: 'Courier New'; font-size: 12px;\">jstree1</span></p>\n<p>例如：</p>\n<div class=\"cnblogs_code\">\n<pre>@section styles\n{\n    &lt;link href=\"~/jstree/themes/default/style.css\" rel=\"stylesheet\" /&gt;\n}                     <br /><br />       &lt;div id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">jstree1</span><span style=\"color: #800000;\">\"</span> style=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">width:100%;</span><span style=\"color: #800000;\">\"</span>&gt;&lt;/div&gt;\n\n\n\n<p>@section scripts<br>{<br>    &lt;environment names=”Development”&gt;<br>        &lt;script src=”~/view-resources/Views/Menus/Index.js” asp-append-version=”true”&gt;&lt;/script&gt;<br>    &lt;/environment&gt;</p>\n<pre><code>&amp;lt;environment names=&quot;Staging,Production&quot;&amp;gt;\n    &amp;lt;script src=&quot;~/view-resources/Views/Menus/Index.min.js&quot; asp-append-version=&quot;true&quot;&amp;gt;&amp;lt;/script&amp;gt;\n&amp;lt;/environment&amp;gt;\n&amp;lt;script type=&quot;application/javascript&quot; src=&quot;~/jstree/jstree.js&quot;&amp;gt;&amp;lt;/script&amp;gt;\n&amp;lt;script type=&quot;application/javascript&quot; src=&quot;~/jstree/jstree.contextmenu.js&quot;&amp;gt;&amp;lt;/script&amp;gt;\n&amp;lt;script type=&quot;text/javascript&quot;&amp;gt;\n    $(function () &#123;\n        var _menuService = abp.services.app.menus;\n\n        l = abp.localization.getSource(&#39;A_b_p&#39;);\n\n        $(&#39;#jstree1&#39;).jstree(&#123;\n            &quot;core&quot;: &#123;\n                &quot;data&quot;: function (node, callback) &#123;\n                    var filter = $(&#39;#MenusSearchForm&#39;).serializeFormToObject(true);\n                    this, _menuService.getTree(filter).done(function (result) &#123;\n                        callback.call(this, JSON.parse(result));\n                    &#125;);\n                &#125;,\n                &quot;themes&quot;: &#123;\n                    &quot;variant&quot;: &quot;large&quot;,//加大\n                    &quot;ellipsis&quot;: true //文字多时省略\n                &#125;,\n                &quot;check_callback&quot;: true,\n            &#125;,\n            &quot;plugins&quot;: [&quot;contextmenu&quot;, &quot;wholerow&quot;, &quot;themes&quot;],//&quot;checkbox&quot;\n            &quot;contextmenu&quot;: &#123;\n                select_node: false,\n                show_at_node: true,\n                &quot;items&quot;: &#123;\n                    &quot;create&quot;: &#123;\n                        &quot;label&quot;: &quot;新增子菜单&quot;,\n                        &quot;action&quot;: function (obj) &#123;\n                            var inst = jQuery.jstree.reference(obj.reference);\n                            var clickedNode = inst.get_node(obj.reference);\n                            if (parseInt(clickedNode.original.id) &amp;gt;= 0) &#123;\n                                $(&quot;#ParentId&quot;).val(clickedNode.original.id);\n                                $(&quot;#MenuCreateModal&quot;).modal();\n                            &#125; else &#123;\n                                abp.notify.info(&quot;父节点获取出错&quot;);\n                            &#125;\n                        &#125;,\n                    &#125;,\n                    &quot;rename&quot;: &#123;\n                        &quot;label&quot;: &quot;修改&quot;,\n                        &quot;action&quot;: function (obj) &#123;\n                            var inst = jQuery.jstree.reference(obj.reference);\n                            var clickedNode = inst.get_node(obj.reference);\n                            if (parseInt(clickedNode.original.id) &amp;gt;= 0) &#123;\n                                abp.ajax(&#123;\n                                    url: abp.appPath + &#39;Menus/EditModal?menuId=&#39; + clickedNode.original.id,\n                                    type: &#39;POST&#39;,\n                                    dataType: &#39;html&#39;,\n                                    success: function (content) &#123;\n                                        $(&quot;#MenuEditModal&quot;).modal();\n                                        $(&#39;#MenuEditModal div.modal-content&#39;).html(content);\n                                    &#125;,\n                                    error: function (e) &#123; &#125;\n                                &#125;);\n                            &#125; else &#123;\n                                abp.notify.info(&quot;菜单获取出错&quot;);\n                            &#125;\n                        &#125;\n                    &#125;,\n                    &quot;delete&quot;: &#123;\n                        &quot;label&quot;: &quot;更改菜单状态&quot;,\n                        &quot;action&quot;: function (obj) &#123;\n                            var inst = jQuery.jstree.reference(obj.reference);\n                            var clickedNode = inst.get_node(obj.reference);\n                            abp.message.confirm(\n                                abp.utils.formatString(&quot;是否&quot; + (clickedNode.original.state.disabled?&quot;启用&quot;:&quot;禁用&quot;) + &quot;当前菜单：&quot; + clickedNode.original.text + &quot;?&quot;),\n                                null,\n                                (isConfirmed) =&amp;gt; &#123;\n                                    if (isConfirmed) &#123;\n                                        _menuService\n                                            .delete(&#123;\n                                                id: clickedNode.original.id\n                                            &#125;)\n                                            .done(() =&amp;gt; &#123;\n                                                abp.notify.info(l(&#39;SuccessfullyDeleted&#39;));\n                                                location.reload();\n                                            &#125;);\n                                    &#125;\n                                &#125;\n                            );\n                        &#125;,\n\n                    &#125;\n                &#125;\n            &#125;\n        &#125;).on(&#39;select_node.jstree&#39;, function (event, data) &#123;\n            console.log(data.node);\n        &#125;).on(&#39;changed.jstree&#39;, function (event, data) &#123;\n            console.log(&quot;-----------changed.jstree&quot;);\n            console.log(&quot;action:&quot; + data.action);\n            console.log(data.node);\n        &#125;);\n\n    &#125;);\n\n\n&amp;lt;/script&amp;gt;\n</code></pre>\n<p>}<br></pre></p>\n<p>&nbsp;</p>\n</div>\n<p>&nbsp;预览一下吧</p>\n<p><img src=\"/cnblogs/13096427/789895-20200613175433971-1845076483.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<h2>github地址</h2>\n<p>本文github：<a href=\"https://github.com/wangpengzong/AbpLearn\">https://github.com/wangpengzong/AbpLearn</a></p>\n<p>下一篇开始动态权限</p>\n<h2 style=\"display: none;\">&nbsp;吐槽区域（写的不好、不对，欢迎吐槽）</h2>","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"spatxos","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/spatxos","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"<p>我们来创建动态菜单吧&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre>首先，先对动态菜单的概念、操作、流程进行约束：<br />1.Host和各个Tenant有自己的自定义菜单<br />2.Host和各个Tenant的权限与自定义菜单相关联<br />2.Tenant有一套默认的菜单，规定对应的TenantId=-1，在添加租户时自动将标准菜单和标准菜单的权限初始化到添加的租户</pre>\n</div>\n<h2>一、先实现菜单在数据库中的增删改查</h2>\n<h3>第一步：创建表、实体，添加DbContext</h3>\n<p>我们需要创建一个菜单表，延续Abp的命名方法，表名叫AbpMenus吧（菜单和权限、验证我们要关联，所以文件尽量放在Authorization文件夹下）</p>\n<p>把创建的实体放在AbpLearn.Core/Authorization下面，新建一个Menus文件夹，再创建Menus实体</p>\n<div class=\"cnblogs_code\">\n<pre>    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span> AbpMenus : Entity&lt;int&gt;<span style=\"color: #000000;\">\n    {\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> MenuName { <span style=\"color: #0000ff;\">set</span>; <span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> PageName { <span style=\"color: #0000ff;\">set</span>; <span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> Name { <span style=\"color: #0000ff;\">set</span>; <span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> Url { <span style=\"color: #0000ff;\">set</span>; <span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> Icon { <span style=\"color: #0000ff;\">set</span>; <span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">int</span> ParentId { <span style=\"color: #0000ff;\">set</span>; <span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">bool</span> IsActive { <span style=\"color: #0000ff;\">set</span>; <span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">int</span> Orders { <span style=\"color: #0000ff;\">set</span>; <span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">int</span>? TenantId { <span style=\"color: #0000ff;\">set</span>; <span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\">; }\n    }</span></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>如果翻过源码中实体的定义，可以发现很多实体的继承，例如：<br /><br />1.继承接口 IMayHaveTenant，继承后生成的sql语句将自动增加TenantId的查询条件，表中必须包含TenantId列<br />2.继承接口 IPassivable，继承后表中必须包含IsActive列<br />3.继承接口 FullAuditedEntity&lt;TPrimaryKey&gt; TPrimaryKey可以是long、int等值类型，必须包含IsDeleted、DeleterUserId、DeletionTime，其中这个接口<br />        还继承了AuditedEntity&lt;TPrimaryKey&gt;, IFullAudited, IAudited, ICreationAudited, IHasCreationTime, IModificationAudited, IHasModificationTime, IDeletionAudited, IHasDeletionTime, ISoftDelete，这些父类型、接口的定义自己F12就可以看到</pre>\n</div>\n<p>&nbsp;</p>\n<p>AbpLearn.EntityFrameworkCore/EntityFrameworkCore/AbpLearnDbContext.cs增加DbSet</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span> AbpLearnDbContext : AbpZeroDbContext&lt;Tenant, Role, User, AbpLearnDbContext&gt;<span style=\"color: #000000;\">\n    {\n        </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\"> Define a DbSet for each entity of the application </span><span style=\"color: #008000;\">*/</span>\n        \n<pre><code>    &lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; AbpLearnDbContext(DbContextOptions&amp;lt;AbpLearnDbContext&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; options)\n        : &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;base&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;(options)\n    &#123;\n        \n    &#125;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; DbSet&amp;lt;AbpMenus&amp;gt; AbpMenus &#123; &lt;span style=&quot;color: #0000ff;&quot;&gt;set&lt;/span&gt;; &lt;span style=&quot;color: #0000ff;&quot;&gt;get&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;; &#125;\n\n&#125;&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<p>再去数据库中添加AbpMenus表 字段长度请自行调整</p>\n<div class=\"cnblogs_code\">\n<p>DROP TABLE IF EXISTS `AbpMenus`;<br />CREATE TABLE `AbpMenus` (<br />  `Id` int NOT NULL AUTO_INCREMENT,<br />  `MenuName` varchar(50) DEFAULT NULL,<br />  `PageName` varchar(50) DEFAULT NULL,<br />  `LName` varchar(50) DEFAULT NULL,<br />  `Url` varchar(50) DEFAULT NULL,<br />  `Icon` varchar(20) DEFAULT NULL,<br />  `ParentId` int DEFAULT NULL,<br />  `IsActive` bit(1) NOT NULL DEFAULT b'0',<br />  `Orders` int DEFAULT NULL,<br />  `TenantId` int DEFAULT NULL,<br />  PRIMARY KEY (`Id`)<br />) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n</div>\n<h3>第二步：添加Service和Dto</h3>\n<p>AbpLearn.Application/Authorization下添加Menus文件夹，然后添加IMenusAppService、MenusAppService，然后添加Dto文件夹</p>\n<p><img src=\"/cnblogs/13096427/789895-20200611210551368-1414077737.png\" alt=\"\" loading=\"lazy\" /></p>\n<h3>第三步：添加控制器和前台页面、js</h3>\n<p>Controller文件，MenusController.cs</p>\n<p>&nbsp;<img src=\"/cnblogs/13096427/789895-20200613120436495-1821816057.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;前台添加Menus及对应的js文件，可以简单省事的把其他文件夹复制粘贴一份，然后关键词修改下</p>\n<p><img src=\"/cnblogs/13096427/789895-20200611210653597-521335150.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>这些文件太多了，我会把这套代码上传到github中，文章最低部会把链接挂出来</p>\n<p>添加完之后我们就可以生成预览一下Menus，因为SetNavigation中未将Menus的url加进去，我们自己手打链接进入<img src=\"/cnblogs/13096427/789895-20200613122433371-1340406219.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>此时， 我们的菜单这一块的crud已经做好了，我们可以看到有一个Host管理员这个部分是什么意思哪？</p>\n<p>我们为了在当前Host中可以控制所有租户的菜单和权限，将当前Host、标准菜单、租户做一个select，代码如下</p>\n<div class=\"cnblogs_code\">\n<pre>    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> ChangeModalViewModel\n    {\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">int</span>? TenantId { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n\n<pre><code>    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt; TenancyName &#123; &lt;span style=&quot;color: #0000ff;&quot;&gt;get&lt;/span&gt;; &lt;span style=&quot;color: #0000ff;&quot;&gt;set&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;; &#125;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;int&lt;/span&gt;? TenantMenuType &#123; &lt;span style=&quot;color: #0000ff;&quot;&gt;get&lt;/span&gt;; &lt;span style=&quot;color: #0000ff;&quot;&gt;set&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;; &#125;\n\n\n    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; List&amp;lt;ComboboxItemDto&amp;gt; TeneacyItems &#123; &lt;span style=&quot;color: #0000ff;&quot;&gt;get&lt;/span&gt;; &lt;span style=&quot;color: #0000ff;&quot;&gt;set&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;; &#125;\n&#125;&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">async</span> Task&lt;IActionResult&gt; IndexAsync(<span style=\"color: #0000ff;\">int</span>? id = <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">)\n        {\n            </span><span style=\"color: #0000ff;\">var</span> loginTenant = id &lt;= <span style=\"color: #800080;\">0</span> ? <span style=\"color: #0000ff;\">null</span> : _tenantManager.GetById((<span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\">)id);\n\n<pre><code>        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; viewModel = &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; ChangeModalViewModel\n        &#123;\n            TenancyName &lt;/span&gt;= loginTenant?&lt;span style=&quot;color: #000000;&quot;&gt;.TenancyName,\n            TenantId &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; id\n        &#125;;\n\n        viewModel.TeneacyItems &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; _tenantManager.Tenants\n            .Select(p &lt;/span&gt;=&amp;gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; ComboboxItemDto(p.Id.ToString(), p.Name) &#123; IsSelected = viewModel.TenancyName ==&lt;span style=&quot;color: #000000;&quot;&gt; p.TenancyName &#125;)\n            .ToList();\n\n        viewModel.TeneacyItems.Add(&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; ComboboxItemDto(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;,&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;Host管理员&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;) &#123; IsSelected = id == &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; &#125;);\n\n        viewModel.TeneacyItems.Add(&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; ComboboxItemDto(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;-1&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;默认菜单&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;) &#123; IsSelected = id == -&lt;span style=&quot;color: #800080;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; &#125;);\n\n        ViewBag.LoginInfo &lt;/span&gt;= &lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _sessionAppService.GetCurrentLoginInformations();\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; View(viewModel);\n    &#125;&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<p>然后在Index.cshtml中添加或修改</p>\n<div class=\"cnblogs_code\">\n<pre>@model ChangeModalViewModel  // 添加<br /><br /><br /></pre>\n<p>&nbsp; @await Html.PartialAsync(\"~/Views/Menus/Index.AdvancedSearch.cshtml\", Model)&nbsp; //修改</p>\n<p>&nbsp;&nbsp;</p>\n<p>&nbsp; @await Html.PartialAsync(\"~/Views/Menus/_CreateModal.cshtml\",Model.TenantId)&nbsp; //修改</p>\n<p>&nbsp;&nbsp;</p>\n<p>&nbsp; //添加</p>\n<p>&nbsp; $(\"#ChangeTenancyName\").change(function (e) {<br />&nbsp; &nbsp; &nbsp;location.href = \"/Menus/Index/\" + this.options[this.selectedIndex].value;<br />&nbsp; });</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n</div>\n<p>修改_CreateModal.cshtml</p>\n<div class=\"cnblogs_code\" onclick=\"cnblogs_code_show('eb1b27ba-ce7d-494f-b2a1-896ae90bfd6b')\"><img src=\"http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif\" id=\"code_img_closed_eb1b27ba-ce7d-494f-b2a1-896ae90bfd6b\" class=\"code_img_closed\" /><img src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" id=\"code_img_opened_eb1b27ba-ce7d-494f-b2a1-896ae90bfd6b\" class=\"code_img_opened\" style=\"display: none;\" />\n<div id=\"cnblogs_code_open_eb1b27ba-ce7d-494f-b2a1-896ae90bfd6b\" class=\"cnblogs_code_hide\">\n<pre><span style=\"color: #000000;\">@using Abp.Authorization.Users\n@using Abp.MultiTenancy\n@using AbpLearn.MultiTenancy\n@using AbpLearn.Web.Models.Common.Modals\n@model </span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\">\n@{\n    Layout </span>= <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n}\n</span>&lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">modal fade</span><span style=\"color: #800000;\">\"</span> id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MenuCreateModal</span><span style=\"color: #800000;\">\"</span> tabindex=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">-1</span><span style=\"color: #800000;\">\"</span> role=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">dialog</span><span style=\"color: #800000;\">\"</span> aria-labelledby=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MenuCreateModalLabel</span><span style=\"color: #800000;\">\"</span> data-backdrop=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">static</span><span style=\"color: #800000;\">\"</span>&gt;\n    &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">modal-dialog modal-lg</span><span style=\"color: #800000;\">\"</span> role=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">document</span><span style=\"color: #800000;\">\"</span>&gt;\n        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">modal-content</span><span style=\"color: #800000;\">\"</span>&gt;<span style=\"color: #000000;\">\n            @await Html.PartialAsync(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">~/Views/Shared/Modals/_ModalHeader.cshtml</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #0000ff;\">new</span> ModalHeaderViewModel(L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">CreateNewMenu</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)))\n            </span>&lt;form name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">systemMenuCreateForm</span><span style=\"color: #800000;\">\"</span> role=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-horizontal</span><span style=\"color: #800000;\">\"</span>&gt;\n                &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">modal-body</span><span style=\"color: #800000;\">\"</span>&gt;\n                    &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row required</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MenuName</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n                        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                            &lt;input type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MenuName</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span> required minlength=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">2</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row required</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">LName</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n                        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                            &lt;input type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">LName</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span> required&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row required</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Url</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n                        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                            &lt;input type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Url</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">PageName</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n                        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                            &lt;input type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">PageName</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ParentId</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n                        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                            &lt;input type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ParentId</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Orders</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n                        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                            &lt;input type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Orders</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                    &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row</span><span style=\"color: #800000;\">\"</span>&gt;\n                        &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">for</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">CreateMenuIsActive</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">IsActive</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n                        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                            &lt;input id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">CreateMenuIsActive</span><span style=\"color: #800000;\">\"</span> type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">checkbox</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">IsActive</span><span style=\"color: #800000;\">\"</span> value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">true</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">checked</span> /&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n                &lt;input type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">hidden</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">TenantId</span><span style=\"color: #800000;\">\"</span> value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">@(Model)</span><span style=\"color: #800000;\">\"</span> /&gt;<span style=\"color: #000000;\">\n                @await Html.PartialAsync(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">~/Views/Shared/Modals/_ModalFooterWithSaveAndCancel.cshtml</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)\n            </span>&lt;/form&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;</pre>\n</div>\n<span class=\"cnblogs_code_collapse\">View Code</span></div>\n<p>&nbsp;</p>\n<p>修改_EditModal.cshtml</p>\n<div class=\"cnblogs_code\" onclick=\"cnblogs_code_show('3cac859e-397f-41e9-9596-025466ee5cbc')\"><img src=\"http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif\" id=\"code_img_closed_3cac859e-397f-41e9-9596-025466ee5cbc\" class=\"code_img_closed\" /><img src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" id=\"code_img_opened_3cac859e-397f-41e9-9596-025466ee5cbc\" class=\"code_img_opened\" style=\"display: none;\" />\n<div id=\"cnblogs_code_open_3cac859e-397f-41e9-9596-025466ee5cbc\" class=\"cnblogs_code_hide\">\n<pre><span style=\"color: #000000;\">@using AbpLearn.Authorization.Menus.Dto\n@using AbpLearn.Web.Models.Common.Modals\n@model MenuDto\n@{\n    Layout </span>= <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n}\n@await Html.PartialAsync(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">~/Views/Shared/Modals/_ModalHeader.cshtml</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #0000ff;\">new</span> ModalHeaderViewModel(L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">EditMenu</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)))\n</span>&lt;form name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MenuEditForm</span><span style=\"color: #800000;\">\"</span> role=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-horizontal</span><span style=\"color: #800000;\">\"</span>&gt;\n    &lt;input type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">hidden</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Id</span><span style=\"color: #800000;\">\"</span> value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">@Model.Id</span><span style=\"color: #800000;\">\"</span> /&gt;\n    &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">modal-body</span><span style=\"color: #800000;\">\"</span>&gt;\n        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row required</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">for</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">tenancy-name</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MenuName</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n            &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                &lt;input id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">tenancy-name</span><span style=\"color: #800000;\">\"</span> type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MenuName</span><span style=\"color: #800000;\">\"</span> value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">@Model.MenuName</span><span style=\"color: #800000;\">\"</span> required maxlength=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">64</span><span style=\"color: #800000;\">\"</span> minlength=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">2</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row required</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">for</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">name</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">LName</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n            &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                &lt;input id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">name</span><span style=\"color: #800000;\">\"</span> type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">LName</span><span style=\"color: #800000;\">\"</span> value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">@Model.LName</span><span style=\"color: #800000;\">\"</span> required maxlength=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">128</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-group row required</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;label <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-3 col-form-label</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">for</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">name</span><span style=\"color: #800000;\">\"</span>&gt;@L(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Url</span><span style=\"color: #800000;\">\"</span>)&lt;/label&gt;\n            &lt;div <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">col-md-9</span><span style=\"color: #800000;\">\"</span>&gt;\n                &lt;input id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">name</span><span style=\"color: #800000;\">\"</span> type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">text</span><span style=\"color: #800000;\">\"</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Url</span><span style=\"color: #800000;\">\"</span> value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">@Model.Url</span><span style=\"color: #800000;\">\"</span> required maxlength=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">128</span><span style=\"color: #800000;\">\"</span>&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n\n<pre><code>    &amp;lt;div &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;form-group row required&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;\n        &amp;lt;label &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;col-md-3 col-form-label&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;for&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;@L(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;PageName&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;)&amp;lt;/label&amp;gt;\n        &amp;lt;div &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;col-md-9&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;\n            &amp;lt;input id=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; type=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;text&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;form-control&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; name=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;PageName&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; value=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;@Model.PageName&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; required maxlength=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;128&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;\n        &amp;lt;/div&amp;gt;\n    &amp;lt;/div&amp;gt;\n    &amp;lt;div &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;form-group row required&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;\n        &amp;lt;label &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;col-md-3 col-form-label&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;for&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;@L(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;ParentId&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;)&amp;lt;/label&amp;gt;\n        &amp;lt;div &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;col-md-9&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;\n            &amp;lt;input id=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; type=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;text&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;form-control&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; name=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;ParentId&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; value=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;@Model.ParentId&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; required maxlength=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;128&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;\n        &amp;lt;/div&amp;gt;\n    &amp;lt;/div&amp;gt;\n    &amp;lt;div &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;form-group row required&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;\n        &amp;lt;label &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;col-md-3 col-form-label&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;for&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;@L(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;Orders&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;)&amp;lt;/label&amp;gt;\n        &amp;lt;div &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;col-md-9&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;\n            &amp;lt;input id=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;name&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; type=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;text&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;form-control&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; name=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;Orders&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; value=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;@Model.Orders&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; required maxlength=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;128&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;\n        &amp;lt;/div&amp;gt;\n    &amp;lt;/div&amp;gt;\n    &amp;lt;div &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;form-group row&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;\n        &amp;lt;label &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;col-md-3 col-form-label&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;for&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;isactive&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;@L(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;IsActive&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;)&amp;lt;/label&amp;gt;\n        &amp;lt;div &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;col-md-9&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;\n            &amp;lt;input id=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;isactive&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; type=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;checkbox&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; name=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;IsActive&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; value=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; @(Model.IsActive ? &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;checked&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; : &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&quot;&lt;/span&gt;) /&amp;gt;\n        &amp;lt;/div&amp;gt;\n    &amp;lt;/div&amp;gt;\n&amp;lt;/div&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;\n@await Html.PartialAsync(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;~/Views/Shared/Modals/_ModalFooterWithSaveAndCancel.cshtml&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)\n</code></pre>\n<p></span>&lt;/form&gt;</p>\n<p>&lt;script src=<span style=\"color: #800000;\">“</span><span style=\"color: #800000;\">~/view-resources/Views/Menus/_EditModal.js</span><span style=\"color: #800000;\">“</span> asp-append-version=<span style=\"color: #800000;\">“</span><span style=\"color: #800000;\">true</span><span style=\"color: #800000;\">“</span>&gt;&lt;/script&gt;</pre></p>\n</div>\n<span class=\"cnblogs_code_collapse\">View Code</span></div>\n<p>修改Index.AdvancedSearch.cshtml</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">@using AbpLearn.Web.Views.Shared.Components.TenantChange\n@using Abp.Application.Services.Dto\n@model ChangeModalViewModel\n\n<pre><code>&lt;/span&gt;&amp;lt;div &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;abp-advanced-search&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;\n    &amp;lt;form id=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;MenusSearchForm&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;form-horizontal&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;\n        &amp;lt;input type=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;hidden&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; name=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;TenantId&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; value=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;@Model.TenantId&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt; /&amp;gt;\n        &amp;lt;/form&amp;gt;\n        &amp;lt;div &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;form-horizontal&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;\n            &amp;lt;div &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;=&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;form-group&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;\n                @Html.DropDownList(\n                   &lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;ChangeTenancyNames&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;,\n                   Model.TeneacyItems.Select(i &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; i.ToSelectListItem()),\n                   &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; &#123; @class = &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;form-control edited&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, id = &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;ChangeTenancyName&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; &#125;)\n            &lt;/span&gt;&amp;lt;/div&amp;gt;\n        &amp;lt;/div&amp;gt;\n&amp;lt;/div&amp;gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<p>因为在abp里面加载当前列表调用的是abp.services.app.menus.getAll方法，我们还需要对MenusAppService中的GetAllAsync做一下修改</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">    [Serializable]\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> MenusPagedResultRequestDto: PagedResultRequestDto, IPagedAndSortedResultRequest\n    {\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">int</span>? TenantId { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n\n<pre><code>    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;virtual&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt; Sorting &#123; &lt;span style=&quot;color: #0000ff;&quot;&gt;get&lt;/span&gt;; &lt;span style=&quot;color: #0000ff;&quot;&gt;set&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;; &#125;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;virtual&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;bool&lt;/span&gt; ShowAll &#123; &lt;span style=&quot;color: #0000ff;&quot;&gt;get&lt;/span&gt;; &lt;span style=&quot;color: #0000ff;&quot;&gt;set&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;; &#125;\n\n&#125;&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #0000ff;\">#region</span> 查询全部菜单\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 查询全部菜单\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"input\"&gt;&lt;/param&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">override</span> <span style=\"color: #0000ff;\">async</span> Task&lt;PagedResultDto&lt;MenuDto&gt;&gt;<span style=\"color: #000000;\"> GetAllAsync(MenusPagedResultRequestDto input)\n        {\n            IQueryable</span>&lt;AbpMenus&gt;<span style=\"color: #000000;\"> query;\n\n<pre><code>        query &lt;/span&gt;= CreateFilteredQuery(input).Where(o =&amp;gt; o.TenantId == (input.TenantId == &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt; ? &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; : input.TenantId));\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; totalCount = &lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; AsyncQueryableExecuter.CountAsync(query);\n\n        query &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; ApplySorting(query, input);\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (!input.ShowAll) query =&lt;span style=&quot;color: #000000;&quot;&gt; ApplyPaging(query, input);\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; entities = &lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; AsyncQueryableExecuter.ToListAsync(query);\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; PagedResultDto&amp;lt;MenuDto&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;(\n            totalCount,\n            entities.Select(MapToEntityDto).ToList()\n        );\n    &#125;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;#endregion&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<p>这样，我们在选中下面中的任意一个Tenant时，将会跳到对应的菜单里面了</p>\n<p>&nbsp;</p>\n<p><img src=\"/cnblogs/13096427/789895-20200613122549077-374827601.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;我们先把Host管理员菜单和默认菜单配置一下</p>\n<p><img src=\"/cnblogs/13096427/789895-20200613131544727-322024248.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;<img src=\"/cnblogs/13096427/789895-20200613131507643-1916575069.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<h2>二、实现添加租户时，初始化标准菜单和权限</h2>\n<p>首先我们找到添加租户的地方，去TenantAppService里面去找，可以看到有CreateAsync的重写</p>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">override</span> <span style=\"color: #0000ff;\">async</span> Task&lt;TenantDto&gt;<span style=\"color: #000000;\"> CreateAsync(CreateTenantDto input)\n        {\n            CheckCreatePermission();\n\n<pre><code>        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Create tenant&lt;/span&gt;\n        &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; tenant = ObjectMapper.Map&amp;lt;Tenant&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;(input);\n        tenant.ConnectionString &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; input.ConnectionString.IsNullOrEmpty()\n            &lt;/span&gt;? &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;\n            : SimpleStringCipher.Instance.Encrypt(input.ConnectionString);\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; defaultEdition = &lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _editionManager.FindByNameAsync(EditionManager.DefaultEditionName);\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (defaultEdition != &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)\n        &#123;\n            tenant.EditionId &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; defaultEdition.Id;\n        &#125;\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _tenantManager.CreateAsync(tenant);\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt; CurrentUnitOfWork.SaveChangesAsync(); &lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; To get new tenant&#39;s id.\n\n        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Create tenant database&lt;/span&gt;\n</code></pre>\n<p><span style=\"color: #000000;\">            _abpZeroDbMigrator.CreateOrMigrateForTenant(tenant);</p>\n<pre><code>        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; We are working entities of new tenant, so changing tenant filter&lt;/span&gt;\n        &lt;span style=&quot;color: #0000ff;&quot;&gt;using&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; (CurrentUnitOfWork.SetTenantId(tenant.Id))\n        &#123;\n            &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Create static roles for new tenant&lt;/span&gt;\n            CheckErrors(&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _roleManager.CreateStaticRoles(tenant.Id));\n\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt; CurrentUnitOfWork.SaveChangesAsync(); &lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; To get static role ids\n\n            &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Grant all permissions to admin role&lt;/span&gt;\n            &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; adminRole = _roleManager.Roles.Single(r =&amp;gt; r.Name ==&lt;span style=&quot;color: #000000;&quot;&gt; StaticRoleNames.Tenants.Admin);\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _roleManager.GrantAllPermissionsAsync(adminRole);\n\n            &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Create admin user for the tenant&lt;/span&gt;\n            &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; adminUser =&lt;span style=&quot;color: #000000;&quot;&gt; User.CreateTenantAdminUser(tenant.Id, input.AdminEmailAddress);\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _userManager.InitializeOptionsAsync(tenant.Id);\n            CheckErrors(&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _userManager.CreateAsync(adminUser, User.DefaultPassword));\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt; CurrentUnitOfWork.SaveChangesAsync(); &lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; To get admin user&#39;s id\n\n            &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Assign admin user to role!&lt;/span&gt;\n            CheckErrors(&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _userManager.AddToRoleAsync(adminUser, adminRole.Name));\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; CurrentUnitOfWork.SaveChangesAsync();\n        &#125;\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; MapToEntityDto(tenant);\n    &#125;&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<p>我们需要做的是，在&nbsp;using (CurrentUnitOfWork.SetTenantId(tenant.Id)) 的内部尾部添加赋予菜单和权限的方法即可</p>\n<p>赋予菜单和权限的方法我们分开写，都放在MenusAppService中，</p>\n<div class=\"cnblogs_code\">\n<pre>    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">interface</span> IMenusAppService : IAsyncCrudAppService&lt;MenuDto, <span style=\"color: #0000ff;\">int</span>, MenusPagedResultRequestDto, CreateMenuDto, MenuDto&gt;<span style=\"color: #000000;\">\n    {\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 赋予默认菜单\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"input\"&gt;&lt;/param&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n        Task GiveMenusAsync(EntityDto&lt;<span style=\"color: #0000ff;\">int</span>&gt;<span style=\"color: #000000;\"> input);\n\n<pre><code>    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; 赋予当前租户Admin角色菜单权限\n    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;param name=&quot;input&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;returns&amp;gt;&amp;lt;/returns&amp;gt;&lt;/span&gt;\n    Task GivePermissionsAsync(EntityDto&amp;lt;&lt;span style=&quot;color: #0000ff;&quot;&gt;int&lt;/span&gt;&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; input);\n&#125;&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>        #region 赋予默认菜单\n        public async Task GiveMenusAsync(EntityDto&lt;int&gt; input)\n        {\n            if (input.Id &gt; 0)\n            {\n                var tenant = await _tenantManager.GetByIdAsync(input.Id);\n\n<pre><code>            using (_unitOfWorkManager.Current.SetTenantId(tenant.Id))\n            &#123;\n                var query = CreateFilteredQuery(new MenusPagedResultRequestDto()).Where(o =&amp;gt; o.TenantId == tenant.Id);\n\n                var systemMenus = await AsyncQueryableExecuter.ToListAsync(query);\n\n                if (!systemMenus.Any())\n                &#123;\n                    query = CreateFilteredQuery(new MenusPagedResultRequestDto()).Where(o =&amp;gt; o.TenantId == -1);\n\n                    var defaultMenus = await AsyncQueryableExecuter.ToListAsync(query);\n                    if (defaultMenus.Any())\n                    &#123;\n                        List&amp;lt;MenusInsert&amp;gt; GetMenusInserts(List&amp;lt;AbpMenus&amp;gt; abpMenus,int parentId = 0)\n                        &#123;\n                            List&amp;lt;MenusInsert&amp;gt; menusInserts = new List&amp;lt;MenusInsert&amp;gt;();\n                            foreach (var entity in abpMenus.Where(o =&amp;gt; o.ParentId == parentId))\n                            &#123;\n                                var insert = new MenusInsert()\n                                &#123;\n                                    LName = entity.LName,\n                                    MenuName = entity.MenuName,\n                                    PageName = entity.PageName,\n                                    Icon = entity.Icon,\n                                    Url = entity.Url,\n                                    IsActive = entity.IsActive,\n                                    Orders = entity.Orders,\n                                    ParentId = entity.ParentId,\n                                    TenantId = tenant.Id\n                                &#125;;\n                                insert.menusInserts = GetMenusInserts(abpMenus, entity.Id);\n                                menusInserts.Add(insert);\n                            &#125;\n                            return menusInserts;\n                        &#125;\n\n                        async Task InsertMenusAsync(List&amp;lt;MenusInsert&amp;gt; inserts,int parentId = 0)\n                        &#123;\n                            foreach (var insert in inserts)\n                            &#123;\n                                var entity = await CreateAsync(new AbpMenus()\n                                &#123;\n                                    LName = insert.LName,\n                                    MenuName = insert.MenuName,\n                                    PageName = insert.PageName,\n                                    Icon = insert.Icon,\n                                    Url = insert.Url,\n                                    IsActive = insert.IsActive,\n                                    Orders = insert.Orders,\n                                    ParentId = parentId,\n                                    TenantId = tenant.Id\n                                &#125;);\n                                if (insert.menusInserts.Any())\n                                &#123;\n                                    await InsertMenusAsync(insert.menusInserts, entity.Id);\n                                &#125;\n                            &#125;\n                        &#125;\n                        await InsertMenusAsync(GetMenusInserts(defaultMenus));\n                        \n                    &#125;\n                &#125;\n            &#125;\n        &#125;\n\n    &#125;\n    #endregion\n\n\n    &lt;span style=&quot;color: #0000ff;&quot;&gt;#region&lt;/span&gt; 赋予当前租户Admin角色菜单权限\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; 赋予当前租户Admin角色菜单权限\n    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;param name=&quot;input&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;returns&amp;gt;&amp;lt;/returns&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;async&lt;/span&gt; Task GivePermissionsAsync(EntityDto&amp;lt;&lt;span style=&quot;color: #0000ff;&quot;&gt;int&lt;/span&gt;&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; input)\n    &#123;\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (input.Id &amp;gt; &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)\n        &#123;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; tenant = &lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _tenantManager.GetByIdAsync(input.Id);\n\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;using&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; (_unitOfWorkManager.Current.SetTenantId(tenant.Id))\n            &#123;\n                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; adminRoles = &lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt; _roleRepository.GetAllListAsync(o =&amp;gt; o.Name == StaticRoleNames.Tenants.Admin &amp;amp;&amp;amp; o.TenantId ==&lt;span style=&quot;color: #000000;&quot;&gt; tenant.Id);\n                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (adminRoles.FirstOrDefault() != &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)\n                &#123;\n                    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; adminRole =&lt;span style=&quot;color: #000000;&quot;&gt; adminRoles.FirstOrDefault();\n\n                    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; query = CreateFilteredQuery(&lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; MenusPagedResultRequestDto()).Where(o =&amp;gt; o.TenantId ==&lt;span style=&quot;color: #000000;&quot;&gt; tenant.Id);\n\n                    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; systemMenus = &lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; AsyncQueryableExecuter.ToListAsync(query);\n\n                    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; permissions =&lt;span style=&quot;color: #000000;&quot;&gt; ConvertTenantPermissions(systemMenus);\n\n                    &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;await _roleManager.ResetAllPermissionsAsync(adminRole.FirstOrDefault()); &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;重置授权&lt;/span&gt;\n\n                    &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; active_BatchCount = &lt;span style=&quot;color: #800080;&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;;\n                    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; active_permissions = ConvertTenantPermissions(systemMenus.Where(o =&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; o.IsActive).ToList());\n                    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;for&lt;/span&gt; (&lt;span style=&quot;color: #0000ff;&quot;&gt;int&lt;/span&gt; i = &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt;; i &amp;lt; active_permissions.Count(); i += &lt;span style=&quot;color: #800080;&quot;&gt;10&lt;/span&gt;)&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;每次后移5位&lt;/span&gt;\n</code></pre>\n<p><span style=\"color: #000000;\">                        {<br>                            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">await _roleManager.SetGrantedPermissionsAsync(adminRole.FirstOrDefault().Id, active_permissions.Take(active_BatchCount).Skip(i));</span><br>                            <span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #0000ff;\">var</span> notActive_permission <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> active_permissions.Take(active_BatchCount).Skip(i))<br>                            {<br>                                </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _roleManager.GrantPermissionAsync(adminRole, notActive_permission);<br>                            }<br>                            active_BatchCount </span>+= <span style=\"color: #800080;\">10</span>;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">每次从数组中选出N+10位，skip前N位</span><br><span style=\"color: #000000;\">                        }</p>\n<pre><code>                    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; notActive_BatchCount = &lt;span style=&quot;color: #800080;&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;;\n                    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; notActive_permissions = ConvertTenantPermissions(systemMenus.Where(o =&amp;gt; !&lt;span style=&quot;color: #000000;&quot;&gt;o.IsActive).ToList());\n                    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;for&lt;/span&gt; (&lt;span style=&quot;color: #0000ff;&quot;&gt;int&lt;/span&gt; i = &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt;; i &amp;lt; notActive_permissions.Count(); i += &lt;span style=&quot;color: #800080;&quot;&gt;10&lt;/span&gt;)&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;每次后移5位&lt;/span&gt;\n</code></pre>\n<p><span style=\"color: #000000;\">                        {<br>                            </span><span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #0000ff;\">var</span> notActive_permission <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> notActive_permissions.Take(notActive_BatchCount).Skip(i))<br>                            {<br>                                </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _roleManager.ProhibitPermissionAsync(adminRole, notActive_permission);<br>                            }<br>                            notActive_BatchCount </span>+= <span style=\"color: #800080;\">10</span>;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">每次从数组中选出N+10位，skip前N位</span><br><span style=\"color: #000000;\">                        }<br>                    }<br>                    </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"><br>                    {<br>                        </span><span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> AbpDbConcurrencyException(<span style=\"color: #800000;\">“</span><span style=\"color: #800000;\">未获取到当前租户的Admin角色！</span><span style=\"color: #800000;\">“</span><span style=\"color: #000000;\">);<br>                    }<br>                }<br>            }<br>            </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"><br>            {<br>                </span><span style=\"color: #0000ff;\">var</span> adminRoles = <span style=\"color: #0000ff;\">await</span> _roleRepository.GetAllListAsync(o =&gt; o.Name == StaticRoleNames.Tenants.Admin &amp;&amp; o.TenantId == <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">);<br>                </span><span style=\"color: #0000ff;\">if</span> (adminRoles.FirstOrDefault() != <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)<br>                {<br>                    </span><span style=\"color: #0000ff;\">var</span> adminRole =<span style=\"color: #000000;\"> adminRoles.FirstOrDefault();</p>\n<pre><code>                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; query = CreateFilteredQuery(&lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; MenusPagedResultRequestDto()).Where(o =&amp;gt; o.TenantId == &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt; || o.TenantId == &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n\n                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; systemMenus = &lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; AsyncQueryableExecuter.ToListAsync(query);\n\n                &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;await _roleManager.ResetAllPermissionsAsync(adminRole.FirstOrDefault()); &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;重置授权&lt;/span&gt;\n\n                &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; active_BatchCount = &lt;span style=&quot;color: #800080;&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;;\n                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; active_permissions = ConvertHostPermissions(systemMenus.Where(o =&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; o.IsActive).ToList());\n                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;for&lt;/span&gt; (&lt;span style=&quot;color: #0000ff;&quot;&gt;int&lt;/span&gt; i = &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt;; i &amp;lt; active_permissions.Count(); i += &lt;span style=&quot;color: #800080;&quot;&gt;10&lt;/span&gt;)&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;每次后移5位&lt;/span&gt;\n</code></pre>\n<p><span style=\"color: #000000;\">                    {<br>                        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">await _roleManager.SetGrantedPermissionsAsync(adminRole.FirstOrDefault().Id, active_permissions.Take(active_BatchCount).Skip(i));</span><br>                        <span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #0000ff;\">var</span> notActive_permission <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> active_permissions.Take(active_BatchCount).Skip(i))<br>                        {<br>                            </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _roleManager.GrantPermissionAsync(adminRole, notActive_permission);<br>                        }<br>                        active_BatchCount </span>+= <span style=\"color: #800080;\">10</span>;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">每次从数组中选出N+10位，skip前N位</span><br><span style=\"color: #000000;\">                    }</p>\n<pre><code>                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; notActive_BatchCount = &lt;span style=&quot;color: #800080;&quot;&gt;10&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;;\n                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; notActive_permissions = ConvertHostPermissions(systemMenus.Where(o =&amp;gt; !&lt;span style=&quot;color: #000000;&quot;&gt;o.IsActive).ToList());\n                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;for&lt;/span&gt; (&lt;span style=&quot;color: #0000ff;&quot;&gt;int&lt;/span&gt; i = &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt;; i &amp;lt; notActive_permissions.Count(); i += &lt;span style=&quot;color: #800080;&quot;&gt;10&lt;/span&gt;)&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;每次后移5位&lt;/span&gt;\n</code></pre>\n<p><span style=\"color: #000000;\">                    {<br>                        </span><span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #0000ff;\">var</span> notActive_permission <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> notActive_permissions.Take(notActive_BatchCount).Skip(i))<br>                        {<br>                            </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> _roleManager.ProhibitPermissionAsync(adminRole, notActive_permission);<br>                        }<br>                        notActive_BatchCount </span>+= <span style=\"color: #800080;\">10</span>;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">每次从数组中选出N+10位，skip前N位</span><br><span style=\"color: #000000;\">                    }<br>                }<br>            }<br>        }</p>\n<pre><code>    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; IEnumerable&amp;lt;Permission&amp;gt; ConvertTenantPermissions(IReadOnlyList&amp;lt;AbpMenus&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; systemMenus)\n    &#123;\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt; systemMenus.Select(o =&amp;gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; Permission(o.PageName, L(o.MenuName), L(o.LName), MultiTenancySides.Tenant));\n    &#125;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; IEnumerable&amp;lt;Permission&amp;gt; ConvertHostPermissions(IReadOnlyList&amp;lt;AbpMenus&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; systemMenus)\n    &#123;\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt; systemMenus.Select(o =&amp;gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; Permission(o.PageName, L(o.MenuName), L(o.LName), MultiTenancySides.Host));\n    &#125;\n    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;#endregion&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<p>TenantAppService.cs中做一下修改</p>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">override</span> <span style=\"color: #0000ff;\">async</span> Task&lt;TenantDto&gt;<span style=\"color: #000000;\"> CreateAsync(CreateTenantDto input)\n        {\n            CheckCreatePermission();\n\n<pre><code>        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Create tenant&lt;/span&gt;\n        &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; tenant = ObjectMapper.Map&amp;lt;Tenant&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;(input);\n        tenant.ConnectionString &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; input.ConnectionString.IsNullOrEmpty()\n            &lt;/span&gt;? &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;\n            : SimpleStringCipher.Instance.Encrypt(input.ConnectionString);\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; defaultEdition = &lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _editionManager.FindByNameAsync(EditionManager.DefaultEditionName);\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (defaultEdition != &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)\n        &#123;\n            tenant.EditionId &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; defaultEdition.Id;\n        &#125;\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _tenantManager.CreateAsync(tenant);\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt; CurrentUnitOfWork.SaveChangesAsync(); &lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; To get new tenant&#39;s id.\n\n        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Create tenant database&lt;/span&gt;\n</code></pre>\n<p><span style=\"color: #000000;\">            _abpZeroDbMigrator.CreateOrMigrateForTenant(tenant);</p>\n<pre><code>        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; We are working entities of new tenant, so changing tenant filter&lt;/span&gt;\n        &lt;span style=&quot;color: #0000ff;&quot;&gt;using&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; (CurrentUnitOfWork.SetTenantId(tenant.Id))\n        &#123;\n            &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Create static roles for new tenant&lt;/span&gt;\n            CheckErrors(&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _roleManager.CreateStaticRoles(tenant.Id));\n\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt; CurrentUnitOfWork.SaveChangesAsync(); &lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; To get static role ids\n\n            &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Grant all permissions to admin role&lt;/span&gt;\n            &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; adminRole = _roleManager.Roles.Single(r =&amp;gt; r.Name ==&lt;span style=&quot;color: #000000;&quot;&gt; StaticRoleNames.Tenants.Admin);\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _roleManager.GrantAllPermissionsAsync(adminRole);\n\n            &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Create admin user for the tenant&lt;/span&gt;\n            &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; adminUser =&lt;span style=&quot;color: #000000;&quot;&gt; User.CreateTenantAdminUser(tenant.Id, input.AdminEmailAddress);\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _userManager.InitializeOptionsAsync(tenant.Id);\n            CheckErrors(&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _userManager.CreateAsync(adminUser, User.DefaultPassword));\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt; CurrentUnitOfWork.SaveChangesAsync(); &lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; To get admin user&#39;s id\n\n            &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Assign admin user to role!&lt;/span&gt;\n            CheckErrors(&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _userManager.AddToRoleAsync(adminUser, adminRole.Name));\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; CurrentUnitOfWork.SaveChangesAsync();\n\n            &lt;/span&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt;await _menusAppService.GiveMenusAsync(new EntityDto&amp;lt;int&amp;gt;() &#123; Id = tenant.Id &#125;);\n            await CurrentUnitOfWork.SaveChangesAsync();\n\n            await _menusAppService.GivePermissionsAsync(new EntityDto&amp;lt;int&amp;gt;() &#123; Id = tenant.Id &#125;);\n            await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;span style=&quot;color: #ff0000;&quot;&gt; CurrentUnitOfWork.SaveChangesAsync();&lt;/span&gt;\n        &#125;\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; MapToEntityDto(tenant);\n    &#125;&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<p>现在我们添加租户企业1、企业2</p>\n<p><img src=\"/cnblogs/13096427/789895-20200613151834645-748331091.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;<img src=\"/cnblogs/13096427/789895-20200613151852573-1477272883.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;现在菜单已经同步好了，我们去数据库看下权限的同步</p>\n<p><img src=\"/cnblogs/13096427/789895-20200613152221722-277186366.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>TenantId：</p>\n<p>null是Host</p>\n<p>1是abp页面第一次加载时初始化的Default租户</p>\n<p>2是我之前添加的旧的企业1，那个时候方法没写好，就把2的删掉了</p>\n<p>3是企业2</p>\n<p>4是企业1</p>\n<p>由此可以看出，我们添加的菜单对应的PageName已经作为权限添加到权限表了</p>\n<p>&nbsp;</p>\n<h2>三、实现菜单修改后，权限赋予对应租户</h2>\n<p>这一个其实在二里面已经写好了，前台做一个按钮，赋予权限，调用一下就好了</p>\n<p>例如：</p>\n<p>Index.cshtml&nbsp; &nbsp;//为什么要加getCurrentLoginInformationsOutput.Tenant == null的判断？是因为租户在进入菜单管理的地方，我们不给他们添加、赋予权限的权限</p>\n<p><img src=\"/cnblogs/13096427/789895-20200613152628601-193312193.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;在/wwwroot/view-resources/Views/Menus/Index.js中添加</p>\n<div class=\"cnblogs_code\">\n<pre>    $(document).on(<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">click</span><span style=\"color: #800000;\">'</span>, <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">#GivePermissions</span><span style=\"color: #800000;\">'</span><span style=\"color: #000000;\">, function (e) {\n        </span><span style=\"color: #0000ff;\">var</span> tenantId = $(<span style=\"color: #0000ff;\">this</span>).attr(<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">data-tenant-id</span><span style=\"color: #800000;\">'</span><span style=\"color: #000000;\">);\n\n<pre><code>    abp.message.confirm(\n        abp.utils.formatString(\n            &lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;是否赋予当前租户管理员账号所有权限？&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;,\n            &lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;系统&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;\n        ),\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;,\n        (isConfirmed) &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; &#123;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; (isConfirmed) &#123;\n                _menuService\n                    .givePermissions(&#123;\n                        id: tenantId\n                    &#125;)\n                    .done(() &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; &#123;\n                        abp.notify.info(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;操作成功！&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n                        _$menusTable.ajax.reload();\n                    &#125;);\n            &#125;\n        &#125;\n    );\n&#125;);&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<h2>四、实现菜单的动态加载</h2>\n<p>在<a href=\"https://www.cnblogs.com/wangpengzong/p/13089690.html\">https://www.cnblogs.com/wangpengzong/p/13089690.html</a>中我们找到了菜单生成的地方，在最底部，通过<span style=\"font-family: 'Courier New'; font-size: 12px; white-space: pre-wrap;\">NavigationManager来获取到Menus，这里其实有一个初始化方法（</span><span style=\"font-family: 'Courier New'; font-size: 12px; white-space: pre-wrap;\">Initialize</span><span style=\"font-family: 'Courier New'; font-size: 12px; white-space: pre-wrap;\">），调用的是</span><span style=\"font-family: 'Courier New';\"><span style=\"font-size: 12px; white-space: pre-wrap;\">AbpLearnNavigationProvider的</span></span><span style=\"font-family: 'Courier New'; font-size: 12px; white-space: pre-wrap;\">SetNavigation方法来进行本地化，然后在</span></p>\n<pre><span style=\"margin: 0px; padding: 0px; line-height: 1.5 !important;\">NavigationManager的非静态构造函数中去获取已经本地化的Menus，但是本地化Menus因为是在初始化时，程序的初始化我们无法获取到当前的Tenant信息，所以只能将获取Menus的地方推迟，放在倒数第二个类</span>UserNavigationManager里面的GetMenuAsync方法中，我们来看下GetMenuAsync</pre>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">async</span> Task&lt;UserMenu&gt; GetMenuAsync(<span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> menuName, UserIdentifier user)\n        {\n            </span><span style=\"color: #0000ff;\">var</span> menuDefinition =<span style=\"color: #000000;\"> _navigationManager.Menus.GetOrDefault(menuName);\n            </span><span style=\"color: #0000ff;\">if</span> (menuDefinition == <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)\n            {\n                </span><span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> AbpException(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">There is no menu with given name: </span><span style=\"color: #800000;\">\"</span> +<span style=\"color: #000000;\"> menuName);\n            }\n\n<pre><code>        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; userMenu = &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; UserMenu(menuDefinition, _localizationContext);\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; FillUserMenuItems(user, menuDefinition.Items, userMenu.Items);\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; userMenu;\n    &#125;&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<p>第一句话获取menuDefinition是关键点，我们将menuDefinition修改为从数据库中获取，在AbpLearn.Application/Authorization/Menus下添加UserNavigationManager.cs</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #0000ff;\"><span style=\"color: #0000ff;\">using Abp;\nusing Abp.Application.Features;\nusing Abp.Application.Navigation;\nusing Abp.Authorization;\nusing Abp.Dependency;\nusing Abp.Localization;\nusing Abp.MultiTenancy;\nusing Abp.Runtime.Session;\nusing AbpLearn.Authorization.Menus.Dto;\nusing AbpLearn.Sessions;\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\n<p>namespace AbpLearn.Authorization.Menus<br>{<br>    public class UserNavigationManager : IUserNavigationManager, ITransientDependency<br>    {<br>        public IAbpSession AbpSession { get; set; }</p>\n<pre><code>    private readonly INavigationManager _navigationManager;\n    private readonly ILocalizationContext _localizationContext;\n    private readonly IIocResolver _iocResolver;\n    private readonly IMenusAppService _menuAppService;\n    private readonly ISessionAppService _sessionAppService;\n\n    public IDictionary&amp;lt;string, MenuDefinition&amp;gt; Menus &#123; get; private set; &#125;\n    public MenuDefinition MainMenu\n    &#123;\n        get &#123; return Menus[&quot;MainMenu&quot;]; &#125;\n    &#125;\n    public UserNavigationManager(\n        INavigationManager navigationManager,\n        ILocalizationContext localizationContext,\n        IMenusAppService menuAppService,\n        ISessionAppService sessionAppService,\n        IIocResolver iocResolver)\n    &#123;\n        _navigationManager = navigationManager;\n        _localizationContext = localizationContext;\n        _iocResolver = iocResolver;\n        AbpSession = NullAbpSession.Instance;\n        _menuAppService = menuAppService;\n        _sessionAppService = sessionAppService;\n    &#125;\n\n    public async Task&amp;lt;UserMenu&amp;gt; GetMenuAsync(string menuName, UserIdentifier user)\n    &#123;\n        var loginInfo = await _sessionAppService.GetCurrentLoginInformations();\n\n        Menus = new Dictionary&amp;lt;string, MenuDefinition&amp;gt;\n                &#123;\n                    &#123;&quot;MainMenu&quot;, new MenuDefinition(&quot;MainMenu&quot;, new LocalizableString(&quot;MainMenu&quot;, AbpConsts.LocalizationSourceName))&#125;\n                &#125;;\n\n        var lists = await _menuAppService.GetAllAsync(new MenusPagedResultRequestDto() &#123; ShowAll = true, TenantId = (loginInfo.Tenant == null ? 0 : loginInfo.Tenant.Id) &#125;);\n        var ParentMenu = lists.Items.Where(k =&amp;gt; k.IsActive).ToList().Where(x =&amp;gt; x.ParentId == 0).ToList();\n        if (ParentMenu.Any())\n        &#123;\n            ParentMenu.ForEach(g =&amp;gt;\n            &#123;\n                var menu = new MenuItemDefinition(\n                      g.LName,\n                      MenuL(g.MenuName),\n                      g.Icon,\n                      g.Url,\n                      false,\n                      g.Orders\n                      );\n                BuildSubMenu(menu, g.Id, lists.Items.Where(k =&amp;gt; k.IsActive).ToList());\n                MainMenu.AddItem(menu);\n            &#125;);\n        &#125;\n        \n        var menuDefinition = MainMenu;\n        if (menuDefinition == null)\n        &#123;\n            throw new AbpException(&quot;There is no menu with given name: &quot; + menuName);\n        &#125;\n        var userMenu = new UserMenu();\n        userMenu.Name = menuDefinition.Name;\n        userMenu.DisplayName = menuDefinition.DisplayName.Localize(_localizationContext);\n        userMenu.CustomData = menuDefinition.CustomData;\n        userMenu.Items = new List&amp;lt;UserMenuItem&amp;gt;();\n        await FillUserMenuItems(user, menuDefinition.Items, userMenu.Items);\n        return userMenu;\n    &#125;\n\n    public async Task&amp;lt;IReadOnlyList&amp;lt;UserMenu&amp;gt;&amp;gt; GetMenusAsync(UserIdentifier user)\n    &#123;\n        var userMenus = new List&amp;lt;UserMenu&amp;gt;();\n\n        foreach (var menu in _navigationManager.Menus.Values)\n        &#123;\n            userMenus.Add(await GetMenuAsync(menu.Name, user));\n        &#125;\n\n        return userMenus;\n    &#125;\n    public void BuildSubMenu(MenuItemDefinition menu, int parentId, List&amp;lt;MenuDto&amp;gt; list)\n    &#123;\n        var nList = list.Where(x =&amp;gt; x.ParentId == parentId).ToList();\n        if (nList != null &amp;amp;&amp;amp; nList.Count &amp;gt; 0)\n        &#123;\n            nList.ForEach(g =&amp;gt;\n            &#123;\n                var subMenu = new MenuItemDefinition(\n                     g.PageName,\n                    MenuL(g.MenuName),\n                    g.Icon,\n                    g.Url,\n                    false,\n                  g.Orders\n                    );\n                menu.AddItem(subMenu);\n                BuildSubMenu(subMenu, g.Id, list);\n            &#125;);\n        &#125;\n    &#125;\n\n    private static ILocalizableString MenuL(string name)\n    &#123;\n        return new LocalizableString(name, AbpLearnConsts.LocalizationSourceName);\n    &#125;\n    private async Task&amp;lt;int&amp;gt; FillUserMenuItems(UserIdentifier user, IList&amp;lt;MenuItemDefinition&amp;gt; menuItemDefinitions, IList&amp;lt;UserMenuItem&amp;gt; userMenuItems)\n    &#123;\n        //TODO: Can be optimized by re-using FeatureDependencyContext.\n\n        var addedMenuItemCount = 0;\n\n        using (var scope = _iocResolver.CreateScope())\n        &#123;\n            var permissionDependencyContext = scope.Resolve&amp;lt;PermissionDependencyContext&amp;gt;();\n            permissionDependencyContext.User = user;\n\n            var featureDependencyContext = scope.Resolve&amp;lt;FeatureDependencyContext&amp;gt;();\n            featureDependencyContext.TenantId = user == null ? null : user.TenantId;\n\n            foreach (var menuItemDefinition in menuItemDefinitions)\n            &#123;\n                if (menuItemDefinition.RequiresAuthentication &amp;amp;&amp;amp; user == null)\n                &#123;\n                    continue;\n                &#125;\n\n                if (menuItemDefinition.PermissionDependency != null &amp;amp;&amp;amp;\n                    (user == null || !(await menuItemDefinition.PermissionDependency.IsSatisfiedAsync(permissionDependencyContext))))\n                &#123;\n                    continue;\n                &#125;\n\n                if (menuItemDefinition.FeatureDependency != null &amp;amp;&amp;amp;\n                    (AbpSession.MultiTenancySide == MultiTenancySides.Tenant || (user != null &amp;amp;&amp;amp; user.TenantId != null)) &amp;amp;&amp;amp;\n                    !(await menuItemDefinition.FeatureDependency.IsSatisfiedAsync(featureDependencyContext)))\n                &#123;\n                    continue;\n                &#125;\n\n                var userMenuItem = new UserMenuItem(menuItemDefinition, _localizationContext);\n                if (menuItemDefinition.IsLeaf || (await FillUserMenuItems(user, menuItemDefinition.Items, userMenuItem.Items)) &amp;gt; 0)\n                &#123;\n                    userMenuItems.Add(userMenuItem);\n                    ++addedMenuItemCount;\n                &#125;\n            &#125;\n        &#125;\n\n        return addedMenuItemCount;\n    &#125;\n&#125;\n</code></pre>\n<p>}</span></span></pre></p>\n<p><span style=\"color: #0000ff;\">&nbsp;</span></p>\n</div>\n<p>然后在Mvc项目的Startup.cs/ConfigureServices下增加</p>\n<div class=\"cnblogs_code\">\n<pre>            services.AddScoped&lt;IUserNavigationManager, UserNavigationManager&gt;();</pre>\n</div>\n<p>因为在abp中菜单被做做成了模块，在程序初始化时模块添加进去，但是我们将菜单修改成了每次读取数据库加载，那么我们就不需要加载这个模块了<span style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 12px;\"><br /></span></p>\n<p>在mvc项目的AbpLearnWebMvcModule.cs注释下面这句话</p>\n<div class=\"cnblogs_code\">\n<pre>            <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Configuration.Navigation.Providers.Add&lt;AbpLearnNavigationProvider&gt;();</span></pre>\n</div>\n<p>将AbpLearnNavigationProvider.cs/SetNavigation方法的内容全部注释掉</p>\n<p>预览一下mvc，用Host登录一下</p>\n<p><img src=\"/cnblogs/13096427/789895-20200613155431331-1058862470.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;用企业1登陆下，登录切换Host和Tenant，是在登录界面&nbsp;<span style=\"color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\">Current tenant:&nbsp;</span><span style=\"box-sizing: border-box; color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\">未选</span><span style=\"color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\">&nbsp;(</span><a style=\"box-sizing: border-box; color: #007bff; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\" data-toggle=\"modal\" data-target=\"#TenantChangeModal\">Change</a><span style=\"color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\">) 点击Change，在弹框中输入 E1（因为上面设置的企业1标识是E1），点击save，页面刷新后就变为了&nbsp;</span><span style=\"color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\">Current tenant:&nbsp;</span><span style=\"box-sizing: border-box; color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\" title=\"企业1\"><span style=\"box-sizing: border-box; font-weight: bolder;\">E1</span></span><span style=\"color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\">&nbsp;(</span><a style=\"box-sizing: border-box; color: #007bff; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\" data-toggle=\"modal\" data-target=\"#TenantChangeModal\">Change</a><span style=\"color: #212529; font-family: 'Source Sans Pro', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol'; font-size: 16px; text-align: center;\">) ，输入账号密码登录</span></p>\n<p>&nbsp;<img src=\"/cnblogs/13096427/789895-20200613164737035-1698740974.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;OK，我们的动态菜单已经完成了</p>\n<p>&nbsp;</p>\n<h2>添加jstree</h2>\n<p>&nbsp;当然，我的菜单使用的是table来显示，你也可以使用tree来，我找到了一个jstree，下面修改一下</p>\n<p>MenusAppService.cs</p>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #0000ff;\">#region</span> 获取当前账户的菜单树\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 获取当前账户的菜单树\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"input\"&gt;&lt;/param&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">async</span> Task&lt;<span style=\"color: #0000ff;\">string</span>&gt;<span style=\"color: #000000;\"> GetTreeAsync(MenusPagedResultRequestDto input)\n        {\n            </span><span style=\"color: #0000ff;\">var</span> query = CreateFilteredQuery(<span style=\"color: #0000ff;\">new</span> MenusPagedResultRequestDto()).Where(o =&gt; o.TenantId ==<span style=\"color: #000000;\"> input.TenantId);\n\n<pre><code>        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; systemMenus = &lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; AsyncQueryableExecuter.ToListAsync(query);\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; childJObject = &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; JObject();\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; openJObject = &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; JObject();\n        openJObject.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;opened&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n        childJObject.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n        childJObject.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;text&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;根目录&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n        childJObject.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;icon&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n        childJObject.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;state&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;, openJObject);\n        childJObject.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;children&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, GetJArray(systemMenus, &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;));\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; childJObject.ToString();\n    &#125;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;#region&lt;/span&gt; 获取目录Array\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; 获取目录Array\n    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;param name=&quot;systemMenus&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;param name=&quot;parentdId&quot;&amp;gt;&amp;lt;/param&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;returns&amp;gt;&amp;lt;/returns&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #0000ff;&quot;&gt;private&lt;/span&gt; JArray GetJArray(List&amp;lt;AbpMenus&amp;gt; systemMenus, &lt;span style=&quot;color: #0000ff;&quot;&gt;int&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; parentdId)\n    &#123;\n        JArray jArray &lt;/span&gt;= &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; JArray();\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;foreach&lt;/span&gt; (&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; menu &lt;span style=&quot;color: #0000ff;&quot;&gt;in&lt;/span&gt; systemMenus.Where(o =&amp;gt; o.ParentId ==&lt;span style=&quot;color: #000000;&quot;&gt; parentdId))\n        &#123;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; jObject = &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; JObject();\n            jObject.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;id&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;, menu.Id);\n            jObject.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;text&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;, menu.MenuName);\n            jObject.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;icon&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;, menu.Icon);\n            &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;jObject.Add(&quot;state&quot;, menu.Icon);&lt;/span&gt;\n            &lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (systemMenus.Any(o =&amp;gt; o.ParentId ==&lt;span style=&quot;color: #000000;&quot;&gt; menu.Id))\n            &#123;\n                jObject.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;children&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;, GetJArray(systemMenus, menu.Id));\n            &#125;\n            jArray.Add(jObject);\n        &#125;\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; jArray;\n    &#125;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;#endregion&lt;/span&gt;\n\n    &lt;span style=&quot;color: #0000ff;&quot;&gt;#endregion&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<p>&nbsp;</p>\n<p>&nbsp;前端Index.cshtml&nbsp;&nbsp;<span style=\"color: #800000; font-family: 'Courier New'; font-size: 12px;\">jstree去</span><span style=\"color: #800000; font-family: 'Courier New';\"><span style=\"font-size: 12px;\">https://github.com/vakata/jstree/zipball/3.3.8下载，下载后在mvc项目的wwwroot文件夹下添加jstree文件夹，下载文件的src里面内容全部赋值到jstree文件夹</span></span></p>\n<p>注释掉table标签</p>\n<p>添加<span style=\"color: #800000; font-family: 'Courier New'; font-size: 12px;\">jstree1</span></p>\n<p>例如：</p>\n<div class=\"cnblogs_code\">\n<pre>@section styles\n{\n    &lt;link href=\"~/jstree/themes/default/style.css\" rel=\"stylesheet\" /&gt;\n}                     <br /><br />       &lt;div id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">jstree1</span><span style=\"color: #800000;\">\"</span> style=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">width:100%;</span><span style=\"color: #800000;\">\"</span>&gt;&lt;/div&gt;\n\n\n\n<p>@section scripts<br>{<br>    &lt;environment names=”Development”&gt;<br>        &lt;script src=”~/view-resources/Views/Menus/Index.js” asp-append-version=”true”&gt;&lt;/script&gt;<br>    &lt;/environment&gt;</p>\n<pre><code>&amp;lt;environment names=&quot;Staging,Production&quot;&amp;gt;\n    &amp;lt;script src=&quot;~/view-resources/Views/Menus/Index.min.js&quot; asp-append-version=&quot;true&quot;&amp;gt;&amp;lt;/script&amp;gt;\n&amp;lt;/environment&amp;gt;\n&amp;lt;script type=&quot;application/javascript&quot; src=&quot;~/jstree/jstree.js&quot;&amp;gt;&amp;lt;/script&amp;gt;\n&amp;lt;script type=&quot;application/javascript&quot; src=&quot;~/jstree/jstree.contextmenu.js&quot;&amp;gt;&amp;lt;/script&amp;gt;\n&amp;lt;script type=&quot;text/javascript&quot;&amp;gt;\n    $(function () &#123;\n        var _menuService = abp.services.app.menus;\n\n        l = abp.localization.getSource(&#39;A_b_p&#39;);\n\n        $(&#39;#jstree1&#39;).jstree(&#123;\n            &quot;core&quot;: &#123;\n                &quot;data&quot;: function (node, callback) &#123;\n                    var filter = $(&#39;#MenusSearchForm&#39;).serializeFormToObject(true);\n                    this, _menuService.getTree(filter).done(function (result) &#123;\n                        callback.call(this, JSON.parse(result));\n                    &#125;);\n                &#125;,\n                &quot;themes&quot;: &#123;\n                    &quot;variant&quot;: &quot;large&quot;,//加大\n                    &quot;ellipsis&quot;: true //文字多时省略\n                &#125;,\n                &quot;check_callback&quot;: true,\n            &#125;,\n            &quot;plugins&quot;: [&quot;contextmenu&quot;, &quot;wholerow&quot;, &quot;themes&quot;],//&quot;checkbox&quot;\n            &quot;contextmenu&quot;: &#123;\n                select_node: false,\n                show_at_node: true,\n                &quot;items&quot;: &#123;\n                    &quot;create&quot;: &#123;\n                        &quot;label&quot;: &quot;新增子菜单&quot;,\n                        &quot;action&quot;: function (obj) &#123;\n                            var inst = jQuery.jstree.reference(obj.reference);\n                            var clickedNode = inst.get_node(obj.reference);\n                            if (parseInt(clickedNode.original.id) &amp;gt;= 0) &#123;\n                                $(&quot;#ParentId&quot;).val(clickedNode.original.id);\n                                $(&quot;#MenuCreateModal&quot;).modal();\n                            &#125; else &#123;\n                                abp.notify.info(&quot;父节点获取出错&quot;);\n                            &#125;\n                        &#125;,\n                    &#125;,\n                    &quot;rename&quot;: &#123;\n                        &quot;label&quot;: &quot;修改&quot;,\n                        &quot;action&quot;: function (obj) &#123;\n                            var inst = jQuery.jstree.reference(obj.reference);\n                            var clickedNode = inst.get_node(obj.reference);\n                            if (parseInt(clickedNode.original.id) &amp;gt;= 0) &#123;\n                                abp.ajax(&#123;\n                                    url: abp.appPath + &#39;Menus/EditModal?menuId=&#39; + clickedNode.original.id,\n                                    type: &#39;POST&#39;,\n                                    dataType: &#39;html&#39;,\n                                    success: function (content) &#123;\n                                        $(&quot;#MenuEditModal&quot;).modal();\n                                        $(&#39;#MenuEditModal div.modal-content&#39;).html(content);\n                                    &#125;,\n                                    error: function (e) &#123; &#125;\n                                &#125;);\n                            &#125; else &#123;\n                                abp.notify.info(&quot;菜单获取出错&quot;);\n                            &#125;\n                        &#125;\n                    &#125;,\n                    &quot;delete&quot;: &#123;\n                        &quot;label&quot;: &quot;更改菜单状态&quot;,\n                        &quot;action&quot;: function (obj) &#123;\n                            var inst = jQuery.jstree.reference(obj.reference);\n                            var clickedNode = inst.get_node(obj.reference);\n                            abp.message.confirm(\n                                abp.utils.formatString(&quot;是否&quot; + (clickedNode.original.state.disabled?&quot;启用&quot;:&quot;禁用&quot;) + &quot;当前菜单：&quot; + clickedNode.original.text + &quot;?&quot;),\n                                null,\n                                (isConfirmed) =&amp;gt; &#123;\n                                    if (isConfirmed) &#123;\n                                        _menuService\n                                            .delete(&#123;\n                                                id: clickedNode.original.id\n                                            &#125;)\n                                            .done(() =&amp;gt; &#123;\n                                                abp.notify.info(l(&#39;SuccessfullyDeleted&#39;));\n                                                location.reload();\n                                            &#125;);\n                                    &#125;\n                                &#125;\n                            );\n                        &#125;,\n\n                    &#125;\n                &#125;\n            &#125;\n        &#125;).on(&#39;select_node.jstree&#39;, function (event, data) &#123;\n            console.log(data.node);\n        &#125;).on(&#39;changed.jstree&#39;, function (event, data) &#123;\n            console.log(&quot;-----------changed.jstree&quot;);\n            console.log(&quot;action:&quot; + data.action);\n            console.log(data.node);\n        &#125;);\n\n    &#125;);\n\n\n&amp;lt;/script&amp;gt;\n</code></pre>\n<p>}<br></pre></p>\n<p>&nbsp;</p>\n</div>\n<p>&nbsp;预览一下吧</p>\n<p><img src=\"/cnblogs/13096427/789895-20200613175433971-1845076483.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<h2>github地址</h2>\n<p>本文github：<a href=\"https://github.com/wangpengzong/AbpLearn\">https://github.com/wangpengzong/AbpLearn</a></p>\n<p>下一篇开始动态权限</p>\n<h2 style=\"display: none;\">&nbsp;吐槽区域（写的不好、不对，欢迎吐槽）</h2>"},{"title":".net core3.1 abp动态菜单和动态权限（思路）  （二）","date":"2020-06-12T03:57:00.000Z","author":"wpzblog","_content":"<p>ps：本文需要先把abp的源码下载一份来下，跟着一起找实现，更容易懂</p>\n<p>在abp中，对于权限和菜单使用静态来管理，菜单的加载是在登陆页面的地方（具体是怎么知道的，浏览器按F12，然后去sources中去找）</p>\n<p><img src=\"/cnblogs/13089690/789895-20200610195839215-1000464738.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>这个/AbpScripts/GetScripts是获取需要初始化的script，源自AbpScriptsController，GetScripts方法包括</p>\n<div class=\"cnblogs_code\">\n<pre>页面加载时的链接是：http://localhost:62114/AbpScripts/GetScripts?v=637274153555501055<br /><br />_multiTenancyScriptManager  //当前租户初始化  对应报文的 abp.multiTenancy<br /><br />_sessionScriptManager //当前session初始化 对应报文的 abp.session</pre>\n<pre><em>_localizationScriptManager  //本地化的初始化 </em>对应报文的 abp.localization</pre>\n<pre><em>_featuresScriptManager  //</em>对应报文的 abp.features</pre>\n<pre><em>_authorizationScriptManager  //权限初始化  </em>对应报文的 abp.auth</pre>\n<pre><em>_navigationScriptManager  //导航菜单初始化  </em>对应报文的 abp.nav</pre>\n<pre><em>_settingScriptManager  //设置初始化  </em>对应报文的 abp.setting</pre>\n<pre><em>_timingScriptManager  //</em>对应报文的 abp.clock</pre>\n<pre><em>_customConfigScriptManager  //</em>对应报文的 abp.custom</pre>\n</div>\n<p>&nbsp;</p>\n<p><img src=\"/cnblogs/13089690/789895-20200610200454121-120495896.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;好了，现在基本算是找到菜单和权限js获取的地方了，一般系统里面，权限是依赖于菜单和菜单按钮的，所以我们先不管权限，先把菜单做成动态加载的</p>\n<p>从await _navigationScriptManager.GetScriptAsync()开始，一路F12，大概流程是</p>\n<div class=\"cnblogs_code\">\n<pre>(接口)INavigationScriptManager=&gt;(接口实现)NavigationScriptManager=&gt;(方法)GetScriptAsync=&gt;(调用)<span style=\"color: #0000ff;\">await</span> _userNavigationManager.GetMenusAsync=&gt;</pre>\n<pre>(接口)IUserNavigationManager=&gt;(接口实现)UserNavigationManager=&gt;(方法)GetMenuAsync=&gt;(调用)navigationManager.Menus=&gt;</pre>\n<pre>(接口)INavigationManager=&gt;(接口实现)NavigationManager=&gt;(非静态构造函数为Menus属性赋值)NavigationManager</pre>\n</div>\n<p>&nbsp;到这里之后基本就到底了，我们看看NavigationManager的内容</p>\n<div class=\"cnblogs_code\">\n<pre>    <span style=\"color: #0000ff;\">internal</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> NavigationManager : INavigationManager, ISingletonDependency\n    {\n        </span><span style=\"color: #0000ff;\">public</span> IDictionary&lt;<span style=\"color: #0000ff;\">string</span>, MenuDefinition&gt; Menus { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }  //属性\n\n        </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> MenuDefinition MainMenu //属性\n        {\n            </span><span style=\"color: #0000ff;\">get</span> { <span style=\"color: #0000ff;\">return</span> Menus[<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MainMenu</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">]; }\n        }\n\n        </span><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">readonly</span><span style=\"color: #000000;\"> IIocResolver _iocResolver;  \n        </span><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">readonly</span><span style=\"color: #000000;\"> INavigationConfiguration _configuration;\n\n        </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> NavigationManager(IIocResolver iocResolver, INavigationConfiguration configuration) //非静态构造函数\n        {\n            _iocResolver </span>=<span style=\"color: #000000;\"> iocResolver;\n            _configuration </span>=<span style=\"color: #000000;\"> configuration;\n\n            Menus </span>= <span style=\"color: #0000ff;\">new</span> Dictionary&lt;<span style=\"color: #0000ff;\">string</span>, MenuDefinition&gt;<span style=\"color: #000000;\">\n                    {\n                        {</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MainMenu</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #0000ff;\">new</span> MenuDefinition(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MainMenu</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #0000ff;\">new</span> LocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MainMenu</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">, AbpConsts.LocalizationSourceName))}\n                    };\n        }\n\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> Initialize()  //初始化方法\n        {\n            </span><span style=\"color: #0000ff;\">var</span> context = <span style=\"color: #0000ff;\">new</span> NavigationProviderContext(<span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">);\n\n            </span><span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #0000ff;\">var</span> providerType <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> _configuration.Providers)\n            {\n                </span><span style=\"color: #0000ff;\">using</span> (<span style=\"color: #0000ff;\">var</span> provider = _iocResolver.ResolveAsDisposable&lt;NavigationProvider&gt;<span style=\"color: #000000;\">(providerType))\n                {\n                    provider.Object.SetNavigation(context);  //中式英语翻译一下，应该是设置导航\n                }\n            }\n        }\n    }</span></pre>\n</div>\n<p>这个类里面就只有属性、需要注入的接口声明、非静态构造函数、初始化方法，我们到这里需要关注的是Menus这个属性，这个属性似乎将会包含我们需要生成的菜单内容</p>\n<div class=\"cnblogs_code\">\n<pre>Menus = <span style=\"color: #0000ff;\">new</span> Dictionary&lt;<span style=\"color: #0000ff;\">string</span>, MenuDefinition&gt;<span style=\"color: #000000;\">\n                    {\n                        {</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MainMenu</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #0000ff;\">new</span> MenuDefinition(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MainMenu</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #ff0000;\">new LocalizableString(\"MainMenu\"</span><span style=\"color: #000000;\"><span style=\"color: #ff0000;\">, AbpConsts.LocalizationSourceName)</span>)}\n                    };</span></pre>\n</div>\n<p>这里是对Menus的赋值，实例化了一个Dictionary，前面的不用看，主要是看标红的这句话，从new LocalizableString(\"MainMenu\", AbpConsts.LocalizationSourceName)里面获取到值</p>\n<p>好了现在基本找到地方了，我们不知道LocalizableString是什么意思，但是我们可以百度一波</p>\n<div class=\"cnblogs_code\">\n<pre>ILocalizableString/LocalizableString:封装需要被本地化的string的信息，并提供Localize方法（调用ILocalizationManager的GetString方法）返回本地化的string. SourceName指定其从那个本地化资源读取本地化文本。<br /><br /></pre>\n<p>&nbsp; LocalizableString(\"Questions\", \"\")&nbsp;如果本地找不到资源,会报300</p>\n</div>\n<p>大概的意思是通过new LocalizableString，我们可以在本地化来源为AbpConsts.LocalizationSourceName的string里面寻找到Key为MainMenu的value（理解不对请喷）</p>\n<p>&nbsp;</p>\n<p>现在需要去找到那个地方对MainMenu进行了本地化操作，一般来说这个事情都是在程序加载的时候进行的，先对MainMenu进行读取，保存到本地，然后在<em>_navigationScriptManager读取，传输给前台</em></p>\n<p><em>似乎不好找了，但是我们发现有一个类型MenuDefinition，F12一下，可以发现宝藏</em></p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #0000ff;\">namespace</span><span style=\"color: #000000;\"> Abp.Application.Navigation\n{\n    </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n    <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Represents a navigation menu for an application.  //</span>表示应用程序的导航菜单</pre>\n<pre><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> MenuDefinition : IHasMenuItemDefinitions\n    {\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Unique name of the menu in the application. Required.  //应用程序中菜单的唯一名称。&nbsp;必须\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> Name { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Display name of the menu. Required.  //</span>菜单显示名称 必须</pre>\n<pre><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> ILocalizableString DisplayName { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Can be used to store a custom object related to this menu. Optional.  //</span>可用于存储与此菜单相关的自定义对象</pre>\n<pre><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">object</span> CustomData { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Menu items (first level).   //</span>菜单项（第一级）</pre>\n<pre><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> List&lt;MenuItemDefinition&gt; Items { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Creates a new </span><span style=\"color: #808080;\">&lt;see cref=\"MenuDefinition\"/&gt;</span><span style=\"color: #008000;\"> object.\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"name\"&gt;</span><span style=\"color: #008000;\">Unique name of the menu</span><span style=\"color: #808080;\">&lt;/param&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"displayName\"&gt;</span><span style=\"color: #008000;\">Display name of the menu</span><span style=\"color: #808080;\">&lt;/param&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"customData\"&gt;</span><span style=\"color: #008000;\">Can be used to store a custom object related to this menu.</span><span style=\"color: #808080;\">&lt;/param&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> MenuDefinition(<span style=\"color: #0000ff;\">string</span> name, ILocalizableString displayName, <span style=\"color: #0000ff;\">object</span> customData = <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)\n        {\n            </span><span style=\"color: #0000ff;\">if</span> (<span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\">.IsNullOrEmpty(name))\n            {\n                </span><span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> ArgumentNullException(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">name</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Menu name can not be empty or null.</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n            }\n\n            </span><span style=\"color: #0000ff;\">if</span> (displayName == <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)\n            {\n                </span><span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> ArgumentNullException(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">displayName</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Display name of the menu can not be null.</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n            }\n\n            Name </span>=<span style=\"color: #000000;\"> name;\n            DisplayName </span>=<span style=\"color: #000000;\"> displayName;\n            CustomData </span>=<span style=\"color: #000000;\"> customData;\n\n            Items </span>= <span style=\"color: #0000ff;\">new</span> List&lt;MenuItemDefinition&gt;<span style=\"color: #000000;\">();\n        }\n\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Adds a </span><span style=\"color: #808080;\">&lt;see cref=\"MenuItemDefinition\"/&gt;</span><span style=\"color: #008000;\"> to </span><span style=\"color: #808080;\">&lt;see cref=\"Items\"/&gt;</span><span style=\"color: #008000;\">.\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"menuItem\"&gt;&lt;see cref=\"MenuItemDefinition\"/&gt;</span><span style=\"color: #008000;\"> to be added</span><span style=\"color: #808080;\">&lt;/param&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;</span><span style=\"color: #008000;\">This </span><span style=\"color: #808080;\">&lt;see cref=\"MenuDefinition\"/&gt;</span><span style=\"color: #008000;\"> object</span><span style=\"color: #808080;\">&lt;/returns&gt;</span>\n        <span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> MenuDefinition AddItem(MenuItemDefinition menuItem)\n        {\n            Items.Add(menuItem);\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">;\n        }\n\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Remove menu item with given name\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"name\"&gt;&lt;/param&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">void</span> RemoveItem(<span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> name)\n        {\n            Items.RemoveAll(m </span>=&gt; m.Name ==<span style=\"color: #000000;\"> name);\n        }\n    }\n}</span></pre>\n</div>\n<p>找到了菜单的类型了，那么我们去找保存的地方就好找了，我们其实可以根据AddItem这个方法去找，去查看哪个地方引用了</p>\n<p>AddItem方法添加的是MenuItemDefinition类型的变量，那我们现在退出abp源码，去我们的AbpLearn项目中去全局搜索一下</p>\n<p><img src=\"/cnblogs/13089690/789895-20200610220532137-1721821016.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>看来是同一个AbpLearnNavigationProvider类里面，双击过去看一下</p>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre>    <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n    <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> This class defines menus for the application.\n    </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> AbpLearnNavigationProvider : NavigationProvider\n    {\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">override</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> SetNavigation(INavigationProviderContext context)\n        {\n            context.Manager.MainMenu\n                .AddItem(\n                    </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                        PageNames.Home,\n                        L(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">HomePage</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                        url: </span><span style=\"color: #800000;\">\"\"</span><span style=\"color: #000000;\">,\n                        icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">fas fa-home</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        requiresAuthentication: </span><span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">\n                    )\n                ).AddItem(\n                    </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                        PageNames.Tenants,\n                        L(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Tenants</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                        url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Tenants</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">fas fa-building</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        permissionDependency: </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> SimplePermissionDependency(PermissionNames.Pages_Tenants)\n                    )\n                ).AddItem(\n                    </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                        PageNames.Users,\n                        L(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Users</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                        url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Users</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">fas fa-users</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        permissionDependency: </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> SimplePermissionDependency(PermissionNames.Pages_Users)\n                    )\n                ).AddItem(\n                    </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                        PageNames.Roles,\n                        L(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Roles</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                        url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Roles</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">fas fa-theater-masks</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        permissionDependency: </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> SimplePermissionDependency(PermissionNames.Pages_Roles)\n                            )\n                )\n                .AddItem(\n                    </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                        PageNames.About,\n                        L(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">About</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                        url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">About</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">fas fa-info-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                    )\n                ).AddItem( </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> Menu items below is just for demonstration!</span>\n                    <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                        </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MultiLevelMenu</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        L(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MultiLevelMenu</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                        icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">fas fa-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                    ).AddItem(\n                        </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                            </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetBoilerplate</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                            </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ASP.NET Boilerplate</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                            icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                        ).AddItem(\n                            </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetBoilerplateHome</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Home</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                                url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">https://aspnetboilerplate.com?ref=abptmpl</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-dot-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                            )\n                        ).AddItem(\n                            </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetBoilerplateTemplates</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Templates</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                                url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">https://aspnetboilerplate.com/Templates?ref=abptmpl</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-dot-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                            )\n                        ).AddItem(\n                            </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetBoilerplateSamples</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Samples</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                                url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">https://aspnetboilerplate.com/Samples?ref=abptmpl</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-dot-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                            )\n                        ).AddItem(\n                            </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetBoilerplateDocuments</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Documents</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                                url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">https://aspnetboilerplate.com/Pages/Documents?ref=abptmpl</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-dot-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                            )\n                        )\n                    ).AddItem(\n                        </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                            </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetZero</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                            </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ASP.NET Zero</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                            icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                        ).AddItem(\n                            </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetZeroHome</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Home</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                                url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">https://aspnetzero.com?ref=abptmpl</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-dot-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                            )\n                        ).AddItem(\n                            </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetZeroFeatures</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Features</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                                url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">https://aspnetzero.com/Features?ref=abptmpl</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-dot-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                            )\n                        ).AddItem(\n                            </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetZeroPricing</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Pricing</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                                url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">https://aspnetzero.com/Pricing?ref=abptmpl#pricing</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-dot-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                            )\n                        ).AddItem(\n                            </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetZeroFaq</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Faq</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                                url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">https://aspnetzero.com/Faq?ref=abptmpl</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-dot-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                            )\n                        ).AddItem(\n                            </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetZeroDocuments</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Documents</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                                url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">https://aspnetzero.com/Documents?ref=abptmpl</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-dot-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                            )\n                        )\n                    )\n                );\n        }\n\n        </span><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">static</span> ILocalizableString L(<span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> name)\n        {\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> LocalizableString(name, AbpLearnConsts.LocalizationSourceName);\n        }\n    }</span></pre>\n</div>\n<p>好了，现在我们找到菜单定义的地方了，那么我们如何去做动态菜单哪？</p>\n<p>&nbsp;</p>\n<p>首先我们想一下需要什么样的动态菜单？</p>\n<p>1.从数据库加载，不从数据库加载怎么叫动态</p>\n<p>2.可以根据不同Host（管理者）和Tenant（租户）加载不同的菜单，不可能管理者和租户看到的菜单全是一个样子的吧！</p>\n<p>3.可以根据不同的角色或者用户加载不同的菜单（这个就牵扯到权限了，比如谁可以看到什么，不可以看到什么）</p>\n<p>4.权限、按钮最好和菜单相绑定，这样便于控制</p>\n<p>......</p>\n<p>&nbsp;</p>\n<p>根据以上几点，我们可以确定</p>\n<p>1.必须要在用户登录之后加载出来的菜单才能符合条件</p>\n<p>2.菜单需要建一个表（因为abp默认没有单独的菜单表），来进行存放</p>\n<p>3.字段需要包含：菜单名，菜单与权限对应的名称（用于动态权限），菜单对应的Url，Icon，级联父Id，是否启用，排序，租户Id</p>\n<p>4.需要对菜单进行编辑时，因为牵扯到多租户，我们需要对多租户定义一个标准的菜单，在添加租户时，自动将标准菜单复制保存一份到新租户中，所以我们需要对于菜单的进行区分，一般来说Host对应的数据行TenantId（int）都为null，我们可以将标准菜单的TenantId标为-1，已经分配保存的菜单TenantId为当前租户Id，这样便于区分和查询</p>\n<p>&nbsp;</p>\n<p>好了，让我们开始写动态菜单吧</p>","source":"_posts/cnblogs/13089690.md","raw":"---\ntitle: .net core3.1 abp动态菜单和动态权限（思路）  （二）\ndate: 2020-06-12T11:57:00\nauthor: wpzblog\ntags: [\"abp\",\"netcore\"]\n---\n<p>ps：本文需要先把abp的源码下载一份来下，跟着一起找实现，更容易懂</p>\n<p>在abp中，对于权限和菜单使用静态来管理，菜单的加载是在登陆页面的地方（具体是怎么知道的，浏览器按F12，然后去sources中去找）</p>\n<p><img src=\"/cnblogs/13089690/789895-20200610195839215-1000464738.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>这个/AbpScripts/GetScripts是获取需要初始化的script，源自AbpScriptsController，GetScripts方法包括</p>\n<div class=\"cnblogs_code\">\n<pre>页面加载时的链接是：http://localhost:62114/AbpScripts/GetScripts?v=637274153555501055<br /><br />_multiTenancyScriptManager  //当前租户初始化  对应报文的 abp.multiTenancy<br /><br />_sessionScriptManager //当前session初始化 对应报文的 abp.session</pre>\n<pre><em>_localizationScriptManager  //本地化的初始化 </em>对应报文的 abp.localization</pre>\n<pre><em>_featuresScriptManager  //</em>对应报文的 abp.features</pre>\n<pre><em>_authorizationScriptManager  //权限初始化  </em>对应报文的 abp.auth</pre>\n<pre><em>_navigationScriptManager  //导航菜单初始化  </em>对应报文的 abp.nav</pre>\n<pre><em>_settingScriptManager  //设置初始化  </em>对应报文的 abp.setting</pre>\n<pre><em>_timingScriptManager  //</em>对应报文的 abp.clock</pre>\n<pre><em>_customConfigScriptManager  //</em>对应报文的 abp.custom</pre>\n</div>\n<p>&nbsp;</p>\n<p><img src=\"/cnblogs/13089690/789895-20200610200454121-120495896.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;好了，现在基本算是找到菜单和权限js获取的地方了，一般系统里面，权限是依赖于菜单和菜单按钮的，所以我们先不管权限，先把菜单做成动态加载的</p>\n<p>从await _navigationScriptManager.GetScriptAsync()开始，一路F12，大概流程是</p>\n<div class=\"cnblogs_code\">\n<pre>(接口)INavigationScriptManager=&gt;(接口实现)NavigationScriptManager=&gt;(方法)GetScriptAsync=&gt;(调用)<span style=\"color: #0000ff;\">await</span> _userNavigationManager.GetMenusAsync=&gt;</pre>\n<pre>(接口)IUserNavigationManager=&gt;(接口实现)UserNavigationManager=&gt;(方法)GetMenuAsync=&gt;(调用)navigationManager.Menus=&gt;</pre>\n<pre>(接口)INavigationManager=&gt;(接口实现)NavigationManager=&gt;(非静态构造函数为Menus属性赋值)NavigationManager</pre>\n</div>\n<p>&nbsp;到这里之后基本就到底了，我们看看NavigationManager的内容</p>\n<div class=\"cnblogs_code\">\n<pre>    <span style=\"color: #0000ff;\">internal</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> NavigationManager : INavigationManager, ISingletonDependency\n    {\n        </span><span style=\"color: #0000ff;\">public</span> IDictionary&lt;<span style=\"color: #0000ff;\">string</span>, MenuDefinition&gt; Menus { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }  //属性\n\n        </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> MenuDefinition MainMenu //属性\n        {\n            </span><span style=\"color: #0000ff;\">get</span> { <span style=\"color: #0000ff;\">return</span> Menus[<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MainMenu</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">]; }\n        }\n\n        </span><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">readonly</span><span style=\"color: #000000;\"> IIocResolver _iocResolver;  \n        </span><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">readonly</span><span style=\"color: #000000;\"> INavigationConfiguration _configuration;\n\n        </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> NavigationManager(IIocResolver iocResolver, INavigationConfiguration configuration) //非静态构造函数\n        {\n            _iocResolver </span>=<span style=\"color: #000000;\"> iocResolver;\n            _configuration </span>=<span style=\"color: #000000;\"> configuration;\n\n            Menus </span>= <span style=\"color: #0000ff;\">new</span> Dictionary&lt;<span style=\"color: #0000ff;\">string</span>, MenuDefinition&gt;<span style=\"color: #000000;\">\n                    {\n                        {</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MainMenu</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #0000ff;\">new</span> MenuDefinition(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MainMenu</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #0000ff;\">new</span> LocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MainMenu</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">, AbpConsts.LocalizationSourceName))}\n                    };\n        }\n\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> Initialize()  //初始化方法\n        {\n            </span><span style=\"color: #0000ff;\">var</span> context = <span style=\"color: #0000ff;\">new</span> NavigationProviderContext(<span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">);\n\n            </span><span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #0000ff;\">var</span> providerType <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> _configuration.Providers)\n            {\n                </span><span style=\"color: #0000ff;\">using</span> (<span style=\"color: #0000ff;\">var</span> provider = _iocResolver.ResolveAsDisposable&lt;NavigationProvider&gt;<span style=\"color: #000000;\">(providerType))\n                {\n                    provider.Object.SetNavigation(context);  //中式英语翻译一下，应该是设置导航\n                }\n            }\n        }\n    }</span></pre>\n</div>\n<p>这个类里面就只有属性、需要注入的接口声明、非静态构造函数、初始化方法，我们到这里需要关注的是Menus这个属性，这个属性似乎将会包含我们需要生成的菜单内容</p>\n<div class=\"cnblogs_code\">\n<pre>Menus = <span style=\"color: #0000ff;\">new</span> Dictionary&lt;<span style=\"color: #0000ff;\">string</span>, MenuDefinition&gt;<span style=\"color: #000000;\">\n                    {\n                        {</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MainMenu</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #0000ff;\">new</span> MenuDefinition(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MainMenu</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #ff0000;\">new LocalizableString(\"MainMenu\"</span><span style=\"color: #000000;\"><span style=\"color: #ff0000;\">, AbpConsts.LocalizationSourceName)</span>)}\n                    };</span></pre>\n</div>\n<p>这里是对Menus的赋值，实例化了一个Dictionary，前面的不用看，主要是看标红的这句话，从new LocalizableString(\"MainMenu\", AbpConsts.LocalizationSourceName)里面获取到值</p>\n<p>好了现在基本找到地方了，我们不知道LocalizableString是什么意思，但是我们可以百度一波</p>\n<div class=\"cnblogs_code\">\n<pre>ILocalizableString/LocalizableString:封装需要被本地化的string的信息，并提供Localize方法（调用ILocalizationManager的GetString方法）返回本地化的string. SourceName指定其从那个本地化资源读取本地化文本。<br /><br /></pre>\n<p>&nbsp; LocalizableString(\"Questions\", \"\")&nbsp;如果本地找不到资源,会报300</p>\n</div>\n<p>大概的意思是通过new LocalizableString，我们可以在本地化来源为AbpConsts.LocalizationSourceName的string里面寻找到Key为MainMenu的value（理解不对请喷）</p>\n<p>&nbsp;</p>\n<p>现在需要去找到那个地方对MainMenu进行了本地化操作，一般来说这个事情都是在程序加载的时候进行的，先对MainMenu进行读取，保存到本地，然后在<em>_navigationScriptManager读取，传输给前台</em></p>\n<p><em>似乎不好找了，但是我们发现有一个类型MenuDefinition，F12一下，可以发现宝藏</em></p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #0000ff;\">namespace</span><span style=\"color: #000000;\"> Abp.Application.Navigation\n{\n    </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n    <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Represents a navigation menu for an application.  //</span>表示应用程序的导航菜单</pre>\n<pre><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> MenuDefinition : IHasMenuItemDefinitions\n    {\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Unique name of the menu in the application. Required.  //应用程序中菜单的唯一名称。&nbsp;必须\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> Name { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Display name of the menu. Required.  //</span>菜单显示名称 必须</pre>\n<pre><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> ILocalizableString DisplayName { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Can be used to store a custom object related to this menu. Optional.  //</span>可用于存储与此菜单相关的自定义对象</pre>\n<pre><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">object</span> CustomData { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Menu items (first level).   //</span>菜单项（第一级）</pre>\n<pre><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> List&lt;MenuItemDefinition&gt; Items { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Creates a new </span><span style=\"color: #808080;\">&lt;see cref=\"MenuDefinition\"/&gt;</span><span style=\"color: #008000;\"> object.\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"name\"&gt;</span><span style=\"color: #008000;\">Unique name of the menu</span><span style=\"color: #808080;\">&lt;/param&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"displayName\"&gt;</span><span style=\"color: #008000;\">Display name of the menu</span><span style=\"color: #808080;\">&lt;/param&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"customData\"&gt;</span><span style=\"color: #008000;\">Can be used to store a custom object related to this menu.</span><span style=\"color: #808080;\">&lt;/param&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> MenuDefinition(<span style=\"color: #0000ff;\">string</span> name, ILocalizableString displayName, <span style=\"color: #0000ff;\">object</span> customData = <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)\n        {\n            </span><span style=\"color: #0000ff;\">if</span> (<span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\">.IsNullOrEmpty(name))\n            {\n                </span><span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> ArgumentNullException(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">name</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Menu name can not be empty or null.</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n            }\n\n            </span><span style=\"color: #0000ff;\">if</span> (displayName == <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)\n            {\n                </span><span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> ArgumentNullException(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">displayName</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Display name of the menu can not be null.</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n            }\n\n            Name </span>=<span style=\"color: #000000;\"> name;\n            DisplayName </span>=<span style=\"color: #000000;\"> displayName;\n            CustomData </span>=<span style=\"color: #000000;\"> customData;\n\n            Items </span>= <span style=\"color: #0000ff;\">new</span> List&lt;MenuItemDefinition&gt;<span style=\"color: #000000;\">();\n        }\n\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Adds a </span><span style=\"color: #808080;\">&lt;see cref=\"MenuItemDefinition\"/&gt;</span><span style=\"color: #008000;\"> to </span><span style=\"color: #808080;\">&lt;see cref=\"Items\"/&gt;</span><span style=\"color: #008000;\">.\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"menuItem\"&gt;&lt;see cref=\"MenuItemDefinition\"/&gt;</span><span style=\"color: #008000;\"> to be added</span><span style=\"color: #808080;\">&lt;/param&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;</span><span style=\"color: #008000;\">This </span><span style=\"color: #808080;\">&lt;see cref=\"MenuDefinition\"/&gt;</span><span style=\"color: #008000;\"> object</span><span style=\"color: #808080;\">&lt;/returns&gt;</span>\n        <span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> MenuDefinition AddItem(MenuItemDefinition menuItem)\n        {\n            Items.Add(menuItem);\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">;\n        }\n\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Remove menu item with given name\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"name\"&gt;&lt;/param&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">void</span> RemoveItem(<span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> name)\n        {\n            Items.RemoveAll(m </span>=&gt; m.Name ==<span style=\"color: #000000;\"> name);\n        }\n    }\n}</span></pre>\n</div>\n<p>找到了菜单的类型了，那么我们去找保存的地方就好找了，我们其实可以根据AddItem这个方法去找，去查看哪个地方引用了</p>\n<p>AddItem方法添加的是MenuItemDefinition类型的变量，那我们现在退出abp源码，去我们的AbpLearn项目中去全局搜索一下</p>\n<p><img src=\"/cnblogs/13089690/789895-20200610220532137-1721821016.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>看来是同一个AbpLearnNavigationProvider类里面，双击过去看一下</p>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre>    <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n    <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> This class defines menus for the application.\n    </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> AbpLearnNavigationProvider : NavigationProvider\n    {\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">override</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> SetNavigation(INavigationProviderContext context)\n        {\n            context.Manager.MainMenu\n                .AddItem(\n                    </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                        PageNames.Home,\n                        L(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">HomePage</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                        url: </span><span style=\"color: #800000;\">\"\"</span><span style=\"color: #000000;\">,\n                        icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">fas fa-home</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        requiresAuthentication: </span><span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">\n                    )\n                ).AddItem(\n                    </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                        PageNames.Tenants,\n                        L(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Tenants</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                        url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Tenants</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">fas fa-building</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        permissionDependency: </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> SimplePermissionDependency(PermissionNames.Pages_Tenants)\n                    )\n                ).AddItem(\n                    </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                        PageNames.Users,\n                        L(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Users</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                        url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Users</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">fas fa-users</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        permissionDependency: </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> SimplePermissionDependency(PermissionNames.Pages_Users)\n                    )\n                ).AddItem(\n                    </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                        PageNames.Roles,\n                        L(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Roles</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                        url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Roles</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">fas fa-theater-masks</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        permissionDependency: </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> SimplePermissionDependency(PermissionNames.Pages_Roles)\n                            )\n                )\n                .AddItem(\n                    </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                        PageNames.About,\n                        L(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">About</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                        url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">About</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">fas fa-info-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                    )\n                ).AddItem( </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> Menu items below is just for demonstration!</span>\n                    <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                        </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MultiLevelMenu</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        L(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MultiLevelMenu</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                        icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">fas fa-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                    ).AddItem(\n                        </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                            </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetBoilerplate</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                            </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ASP.NET Boilerplate</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                            icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                        ).AddItem(\n                            </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetBoilerplateHome</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Home</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                                url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">https://aspnetboilerplate.com?ref=abptmpl</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-dot-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                            )\n                        ).AddItem(\n                            </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetBoilerplateTemplates</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Templates</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                                url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">https://aspnetboilerplate.com/Templates?ref=abptmpl</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-dot-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                            )\n                        ).AddItem(\n                            </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetBoilerplateSamples</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Samples</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                                url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">https://aspnetboilerplate.com/Samples?ref=abptmpl</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-dot-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                            )\n                        ).AddItem(\n                            </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetBoilerplateDocuments</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Documents</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                                url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">https://aspnetboilerplate.com/Pages/Documents?ref=abptmpl</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-dot-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                            )\n                        )\n                    ).AddItem(\n                        </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                            </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetZero</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                            </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ASP.NET Zero</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                            icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                        ).AddItem(\n                            </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetZeroHome</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Home</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                                url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">https://aspnetzero.com?ref=abptmpl</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-dot-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                            )\n                        ).AddItem(\n                            </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetZeroFeatures</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Features</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                                url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">https://aspnetzero.com/Features?ref=abptmpl</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-dot-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                            )\n                        ).AddItem(\n                            </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetZeroPricing</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Pricing</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                                url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">https://aspnetzero.com/Pricing?ref=abptmpl#pricing</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-dot-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                            )\n                        ).AddItem(\n                            </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetZeroFaq</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Faq</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                                url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">https://aspnetzero.com/Faq?ref=abptmpl</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-dot-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                            )\n                        ).AddItem(\n                            </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetZeroDocuments</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Documents</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                                url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">https://aspnetzero.com/Documents?ref=abptmpl</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-dot-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                            )\n                        )\n                    )\n                );\n        }\n\n        </span><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">static</span> ILocalizableString L(<span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> name)\n        {\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> LocalizableString(name, AbpLearnConsts.LocalizationSourceName);\n        }\n    }</span></pre>\n</div>\n<p>好了，现在我们找到菜单定义的地方了，那么我们如何去做动态菜单哪？</p>\n<p>&nbsp;</p>\n<p>首先我们想一下需要什么样的动态菜单？</p>\n<p>1.从数据库加载，不从数据库加载怎么叫动态</p>\n<p>2.可以根据不同Host（管理者）和Tenant（租户）加载不同的菜单，不可能管理者和租户看到的菜单全是一个样子的吧！</p>\n<p>3.可以根据不同的角色或者用户加载不同的菜单（这个就牵扯到权限了，比如谁可以看到什么，不可以看到什么）</p>\n<p>4.权限、按钮最好和菜单相绑定，这样便于控制</p>\n<p>......</p>\n<p>&nbsp;</p>\n<p>根据以上几点，我们可以确定</p>\n<p>1.必须要在用户登录之后加载出来的菜单才能符合条件</p>\n<p>2.菜单需要建一个表（因为abp默认没有单独的菜单表），来进行存放</p>\n<p>3.字段需要包含：菜单名，菜单与权限对应的名称（用于动态权限），菜单对应的Url，Icon，级联父Id，是否启用，排序，租户Id</p>\n<p>4.需要对菜单进行编辑时，因为牵扯到多租户，我们需要对多租户定义一个标准的菜单，在添加租户时，自动将标准菜单复制保存一份到新租户中，所以我们需要对于菜单的进行区分，一般来说Host对应的数据行TenantId（int）都为null，我们可以将标准菜单的TenantId标为-1，已经分配保存的菜单TenantId为当前租户Id，这样便于区分和查询</p>\n<p>&nbsp;</p>\n<p>好了，让我们开始写动态菜单吧</p>","slug":"cnblogs/13089690","published":1,"updated":"2022-07-10T13:01:12.022Z","_id":"cl5f7irg60019c0un7j3w7q0l","comments":1,"layout":"post","photos":[],"link":"","content":"<p>ps：本文需要先把abp的源码下载一份来下，跟着一起找实现，更容易懂</p>\n<p>在abp中，对于权限和菜单使用静态来管理，菜单的加载是在登陆页面的地方（具体是怎么知道的，浏览器按F12，然后去sources中去找）</p>\n<p><img src=\"/cnblogs/13089690/789895-20200610195839215-1000464738.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>这个/AbpScripts/GetScripts是获取需要初始化的script，源自AbpScriptsController，GetScripts方法包括</p>\n<div class=\"cnblogs_code\">\n<pre>页面加载时的链接是：http://localhost:62114/AbpScripts/GetScripts?v=637274153555501055<br /><br />_multiTenancyScriptManager  //当前租户初始化  对应报文的 abp.multiTenancy<br /><br />_sessionScriptManager //当前session初始化 对应报文的 abp.session</pre>\n<pre><em>_localizationScriptManager  //本地化的初始化 </em>对应报文的 abp.localization</pre>\n<pre><em>_featuresScriptManager  //</em>对应报文的 abp.features</pre>\n<pre><em>_authorizationScriptManager  //权限初始化  </em>对应报文的 abp.auth</pre>\n<pre><em>_navigationScriptManager  //导航菜单初始化  </em>对应报文的 abp.nav</pre>\n<pre><em>_settingScriptManager  //设置初始化  </em>对应报文的 abp.setting</pre>\n<pre><em>_timingScriptManager  //</em>对应报文的 abp.clock</pre>\n<pre><em>_customConfigScriptManager  //</em>对应报文的 abp.custom</pre>\n</div>\n<p>&nbsp;</p>\n<p><img src=\"/cnblogs/13089690/789895-20200610200454121-120495896.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;好了，现在基本算是找到菜单和权限js获取的地方了，一般系统里面，权限是依赖于菜单和菜单按钮的，所以我们先不管权限，先把菜单做成动态加载的</p>\n<p>从await _navigationScriptManager.GetScriptAsync()开始，一路F12，大概流程是</p>\n<div class=\"cnblogs_code\">\n<pre>(接口)INavigationScriptManager=&gt;(接口实现)NavigationScriptManager=&gt;(方法)GetScriptAsync=&gt;(调用)<span style=\"color: #0000ff;\">await</span> _userNavigationManager.GetMenusAsync=&gt;</pre>\n<pre>(接口)IUserNavigationManager=&gt;(接口实现)UserNavigationManager=&gt;(方法)GetMenuAsync=&gt;(调用)navigationManager.Menus=&gt;</pre>\n<pre>(接口)INavigationManager=&gt;(接口实现)NavigationManager=&gt;(非静态构造函数为Menus属性赋值)NavigationManager</pre>\n</div>\n<p>&nbsp;到这里之后基本就到底了，我们看看NavigationManager的内容</p>\n<div class=\"cnblogs_code\">\n<pre>    <span style=\"color: #0000ff;\">internal</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> NavigationManager : INavigationManager, ISingletonDependency\n    {\n        </span><span style=\"color: #0000ff;\">public</span> IDictionary&lt;<span style=\"color: #0000ff;\">string</span>, MenuDefinition&gt; Menus { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }  //属性\n\n<pre><code>    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; MenuDefinition MainMenu //属性\n    &#123;\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;get&lt;/span&gt; &#123; &lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt; Menus[&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;MainMenu&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;]; &#125;\n    &#125;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;readonly&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; IIocResolver _iocResolver;  \n    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;readonly&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; INavigationConfiguration _configuration;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; NavigationManager(IIocResolver iocResolver, INavigationConfiguration configuration) //非静态构造函数\n    &#123;\n        _iocResolver &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; iocResolver;\n        _configuration &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; configuration;\n\n        Menus &lt;/span&gt;= &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; Dictionary&amp;lt;&lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt;, MenuDefinition&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;\n                &#123;\n                    &#123;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;MainMenu&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; MenuDefinition(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;MainMenu&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; LocalizableString(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;MainMenu&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;, AbpConsts.LocalizationSourceName))&#125;\n                &#125;;\n    &#125;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; Initialize()  //初始化方法\n    &#123;\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; context = &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; NavigationProviderContext(&lt;span style=&quot;color: #0000ff;&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;foreach&lt;/span&gt; (&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; providerType &lt;span style=&quot;color: #0000ff;&quot;&gt;in&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _configuration.Providers)\n        &#123;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;using&lt;/span&gt; (&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; provider = _iocResolver.ResolveAsDisposable&amp;lt;NavigationProvider&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;(providerType))\n            &#123;\n                provider.Object.SetNavigation(context);  //中式英语翻译一下，应该是设置导航\n            &#125;\n        &#125;\n    &#125;\n&#125;&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<p>这个类里面就只有属性、需要注入的接口声明、非静态构造函数、初始化方法，我们到这里需要关注的是Menus这个属性，这个属性似乎将会包含我们需要生成的菜单内容</p>\n<div class=\"cnblogs_code\">\n<pre>Menus = <span style=\"color: #0000ff;\">new</span> Dictionary&lt;<span style=\"color: #0000ff;\">string</span>, MenuDefinition&gt;<span style=\"color: #000000;\">\n                    {\n                        {</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MainMenu</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #0000ff;\">new</span> MenuDefinition(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MainMenu</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #ff0000;\">new LocalizableString(\"MainMenu\"</span><span style=\"color: #000000;\"><span style=\"color: #ff0000;\">, AbpConsts.LocalizationSourceName)</span>)}\n                    };</span></pre>\n</div>\n<p>这里是对Menus的赋值，实例化了一个Dictionary，前面的不用看，主要是看标红的这句话，从new LocalizableString(\"MainMenu\", AbpConsts.LocalizationSourceName)里面获取到值</p>\n<p>好了现在基本找到地方了，我们不知道LocalizableString是什么意思，但是我们可以百度一波</p>\n<div class=\"cnblogs_code\">\n<pre>ILocalizableString/LocalizableString:封装需要被本地化的string的信息，并提供Localize方法（调用ILocalizationManager的GetString方法）返回本地化的string. SourceName指定其从那个本地化资源读取本地化文本。<br /><br /></pre>\n<p>&nbsp; LocalizableString(\"Questions\", \"\")&nbsp;如果本地找不到资源,会报300</p>\n</div>\n<p>大概的意思是通过new LocalizableString，我们可以在本地化来源为AbpConsts.LocalizationSourceName的string里面寻找到Key为MainMenu的value（理解不对请喷）</p>\n<p>&nbsp;</p>\n<p>现在需要去找到那个地方对MainMenu进行了本地化操作，一般来说这个事情都是在程序加载的时候进行的，先对MainMenu进行读取，保存到本地，然后在<em>_navigationScriptManager读取，传输给前台</em></p>\n<p><em>似乎不好找了，但是我们发现有一个类型MenuDefinition，F12一下，可以发现宝藏</em></p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #0000ff;\">namespace</span><span style=\"color: #000000;\"> Abp.Application.Navigation\n{\n    </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n    <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Represents a navigation menu for an application.  //</span>表示应用程序的导航菜单</pre>\n<pre><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> MenuDefinition : IHasMenuItemDefinitions\n    {\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Unique name of the menu in the application. Required.  //应用程序中菜单的唯一名称。&nbsp;必须\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> Name { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n\n<pre><code>    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Display name of the menu. Required.  //&lt;/span&gt;菜单显示名称 必须&lt;/pre&gt;\n</code></pre>\n<pre><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> ILocalizableString DisplayName { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Can be used to store a custom object related to this menu. Optional.  //</span>可用于存储与此菜单相关的自定义对象</pre>\n<pre><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">object</span> CustomData { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Menu items (first level).   //</span>菜单项（第一级）</pre>\n<pre><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> List&lt;MenuItemDefinition&gt; Items { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Creates a new </span><span style=\"color: #808080;\">&lt;see cref=\"MenuDefinition\"/&gt;</span><span style=\"color: #008000;\"> object.\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"name\"&gt;</span><span style=\"color: #008000;\">Unique name of the menu</span><span style=\"color: #808080;\">&lt;/param&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"displayName\"&gt;</span><span style=\"color: #008000;\">Display name of the menu</span><span style=\"color: #808080;\">&lt;/param&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"customData\"&gt;</span><span style=\"color: #008000;\">Can be used to store a custom object related to this menu.</span><span style=\"color: #808080;\">&lt;/param&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> MenuDefinition(<span style=\"color: #0000ff;\">string</span> name, ILocalizableString displayName, <span style=\"color: #0000ff;\">object</span> customData = <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)\n        {\n            </span><span style=\"color: #0000ff;\">if</span> (<span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\">.IsNullOrEmpty(name))\n            {\n                </span><span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> ArgumentNullException(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">name</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Menu name can not be empty or null.</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n            }\n\n            </span><span style=\"color: #0000ff;\">if</span> (displayName == <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)\n            {\n                </span><span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> ArgumentNullException(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">displayName</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Display name of the menu can not be null.</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n            }\n\n            Name </span>=<span style=\"color: #000000;\"> name;\n            DisplayName </span>=<span style=\"color: #000000;\"> displayName;\n            CustomData </span>=<span style=\"color: #000000;\"> customData;\n\n            Items </span>= <span style=\"color: #0000ff;\">new</span> List&lt;MenuItemDefinition&gt;<span style=\"color: #000000;\">();\n        }\n\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Adds a </span><span style=\"color: #808080;\">&lt;see cref=\"MenuItemDefinition\"/&gt;</span><span style=\"color: #008000;\"> to </span><span style=\"color: #808080;\">&lt;see cref=\"Items\"/&gt;</span><span style=\"color: #008000;\">.\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"menuItem\"&gt;&lt;see cref=\"MenuItemDefinition\"/&gt;</span><span style=\"color: #008000;\"> to be added</span><span style=\"color: #808080;\">&lt;/param&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;</span><span style=\"color: #008000;\">This </span><span style=\"color: #808080;\">&lt;see cref=\"MenuDefinition\"/&gt;</span><span style=\"color: #008000;\"> object</span><span style=\"color: #808080;\">&lt;/returns&gt;</span>\n        <span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> MenuDefinition AddItem(MenuItemDefinition menuItem)\n        {\n            Items.Add(menuItem);\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">;\n        }\n\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Remove menu item with given name\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"name\"&gt;&lt;/param&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">void</span> RemoveItem(<span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> name)\n        {\n            Items.RemoveAll(m </span>=&gt; m.Name ==<span style=\"color: #000000;\"> name);\n        }\n    }\n}</span></pre>\n</div>\n<p>找到了菜单的类型了，那么我们去找保存的地方就好找了，我们其实可以根据AddItem这个方法去找，去查看哪个地方引用了</p>\n<p>AddItem方法添加的是MenuItemDefinition类型的变量，那我们现在退出abp源码，去我们的AbpLearn项目中去全局搜索一下</p>\n<p><img src=\"/cnblogs/13089690/789895-20200610220532137-1721821016.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>看来是同一个AbpLearnNavigationProvider类里面，双击过去看一下</p>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre>    <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n    <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> This class defines menus for the application.\n    </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> AbpLearnNavigationProvider : NavigationProvider\n    {\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">override</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> SetNavigation(INavigationProviderContext context)\n        {\n            context.Manager.MainMenu\n                .AddItem(\n                    </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                        PageNames.Home,\n                        L(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">HomePage</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                        url: </span><span style=\"color: #800000;\">\"\"</span><span style=\"color: #000000;\">,\n                        icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">fas fa-home</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        requiresAuthentication: </span><span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">\n                    )\n                ).AddItem(\n                    </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                        PageNames.Tenants,\n                        L(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Tenants</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                        url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Tenants</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">fas fa-building</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        permissionDependency: </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> SimplePermissionDependency(PermissionNames.Pages_Tenants)\n                    )\n                ).AddItem(\n                    </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                        PageNames.Users,\n                        L(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Users</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                        url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Users</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">fas fa-users</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        permissionDependency: </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> SimplePermissionDependency(PermissionNames.Pages_Users)\n                    )\n                ).AddItem(\n                    </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                        PageNames.Roles,\n                        L(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Roles</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                        url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Roles</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">fas fa-theater-masks</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        permissionDependency: </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> SimplePermissionDependency(PermissionNames.Pages_Roles)\n                            )\n                )\n                .AddItem(\n                    </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                        PageNames.About,\n                        L(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">About</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                        url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">About</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">fas fa-info-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                    )\n                ).AddItem( </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> Menu items below is just for demonstration!</span>\n                    <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                        </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MultiLevelMenu</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        L(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MultiLevelMenu</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                        icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">fas fa-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                    ).AddItem(\n                        </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                            </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetBoilerplate</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                            </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ASP.NET Boilerplate</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                            icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                        ).AddItem(\n                            </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetBoilerplateHome</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Home</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                                url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">https://aspnetboilerplate.com?ref=abptmpl</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-dot-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                            )\n                        ).AddItem(\n                            </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetBoilerplateTemplates</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Templates</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                                url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">https://aspnetboilerplate.com/Templates?ref=abptmpl</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-dot-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                            )\n                        ).AddItem(\n                            </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetBoilerplateSamples</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Samples</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                                url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">https://aspnetboilerplate.com/Samples?ref=abptmpl</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-dot-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                            )\n                        ).AddItem(\n                            </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetBoilerplateDocuments</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Documents</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                                url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">https://aspnetboilerplate.com/Pages/Documents?ref=abptmpl</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-dot-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                            )\n                        )\n                    ).AddItem(\n                        </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                            </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetZero</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                            </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ASP.NET Zero</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                            icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                        ).AddItem(\n                            </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetZeroHome</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Home</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                                url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">https://aspnetzero.com?ref=abptmpl</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-dot-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                            )\n                        ).AddItem(\n                            </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetZeroFeatures</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Features</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                                url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">https://aspnetzero.com/Features?ref=abptmpl</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-dot-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                            )\n                        ).AddItem(\n                            </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetZeroPricing</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Pricing</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                                url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">https://aspnetzero.com/Pricing?ref=abptmpl#pricing</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-dot-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                            )\n                        ).AddItem(\n                            </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetZeroFaq</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Faq</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                                url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">https://aspnetzero.com/Faq?ref=abptmpl</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-dot-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                            )\n                        ).AddItem(\n                            </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetZeroDocuments</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Documents</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                                url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">https://aspnetzero.com/Documents?ref=abptmpl</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-dot-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                            )\n                        )\n                    )\n                );\n        }\n\n<pre><code>    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;static&lt;/span&gt; ILocalizableString L(&lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; name)\n    &#123;\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; LocalizableString(name, AbpLearnConsts.LocalizationSourceName);\n    &#125;\n&#125;&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<p>好了，现在我们找到菜单定义的地方了，那么我们如何去做动态菜单哪？</p>\n<p>&nbsp;</p>\n<p>首先我们想一下需要什么样的动态菜单？</p>\n<p>1.从数据库加载，不从数据库加载怎么叫动态</p>\n<p>2.可以根据不同Host（管理者）和Tenant（租户）加载不同的菜单，不可能管理者和租户看到的菜单全是一个样子的吧！</p>\n<p>3.可以根据不同的角色或者用户加载不同的菜单（这个就牵扯到权限了，比如谁可以看到什么，不可以看到什么）</p>\n<p>4.权限、按钮最好和菜单相绑定，这样便于控制</p>\n<p>......</p>\n<p>&nbsp;</p>\n<p>根据以上几点，我们可以确定</p>\n<p>1.必须要在用户登录之后加载出来的菜单才能符合条件</p>\n<p>2.菜单需要建一个表（因为abp默认没有单独的菜单表），来进行存放</p>\n<p>3.字段需要包含：菜单名，菜单与权限对应的名称（用于动态权限），菜单对应的Url，Icon，级联父Id，是否启用，排序，租户Id</p>\n<p>4.需要对菜单进行编辑时，因为牵扯到多租户，我们需要对多租户定义一个标准的菜单，在添加租户时，自动将标准菜单复制保存一份到新租户中，所以我们需要对于菜单的进行区分，一般来说Host对应的数据行TenantId（int）都为null，我们可以将标准菜单的TenantId标为-1，已经分配保存的菜单TenantId为当前租户Id，这样便于区分和查询</p>\n<p>&nbsp;</p>\n<p>好了，让我们开始写动态菜单吧</p>","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"spatxos","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/spatxos","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"<p>ps：本文需要先把abp的源码下载一份来下，跟着一起找实现，更容易懂</p>\n<p>在abp中，对于权限和菜单使用静态来管理，菜单的加载是在登陆页面的地方（具体是怎么知道的，浏览器按F12，然后去sources中去找）</p>\n<p><img src=\"/cnblogs/13089690/789895-20200610195839215-1000464738.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>这个/AbpScripts/GetScripts是获取需要初始化的script，源自AbpScriptsController，GetScripts方法包括</p>\n<div class=\"cnblogs_code\">\n<pre>页面加载时的链接是：http://localhost:62114/AbpScripts/GetScripts?v=637274153555501055<br /><br />_multiTenancyScriptManager  //当前租户初始化  对应报文的 abp.multiTenancy<br /><br />_sessionScriptManager //当前session初始化 对应报文的 abp.session</pre>\n<pre><em>_localizationScriptManager  //本地化的初始化 </em>对应报文的 abp.localization</pre>\n<pre><em>_featuresScriptManager  //</em>对应报文的 abp.features</pre>\n<pre><em>_authorizationScriptManager  //权限初始化  </em>对应报文的 abp.auth</pre>\n<pre><em>_navigationScriptManager  //导航菜单初始化  </em>对应报文的 abp.nav</pre>\n<pre><em>_settingScriptManager  //设置初始化  </em>对应报文的 abp.setting</pre>\n<pre><em>_timingScriptManager  //</em>对应报文的 abp.clock</pre>\n<pre><em>_customConfigScriptManager  //</em>对应报文的 abp.custom</pre>\n</div>\n<p>&nbsp;</p>\n<p><img src=\"/cnblogs/13089690/789895-20200610200454121-120495896.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;好了，现在基本算是找到菜单和权限js获取的地方了，一般系统里面，权限是依赖于菜单和菜单按钮的，所以我们先不管权限，先把菜单做成动态加载的</p>\n<p>从await _navigationScriptManager.GetScriptAsync()开始，一路F12，大概流程是</p>\n<div class=\"cnblogs_code\">\n<pre>(接口)INavigationScriptManager=&gt;(接口实现)NavigationScriptManager=&gt;(方法)GetScriptAsync=&gt;(调用)<span style=\"color: #0000ff;\">await</span> _userNavigationManager.GetMenusAsync=&gt;</pre>\n<pre>(接口)IUserNavigationManager=&gt;(接口实现)UserNavigationManager=&gt;(方法)GetMenuAsync=&gt;(调用)navigationManager.Menus=&gt;</pre>\n<pre>(接口)INavigationManager=&gt;(接口实现)NavigationManager=&gt;(非静态构造函数为Menus属性赋值)NavigationManager</pre>\n</div>\n<p>&nbsp;到这里之后基本就到底了，我们看看NavigationManager的内容</p>\n<div class=\"cnblogs_code\">\n<pre>    <span style=\"color: #0000ff;\">internal</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> NavigationManager : INavigationManager, ISingletonDependency\n    {\n        </span><span style=\"color: #0000ff;\">public</span> IDictionary&lt;<span style=\"color: #0000ff;\">string</span>, MenuDefinition&gt; Menus { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }  //属性\n\n<pre><code>    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; MenuDefinition MainMenu //属性\n    &#123;\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;get&lt;/span&gt; &#123; &lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt; Menus[&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;MainMenu&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;]; &#125;\n    &#125;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;readonly&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; IIocResolver _iocResolver;  \n    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;readonly&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; INavigationConfiguration _configuration;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; NavigationManager(IIocResolver iocResolver, INavigationConfiguration configuration) //非静态构造函数\n    &#123;\n        _iocResolver &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; iocResolver;\n        _configuration &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; configuration;\n\n        Menus &lt;/span&gt;= &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; Dictionary&amp;lt;&lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt;, MenuDefinition&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;\n                &#123;\n                    &#123;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;MainMenu&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; MenuDefinition(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;MainMenu&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; LocalizableString(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;MainMenu&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;, AbpConsts.LocalizationSourceName))&#125;\n                &#125;;\n    &#125;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; Initialize()  //初始化方法\n    &#123;\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; context = &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; NavigationProviderContext(&lt;span style=&quot;color: #0000ff;&quot;&gt;this&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;foreach&lt;/span&gt; (&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; providerType &lt;span style=&quot;color: #0000ff;&quot;&gt;in&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; _configuration.Providers)\n        &#123;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;using&lt;/span&gt; (&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; provider = _iocResolver.ResolveAsDisposable&amp;lt;NavigationProvider&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;(providerType))\n            &#123;\n                provider.Object.SetNavigation(context);  //中式英语翻译一下，应该是设置导航\n            &#125;\n        &#125;\n    &#125;\n&#125;&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<p>这个类里面就只有属性、需要注入的接口声明、非静态构造函数、初始化方法，我们到这里需要关注的是Menus这个属性，这个属性似乎将会包含我们需要生成的菜单内容</p>\n<div class=\"cnblogs_code\">\n<pre>Menus = <span style=\"color: #0000ff;\">new</span> Dictionary&lt;<span style=\"color: #0000ff;\">string</span>, MenuDefinition&gt;<span style=\"color: #000000;\">\n                    {\n                        {</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MainMenu</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #0000ff;\">new</span> MenuDefinition(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MainMenu</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #ff0000;\">new LocalizableString(\"MainMenu\"</span><span style=\"color: #000000;\"><span style=\"color: #ff0000;\">, AbpConsts.LocalizationSourceName)</span>)}\n                    };</span></pre>\n</div>\n<p>这里是对Menus的赋值，实例化了一个Dictionary，前面的不用看，主要是看标红的这句话，从new LocalizableString(\"MainMenu\", AbpConsts.LocalizationSourceName)里面获取到值</p>\n<p>好了现在基本找到地方了，我们不知道LocalizableString是什么意思，但是我们可以百度一波</p>\n<div class=\"cnblogs_code\">\n<pre>ILocalizableString/LocalizableString:封装需要被本地化的string的信息，并提供Localize方法（调用ILocalizationManager的GetString方法）返回本地化的string. SourceName指定其从那个本地化资源读取本地化文本。<br /><br /></pre>\n<p>&nbsp; LocalizableString(\"Questions\", \"\")&nbsp;如果本地找不到资源,会报300</p>\n</div>\n<p>大概的意思是通过new LocalizableString，我们可以在本地化来源为AbpConsts.LocalizationSourceName的string里面寻找到Key为MainMenu的value（理解不对请喷）</p>\n<p>&nbsp;</p>\n<p>现在需要去找到那个地方对MainMenu进行了本地化操作，一般来说这个事情都是在程序加载的时候进行的，先对MainMenu进行读取，保存到本地，然后在<em>_navigationScriptManager读取，传输给前台</em></p>\n<p><em>似乎不好找了，但是我们发现有一个类型MenuDefinition，F12一下，可以发现宝藏</em></p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #0000ff;\">namespace</span><span style=\"color: #000000;\"> Abp.Application.Navigation\n{\n    </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n    <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Represents a navigation menu for an application.  //</span>表示应用程序的导航菜单</pre>\n<pre><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> MenuDefinition : IHasMenuItemDefinitions\n    {\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Unique name of the menu in the application. Required.  //应用程序中菜单的唯一名称。&nbsp;必须\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> Name { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n\n<pre><code>    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Display name of the menu. Required.  //&lt;/span&gt;菜单显示名称 必须&lt;/pre&gt;\n</code></pre>\n<pre><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> ILocalizableString DisplayName { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Can be used to store a custom object related to this menu. Optional.  //</span>可用于存储与此菜单相关的自定义对象</pre>\n<pre><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">object</span> CustomData { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Menu items (first level).   //</span>菜单项（第一级）</pre>\n<pre><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> List&lt;MenuItemDefinition&gt; Items { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Creates a new </span><span style=\"color: #808080;\">&lt;see cref=\"MenuDefinition\"/&gt;</span><span style=\"color: #008000;\"> object.\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"name\"&gt;</span><span style=\"color: #008000;\">Unique name of the menu</span><span style=\"color: #808080;\">&lt;/param&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"displayName\"&gt;</span><span style=\"color: #008000;\">Display name of the menu</span><span style=\"color: #808080;\">&lt;/param&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"customData\"&gt;</span><span style=\"color: #008000;\">Can be used to store a custom object related to this menu.</span><span style=\"color: #808080;\">&lt;/param&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> MenuDefinition(<span style=\"color: #0000ff;\">string</span> name, ILocalizableString displayName, <span style=\"color: #0000ff;\">object</span> customData = <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)\n        {\n            </span><span style=\"color: #0000ff;\">if</span> (<span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\">.IsNullOrEmpty(name))\n            {\n                </span><span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> ArgumentNullException(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">name</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Menu name can not be empty or null.</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n            }\n\n            </span><span style=\"color: #0000ff;\">if</span> (displayName == <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)\n            {\n                </span><span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> ArgumentNullException(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">displayName</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Display name of the menu can not be null.</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n            }\n\n            Name </span>=<span style=\"color: #000000;\"> name;\n            DisplayName </span>=<span style=\"color: #000000;\"> displayName;\n            CustomData </span>=<span style=\"color: #000000;\"> customData;\n\n            Items </span>= <span style=\"color: #0000ff;\">new</span> List&lt;MenuItemDefinition&gt;<span style=\"color: #000000;\">();\n        }\n\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Adds a </span><span style=\"color: #808080;\">&lt;see cref=\"MenuItemDefinition\"/&gt;</span><span style=\"color: #008000;\"> to </span><span style=\"color: #808080;\">&lt;see cref=\"Items\"/&gt;</span><span style=\"color: #008000;\">.\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"menuItem\"&gt;&lt;see cref=\"MenuItemDefinition\"/&gt;</span><span style=\"color: #008000;\"> to be added</span><span style=\"color: #808080;\">&lt;/param&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;</span><span style=\"color: #008000;\">This </span><span style=\"color: #808080;\">&lt;see cref=\"MenuDefinition\"/&gt;</span><span style=\"color: #008000;\"> object</span><span style=\"color: #808080;\">&lt;/returns&gt;</span>\n        <span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> MenuDefinition AddItem(MenuItemDefinition menuItem)\n        {\n            Items.Add(menuItem);\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">;\n        }\n\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Remove menu item with given name\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"name\"&gt;&lt;/param&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">void</span> RemoveItem(<span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> name)\n        {\n            Items.RemoveAll(m </span>=&gt; m.Name ==<span style=\"color: #000000;\"> name);\n        }\n    }\n}</span></pre>\n</div>\n<p>找到了菜单的类型了，那么我们去找保存的地方就好找了，我们其实可以根据AddItem这个方法去找，去查看哪个地方引用了</p>\n<p>AddItem方法添加的是MenuItemDefinition类型的变量，那我们现在退出abp源码，去我们的AbpLearn项目中去全局搜索一下</p>\n<p><img src=\"/cnblogs/13089690/789895-20200610220532137-1721821016.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>看来是同一个AbpLearnNavigationProvider类里面，双击过去看一下</p>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre>    <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n    <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> This class defines menus for the application.\n    </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> AbpLearnNavigationProvider : NavigationProvider\n    {\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">override</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> SetNavigation(INavigationProviderContext context)\n        {\n            context.Manager.MainMenu\n                .AddItem(\n                    </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                        PageNames.Home,\n                        L(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">HomePage</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                        url: </span><span style=\"color: #800000;\">\"\"</span><span style=\"color: #000000;\">,\n                        icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">fas fa-home</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        requiresAuthentication: </span><span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">\n                    )\n                ).AddItem(\n                    </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                        PageNames.Tenants,\n                        L(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Tenants</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                        url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Tenants</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">fas fa-building</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        permissionDependency: </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> SimplePermissionDependency(PermissionNames.Pages_Tenants)\n                    )\n                ).AddItem(\n                    </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                        PageNames.Users,\n                        L(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Users</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                        url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Users</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">fas fa-users</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        permissionDependency: </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> SimplePermissionDependency(PermissionNames.Pages_Users)\n                    )\n                ).AddItem(\n                    </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                        PageNames.Roles,\n                        L(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Roles</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                        url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Roles</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">fas fa-theater-masks</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        permissionDependency: </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> SimplePermissionDependency(PermissionNames.Pages_Roles)\n                            )\n                )\n                .AddItem(\n                    </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                        PageNames.About,\n                        L(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">About</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                        url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">About</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">fas fa-info-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                    )\n                ).AddItem( </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> Menu items below is just for demonstration!</span>\n                    <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                        </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MultiLevelMenu</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        L(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MultiLevelMenu</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                        icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">fas fa-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                    ).AddItem(\n                        </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                            </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetBoilerplate</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                            </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ASP.NET Boilerplate</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                            icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                        ).AddItem(\n                            </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetBoilerplateHome</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Home</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                                url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">https://aspnetboilerplate.com?ref=abptmpl</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-dot-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                            )\n                        ).AddItem(\n                            </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetBoilerplateTemplates</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Templates</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                                url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">https://aspnetboilerplate.com/Templates?ref=abptmpl</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-dot-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                            )\n                        ).AddItem(\n                            </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetBoilerplateSamples</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Samples</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                                url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">https://aspnetboilerplate.com/Samples?ref=abptmpl</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-dot-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                            )\n                        ).AddItem(\n                            </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetBoilerplateDocuments</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Documents</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                                url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">https://aspnetboilerplate.com/Pages/Documents?ref=abptmpl</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-dot-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                            )\n                        )\n                    ).AddItem(\n                        </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                            </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetZero</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                            </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ASP.NET Zero</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                            icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                        ).AddItem(\n                            </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetZeroHome</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Home</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                                url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">https://aspnetzero.com?ref=abptmpl</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-dot-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                            )\n                        ).AddItem(\n                            </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetZeroFeatures</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Features</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                                url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">https://aspnetzero.com/Features?ref=abptmpl</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-dot-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                            )\n                        ).AddItem(\n                            </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetZeroPricing</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Pricing</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                                url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">https://aspnetzero.com/Pricing?ref=abptmpl#pricing</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-dot-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                            )\n                        ).AddItem(\n                            </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetZeroFaq</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Faq</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                                url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">https://aspnetzero.com/Faq?ref=abptmpl</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-dot-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                            )\n                        ).AddItem(\n                            </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> MenuItemDefinition(\n                                </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AspNetZeroDocuments</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                </span><span style=\"color: #0000ff;\">new</span> FixedLocalizableString(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Documents</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">),\n                                url: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">https://aspnetzero.com/Documents?ref=abptmpl</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                                icon: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">far fa-dot-circle</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n                            )\n                        )\n                    )\n                );\n        }\n\n<pre><code>    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;private&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;static&lt;/span&gt; ILocalizableString L(&lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; name)\n    &#123;\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; LocalizableString(name, AbpLearnConsts.LocalizationSourceName);\n    &#125;\n&#125;&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<p>好了，现在我们找到菜单定义的地方了，那么我们如何去做动态菜单哪？</p>\n<p>&nbsp;</p>\n<p>首先我们想一下需要什么样的动态菜单？</p>\n<p>1.从数据库加载，不从数据库加载怎么叫动态</p>\n<p>2.可以根据不同Host（管理者）和Tenant（租户）加载不同的菜单，不可能管理者和租户看到的菜单全是一个样子的吧！</p>\n<p>3.可以根据不同的角色或者用户加载不同的菜单（这个就牵扯到权限了，比如谁可以看到什么，不可以看到什么）</p>\n<p>4.权限、按钮最好和菜单相绑定，这样便于控制</p>\n<p>......</p>\n<p>&nbsp;</p>\n<p>根据以上几点，我们可以确定</p>\n<p>1.必须要在用户登录之后加载出来的菜单才能符合条件</p>\n<p>2.菜单需要建一个表（因为abp默认没有单独的菜单表），来进行存放</p>\n<p>3.字段需要包含：菜单名，菜单与权限对应的名称（用于动态权限），菜单对应的Url，Icon，级联父Id，是否启用，排序，租户Id</p>\n<p>4.需要对菜单进行编辑时，因为牵扯到多租户，我们需要对多租户定义一个标准的菜单，在添加租户时，自动将标准菜单复制保存一份到新租户中，所以我们需要对于菜单的进行区分，一般来说Host对应的数据行TenantId（int）都为null，我们可以将标准菜单的TenantId标为-1，已经分配保存的菜单TenantId为当前租户Id，这样便于区分和查询</p>\n<p>&nbsp;</p>\n<p>好了，让我们开始写动态菜单吧</p>"},{"title":".net core3.1 abp学习开始（一）","date":"2020-06-09T14:11:00.000Z","author":"wpzblog","_content":"<p>vs版本 2019，链接数据库使用Navicat，数据库MySql</p>\n<p>&nbsp;</p>\n<p>abp的官网：<a href=\"https://aspnetboilerplate.com/\">https://aspnetboilerplate.com/</a>，我们去Download这里下载一个模板，需要选好Target Version、输入项目名字，我这里使用abp的mvc版本、项目名为AbpLearn下载一份</p>\n<p>当前下载下来是5.6版本</p>\n<p><img src=\"/cnblogs/13081247/789895-20200609201430814-1116404017.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;解压后</p>\n<p><img src=\"/cnblogs/13081247/789895-20200609201521232-1545417003.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;abp的sln在aspnet-core文件夹下</p>\n<p>打开文件夹，双击打开sln，第一次加载的时候可能有点慢，请耐心等待nuget包自动加载完毕</p>\n<p><img src=\"/cnblogs/13081247/789895-20200609201648005-480300466.png\" alt=\"\" loading=\"lazy\" /></p>\n<div class=\"cnblogs_code\">\n<pre>AbpLearn.Application：应用层，主要包括定义和前台进行交互的接口层，调用领域层中对应的接口，默认包括:验证、配置、多租户、角色、用户、Session的一些操作，是整个Web API对外部提供调用的核心接口</pre>\n<pre>AbpLearn.Core：领域层，对现实业务进行抽象，通过调用ORM层的提供的接口来对当前的User、Role、Tenant等一系列的管理操作，并对外提供统一的Manager接口，从而供应用层进行相关的操作，另外还提供了诸如验证、配置、Feature、本地化等等一些列基础接口。<br /><br />AbpLearn.EntityFrameworkCore：ORM层，该层顾名思义是使用EntityFrameworkCore来和SQL Server数据库进行交互的核心逻辑，包括一些常规的各种CRUD操作，以及通过Model First模式创建数据库，为数据库提供种子数据等一系列操作。</pre>\n<pre>AbpLearn.Migrator：提供基于控制台的数据库迁移工具</pre>\n<pre>AbpLearn<em id=\"__mceDel\">.Web.Core：这个部分主要是另外一种WebAPI的访问方式，和应用层这种直接的映射的方式不同，在当前项目中为了更好地体现REST 风格的API ，我们会在我们的类中继承自AbpController这个基类，然后在当前的Controller类中通过[Route(\"api/[controller]/[action]\")]这种方式来进行映射关系，这种风格更加符合REST的风格要求，在后面实际的项目中也会尽可能的采用这种方式。</em></pre>\n<pre><em id=\"__mceDel\">AbpLearn</em><em id=\"__mceDel\">.Web.Host：Swagger UI 集成Web API文档工具</em></pre>\n<p>　<em id=\"__mceDel\"><em id=\"__mceDel\">AbpLearn</em><em id=\"__mceDel\">.Web.Mvc：标准的Asp.Net Core MVC 项目，完整的前后端实现，这一部分将在后续进行一系列的分析和解读。</em></em></p>\n<pre><em id=\"__mceDel\">引用<a href=\"https://www.cnblogs.com/seekdream/p/9249568.html\">https://www.cnblogs.com/seekdream/p/9249568.html</a></em></pre>\n</div>\n<p>&nbsp;</p>\n<p>abp默认使用EF作为orm，想要添加数据库的表，需要先添加数据库和项目中的连接字符串，然后用update-database来生成，先不纠结update-database，按照流程来，在数据库服务器上添加一个空库，比如abplearn，</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;接下来就是修改数据库链接字符串了，</p>\n<p>全局搜索&ldquo;ConnectionStrings&rdquo;，</p>\n<p><img src=\"/cnblogs/13081247/789895-20200609213336194-886524168.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>找到有类似</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Default</span><span style=\"color: #800000;\">\"</span>: <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Server=localhost; Database=AbpLearnDb; Trusted_Connection=True;</span><span style=\"color: #800000;\">\"</span></pre>\n</div>\n<p>的地方，将ConnectionStrings的Server修改正确（数据库链接字符串怎么写请自行百度）</p>\n<p>我这里选用mysql作为数据库</p>\n<div class=\"cnblogs_code\">\n<pre>链接字符串为： <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Default</span><span style=\"color: #800000;\">\"</span>: <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">server=192.168.149.28;port=3306;database=abplearn;user=root;password=testpassword;CharSet=utf8;</span><span style=\"color: #800000;\">\"<br /></span></pre>\n</div>\n<p>数据库链接字符串设置好</p>\n<div class=\"cnblogs_code\">\n<pre>如果是mysql，需要将*.EntityFrameworkCore中原本的sqlserver这个nuget包卸载<br />然后搜索添加Pomelo.EntityFrameworkCore.MySql包，再将*.EntityFrameworkCore项目/EntityFrameworkCore/AbpLearnDbContextConfigurer.cs中的builder.UseSqlServer修改为builder.UseMySql</pre>\n</div>\n<p>将Migrations下面的文件全部删除掉，将*.EntityFrameworkCore设置为启动项目，然后在vs的头部找到 视图/其他窗口/程序包管理控制台，打开这个控制台大概出出现下图</p>\n<p><img src=\"/cnblogs/13081247/789895-20200609212654759-830200327.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;默认项目最好也设置为*.EntityFrameworkCore，在PM&gt;后依次执行</p>\n<div class=\"cnblogs_code\">\n<pre>Add-Migration [name] //这个name随便命名即可</pre>\n</div>\n<p>如我执行Add-Migration newinit后，在Migrations文件夹下生成了</p>\n<p><img src=\"/cnblogs/13081247/789895-20200609212852714-221170698.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;其中20200608140416_newinit（文件名是根据生成时间的，下划线前面会不同）文件大概是这样（如果用到的是mysql，但是生成的newinit文件中是SqlServer:ValueGenerationStrategy和SqlServerValueGenerationStrategy，则需要手动批量替换下为MySql:ValueGenerationStrategy和MySqlValueGenerationStrategy）</p>\n<p><img src=\"/cnblogs/13081247/789895-20200609213009479-1523421599.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>然后在PM执行</p>\n<div class=\"cnblogs_code\">\n<pre>Update-Database  //如果数据库链接字符串都正确，将会在数据库中生成很多表</pre>\n</div>\n<p><img src=\"/cnblogs/13081247/789895-20200609213136622-1683985688.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;各个表的定义和字段意思请查看<a href=\"https://blog.csdn.net/mzl87/article/details/105256180/\">https://blog.csdn.net/mzl87/article/details/105256180/</a>&nbsp;，或查看博客园防丢链接<a href=\"https://www.cnblogs.com/wangpengzong/diary/2020/06/09/13081234.html\">https://www.cnblogs.com/wangpengzong/diary/2020/06/09/13081234.html</a></p>\n<p>&nbsp;</p>\n<p>此时，数据库中没有数据，我们运行一下项目，项目将执行*.EntityFrameworkCore项目/EntityFrameworkCore/Seed/SeedHelper.cs的SeedHostDb方法，生成默认的Host和一个默认的租户Default，并将对应Roles(角色)、Users(用户)、Permissions(权限)及其他表数据</p>\n<p>但是此时，在浏览器中的样式会出现问题，这个是因为我们没有对abp的js和css文件进行初始化，初始化的地方在<span style=\"background-color: #ffffff;\">libman.json，右击libman.json，点击&ldquo;还原客户端库&rdquo;后等待较长时间，vs将会从网上对引用的js和css下载下来放到对应文件夹下</span></p>\n<p>还原成功后，再去浏览下mvc项目，现在就可以看到完整版的abp了</p>\n<p><img src=\"/cnblogs/13081247/789895-20200609214928185-1737504330.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>明天开始分析并开始做从数据库加载的动态菜单、动态权限</p>","source":"_posts/cnblogs/13081247.md","raw":"---\ntitle: .net core3.1 abp学习开始（一）\ndate: 2020-06-09T22:11:00\nauthor: wpzblog\ntags: [\"abp\",\"netcore\"]\n---\n<p>vs版本 2019，链接数据库使用Navicat，数据库MySql</p>\n<p>&nbsp;</p>\n<p>abp的官网：<a href=\"https://aspnetboilerplate.com/\">https://aspnetboilerplate.com/</a>，我们去Download这里下载一个模板，需要选好Target Version、输入项目名字，我这里使用abp的mvc版本、项目名为AbpLearn下载一份</p>\n<p>当前下载下来是5.6版本</p>\n<p><img src=\"/cnblogs/13081247/789895-20200609201430814-1116404017.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;解压后</p>\n<p><img src=\"/cnblogs/13081247/789895-20200609201521232-1545417003.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;abp的sln在aspnet-core文件夹下</p>\n<p>打开文件夹，双击打开sln，第一次加载的时候可能有点慢，请耐心等待nuget包自动加载完毕</p>\n<p><img src=\"/cnblogs/13081247/789895-20200609201648005-480300466.png\" alt=\"\" loading=\"lazy\" /></p>\n<div class=\"cnblogs_code\">\n<pre>AbpLearn.Application：应用层，主要包括定义和前台进行交互的接口层，调用领域层中对应的接口，默认包括:验证、配置、多租户、角色、用户、Session的一些操作，是整个Web API对外部提供调用的核心接口</pre>\n<pre>AbpLearn.Core：领域层，对现实业务进行抽象，通过调用ORM层的提供的接口来对当前的User、Role、Tenant等一系列的管理操作，并对外提供统一的Manager接口，从而供应用层进行相关的操作，另外还提供了诸如验证、配置、Feature、本地化等等一些列基础接口。<br /><br />AbpLearn.EntityFrameworkCore：ORM层，该层顾名思义是使用EntityFrameworkCore来和SQL Server数据库进行交互的核心逻辑，包括一些常规的各种CRUD操作，以及通过Model First模式创建数据库，为数据库提供种子数据等一系列操作。</pre>\n<pre>AbpLearn.Migrator：提供基于控制台的数据库迁移工具</pre>\n<pre>AbpLearn<em id=\"__mceDel\">.Web.Core：这个部分主要是另外一种WebAPI的访问方式，和应用层这种直接的映射的方式不同，在当前项目中为了更好地体现REST 风格的API ，我们会在我们的类中继承自AbpController这个基类，然后在当前的Controller类中通过[Route(\"api/[controller]/[action]\")]这种方式来进行映射关系，这种风格更加符合REST的风格要求，在后面实际的项目中也会尽可能的采用这种方式。</em></pre>\n<pre><em id=\"__mceDel\">AbpLearn</em><em id=\"__mceDel\">.Web.Host：Swagger UI 集成Web API文档工具</em></pre>\n<p>　<em id=\"__mceDel\"><em id=\"__mceDel\">AbpLearn</em><em id=\"__mceDel\">.Web.Mvc：标准的Asp.Net Core MVC 项目，完整的前后端实现，这一部分将在后续进行一系列的分析和解读。</em></em></p>\n<pre><em id=\"__mceDel\">引用<a href=\"https://www.cnblogs.com/seekdream/p/9249568.html\">https://www.cnblogs.com/seekdream/p/9249568.html</a></em></pre>\n</div>\n<p>&nbsp;</p>\n<p>abp默认使用EF作为orm，想要添加数据库的表，需要先添加数据库和项目中的连接字符串，然后用update-database来生成，先不纠结update-database，按照流程来，在数据库服务器上添加一个空库，比如abplearn，</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;接下来就是修改数据库链接字符串了，</p>\n<p>全局搜索&ldquo;ConnectionStrings&rdquo;，</p>\n<p><img src=\"/cnblogs/13081247/789895-20200609213336194-886524168.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>找到有类似</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Default</span><span style=\"color: #800000;\">\"</span>: <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Server=localhost; Database=AbpLearnDb; Trusted_Connection=True;</span><span style=\"color: #800000;\">\"</span></pre>\n</div>\n<p>的地方，将ConnectionStrings的Server修改正确（数据库链接字符串怎么写请自行百度）</p>\n<p>我这里选用mysql作为数据库</p>\n<div class=\"cnblogs_code\">\n<pre>链接字符串为： <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Default</span><span style=\"color: #800000;\">\"</span>: <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">server=192.168.149.28;port=3306;database=abplearn;user=root;password=testpassword;CharSet=utf8;</span><span style=\"color: #800000;\">\"<br /></span></pre>\n</div>\n<p>数据库链接字符串设置好</p>\n<div class=\"cnblogs_code\">\n<pre>如果是mysql，需要将*.EntityFrameworkCore中原本的sqlserver这个nuget包卸载<br />然后搜索添加Pomelo.EntityFrameworkCore.MySql包，再将*.EntityFrameworkCore项目/EntityFrameworkCore/AbpLearnDbContextConfigurer.cs中的builder.UseSqlServer修改为builder.UseMySql</pre>\n</div>\n<p>将Migrations下面的文件全部删除掉，将*.EntityFrameworkCore设置为启动项目，然后在vs的头部找到 视图/其他窗口/程序包管理控制台，打开这个控制台大概出出现下图</p>\n<p><img src=\"/cnblogs/13081247/789895-20200609212654759-830200327.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;默认项目最好也设置为*.EntityFrameworkCore，在PM&gt;后依次执行</p>\n<div class=\"cnblogs_code\">\n<pre>Add-Migration [name] //这个name随便命名即可</pre>\n</div>\n<p>如我执行Add-Migration newinit后，在Migrations文件夹下生成了</p>\n<p><img src=\"/cnblogs/13081247/789895-20200609212852714-221170698.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;其中20200608140416_newinit（文件名是根据生成时间的，下划线前面会不同）文件大概是这样（如果用到的是mysql，但是生成的newinit文件中是SqlServer:ValueGenerationStrategy和SqlServerValueGenerationStrategy，则需要手动批量替换下为MySql:ValueGenerationStrategy和MySqlValueGenerationStrategy）</p>\n<p><img src=\"/cnblogs/13081247/789895-20200609213009479-1523421599.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>然后在PM执行</p>\n<div class=\"cnblogs_code\">\n<pre>Update-Database  //如果数据库链接字符串都正确，将会在数据库中生成很多表</pre>\n</div>\n<p><img src=\"/cnblogs/13081247/789895-20200609213136622-1683985688.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;各个表的定义和字段意思请查看<a href=\"https://blog.csdn.net/mzl87/article/details/105256180/\">https://blog.csdn.net/mzl87/article/details/105256180/</a>&nbsp;，或查看博客园防丢链接<a href=\"https://www.cnblogs.com/wangpengzong/diary/2020/06/09/13081234.html\">https://www.cnblogs.com/wangpengzong/diary/2020/06/09/13081234.html</a></p>\n<p>&nbsp;</p>\n<p>此时，数据库中没有数据，我们运行一下项目，项目将执行*.EntityFrameworkCore项目/EntityFrameworkCore/Seed/SeedHelper.cs的SeedHostDb方法，生成默认的Host和一个默认的租户Default，并将对应Roles(角色)、Users(用户)、Permissions(权限)及其他表数据</p>\n<p>但是此时，在浏览器中的样式会出现问题，这个是因为我们没有对abp的js和css文件进行初始化，初始化的地方在<span style=\"background-color: #ffffff;\">libman.json，右击libman.json，点击&ldquo;还原客户端库&rdquo;后等待较长时间，vs将会从网上对引用的js和css下载下来放到对应文件夹下</span></p>\n<p>还原成功后，再去浏览下mvc项目，现在就可以看到完整版的abp了</p>\n<p><img src=\"/cnblogs/13081247/789895-20200609214928185-1737504330.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>明天开始分析并开始做从数据库加载的动态菜单、动态权限</p>","slug":"cnblogs/13081247","published":1,"updated":"2022-07-10T13:01:13.064Z","_id":"cl5f7is79001cc0un0okx8k7x","comments":1,"layout":"post","photos":[],"link":"","content":"<p>vs版本 2019，链接数据库使用Navicat，数据库MySql</p>\n<p>&nbsp;</p>\n<p>abp的官网：<a href=\"https://aspnetboilerplate.com/\">https://aspnetboilerplate.com/</a>，我们去Download这里下载一个模板，需要选好Target Version、输入项目名字，我这里使用abp的mvc版本、项目名为AbpLearn下载一份</p>\n<p>当前下载下来是5.6版本</p>\n<p><img src=\"/cnblogs/13081247/789895-20200609201430814-1116404017.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;解压后</p>\n<p><img src=\"/cnblogs/13081247/789895-20200609201521232-1545417003.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;abp的sln在aspnet-core文件夹下</p>\n<p>打开文件夹，双击打开sln，第一次加载的时候可能有点慢，请耐心等待nuget包自动加载完毕</p>\n<p><img src=\"/cnblogs/13081247/789895-20200609201648005-480300466.png\" alt=\"\" loading=\"lazy\" /></p>\n<div class=\"cnblogs_code\">\n<pre>AbpLearn.Application：应用层，主要包括定义和前台进行交互的接口层，调用领域层中对应的接口，默认包括:验证、配置、多租户、角色、用户、Session的一些操作，是整个Web API对外部提供调用的核心接口</pre>\n<pre>AbpLearn.Core：领域层，对现实业务进行抽象，通过调用ORM层的提供的接口来对当前的User、Role、Tenant等一系列的管理操作，并对外提供统一的Manager接口，从而供应用层进行相关的操作，另外还提供了诸如验证、配置、Feature、本地化等等一些列基础接口。<br /><br />AbpLearn.EntityFrameworkCore：ORM层，该层顾名思义是使用EntityFrameworkCore来和SQL Server数据库进行交互的核心逻辑，包括一些常规的各种CRUD操作，以及通过Model First模式创建数据库，为数据库提供种子数据等一系列操作。</pre>\n<pre>AbpLearn.Migrator：提供基于控制台的数据库迁移工具</pre>\n<pre>AbpLearn<em id=\"__mceDel\">.Web.Core：这个部分主要是另外一种WebAPI的访问方式，和应用层这种直接的映射的方式不同，在当前项目中为了更好地体现REST 风格的API ，我们会在我们的类中继承自AbpController这个基类，然后在当前的Controller类中通过[Route(\"api/[controller]/[action]\")]这种方式来进行映射关系，这种风格更加符合REST的风格要求，在后面实际的项目中也会尽可能的采用这种方式。</em></pre>\n<pre><em id=\"__mceDel\">AbpLearn</em><em id=\"__mceDel\">.Web.Host：Swagger UI 集成Web API文档工具</em></pre>\n<p>　<em id=\"__mceDel\"><em id=\"__mceDel\">AbpLearn</em><em id=\"__mceDel\">.Web.Mvc：标准的Asp.Net Core MVC 项目，完整的前后端实现，这一部分将在后续进行一系列的分析和解读。</em></em></p>\n<pre><em id=\"__mceDel\">引用<a href=\"https://www.cnblogs.com/seekdream/p/9249568.html\">https://www.cnblogs.com/seekdream/p/9249568.html</a></em></pre>\n</div>\n<p>&nbsp;</p>\n<p>abp默认使用EF作为orm，想要添加数据库的表，需要先添加数据库和项目中的连接字符串，然后用update-database来生成，先不纠结update-database，按照流程来，在数据库服务器上添加一个空库，比如abplearn，</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;接下来就是修改数据库链接字符串了，</p>\n<p>全局搜索&ldquo;ConnectionStrings&rdquo;，</p>\n<p><img src=\"/cnblogs/13081247/789895-20200609213336194-886524168.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>找到有类似</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Default</span><span style=\"color: #800000;\">\"</span>: <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Server=localhost; Database=AbpLearnDb; Trusted_Connection=True;</span><span style=\"color: #800000;\">\"</span></pre>\n</div>\n<p>的地方，将ConnectionStrings的Server修改正确（数据库链接字符串怎么写请自行百度）</p>\n<p>我这里选用mysql作为数据库</p>\n<div class=\"cnblogs_code\">\n<pre>链接字符串为： <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Default</span><span style=\"color: #800000;\">\"</span>: <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">server=192.168.149.28;port=3306;database=abplearn;user=root;password=testpassword;CharSet=utf8;</span><span style=\"color: #800000;\">\"<br /></span></pre>\n</div>\n<p>数据库链接字符串设置好</p>\n<div class=\"cnblogs_code\">\n<pre>如果是mysql，需要将*.EntityFrameworkCore中原本的sqlserver这个nuget包卸载<br />然后搜索添加Pomelo.EntityFrameworkCore.MySql包，再将*.EntityFrameworkCore项目/EntityFrameworkCore/AbpLearnDbContextConfigurer.cs中的builder.UseSqlServer修改为builder.UseMySql</pre>\n</div>\n<p>将Migrations下面的文件全部删除掉，将*.EntityFrameworkCore设置为启动项目，然后在vs的头部找到 视图/其他窗口/程序包管理控制台，打开这个控制台大概出出现下图</p>\n<p><img src=\"/cnblogs/13081247/789895-20200609212654759-830200327.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;默认项目最好也设置为*.EntityFrameworkCore，在PM&gt;后依次执行</p>\n<div class=\"cnblogs_code\">\n<pre>Add-Migration [name] //这个name随便命名即可</pre>\n</div>\n<p>如我执行Add-Migration newinit后，在Migrations文件夹下生成了</p>\n<p><img src=\"/cnblogs/13081247/789895-20200609212852714-221170698.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;其中20200608140416_newinit（文件名是根据生成时间的，下划线前面会不同）文件大概是这样（如果用到的是mysql，但是生成的newinit文件中是SqlServer:ValueGenerationStrategy和SqlServerValueGenerationStrategy，则需要手动批量替换下为MySql:ValueGenerationStrategy和MySqlValueGenerationStrategy）</p>\n<p><img src=\"/cnblogs/13081247/789895-20200609213009479-1523421599.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>然后在PM执行</p>\n<div class=\"cnblogs_code\">\n<pre>Update-Database  //如果数据库链接字符串都正确，将会在数据库中生成很多表</pre>\n</div>\n<p><img src=\"/cnblogs/13081247/789895-20200609213136622-1683985688.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;各个表的定义和字段意思请查看<a href=\"https://blog.csdn.net/mzl87/article/details/105256180/\">https://blog.csdn.net/mzl87/article/details/105256180/</a>&nbsp;，或查看博客园防丢链接<a href=\"https://www.cnblogs.com/wangpengzong/diary/2020/06/09/13081234.html\">https://www.cnblogs.com/wangpengzong/diary/2020/06/09/13081234.html</a></p>\n<p>&nbsp;</p>\n<p>此时，数据库中没有数据，我们运行一下项目，项目将执行*.EntityFrameworkCore项目/EntityFrameworkCore/Seed/SeedHelper.cs的SeedHostDb方法，生成默认的Host和一个默认的租户Default，并将对应Roles(角色)、Users(用户)、Permissions(权限)及其他表数据</p>\n<p>但是此时，在浏览器中的样式会出现问题，这个是因为我们没有对abp的js和css文件进行初始化，初始化的地方在<span style=\"background-color: #ffffff;\">libman.json，右击libman.json，点击&ldquo;还原客户端库&rdquo;后等待较长时间，vs将会从网上对引用的js和css下载下来放到对应文件夹下</span></p>\n<p>还原成功后，再去浏览下mvc项目，现在就可以看到完整版的abp了</p>\n<p><img src=\"/cnblogs/13081247/789895-20200609214928185-1737504330.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>明天开始分析并开始做从数据库加载的动态菜单、动态权限</p>","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"spatxos","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/spatxos","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"<p>vs版本 2019，链接数据库使用Navicat，数据库MySql</p>\n<p>&nbsp;</p>\n<p>abp的官网：<a href=\"https://aspnetboilerplate.com/\">https://aspnetboilerplate.com/</a>，我们去Download这里下载一个模板，需要选好Target Version、输入项目名字，我这里使用abp的mvc版本、项目名为AbpLearn下载一份</p>\n<p>当前下载下来是5.6版本</p>\n<p><img src=\"/cnblogs/13081247/789895-20200609201430814-1116404017.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;解压后</p>\n<p><img src=\"/cnblogs/13081247/789895-20200609201521232-1545417003.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;abp的sln在aspnet-core文件夹下</p>\n<p>打开文件夹，双击打开sln，第一次加载的时候可能有点慢，请耐心等待nuget包自动加载完毕</p>\n<p><img src=\"/cnblogs/13081247/789895-20200609201648005-480300466.png\" alt=\"\" loading=\"lazy\" /></p>\n<div class=\"cnblogs_code\">\n<pre>AbpLearn.Application：应用层，主要包括定义和前台进行交互的接口层，调用领域层中对应的接口，默认包括:验证、配置、多租户、角色、用户、Session的一些操作，是整个Web API对外部提供调用的核心接口</pre>\n<pre>AbpLearn.Core：领域层，对现实业务进行抽象，通过调用ORM层的提供的接口来对当前的User、Role、Tenant等一系列的管理操作，并对外提供统一的Manager接口，从而供应用层进行相关的操作，另外还提供了诸如验证、配置、Feature、本地化等等一些列基础接口。<br /><br />AbpLearn.EntityFrameworkCore：ORM层，该层顾名思义是使用EntityFrameworkCore来和SQL Server数据库进行交互的核心逻辑，包括一些常规的各种CRUD操作，以及通过Model First模式创建数据库，为数据库提供种子数据等一系列操作。</pre>\n<pre>AbpLearn.Migrator：提供基于控制台的数据库迁移工具</pre>\n<pre>AbpLearn<em id=\"__mceDel\">.Web.Core：这个部分主要是另外一种WebAPI的访问方式，和应用层这种直接的映射的方式不同，在当前项目中为了更好地体现REST 风格的API ，我们会在我们的类中继承自AbpController这个基类，然后在当前的Controller类中通过[Route(\"api/[controller]/[action]\")]这种方式来进行映射关系，这种风格更加符合REST的风格要求，在后面实际的项目中也会尽可能的采用这种方式。</em></pre>\n<pre><em id=\"__mceDel\">AbpLearn</em><em id=\"__mceDel\">.Web.Host：Swagger UI 集成Web API文档工具</em></pre>\n<p>　<em id=\"__mceDel\"><em id=\"__mceDel\">AbpLearn</em><em id=\"__mceDel\">.Web.Mvc：标准的Asp.Net Core MVC 项目，完整的前后端实现，这一部分将在后续进行一系列的分析和解读。</em></em></p>\n<pre><em id=\"__mceDel\">引用<a href=\"https://www.cnblogs.com/seekdream/p/9249568.html\">https://www.cnblogs.com/seekdream/p/9249568.html</a></em></pre>\n</div>\n<p>&nbsp;</p>\n<p>abp默认使用EF作为orm，想要添加数据库的表，需要先添加数据库和项目中的连接字符串，然后用update-database来生成，先不纠结update-database，按照流程来，在数据库服务器上添加一个空库，比如abplearn，</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;接下来就是修改数据库链接字符串了，</p>\n<p>全局搜索&ldquo;ConnectionStrings&rdquo;，</p>\n<p><img src=\"/cnblogs/13081247/789895-20200609213336194-886524168.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>找到有类似</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Default</span><span style=\"color: #800000;\">\"</span>: <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Server=localhost; Database=AbpLearnDb; Trusted_Connection=True;</span><span style=\"color: #800000;\">\"</span></pre>\n</div>\n<p>的地方，将ConnectionStrings的Server修改正确（数据库链接字符串怎么写请自行百度）</p>\n<p>我这里选用mysql作为数据库</p>\n<div class=\"cnblogs_code\">\n<pre>链接字符串为： <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Default</span><span style=\"color: #800000;\">\"</span>: <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">server=192.168.149.28;port=3306;database=abplearn;user=root;password=testpassword;CharSet=utf8;</span><span style=\"color: #800000;\">\"<br /></span></pre>\n</div>\n<p>数据库链接字符串设置好</p>\n<div class=\"cnblogs_code\">\n<pre>如果是mysql，需要将*.EntityFrameworkCore中原本的sqlserver这个nuget包卸载<br />然后搜索添加Pomelo.EntityFrameworkCore.MySql包，再将*.EntityFrameworkCore项目/EntityFrameworkCore/AbpLearnDbContextConfigurer.cs中的builder.UseSqlServer修改为builder.UseMySql</pre>\n</div>\n<p>将Migrations下面的文件全部删除掉，将*.EntityFrameworkCore设置为启动项目，然后在vs的头部找到 视图/其他窗口/程序包管理控制台，打开这个控制台大概出出现下图</p>\n<p><img src=\"/cnblogs/13081247/789895-20200609212654759-830200327.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;默认项目最好也设置为*.EntityFrameworkCore，在PM&gt;后依次执行</p>\n<div class=\"cnblogs_code\">\n<pre>Add-Migration [name] //这个name随便命名即可</pre>\n</div>\n<p>如我执行Add-Migration newinit后，在Migrations文件夹下生成了</p>\n<p><img src=\"/cnblogs/13081247/789895-20200609212852714-221170698.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;其中20200608140416_newinit（文件名是根据生成时间的，下划线前面会不同）文件大概是这样（如果用到的是mysql，但是生成的newinit文件中是SqlServer:ValueGenerationStrategy和SqlServerValueGenerationStrategy，则需要手动批量替换下为MySql:ValueGenerationStrategy和MySqlValueGenerationStrategy）</p>\n<p><img src=\"/cnblogs/13081247/789895-20200609213009479-1523421599.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>然后在PM执行</p>\n<div class=\"cnblogs_code\">\n<pre>Update-Database  //如果数据库链接字符串都正确，将会在数据库中生成很多表</pre>\n</div>\n<p><img src=\"/cnblogs/13081247/789895-20200609213136622-1683985688.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;各个表的定义和字段意思请查看<a href=\"https://blog.csdn.net/mzl87/article/details/105256180/\">https://blog.csdn.net/mzl87/article/details/105256180/</a>&nbsp;，或查看博客园防丢链接<a href=\"https://www.cnblogs.com/wangpengzong/diary/2020/06/09/13081234.html\">https://www.cnblogs.com/wangpengzong/diary/2020/06/09/13081234.html</a></p>\n<p>&nbsp;</p>\n<p>此时，数据库中没有数据，我们运行一下项目，项目将执行*.EntityFrameworkCore项目/EntityFrameworkCore/Seed/SeedHelper.cs的SeedHostDb方法，生成默认的Host和一个默认的租户Default，并将对应Roles(角色)、Users(用户)、Permissions(权限)及其他表数据</p>\n<p>但是此时，在浏览器中的样式会出现问题，这个是因为我们没有对abp的js和css文件进行初始化，初始化的地方在<span style=\"background-color: #ffffff;\">libman.json，右击libman.json，点击&ldquo;还原客户端库&rdquo;后等待较长时间，vs将会从网上对引用的js和css下载下来放到对应文件夹下</span></p>\n<p>还原成功后，再去浏览下mvc项目，现在就可以看到完整版的abp了</p>\n<p><img src=\"/cnblogs/13081247/789895-20200609214928185-1737504330.png\" alt=\"\" loading=\"lazy\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>明天开始分析并开始做从数据库加载的动态菜单、动态权限</p>"},{"title":"api.versioning 版本控制 自动识别最高版本和多Area但同名Contoller问题解决办法","date":"2020-06-03T14:02:00.000Z","author":"wpzblog","_content":"<div class=\"cnblogs_code\">\n<pre>Microsoft.AspNetCore.Mvc.Versioning //引入程序集</pre>\n</div>\n<p>.net core 下面api的版本控制作用不需要多说，可以查阅<a href=\"https://www.cnblogs.com/dc20181010/p/11313738.html\">https://www.cnblogs.com/dc20181010/p/11313738.html</a></p>\n<p>普通的版本控制一般是通过链接、header此类方法进行控制，对ApiVersionReader进行设置，例如</p>\n<div class=\"cnblogs_code\">\n<pre>services.AddApiVersioning(o =&gt;<span style=\"color: #000000;\"> {\n                //o.ReportApiVersions </span>= <span style=\"color: #0000ff;\">true</span>;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">返回版本可使用的版本</span>\n                o.ApiVersionReader = ApiVersionReader.Combine(<span style=\"color: #0000ff;\">new</span> HeaderApiVersionReader(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">api-version</span><span style=\"color: #800000;\">\"</span>), <span style=\"color: #0000ff;\">new</span> QueryStringApiVersionReader(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">api-version</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">));//通过</span>Header或QueryString<span>进行传值来判断api的版本<br />                //o.DefaultApiVersion </span>= <span style=\"color: #0000ff;\">new</span> ApiVersion(<span style=\"color: #800080;\">1</span>, <span style=\"color: #800080;\">0</span>);<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">默认版本号</span> <br />       });</pre>\n</div>\n<p>或者使用<a href=\"https://www.cnblogs.com/tdfblog/p/asp-net-core-api-versioning.html\">https://www.cnblogs.com/tdfblog/p/asp-net-core-api-versioning.html</a>这种方式</p>\n<p>这两种方式都需要传递api的版本信息，如果不传递将会报错</p>\n<div class=\"cnblogs_code\">\n<pre>{<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">error</span><span style=\"color: #800000;\">\"</span>:{<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">code</span><span style=\"color: #800000;\">\"</span>:<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ApiVersionUnspecified</span><span style=\"color: #800000;\">\"</span>,<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">message</span><span style=\"color: #800000;\">\"</span>:<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">An API version is required, but was not specified.</span><span style=\"color: #800000;\">\"</span>,<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">innerError</span><span style=\"color: #800000;\">\"</span>:<span style=\"color: #0000ff;\">null</span>}}</pre>\n</div>\n<p>如果我们不想传递api的版本信息时，可以将</p>\n<div class=\"cnblogs_code\">\n<pre>o.AssumeDefaultVersionWhenUnspecified = true; //此选项将用于在没有版本的情况下提供请求<br />o.DefaultApiVersion = <span style=\"color: #0000ff;\">new</span> ApiVersion(<span style=\"color: #800080;\">1</span>, <span style=\"color: #800080;\">0</span>); //设置默认Api版本是1.0</pre>\n</div>\n<p>打开，这个我们每次请求如果不传递版本信息也不会报错了，但我们的请求将会指向1.0版本，那么我想让默认版本指向我写的api里面的最高版本怎么做？</p>\n<p>我们将默认版本修改为最高版本可以吗？</p>\n<p>这里将会出现一个问题，我的api版本可能由于各种各样原因造成最高版本不一致的问题</p>\n<p>所以我们不能采用指定默认版本是最高版本的方法来解决，这个最高版本还必须要是动态的，通过翻阅<a href=\"https://github.com/microsoft/aspnet-api-versioning/wiki/API-Version-Selector#current-implementation-api-selector\">https://github.com/microsoft/aspnet-api-versioning/wiki/API-Version-Selector#current-implementation-api-selector</a>可以得知</p>\n<div class=\"cnblogs_code\">\n<pre>The CurrentImplementationApiVersionSelector selects the maximum API version available which does not have a version status. <br />If no match <span style=\"color: #0000ff;\">is</span> found, it falls back to the configured DefaultApiVersion. For example, <span style=\"color: #0000ff;\">if</span> the versions <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">1.0</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">2.0</span><span style=\"color: #800000;\">\"</span>, and <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">3.0-Alpha</span><span style=\"color: #800000;\">\"</span> are available, <br />then <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">2.0</span><span style=\"color: #800000;\">\"</span> will be selected because it<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">s the highest, implemented or released API version.</span>\n<span style=\"color: #000000;\">\nCurrentImplementationApiVersionSelector选择不具有版本状态的最大可用API版本。 如果找不到匹配项，它将回退到配置的DefaultApiVersion。<br /> 例如，如果提供版本&ldquo; </span><span style=\"color: #800080;\">1.0</span>&rdquo;，&ldquo; <span style=\"color: #800080;\">2.0</span>&rdquo;和&ldquo; <span style=\"color: #800080;\">3.0</span>-Alpha&rdquo;，则将选择&ldquo; <span style=\"color: #800080;\">2.0</span>&rdquo;，因为它是最高，已实施或已发布的API版本。<br /><br /></pre>\n<pre><span class=\"pl-smi\">services.<span class=\"pl-en\">AddApiVersioning(\n    <span class=\"pl-smi\">options <span class=\"pl-k\">=&gt; <span class=\"pl-smi\">options.<span class=\"pl-smi\">ApiVersionSelector <span class=\"pl-k\">=\n        <span class=\"pl-k\">new <span class=\"pl-en\">CurrentImplementationApiVersionSelector( <span class=\"pl-smi\">options ) );</span></span></span></span></span></span></span></span></span></span></pre>\n</div>\n<p>通过这个版本选择器，我们可以将最大版本得出，修改上面services.AddApiVersioning</p>\n<div class=\"cnblogs_code\">\n<pre>services.AddApiVersioning(o =&gt;<span style=\"color: #000000;\"> {\n                o.ReportApiVersions </span>= <span style=\"color: #0000ff;\">true</span>;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">返回版本可使用的版本\n                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">o.ApiVersionReader = new UrlSegmentApiVersionReader();\n                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">o.ApiVersionReader = ApiVersionReader.Combine(new HeaderApiVersionReader(\"api-version\"), new QueryStringApiVersionReader(\"api-version\"));\n                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">o.ApiVersionReader = ApiVersionReader.Combine(new QueryStringApiVersionReader(\"api-version\"));</span>\n                o.ApiVersionReader = ApiVersionReader.Combine(<span style=\"color: #0000ff;\">new</span> HeaderApiVersionReader(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">api-version</span><span style=\"color: #800000;\">\"</span>));<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">版本号以什么形式，什么字段传递</span>\n                o.AssumeDefaultVersionWhenUnspecified = <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;//此选项将用于在没有版本的情况下提供请求\n                o.DefaultApiVersion </span>= <span style=\"color: #0000ff;\">new</span> ApiVersion(<span style=\"color: #800080;\">1</span>, <span style=\"color: #800080;\">0</span>);<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">默认版本号</span>\n                o.ApiVersionSelector = <span style=\"color: #0000ff;\">new</span> CurrentImplementationApiVersionSelector(o);<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">默认以当前最高版本进行访问</span>\n            });</pre>\n</div>\n<p>举个栗子</p>\n<div class=\"cnblogs_code\" onclick=\"cnblogs_code_show('f45c43c2-8f6c-4b66-97f6-bc7f3c5a853d')\"><img id=\"code_img_closed_f45c43c2-8f6c-4b66-97f6-bc7f3c5a853d\" class=\"code_img_closed\" src=\"http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif\" alt=\"\" /><img id=\"code_img_opened_f45c43c2-8f6c-4b66-97f6-bc7f3c5a853d\" class=\"code_img_opened\" style=\"display: none;\" onclick=\"cnblogs_code_hide('f45c43c2-8f6c-4b66-97f6-bc7f3c5a853d',event)\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\n<div id=\"cnblogs_code_open_f45c43c2-8f6c-4b66-97f6-bc7f3c5a853d\" class=\"cnblogs_code_hide\">\n<pre><span style=\"color: #0000ff;\">namespace</span><span style=\"color: #000000;\"> Default.v1.Controllers\n{\n    [ApiVersion(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">1.0</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [Route(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">[controller]/[action]</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [ApiController]\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> HomeController : Controller, IBaseController\n    {\n        </span><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">readonly</span> ILogger&lt;HomeController&gt;<span style=\"color: #000000;\"> _logger;\n\n        </span><span style=\"color: #0000ff;\">public</span> HomeController (ILogger&lt;HomeController&gt;<span style=\"color: #000000;\"> logger)\n        {\n            _logger </span>=<span style=\"color: #000000;\"> logger;\n        }\n\n        </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> JsonResult GetJson()\n        {\n            </span><span style=\"color: #0000ff;\">return</span> Json(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Home 1.0</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n        }\n}</span></pre>\n</div>\n<span class=\"cnblogs_code_collapse\">Default.v1.Controllers.Home</span></div>\n<div class=\"cnblogs_code\" onclick=\"cnblogs_code_show('5272f5a4-1e24-4413-bf10-5385ce07030b')\"><img id=\"code_img_closed_5272f5a4-1e24-4413-bf10-5385ce07030b\" class=\"code_img_closed\" src=\"http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif\" alt=\"\" /><img id=\"code_img_opened_5272f5a4-1e24-4413-bf10-5385ce07030b\" class=\"code_img_opened\" style=\"display: none;\" onclick=\"cnblogs_code_hide('5272f5a4-1e24-4413-bf10-5385ce07030b',event)\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\n<div id=\"cnblogs_code_open_5272f5a4-1e24-4413-bf10-5385ce07030b\" class=\"cnblogs_code_hide\">\n<pre><span style=\"color: #0000ff;\">namespace</span><span style=\"color: #000000;\"> Default.v2.Controllers\n{\n    [ApiVersion(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">2.0</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [Route(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">[controller]/[action]</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [ApiController]\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> HomeController : Controller, IBaseController\n    {\n        </span><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">readonly</span> ILogger&lt;HomeController&gt;<span style=\"color: #000000;\"> _logger;\n\n        </span><span style=\"color: #0000ff;\">public</span> HomeController (ILogger&lt;HomeController&gt;<span style=\"color: #000000;\"> logger)\n        {\n            _logger </span>=<span style=\"color: #000000;\"> logger;\n        }\n\n        </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> JsonResult GetJson()\n        {\n            </span><span style=\"color: #0000ff;\">return</span> Json(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Home 2.0</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n        }\n}</span></pre>\n</div>\n<span class=\"cnblogs_code_collapse\">Default.v2.Controllers.Home</span></div>\n<div class=\"cnblogs_code\" onclick=\"cnblogs_code_show('5b846224-e3c0-40ba-80b8-37be0968cea5')\"><img id=\"code_img_closed_5b846224-e3c0-40ba-80b8-37be0968cea5\" class=\"code_img_closed\" src=\"http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif\" alt=\"\" /><img id=\"code_img_opened_5b846224-e3c0-40ba-80b8-37be0968cea5\" class=\"code_img_opened\" style=\"display: none;\" onclick=\"cnblogs_code_hide('5b846224-e3c0-40ba-80b8-37be0968cea5',event)\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\n<div id=\"cnblogs_code_open_5b846224-e3c0-40ba-80b8-37be0968cea5\" class=\"cnblogs_code_hide\">\n<pre><span style=\"color: #0000ff;\">namespace</span><span style=\"color: #000000;\"> Default.v1.Controllers\n{\n    [ApiVersion(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">1.0</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [Route(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">[controller]/[action]</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [ApiController]\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> TestController : Controller, IBaseController\n    {\n        </span><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">readonly</span> ILogger&lt;HomeController&gt;<span style=\"color: #000000;\"> _logger;\n\n        </span><span style=\"color: #0000ff;\">public</span> TestController (ILogger&lt;HomeController&gt;<span style=\"color: #000000;\"> logger)\n        {\n            _logger </span>=<span style=\"color: #000000;\"> logger;\n        }\n\n        </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> JsonResult GetJson()\n        {\n            </span><span style=\"color: #0000ff;\">return</span> Json(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Test 1.0</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n        }\n}</span></pre>\n</div>\n<span class=\"cnblogs_code_collapse\">Default.v1.Controllers.Test</span></div>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;我们在</p>\n<p>请求/home/getjson 时返回&ldquo;Home 2.0&rdquo;</p>\n<p>请求/test/getjson 时返回&ldquo;Test 1.0&rdquo;</p>\n<p>这样就可以动态的请求最高版本了</p>\n<p>&nbsp;</p>\n<p>但是还是会有问题的，比如，在我添加了Area和User区域下的HomeController，且User区域下的HomeController增加了1.0和3.0版本之后，神奇的一幕出现了</p>\n<p>我的HomeController进不去了。。。</p>\n<div class=\"cnblogs_code\">\n<pre>{<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">error</span><span style=\"color: #800000;\">\"</span>:{<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">code</span><span style=\"color: #800000;\">\"</span>:<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">UnsupportedApiVersion</span><span style=\"color: #800000;\">\"</span>,<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">message</span><span style=\"color: #800000;\">\"</span>:<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">The HTTP resource that matches the request URI 'https://localhost:44311/home/getjson' is not supported.</span><span style=\"color: #800000;\">\"</span>,<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">innerError</span><span style=\"color: #800000;\">\"</span>:<span style=\"color: #0000ff;\">null</span>}}</pre>\n</div>\n<p>这个时候去google都查不到原因。。。</p>\n<p>查看api-supported-versions，返回的是1.0,2.0,3.0。。。我的api版本控制被污染了3.0版本从哪里来的哪？第一反应是从User区域来的</p>\n<p>我现在在User区域下添加一个除了Home和Test以外Name的Controller就可以请求成功，这个让我怀疑到是不是api.versioning本身的问题，首先怀疑的是Controller的Name问题，源码拉取下来，从添加版本控制的地方(services.AddApiVersioning)开始找</p>\n<p><img src=\"/cnblogs/13040338/789895-20200603213817384-989892636.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>最后终于在ApiVersionCollator中找到了蛛丝马迹</p>\n<div class=\"cnblogs_code\" onclick=\"cnblogs_code_show('650bc907-d7fe-4dc3-ad52-c580107dc73f')\"><img id=\"code_img_closed_650bc907-d7fe-4dc3-ad52-c580107dc73f\" class=\"code_img_closed\" src=\"http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif\" alt=\"\" /><img id=\"code_img_opened_650bc907-d7fe-4dc3-ad52-c580107dc73f\" class=\"code_img_opened\" style=\"display: none;\" onclick=\"cnblogs_code_hide('650bc907-d7fe-4dc3-ad52-c580107dc73f',event)\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\n<div id=\"cnblogs_code_open_650bc907-d7fe-4dc3-ad52-c580107dc73f\" class=\"cnblogs_code_hide\">\n<pre><span style=\"color: #808080;\">///</span><span style=\"color: #008000; text-decoration: underline;\">https://github.com/microsoft/aspnet-api-versioning/blob/master/src/Microsoft.AspNetCore.Mvc.Versioning/Versioning/ApiVersionCollator.cs</span>\n\n<span style=\"color: #0000ff;\">namespace</span><span style=\"color: #000000;\"> Microsoft.AspNetCore.Mvc.Versioning\n{\n    </span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> Microsoft.AspNetCore.Mvc.Abstractions;\n    </span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> Microsoft.AspNetCore.Mvc.Controllers;\n    </span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> Microsoft.Extensions.Options;\n    </span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System;\n    </span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System.Collections.Generic;\n    </span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System.Linq;\n\n    </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n    <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Represents an object that collates </span><span style=\"color: #808080;\">&lt;see cref=\"ApiVersion\"&gt;</span><span style=\"color: #008000;\">API versions</span><span style=\"color: #808080;\">&lt;/see&gt;</span><span style=\"color: #008000;\"> per </span><span style=\"color: #808080;\">&lt;see cref=\"ActionDescriptor\"&gt;</span><span style=\"color: #008000;\">action</span><span style=\"color: #808080;\">&lt;/see&gt;</span><span style=\"color: #008000;\">.\n    </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n    [CLSCompliant( <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\"> )]\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> ApiVersionCollator : IActionDescriptorProvider\n    {\n        </span><span style=\"color: #0000ff;\">readonly</span> IOptions&lt;ApiVersioningOptions&gt;<span style=\"color: #000000;\"> options;\n\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Initializes a new instance of the </span><span style=\"color: #808080;\">&lt;see cref=\"ApiVersionCollator\"/&gt;</span><span style=\"color: #008000;\"> class.\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"options\"&gt;</span><span style=\"color: #008000;\">The current </span><span style=\"color: #808080;\">&lt;see cref=\"ApiVersioningOptions\"&gt;</span><span style=\"color: #008000;\">API versioning options</span><span style=\"color: #808080;\">&lt;/see&gt;</span><span style=\"color: #008000;\">.</span><span style=\"color: #808080;\">&lt;/param&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> ApiVersionCollator( IOptions&lt;ApiVersioningOptions&gt; options ) =&gt; <span style=\"color: #0000ff;\">this</span>.options =<span style=\"color: #000000;\"> options;\n\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Gets the API versioning options associated with the collator.\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;value&gt;</span><span style=\"color: #008000;\">The current </span><span style=\"color: #808080;\">&lt;see cref=\"ApiVersioningOptions\"&gt;</span><span style=\"color: #008000;\">API versioning options</span><span style=\"color: #808080;\">&lt;/see&gt;</span><span style=\"color: #008000;\">.</span><span style=\"color: #808080;\">&lt;/value&gt;</span>\n        <span style=\"color: #0000ff;\">protected</span> ApiVersioningOptions Options =&gt;<span style=\"color: #000000;\"> options.Value;\n\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;inheritdoc /&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">int</span> Order { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;inheritdoc /&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> OnProvidersExecuted( ActionDescriptorProviderContext context )\n        {\n            </span><span style=\"color: #0000ff;\">if</span> ( context == <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\"> )\n            {\n                </span><span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ArgumentNullException( nameof( context ) );\n            }\n\n            </span><span style=\"color: #0000ff;\">foreach</span> ( <span style=\"color: #0000ff;\">var</span> actions <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> GroupActionsByController( context.Results ) )\n            {\n                </span><span style=\"color: #0000ff;\">var</span> collatedModel =<span style=\"color: #000000;\"> CollateModel( actions );\n\n                </span><span style=\"color: #0000ff;\">foreach</span> ( <span style=\"color: #0000ff;\">var</span> action <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> actions )\n                {\n                    </span><span style=\"color: #0000ff;\">var</span> model = action.GetProperty&lt;ApiVersionModel&gt;<span style=\"color: #000000;\">();\n\n                    </span><span style=\"color: #0000ff;\">if</span> ( model != <span style=\"color: #0000ff;\">null</span> &amp;&amp; !<span style=\"color: #000000;\">model.IsApiVersionNeutral )\n                    {\n                        action.SetProperty( model.Aggregate( collatedModel ) );\n                    }\n                }\n            }\n        }\n\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;inheritdoc /&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> OnProvidersExecuting( ActionDescriptorProviderContext context ) { }\n\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Resolves and returns the logical controller name for the specified action.\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"action\"&gt;</span><span style=\"color: #008000;\">The </span><span style=\"color: #808080;\">&lt;see cref=\"ActionDescriptor\"&gt;</span><span style=\"color: #008000;\">action</span><span style=\"color: #808080;\">&lt;/see&gt;</span><span style=\"color: #008000;\"> to get the controller name from.</span><span style=\"color: #808080;\">&lt;/param&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;</span><span style=\"color: #008000;\">The logical name of the associated controller.</span><span style=\"color: #808080;\">&lt;/returns&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;remarks&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;para&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> The logical controller name is used to collate actions together and aggregate API versions. The\n        </span><span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> default implementation uses the \"controller\" route parameter and falls back to the\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;see cref=\"ControllerActionDescriptor.ControllerName\"/&gt;</span><span style=\"color: #008000;\"> property when available.\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/para&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;para&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> The default implementation will also trim trailing numbers in the controller name by convention. For example,\n        </span><span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> the type \"Values2Controller\" will have the controller name \"Values2\", which will be trimmed to just \"Values\".\n        </span><span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> This behavior can be changed by using the </span><span style=\"color: #808080;\">&lt;see cref=\"ControllerNameAttribute\"/&gt;</span><span style=\"color: #008000;\"> or overriding the default\n        </span><span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> implementation.\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/para&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/remarks&gt;</span>\n        <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> GetControllerName( ActionDescriptor action )\n        {\n            </span><span style=\"color: #0000ff;\">if</span> ( action == <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\"> )\n            {\n                </span><span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ArgumentNullException( nameof( action ) );\n            }\n\n            </span><span style=\"color: #0000ff;\">if</span> ( !action.RouteValues.TryGetValue( <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">controller</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #0000ff;\">out</span> <span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> key ) )\n            {\n                </span><span style=\"color: #0000ff;\">if</span> ( action <span style=\"color: #0000ff;\">is</span><span style=\"color: #000000;\"> ControllerActionDescriptor controllerAction )\n                {\n                    key </span>=<span style=\"color: #000000;\"> controllerAction.ControllerName;\n                }\n            }\n\n            </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> TrimTrailingNumbers( key );\n        }\n\n        IEnumerable</span>&lt;IEnumerable&lt;ActionDescriptor&gt;&gt; GroupActionsByController( IEnumerable&lt;ActionDescriptor&gt;<span style=\"color: #000000;\"> actions )\n        {\n            </span><span style=\"color: #0000ff;\">var</span> groups = <span style=\"color: #0000ff;\">new</span> Dictionary&lt;<span style=\"color: #0000ff;\">string</span>, List&lt;ActionDescriptor&gt;&gt;<span style=\"color: #000000;\">( StringComparer.OrdinalIgnoreCase );\n\n            </span><span style=\"color: #0000ff;\">foreach</span> ( <span style=\"color: #0000ff;\">var</span> action <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> actions )\n            {\n                </span><span style=\"color: #0000ff;\">var</span> key =<span style=\"color: #000000;\"> GetControllerName( action );\n\n                </span><span style=\"color: #0000ff;\">if</span> ( <span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\">.IsNullOrEmpty( key ) )\n                {\n                    </span><span style=\"color: #0000ff;\">continue</span><span style=\"color: #000000;\">;\n                }\n\n                </span><span style=\"color: #0000ff;\">if</span> ( !groups.TryGetValue( key, <span style=\"color: #0000ff;\">out</span> <span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> values ) )\n                {\n                    groups.Add( key, values </span>= <span style=\"color: #0000ff;\">new</span> List&lt;ActionDescriptor&gt;<span style=\"color: #000000;\">() );\n                }\n\n                values.Add( action );\n            }\n\n            </span><span style=\"color: #0000ff;\">foreach</span> ( <span style=\"color: #0000ff;\">var</span> value <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> groups.Values )\n            {\n                </span><span style=\"color: #0000ff;\">yield</span> <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> value;\n            }\n        }\n\n        </span><span style=\"color: #0000ff;\">static</span> <span style=\"color: #0000ff;\">string</span> TrimTrailingNumbers( <span style=\"color: #0000ff;\">string</span>?<span style=\"color: #000000;\"> name )\n        {\n            </span><span style=\"color: #0000ff;\">if</span> ( <span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\">.IsNullOrEmpty( name ) )\n            {\n                </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\">.Empty;\n            }\n\n            </span><span style=\"color: #0000ff;\">var</span> last = name!.Length - <span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">;\n\n            </span><span style=\"color: #0000ff;\">for</span> ( <span style=\"color: #0000ff;\">var</span> i = last; i &gt;= <span style=\"color: #800080;\">0</span>; i--<span style=\"color: #000000;\"> )\n            {\n                </span><span style=\"color: #0000ff;\">if</span> ( !<span style=\"color: #0000ff;\">char</span><span style=\"color: #000000;\">.IsNumber( name[i] ) )\n                {\n                    </span><span style=\"color: #0000ff;\">if</span> ( i &lt;<span style=\"color: #000000;\"> last )\n                    {\n                        </span><span style=\"color: #0000ff;\">return</span> name.Substring( <span style=\"color: #800080;\">0</span>, i + <span style=\"color: #800080;\">1</span><span style=\"color: #000000;\"> );\n                    }\n\n                    </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> name;\n                }\n            }\n\n            </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> name;\n        }\n\n        </span><span style=\"color: #0000ff;\">static</span> ApiVersionModel CollateModel( IEnumerable&lt;ActionDescriptor&gt; actions ) =&gt; actions.Select( a =&gt;<span style=\"color: #000000;\"> a.GetApiVersionModel() ).Aggregate();\n    }\n}</span></pre>\n</div>\n<span class=\"cnblogs_code_collapse\">View Code</span></div>\n<p>&nbsp;</p>\n<p>其中GroupActionsByController将Controller按照Controller的名字进行分组，再看看内部，分组的时候将<span class=\"pl-en\">GetControllerName( <span class=\"pl-smi\">action )作为key，那么GetControllerName是干嘛的，</span></span></p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> GetControllerName( ActionDescriptor action )\n        {\n            </span><span style=\"color: #0000ff;\">if</span> ( action == <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\"> )\n            {\n                </span><span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ArgumentNullException( nameof( action ) );\n            }\n\n            </span><span style=\"color: #0000ff;\">if</span> ( !action.RouteValues.TryGetValue( <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">controller</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #0000ff;\">out</span> <span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> key ) )\n            {\n                </span><span style=\"color: #0000ff;\">if</span> ( action <span style=\"color: #0000ff;\">is</span><span style=\"color: #000000;\"> ControllerActionDescriptor controllerAction )\n                {\n                    key </span>=<span style=\"color: #000000;\"> controllerAction.ControllerName;\n                }\n            }\n\n            </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> TrimTrailingNumbers( key );\n        }</span></pre>\n</div>\n<p>这个方法原本是没有问题的，但是牵扯到Area的时候就会出问题了。。它将根目录下的HomeController和User.HomeController视为同一类的Controller然后去做版本的属性注入，造成CurrentImplementationApiVersionSelector选择器选不到正确的版本，所以返回了上面的错误，我们将GetControllerName内部修改为</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> GetControllerName( ActionDescriptor action )\n        {\n            </span><span style=\"color: #0000ff;\">if</span> ( action == <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\"> )\n            {\n                </span><span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ArgumentNullException( nameof( action ) );\n            }\n\n            </span><span style=\"color: #0000ff;\">if</span> ( !action.RouteValues.TryGetValue( <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">controller</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #0000ff;\">out</span> <span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> key ) )\n            {\n                </span><span style=\"color: #0000ff;\">if</span> ( action <span style=\"color: #0000ff;\">is</span><span style=\"color: #000000;\"> ControllerActionDescriptor controllerAction )\n                {\n                    key </span>=<span style=\"color: #000000;\"> controllerAction.ControllerName;\n                }\n            }\n\n            </span><span style=\"color: #0000ff;\">if</span> ( !action.RouteValues.TryGetValue( <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">area</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #0000ff;\">out</span> <span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> area ) )\n            {\n            }\n\n            </span><span style=\"color: #0000ff;\">return</span> TrimTrailingNumbers( area +<span style=\"color: #000000;\"> key );\n        }</span></pre>\n</div>\n<p>这样就可以走通了</p>\n<p>&nbsp;</p>\n<p>我们有两种解决办法，一个是把源码拉取下来，方法修改掉，项目的依赖项替换为自己修改的Microsoft.AspNetCore.Mvc.Versioning，另一种办法是将services.AddApiVersioning重写。。。请相信我，拉取修改替换依赖比重写services.AddApiVersioning快且简便。。。</p>\n<p>issue：<a href=\"https://github.com/microsoft/aspnet-api-versioning/issues/630\">https://github.com/microsoft/aspnet-api-versioning/issues/630</a></p>","source":"_posts/cnblogs/13040338.md","raw":"---\ntitle: api.versioning 版本控制 自动识别最高版本和多Area但同名Contoller问题解决办法 \ndate: 2020-06-03T22:02:00\nauthor: wpzblog\ntags: []\n---\n<div class=\"cnblogs_code\">\n<pre>Microsoft.AspNetCore.Mvc.Versioning //引入程序集</pre>\n</div>\n<p>.net core 下面api的版本控制作用不需要多说，可以查阅<a href=\"https://www.cnblogs.com/dc20181010/p/11313738.html\">https://www.cnblogs.com/dc20181010/p/11313738.html</a></p>\n<p>普通的版本控制一般是通过链接、header此类方法进行控制，对ApiVersionReader进行设置，例如</p>\n<div class=\"cnblogs_code\">\n<pre>services.AddApiVersioning(o =&gt;<span style=\"color: #000000;\"> {\n                //o.ReportApiVersions </span>= <span style=\"color: #0000ff;\">true</span>;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">返回版本可使用的版本</span>\n                o.ApiVersionReader = ApiVersionReader.Combine(<span style=\"color: #0000ff;\">new</span> HeaderApiVersionReader(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">api-version</span><span style=\"color: #800000;\">\"</span>), <span style=\"color: #0000ff;\">new</span> QueryStringApiVersionReader(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">api-version</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">));//通过</span>Header或QueryString<span>进行传值来判断api的版本<br />                //o.DefaultApiVersion </span>= <span style=\"color: #0000ff;\">new</span> ApiVersion(<span style=\"color: #800080;\">1</span>, <span style=\"color: #800080;\">0</span>);<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">默认版本号</span> <br />       });</pre>\n</div>\n<p>或者使用<a href=\"https://www.cnblogs.com/tdfblog/p/asp-net-core-api-versioning.html\">https://www.cnblogs.com/tdfblog/p/asp-net-core-api-versioning.html</a>这种方式</p>\n<p>这两种方式都需要传递api的版本信息，如果不传递将会报错</p>\n<div class=\"cnblogs_code\">\n<pre>{<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">error</span><span style=\"color: #800000;\">\"</span>:{<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">code</span><span style=\"color: #800000;\">\"</span>:<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ApiVersionUnspecified</span><span style=\"color: #800000;\">\"</span>,<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">message</span><span style=\"color: #800000;\">\"</span>:<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">An API version is required, but was not specified.</span><span style=\"color: #800000;\">\"</span>,<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">innerError</span><span style=\"color: #800000;\">\"</span>:<span style=\"color: #0000ff;\">null</span>}}</pre>\n</div>\n<p>如果我们不想传递api的版本信息时，可以将</p>\n<div class=\"cnblogs_code\">\n<pre>o.AssumeDefaultVersionWhenUnspecified = true; //此选项将用于在没有版本的情况下提供请求<br />o.DefaultApiVersion = <span style=\"color: #0000ff;\">new</span> ApiVersion(<span style=\"color: #800080;\">1</span>, <span style=\"color: #800080;\">0</span>); //设置默认Api版本是1.0</pre>\n</div>\n<p>打开，这个我们每次请求如果不传递版本信息也不会报错了，但我们的请求将会指向1.0版本，那么我想让默认版本指向我写的api里面的最高版本怎么做？</p>\n<p>我们将默认版本修改为最高版本可以吗？</p>\n<p>这里将会出现一个问题，我的api版本可能由于各种各样原因造成最高版本不一致的问题</p>\n<p>所以我们不能采用指定默认版本是最高版本的方法来解决，这个最高版本还必须要是动态的，通过翻阅<a href=\"https://github.com/microsoft/aspnet-api-versioning/wiki/API-Version-Selector#current-implementation-api-selector\">https://github.com/microsoft/aspnet-api-versioning/wiki/API-Version-Selector#current-implementation-api-selector</a>可以得知</p>\n<div class=\"cnblogs_code\">\n<pre>The CurrentImplementationApiVersionSelector selects the maximum API version available which does not have a version status. <br />If no match <span style=\"color: #0000ff;\">is</span> found, it falls back to the configured DefaultApiVersion. For example, <span style=\"color: #0000ff;\">if</span> the versions <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">1.0</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">2.0</span><span style=\"color: #800000;\">\"</span>, and <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">3.0-Alpha</span><span style=\"color: #800000;\">\"</span> are available, <br />then <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">2.0</span><span style=\"color: #800000;\">\"</span> will be selected because it<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">s the highest, implemented or released API version.</span>\n<span style=\"color: #000000;\">\nCurrentImplementationApiVersionSelector选择不具有版本状态的最大可用API版本。 如果找不到匹配项，它将回退到配置的DefaultApiVersion。<br /> 例如，如果提供版本&ldquo; </span><span style=\"color: #800080;\">1.0</span>&rdquo;，&ldquo; <span style=\"color: #800080;\">2.0</span>&rdquo;和&ldquo; <span style=\"color: #800080;\">3.0</span>-Alpha&rdquo;，则将选择&ldquo; <span style=\"color: #800080;\">2.0</span>&rdquo;，因为它是最高，已实施或已发布的API版本。<br /><br /></pre>\n<pre><span class=\"pl-smi\">services.<span class=\"pl-en\">AddApiVersioning(\n    <span class=\"pl-smi\">options <span class=\"pl-k\">=&gt; <span class=\"pl-smi\">options.<span class=\"pl-smi\">ApiVersionSelector <span class=\"pl-k\">=\n        <span class=\"pl-k\">new <span class=\"pl-en\">CurrentImplementationApiVersionSelector( <span class=\"pl-smi\">options ) );</span></span></span></span></span></span></span></span></span></span></pre>\n</div>\n<p>通过这个版本选择器，我们可以将最大版本得出，修改上面services.AddApiVersioning</p>\n<div class=\"cnblogs_code\">\n<pre>services.AddApiVersioning(o =&gt;<span style=\"color: #000000;\"> {\n                o.ReportApiVersions </span>= <span style=\"color: #0000ff;\">true</span>;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">返回版本可使用的版本\n                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">o.ApiVersionReader = new UrlSegmentApiVersionReader();\n                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">o.ApiVersionReader = ApiVersionReader.Combine(new HeaderApiVersionReader(\"api-version\"), new QueryStringApiVersionReader(\"api-version\"));\n                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">o.ApiVersionReader = ApiVersionReader.Combine(new QueryStringApiVersionReader(\"api-version\"));</span>\n                o.ApiVersionReader = ApiVersionReader.Combine(<span style=\"color: #0000ff;\">new</span> HeaderApiVersionReader(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">api-version</span><span style=\"color: #800000;\">\"</span>));<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">版本号以什么形式，什么字段传递</span>\n                o.AssumeDefaultVersionWhenUnspecified = <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;//此选项将用于在没有版本的情况下提供请求\n                o.DefaultApiVersion </span>= <span style=\"color: #0000ff;\">new</span> ApiVersion(<span style=\"color: #800080;\">1</span>, <span style=\"color: #800080;\">0</span>);<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">默认版本号</span>\n                o.ApiVersionSelector = <span style=\"color: #0000ff;\">new</span> CurrentImplementationApiVersionSelector(o);<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">默认以当前最高版本进行访问</span>\n            });</pre>\n</div>\n<p>举个栗子</p>\n<div class=\"cnblogs_code\" onclick=\"cnblogs_code_show('f45c43c2-8f6c-4b66-97f6-bc7f3c5a853d')\"><img id=\"code_img_closed_f45c43c2-8f6c-4b66-97f6-bc7f3c5a853d\" class=\"code_img_closed\" src=\"http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif\" alt=\"\" /><img id=\"code_img_opened_f45c43c2-8f6c-4b66-97f6-bc7f3c5a853d\" class=\"code_img_opened\" style=\"display: none;\" onclick=\"cnblogs_code_hide('f45c43c2-8f6c-4b66-97f6-bc7f3c5a853d',event)\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\n<div id=\"cnblogs_code_open_f45c43c2-8f6c-4b66-97f6-bc7f3c5a853d\" class=\"cnblogs_code_hide\">\n<pre><span style=\"color: #0000ff;\">namespace</span><span style=\"color: #000000;\"> Default.v1.Controllers\n{\n    [ApiVersion(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">1.0</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [Route(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">[controller]/[action]</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [ApiController]\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> HomeController : Controller, IBaseController\n    {\n        </span><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">readonly</span> ILogger&lt;HomeController&gt;<span style=\"color: #000000;\"> _logger;\n\n        </span><span style=\"color: #0000ff;\">public</span> HomeController (ILogger&lt;HomeController&gt;<span style=\"color: #000000;\"> logger)\n        {\n            _logger </span>=<span style=\"color: #000000;\"> logger;\n        }\n\n        </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> JsonResult GetJson()\n        {\n            </span><span style=\"color: #0000ff;\">return</span> Json(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Home 1.0</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n        }\n}</span></pre>\n</div>\n<span class=\"cnblogs_code_collapse\">Default.v1.Controllers.Home</span></div>\n<div class=\"cnblogs_code\" onclick=\"cnblogs_code_show('5272f5a4-1e24-4413-bf10-5385ce07030b')\"><img id=\"code_img_closed_5272f5a4-1e24-4413-bf10-5385ce07030b\" class=\"code_img_closed\" src=\"http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif\" alt=\"\" /><img id=\"code_img_opened_5272f5a4-1e24-4413-bf10-5385ce07030b\" class=\"code_img_opened\" style=\"display: none;\" onclick=\"cnblogs_code_hide('5272f5a4-1e24-4413-bf10-5385ce07030b',event)\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\n<div id=\"cnblogs_code_open_5272f5a4-1e24-4413-bf10-5385ce07030b\" class=\"cnblogs_code_hide\">\n<pre><span style=\"color: #0000ff;\">namespace</span><span style=\"color: #000000;\"> Default.v2.Controllers\n{\n    [ApiVersion(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">2.0</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [Route(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">[controller]/[action]</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [ApiController]\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> HomeController : Controller, IBaseController\n    {\n        </span><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">readonly</span> ILogger&lt;HomeController&gt;<span style=\"color: #000000;\"> _logger;\n\n        </span><span style=\"color: #0000ff;\">public</span> HomeController (ILogger&lt;HomeController&gt;<span style=\"color: #000000;\"> logger)\n        {\n            _logger </span>=<span style=\"color: #000000;\"> logger;\n        }\n\n        </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> JsonResult GetJson()\n        {\n            </span><span style=\"color: #0000ff;\">return</span> Json(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Home 2.0</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n        }\n}</span></pre>\n</div>\n<span class=\"cnblogs_code_collapse\">Default.v2.Controllers.Home</span></div>\n<div class=\"cnblogs_code\" onclick=\"cnblogs_code_show('5b846224-e3c0-40ba-80b8-37be0968cea5')\"><img id=\"code_img_closed_5b846224-e3c0-40ba-80b8-37be0968cea5\" class=\"code_img_closed\" src=\"http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif\" alt=\"\" /><img id=\"code_img_opened_5b846224-e3c0-40ba-80b8-37be0968cea5\" class=\"code_img_opened\" style=\"display: none;\" onclick=\"cnblogs_code_hide('5b846224-e3c0-40ba-80b8-37be0968cea5',event)\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\n<div id=\"cnblogs_code_open_5b846224-e3c0-40ba-80b8-37be0968cea5\" class=\"cnblogs_code_hide\">\n<pre><span style=\"color: #0000ff;\">namespace</span><span style=\"color: #000000;\"> Default.v1.Controllers\n{\n    [ApiVersion(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">1.0</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [Route(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">[controller]/[action]</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [ApiController]\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> TestController : Controller, IBaseController\n    {\n        </span><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">readonly</span> ILogger&lt;HomeController&gt;<span style=\"color: #000000;\"> _logger;\n\n        </span><span style=\"color: #0000ff;\">public</span> TestController (ILogger&lt;HomeController&gt;<span style=\"color: #000000;\"> logger)\n        {\n            _logger </span>=<span style=\"color: #000000;\"> logger;\n        }\n\n        </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> JsonResult GetJson()\n        {\n            </span><span style=\"color: #0000ff;\">return</span> Json(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Test 1.0</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n        }\n}</span></pre>\n</div>\n<span class=\"cnblogs_code_collapse\">Default.v1.Controllers.Test</span></div>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;我们在</p>\n<p>请求/home/getjson 时返回&ldquo;Home 2.0&rdquo;</p>\n<p>请求/test/getjson 时返回&ldquo;Test 1.0&rdquo;</p>\n<p>这样就可以动态的请求最高版本了</p>\n<p>&nbsp;</p>\n<p>但是还是会有问题的，比如，在我添加了Area和User区域下的HomeController，且User区域下的HomeController增加了1.0和3.0版本之后，神奇的一幕出现了</p>\n<p>我的HomeController进不去了。。。</p>\n<div class=\"cnblogs_code\">\n<pre>{<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">error</span><span style=\"color: #800000;\">\"</span>:{<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">code</span><span style=\"color: #800000;\">\"</span>:<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">UnsupportedApiVersion</span><span style=\"color: #800000;\">\"</span>,<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">message</span><span style=\"color: #800000;\">\"</span>:<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">The HTTP resource that matches the request URI 'https://localhost:44311/home/getjson' is not supported.</span><span style=\"color: #800000;\">\"</span>,<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">innerError</span><span style=\"color: #800000;\">\"</span>:<span style=\"color: #0000ff;\">null</span>}}</pre>\n</div>\n<p>这个时候去google都查不到原因。。。</p>\n<p>查看api-supported-versions，返回的是1.0,2.0,3.0。。。我的api版本控制被污染了3.0版本从哪里来的哪？第一反应是从User区域来的</p>\n<p>我现在在User区域下添加一个除了Home和Test以外Name的Controller就可以请求成功，这个让我怀疑到是不是api.versioning本身的问题，首先怀疑的是Controller的Name问题，源码拉取下来，从添加版本控制的地方(services.AddApiVersioning)开始找</p>\n<p><img src=\"/cnblogs/13040338/789895-20200603213817384-989892636.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>最后终于在ApiVersionCollator中找到了蛛丝马迹</p>\n<div class=\"cnblogs_code\" onclick=\"cnblogs_code_show('650bc907-d7fe-4dc3-ad52-c580107dc73f')\"><img id=\"code_img_closed_650bc907-d7fe-4dc3-ad52-c580107dc73f\" class=\"code_img_closed\" src=\"http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif\" alt=\"\" /><img id=\"code_img_opened_650bc907-d7fe-4dc3-ad52-c580107dc73f\" class=\"code_img_opened\" style=\"display: none;\" onclick=\"cnblogs_code_hide('650bc907-d7fe-4dc3-ad52-c580107dc73f',event)\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\n<div id=\"cnblogs_code_open_650bc907-d7fe-4dc3-ad52-c580107dc73f\" class=\"cnblogs_code_hide\">\n<pre><span style=\"color: #808080;\">///</span><span style=\"color: #008000; text-decoration: underline;\">https://github.com/microsoft/aspnet-api-versioning/blob/master/src/Microsoft.AspNetCore.Mvc.Versioning/Versioning/ApiVersionCollator.cs</span>\n\n<span style=\"color: #0000ff;\">namespace</span><span style=\"color: #000000;\"> Microsoft.AspNetCore.Mvc.Versioning\n{\n    </span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> Microsoft.AspNetCore.Mvc.Abstractions;\n    </span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> Microsoft.AspNetCore.Mvc.Controllers;\n    </span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> Microsoft.Extensions.Options;\n    </span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System;\n    </span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System.Collections.Generic;\n    </span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System.Linq;\n\n    </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n    <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Represents an object that collates </span><span style=\"color: #808080;\">&lt;see cref=\"ApiVersion\"&gt;</span><span style=\"color: #008000;\">API versions</span><span style=\"color: #808080;\">&lt;/see&gt;</span><span style=\"color: #008000;\"> per </span><span style=\"color: #808080;\">&lt;see cref=\"ActionDescriptor\"&gt;</span><span style=\"color: #008000;\">action</span><span style=\"color: #808080;\">&lt;/see&gt;</span><span style=\"color: #008000;\">.\n    </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n    [CLSCompliant( <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\"> )]\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> ApiVersionCollator : IActionDescriptorProvider\n    {\n        </span><span style=\"color: #0000ff;\">readonly</span> IOptions&lt;ApiVersioningOptions&gt;<span style=\"color: #000000;\"> options;\n\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Initializes a new instance of the </span><span style=\"color: #808080;\">&lt;see cref=\"ApiVersionCollator\"/&gt;</span><span style=\"color: #008000;\"> class.\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"options\"&gt;</span><span style=\"color: #008000;\">The current </span><span style=\"color: #808080;\">&lt;see cref=\"ApiVersioningOptions\"&gt;</span><span style=\"color: #008000;\">API versioning options</span><span style=\"color: #808080;\">&lt;/see&gt;</span><span style=\"color: #008000;\">.</span><span style=\"color: #808080;\">&lt;/param&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> ApiVersionCollator( IOptions&lt;ApiVersioningOptions&gt; options ) =&gt; <span style=\"color: #0000ff;\">this</span>.options =<span style=\"color: #000000;\"> options;\n\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Gets the API versioning options associated with the collator.\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;value&gt;</span><span style=\"color: #008000;\">The current </span><span style=\"color: #808080;\">&lt;see cref=\"ApiVersioningOptions\"&gt;</span><span style=\"color: #008000;\">API versioning options</span><span style=\"color: #808080;\">&lt;/see&gt;</span><span style=\"color: #008000;\">.</span><span style=\"color: #808080;\">&lt;/value&gt;</span>\n        <span style=\"color: #0000ff;\">protected</span> ApiVersioningOptions Options =&gt;<span style=\"color: #000000;\"> options.Value;\n\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;inheritdoc /&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">int</span> Order { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;inheritdoc /&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> OnProvidersExecuted( ActionDescriptorProviderContext context )\n        {\n            </span><span style=\"color: #0000ff;\">if</span> ( context == <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\"> )\n            {\n                </span><span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ArgumentNullException( nameof( context ) );\n            }\n\n            </span><span style=\"color: #0000ff;\">foreach</span> ( <span style=\"color: #0000ff;\">var</span> actions <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> GroupActionsByController( context.Results ) )\n            {\n                </span><span style=\"color: #0000ff;\">var</span> collatedModel =<span style=\"color: #000000;\"> CollateModel( actions );\n\n                </span><span style=\"color: #0000ff;\">foreach</span> ( <span style=\"color: #0000ff;\">var</span> action <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> actions )\n                {\n                    </span><span style=\"color: #0000ff;\">var</span> model = action.GetProperty&lt;ApiVersionModel&gt;<span style=\"color: #000000;\">();\n\n                    </span><span style=\"color: #0000ff;\">if</span> ( model != <span style=\"color: #0000ff;\">null</span> &amp;&amp; !<span style=\"color: #000000;\">model.IsApiVersionNeutral )\n                    {\n                        action.SetProperty( model.Aggregate( collatedModel ) );\n                    }\n                }\n            }\n        }\n\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;inheritdoc /&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> OnProvidersExecuting( ActionDescriptorProviderContext context ) { }\n\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Resolves and returns the logical controller name for the specified action.\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"action\"&gt;</span><span style=\"color: #008000;\">The </span><span style=\"color: #808080;\">&lt;see cref=\"ActionDescriptor\"&gt;</span><span style=\"color: #008000;\">action</span><span style=\"color: #808080;\">&lt;/see&gt;</span><span style=\"color: #008000;\"> to get the controller name from.</span><span style=\"color: #808080;\">&lt;/param&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;</span><span style=\"color: #008000;\">The logical name of the associated controller.</span><span style=\"color: #808080;\">&lt;/returns&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;remarks&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;para&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> The logical controller name is used to collate actions together and aggregate API versions. The\n        </span><span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> default implementation uses the \"controller\" route parameter and falls back to the\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;see cref=\"ControllerActionDescriptor.ControllerName\"/&gt;</span><span style=\"color: #008000;\"> property when available.\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/para&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;para&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> The default implementation will also trim trailing numbers in the controller name by convention. For example,\n        </span><span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> the type \"Values2Controller\" will have the controller name \"Values2\", which will be trimmed to just \"Values\".\n        </span><span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> This behavior can be changed by using the </span><span style=\"color: #808080;\">&lt;see cref=\"ControllerNameAttribute\"/&gt;</span><span style=\"color: #008000;\"> or overriding the default\n        </span><span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> implementation.\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/para&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/remarks&gt;</span>\n        <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> GetControllerName( ActionDescriptor action )\n        {\n            </span><span style=\"color: #0000ff;\">if</span> ( action == <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\"> )\n            {\n                </span><span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ArgumentNullException( nameof( action ) );\n            }\n\n            </span><span style=\"color: #0000ff;\">if</span> ( !action.RouteValues.TryGetValue( <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">controller</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #0000ff;\">out</span> <span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> key ) )\n            {\n                </span><span style=\"color: #0000ff;\">if</span> ( action <span style=\"color: #0000ff;\">is</span><span style=\"color: #000000;\"> ControllerActionDescriptor controllerAction )\n                {\n                    key </span>=<span style=\"color: #000000;\"> controllerAction.ControllerName;\n                }\n            }\n\n            </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> TrimTrailingNumbers( key );\n        }\n\n        IEnumerable</span>&lt;IEnumerable&lt;ActionDescriptor&gt;&gt; GroupActionsByController( IEnumerable&lt;ActionDescriptor&gt;<span style=\"color: #000000;\"> actions )\n        {\n            </span><span style=\"color: #0000ff;\">var</span> groups = <span style=\"color: #0000ff;\">new</span> Dictionary&lt;<span style=\"color: #0000ff;\">string</span>, List&lt;ActionDescriptor&gt;&gt;<span style=\"color: #000000;\">( StringComparer.OrdinalIgnoreCase );\n\n            </span><span style=\"color: #0000ff;\">foreach</span> ( <span style=\"color: #0000ff;\">var</span> action <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> actions )\n            {\n                </span><span style=\"color: #0000ff;\">var</span> key =<span style=\"color: #000000;\"> GetControllerName( action );\n\n                </span><span style=\"color: #0000ff;\">if</span> ( <span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\">.IsNullOrEmpty( key ) )\n                {\n                    </span><span style=\"color: #0000ff;\">continue</span><span style=\"color: #000000;\">;\n                }\n\n                </span><span style=\"color: #0000ff;\">if</span> ( !groups.TryGetValue( key, <span style=\"color: #0000ff;\">out</span> <span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> values ) )\n                {\n                    groups.Add( key, values </span>= <span style=\"color: #0000ff;\">new</span> List&lt;ActionDescriptor&gt;<span style=\"color: #000000;\">() );\n                }\n\n                values.Add( action );\n            }\n\n            </span><span style=\"color: #0000ff;\">foreach</span> ( <span style=\"color: #0000ff;\">var</span> value <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> groups.Values )\n            {\n                </span><span style=\"color: #0000ff;\">yield</span> <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> value;\n            }\n        }\n\n        </span><span style=\"color: #0000ff;\">static</span> <span style=\"color: #0000ff;\">string</span> TrimTrailingNumbers( <span style=\"color: #0000ff;\">string</span>?<span style=\"color: #000000;\"> name )\n        {\n            </span><span style=\"color: #0000ff;\">if</span> ( <span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\">.IsNullOrEmpty( name ) )\n            {\n                </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\">.Empty;\n            }\n\n            </span><span style=\"color: #0000ff;\">var</span> last = name!.Length - <span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">;\n\n            </span><span style=\"color: #0000ff;\">for</span> ( <span style=\"color: #0000ff;\">var</span> i = last; i &gt;= <span style=\"color: #800080;\">0</span>; i--<span style=\"color: #000000;\"> )\n            {\n                </span><span style=\"color: #0000ff;\">if</span> ( !<span style=\"color: #0000ff;\">char</span><span style=\"color: #000000;\">.IsNumber( name[i] ) )\n                {\n                    </span><span style=\"color: #0000ff;\">if</span> ( i &lt;<span style=\"color: #000000;\"> last )\n                    {\n                        </span><span style=\"color: #0000ff;\">return</span> name.Substring( <span style=\"color: #800080;\">0</span>, i + <span style=\"color: #800080;\">1</span><span style=\"color: #000000;\"> );\n                    }\n\n                    </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> name;\n                }\n            }\n\n            </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> name;\n        }\n\n        </span><span style=\"color: #0000ff;\">static</span> ApiVersionModel CollateModel( IEnumerable&lt;ActionDescriptor&gt; actions ) =&gt; actions.Select( a =&gt;<span style=\"color: #000000;\"> a.GetApiVersionModel() ).Aggregate();\n    }\n}</span></pre>\n</div>\n<span class=\"cnblogs_code_collapse\">View Code</span></div>\n<p>&nbsp;</p>\n<p>其中GroupActionsByController将Controller按照Controller的名字进行分组，再看看内部，分组的时候将<span class=\"pl-en\">GetControllerName( <span class=\"pl-smi\">action )作为key，那么GetControllerName是干嘛的，</span></span></p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> GetControllerName( ActionDescriptor action )\n        {\n            </span><span style=\"color: #0000ff;\">if</span> ( action == <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\"> )\n            {\n                </span><span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ArgumentNullException( nameof( action ) );\n            }\n\n            </span><span style=\"color: #0000ff;\">if</span> ( !action.RouteValues.TryGetValue( <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">controller</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #0000ff;\">out</span> <span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> key ) )\n            {\n                </span><span style=\"color: #0000ff;\">if</span> ( action <span style=\"color: #0000ff;\">is</span><span style=\"color: #000000;\"> ControllerActionDescriptor controllerAction )\n                {\n                    key </span>=<span style=\"color: #000000;\"> controllerAction.ControllerName;\n                }\n            }\n\n            </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> TrimTrailingNumbers( key );\n        }</span></pre>\n</div>\n<p>这个方法原本是没有问题的，但是牵扯到Area的时候就会出问题了。。它将根目录下的HomeController和User.HomeController视为同一类的Controller然后去做版本的属性注入，造成CurrentImplementationApiVersionSelector选择器选不到正确的版本，所以返回了上面的错误，我们将GetControllerName内部修改为</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> GetControllerName( ActionDescriptor action )\n        {\n            </span><span style=\"color: #0000ff;\">if</span> ( action == <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\"> )\n            {\n                </span><span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ArgumentNullException( nameof( action ) );\n            }\n\n            </span><span style=\"color: #0000ff;\">if</span> ( !action.RouteValues.TryGetValue( <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">controller</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #0000ff;\">out</span> <span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> key ) )\n            {\n                </span><span style=\"color: #0000ff;\">if</span> ( action <span style=\"color: #0000ff;\">is</span><span style=\"color: #000000;\"> ControllerActionDescriptor controllerAction )\n                {\n                    key </span>=<span style=\"color: #000000;\"> controllerAction.ControllerName;\n                }\n            }\n\n            </span><span style=\"color: #0000ff;\">if</span> ( !action.RouteValues.TryGetValue( <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">area</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #0000ff;\">out</span> <span style=\"color: #0000ff;\">var</span><span style=\"color: #000000;\"> area ) )\n            {\n            }\n\n            </span><span style=\"color: #0000ff;\">return</span> TrimTrailingNumbers( area +<span style=\"color: #000000;\"> key );\n        }</span></pre>\n</div>\n<p>这样就可以走通了</p>\n<p>&nbsp;</p>\n<p>我们有两种解决办法，一个是把源码拉取下来，方法修改掉，项目的依赖项替换为自己修改的Microsoft.AspNetCore.Mvc.Versioning，另一种办法是将services.AddApiVersioning重写。。。请相信我，拉取修改替换依赖比重写services.AddApiVersioning快且简便。。。</p>\n<p>issue：<a href=\"https://github.com/microsoft/aspnet-api-versioning/issues/630\">https://github.com/microsoft/aspnet-api-versioning/issues/630</a></p>","slug":"cnblogs/13040338","published":1,"updated":"2022-07-10T13:01:13.222Z","_id":"cl5f7isfq001fc0un63h6h9dq","comments":1,"layout":"post","photos":[],"link":"","content":"<div class=\"cnblogs_code\">\n<pre>Microsoft.AspNetCore.Mvc.Versioning //引入程序集</pre>\n</div>\n<p>.net core 下面api的版本控制作用不需要多说，可以查阅<a href=\"https://www.cnblogs.com/dc20181010/p/11313738.html\">https://www.cnblogs.com/dc20181010/p/11313738.html</a></p>\n<p>普通的版本控制一般是通过链接、header此类方法进行控制，对ApiVersionReader进行设置，例如</p>\n<div class=\"cnblogs_code\">\n<pre>services.AddApiVersioning(o =&gt;<span style=\"color: #000000;\"> {\n                //o.ReportApiVersions </span>= <span style=\"color: #0000ff;\">true</span>;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">返回版本可使用的版本</span>\n                o.ApiVersionReader = ApiVersionReader.Combine(<span style=\"color: #0000ff;\">new</span> HeaderApiVersionReader(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">api-version</span><span style=\"color: #800000;\">\"</span>), <span style=\"color: #0000ff;\">new</span> QueryStringApiVersionReader(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">api-version</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">));//通过</span>Header或QueryString<span>进行传值来判断api的版本<br />                //o.DefaultApiVersion </span>= <span style=\"color: #0000ff;\">new</span> ApiVersion(<span style=\"color: #800080;\">1</span>, <span style=\"color: #800080;\">0</span>);<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">默认版本号</span> <br />       });</pre>\n</div>\n<p>或者使用<a href=\"https://www.cnblogs.com/tdfblog/p/asp-net-core-api-versioning.html\">https://www.cnblogs.com/tdfblog/p/asp-net-core-api-versioning.html</a>这种方式</p>\n<p>这两种方式都需要传递api的版本信息，如果不传递将会报错</p>\n<div class=\"cnblogs_code\">\n<pre>{<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">error</span><span style=\"color: #800000;\">\"</span>:{<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">code</span><span style=\"color: #800000;\">\"</span>:<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ApiVersionUnspecified</span><span style=\"color: #800000;\">\"</span>,<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">message</span><span style=\"color: #800000;\">\"</span>:<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">An API version is required, but was not specified.</span><span style=\"color: #800000;\">\"</span>,<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">innerError</span><span style=\"color: #800000;\">\"</span>:<span style=\"color: #0000ff;\">null</span>}}</pre>\n</div>\n<p>如果我们不想传递api的版本信息时，可以将</p>\n<div class=\"cnblogs_code\">\n<pre>o.AssumeDefaultVersionWhenUnspecified = true; //此选项将用于在没有版本的情况下提供请求<br />o.DefaultApiVersion = <span style=\"color: #0000ff;\">new</span> ApiVersion(<span style=\"color: #800080;\">1</span>, <span style=\"color: #800080;\">0</span>); //设置默认Api版本是1.0</pre>\n</div>\n<p>打开，这个我们每次请求如果不传递版本信息也不会报错了，但我们的请求将会指向1.0版本，那么我想让默认版本指向我写的api里面的最高版本怎么做？</p>\n<p>我们将默认版本修改为最高版本可以吗？</p>\n<p>这里将会出现一个问题，我的api版本可能由于各种各样原因造成最高版本不一致的问题</p>\n<p>所以我们不能采用指定默认版本是最高版本的方法来解决，这个最高版本还必须要是动态的，通过翻阅<a href=\"https://github.com/microsoft/aspnet-api-versioning/wiki/API-Version-Selector#current-implementation-api-selector\">https://github.com/microsoft/aspnet-api-versioning/wiki/API-Version-Selector#current-implementation-api-selector</a>可以得知</p>\n<div class=\"cnblogs_code\">\n<pre>The CurrentImplementationApiVersionSelector selects the maximum API version available which does not have a version status. <br />If no match <span style=\"color: #0000ff;\">is</span> found, it falls back to the configured DefaultApiVersion. For example, <span style=\"color: #0000ff;\">if</span> the versions <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">1.0</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">2.0</span><span style=\"color: #800000;\">\"</span>, and <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">3.0-Alpha</span><span style=\"color: #800000;\">\"</span> are available, <br />then <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">2.0</span><span style=\"color: #800000;\">\"</span> will be selected because it<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">s the highest, implemented or released API version.</span>\n<span style=\"color: #000000;\">\nCurrentImplementationApiVersionSelector选择不具有版本状态的最大可用API版本。 如果找不到匹配项，它将回退到配置的DefaultApiVersion。<br /> 例如，如果提供版本&ldquo; </span><span style=\"color: #800080;\">1.0</span>&rdquo;，&ldquo; <span style=\"color: #800080;\">2.0</span>&rdquo;和&ldquo; <span style=\"color: #800080;\">3.0</span>-Alpha&rdquo;，则将选择&ldquo; <span style=\"color: #800080;\">2.0</span>&rdquo;，因为它是最高，已实施或已发布的API版本。<br /><br /></pre>\n<pre><span class=\"pl-smi\">services.<span class=\"pl-en\">AddApiVersioning(\n    <span class=\"pl-smi\">options <span class=\"pl-k\">=&gt; <span class=\"pl-smi\">options.<span class=\"pl-smi\">ApiVersionSelector <span class=\"pl-k\">=\n        <span class=\"pl-k\">new <span class=\"pl-en\">CurrentImplementationApiVersionSelector( <span class=\"pl-smi\">options ) );</span></span></span></span></span></span></span></span></span></span></pre>\n</div>\n<p>通过这个版本选择器，我们可以将最大版本得出，修改上面services.AddApiVersioning</p>\n<div class=\"cnblogs_code\">\n<pre>services.AddApiVersioning(o =&gt;<span style=\"color: #000000;\"> {\n                o.ReportApiVersions </span>= <span style=\"color: #0000ff;\">true</span>;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">返回版本可使用的版本\n                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">o.ApiVersionReader = new UrlSegmentApiVersionReader();\n                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">o.ApiVersionReader = ApiVersionReader.Combine(new HeaderApiVersionReader(\"api-version\"), new QueryStringApiVersionReader(\"api-version\"));\n                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">o.ApiVersionReader = ApiVersionReader.Combine(new QueryStringApiVersionReader(\"api-version\"));</span>\n                o.ApiVersionReader = ApiVersionReader.Combine(<span style=\"color: #0000ff;\">new</span> HeaderApiVersionReader(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">api-version</span><span style=\"color: #800000;\">\"</span>));<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">版本号以什么形式，什么字段传递</span>\n                o.AssumeDefaultVersionWhenUnspecified = <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;//此选项将用于在没有版本的情况下提供请求\n                o.DefaultApiVersion </span>= <span style=\"color: #0000ff;\">new</span> ApiVersion(<span style=\"color: #800080;\">1</span>, <span style=\"color: #800080;\">0</span>);<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">默认版本号</span>\n                o.ApiVersionSelector = <span style=\"color: #0000ff;\">new</span> CurrentImplementationApiVersionSelector(o);<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">默认以当前最高版本进行访问</span>\n            });</pre>\n</div>\n<p>举个栗子</p>\n<div class=\"cnblogs_code\" onclick=\"cnblogs_code_show('f45c43c2-8f6c-4b66-97f6-bc7f3c5a853d')\"><img id=\"code_img_closed_f45c43c2-8f6c-4b66-97f6-bc7f3c5a853d\" class=\"code_img_closed\" src=\"http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif\" alt=\"\" /><img id=\"code_img_opened_f45c43c2-8f6c-4b66-97f6-bc7f3c5a853d\" class=\"code_img_opened\" style=\"display: none;\" onclick=\"cnblogs_code_hide('f45c43c2-8f6c-4b66-97f6-bc7f3c5a853d',event)\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\n<div id=\"cnblogs_code_open_f45c43c2-8f6c-4b66-97f6-bc7f3c5a853d\" class=\"cnblogs_code_hide\">\n<pre><span style=\"color: #0000ff;\">namespace</span><span style=\"color: #000000;\"> Default.v1.Controllers\n{\n    [ApiVersion(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">1.0</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [Route(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">[controller]/[action]</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [ApiController]\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> HomeController : Controller, IBaseController\n    {\n        </span><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">readonly</span> ILogger&lt;HomeController&gt;<span style=\"color: #000000;\"> _logger;\n\n<pre><code>    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; HomeController (ILogger&amp;lt;HomeController&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; logger)\n    &#123;\n        _logger &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; logger;\n    &#125;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; JsonResult GetJson()\n    &#123;\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt; Json(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;Home 1.0&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n    &#125;\n</code></pre>\n<p>}</span></pre></p>\n</div>\n<span class=\"cnblogs_code_collapse\">Default.v1.Controllers.Home</span></div>\n<div class=\"cnblogs_code\" onclick=\"cnblogs_code_show('5272f5a4-1e24-4413-bf10-5385ce07030b')\"><img id=\"code_img_closed_5272f5a4-1e24-4413-bf10-5385ce07030b\" class=\"code_img_closed\" src=\"http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif\" alt=\"\" /><img id=\"code_img_opened_5272f5a4-1e24-4413-bf10-5385ce07030b\" class=\"code_img_opened\" style=\"display: none;\" onclick=\"cnblogs_code_hide('5272f5a4-1e24-4413-bf10-5385ce07030b',event)\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\n<div id=\"cnblogs_code_open_5272f5a4-1e24-4413-bf10-5385ce07030b\" class=\"cnblogs_code_hide\">\n<pre><span style=\"color: #0000ff;\">namespace</span><span style=\"color: #000000;\"> Default.v2.Controllers\n{\n    [ApiVersion(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">2.0</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [Route(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">[controller]/[action]</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [ApiController]\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> HomeController : Controller, IBaseController\n    {\n        </span><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">readonly</span> ILogger&lt;HomeController&gt;<span style=\"color: #000000;\"> _logger;\n\n<pre><code>    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; HomeController (ILogger&amp;lt;HomeController&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; logger)\n    &#123;\n        _logger &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; logger;\n    &#125;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; JsonResult GetJson()\n    &#123;\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt; Json(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;Home 2.0&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n    &#125;\n</code></pre>\n<p>}</span></pre></p>\n</div>\n<span class=\"cnblogs_code_collapse\">Default.v2.Controllers.Home</span></div>\n<div class=\"cnblogs_code\" onclick=\"cnblogs_code_show('5b846224-e3c0-40ba-80b8-37be0968cea5')\"><img id=\"code_img_closed_5b846224-e3c0-40ba-80b8-37be0968cea5\" class=\"code_img_closed\" src=\"http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif\" alt=\"\" /><img id=\"code_img_opened_5b846224-e3c0-40ba-80b8-37be0968cea5\" class=\"code_img_opened\" style=\"display: none;\" onclick=\"cnblogs_code_hide('5b846224-e3c0-40ba-80b8-37be0968cea5',event)\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\n<div id=\"cnblogs_code_open_5b846224-e3c0-40ba-80b8-37be0968cea5\" class=\"cnblogs_code_hide\">\n<pre><span style=\"color: #0000ff;\">namespace</span><span style=\"color: #000000;\"> Default.v1.Controllers\n{\n    [ApiVersion(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">1.0</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [Route(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">[controller]/[action]</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [ApiController]\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> TestController : Controller, IBaseController\n    {\n        </span><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">readonly</span> ILogger&lt;HomeController&gt;<span style=\"color: #000000;\"> _logger;\n\n<pre><code>    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; TestController (ILogger&amp;lt;HomeController&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; logger)\n    &#123;\n        _logger &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; logger;\n    &#125;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; JsonResult GetJson()\n    &#123;\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt; Json(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;Test 1.0&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n    &#125;\n</code></pre>\n<p>}</span></pre></p>\n</div>\n<span class=\"cnblogs_code_collapse\">Default.v1.Controllers.Test</span></div>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;我们在</p>\n<p>请求/home/getjson 时返回&ldquo;Home 2.0&rdquo;</p>\n<p>请求/test/getjson 时返回&ldquo;Test 1.0&rdquo;</p>\n<p>这样就可以动态的请求最高版本了</p>\n<p>&nbsp;</p>\n<p>但是还是会有问题的，比如，在我添加了Area和User区域下的HomeController，且User区域下的HomeController增加了1.0和3.0版本之后，神奇的一幕出现了</p>\n<p>我的HomeController进不去了。。。</p>\n<div class=\"cnblogs_code\">\n<pre>{<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">error</span><span style=\"color: #800000;\">\"</span>:{<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">code</span><span style=\"color: #800000;\">\"</span>:<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">UnsupportedApiVersion</span><span style=\"color: #800000;\">\"</span>,<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">message</span><span style=\"color: #800000;\">\"</span>:<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">The HTTP resource that matches the request URI 'https://localhost:44311/home/getjson' is not supported.</span><span style=\"color: #800000;\">\"</span>,<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">innerError</span><span style=\"color: #800000;\">\"</span>:<span style=\"color: #0000ff;\">null</span>}}</pre>\n</div>\n<p>这个时候去google都查不到原因。。。</p>\n<p>查看api-supported-versions，返回的是1.0,2.0,3.0。。。我的api版本控制被污染了3.0版本从哪里来的哪？第一反应是从User区域来的</p>\n<p>我现在在User区域下添加一个除了Home和Test以外Name的Controller就可以请求成功，这个让我怀疑到是不是api.versioning本身的问题，首先怀疑的是Controller的Name问题，源码拉取下来，从添加版本控制的地方(services.AddApiVersioning)开始找</p>\n<p><img src=\"/cnblogs/13040338/789895-20200603213817384-989892636.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>最后终于在ApiVersionCollator中找到了蛛丝马迹</p>\n<div class=\"cnblogs_code\" onclick=\"cnblogs_code_show('650bc907-d7fe-4dc3-ad52-c580107dc73f')\"><img id=\"code_img_closed_650bc907-d7fe-4dc3-ad52-c580107dc73f\" class=\"code_img_closed\" src=\"http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif\" alt=\"\" /><img id=\"code_img_opened_650bc907-d7fe-4dc3-ad52-c580107dc73f\" class=\"code_img_opened\" style=\"display: none;\" onclick=\"cnblogs_code_hide('650bc907-d7fe-4dc3-ad52-c580107dc73f',event)\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\n<div id=\"cnblogs_code_open_650bc907-d7fe-4dc3-ad52-c580107dc73f\" class=\"cnblogs_code_hide\">\n<pre><span style=\"color: #808080;\">///</span><span style=\"color: #008000; text-decoration: underline;\">https://github.com/microsoft/aspnet-api-versioning/blob/master/src/Microsoft.AspNetCore.Mvc.Versioning/Versioning/ApiVersionCollator.cs</span>\n\n<p><span style=\"color: #0000ff;\">namespace</span><span style=\"color: #000000;\"> Microsoft.AspNetCore.Mvc.Versioning<br>{<br>    </span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> Microsoft.AspNetCore.Mvc.Abstractions;<br>    </span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> Microsoft.AspNetCore.Mvc.Controllers;<br>    </span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> Microsoft.Extensions.Options;<br>    </span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System;<br>    </span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System.Collections.Generic;<br>    </span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System.Linq;</p>\n<pre><code>&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;\n&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Represents an object that collates &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;see cref=&quot;ApiVersion&quot;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;API versions&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/see&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; per &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;see cref=&quot;ActionDescriptor&quot;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;action&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/see&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;.\n&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;\n[CLSCompliant( &lt;span style=&quot;color: #0000ff;&quot;&gt;false&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; )]\n&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; ApiVersionCollator : IActionDescriptorProvider\n&#123;\n    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;readonly&lt;/span&gt; IOptions&amp;lt;ApiVersioningOptions&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; options;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Initializes a new instance of the &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;see cref=&quot;ApiVersionCollator&quot;/&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; class.\n    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;param name=&quot;options&quot;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;The current &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;see cref=&quot;ApiVersioningOptions&quot;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;API versioning options&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/see&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; ApiVersionCollator( IOptions&amp;lt;ApiVersioningOptions&amp;gt; options ) =&amp;gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;this&lt;/span&gt;.options =&lt;span style=&quot;color: #000000;&quot;&gt; options;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Gets the API versioning options associated with the collator.\n    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;The current &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;see cref=&quot;ApiVersioningOptions&quot;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;API versioning options&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/see&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #0000ff;&quot;&gt;protected&lt;/span&gt; ApiVersioningOptions Options =&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; options.Value;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;inheritdoc /&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;int&lt;/span&gt; Order &#123; &lt;span style=&quot;color: #0000ff;&quot;&gt;get&lt;/span&gt;; &lt;span style=&quot;color: #0000ff;&quot;&gt;protected&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;set&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;; &#125;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;inheritdoc /&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;virtual&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; OnProvidersExecuted( ActionDescriptorProviderContext context )\n    &#123;\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( context == &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; )\n        &#123;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;throw&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; ArgumentNullException( nameof( context ) );\n        &#125;\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;foreach&lt;/span&gt; ( &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; actions &lt;span style=&quot;color: #0000ff;&quot;&gt;in&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; GroupActionsByController( context.Results ) )\n        &#123;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; collatedModel =&lt;span style=&quot;color: #000000;&quot;&gt; CollateModel( actions );\n\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;foreach&lt;/span&gt; ( &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; action &lt;span style=&quot;color: #0000ff;&quot;&gt;in&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; actions )\n            &#123;\n                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; model = action.GetProperty&amp;lt;ApiVersionModel&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;();\n\n                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( model != &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span style=&quot;color: #000000;&quot;&gt;model.IsApiVersionNeutral )\n                &#123;\n                    action.SetProperty( model.Aggregate( collatedModel ) );\n                &#125;\n            &#125;\n        &#125;\n    &#125;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;inheritdoc /&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;virtual&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; OnProvidersExecuting( ActionDescriptorProviderContext context ) &#123; &#125;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Resolves and returns the logical controller name for the specified action.\n    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;param name=&quot;action&quot;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;The &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;see cref=&quot;ActionDescriptor&quot;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;action&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/see&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; to get the controller name from.&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;returns&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;The logical name of the associated controller.&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/returns&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;remarks&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;para&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; The logical controller name is used to collate actions together and aggregate API versions. The\n    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; default implementation uses the &quot;controller&quot; route parameter and falls back to the\n    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;see cref=&quot;ControllerActionDescriptor.ControllerName&quot;/&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; property when available.\n    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/para&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;para&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; The default implementation will also trim trailing numbers in the controller name by convention. For example,\n    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; the type &quot;Values2Controller&quot; will have the controller name &quot;Values2&quot;, which will be trimmed to just &quot;Values&quot;.\n    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; This behavior can be changed by using the &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;see cref=&quot;ControllerNameAttribute&quot;/&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; or overriding the default\n    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; implementation.\n    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/para&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/remarks&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #0000ff;&quot;&gt;protected&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;virtual&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; GetControllerName( ActionDescriptor action )\n    &#123;\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( action == &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; )\n        &#123;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;throw&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; ArgumentNullException( nameof( action ) );\n        &#125;\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( !action.RouteValues.TryGetValue( &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;controller&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #0000ff;&quot;&gt;out&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; key ) )\n        &#123;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( action &lt;span style=&quot;color: #0000ff;&quot;&gt;is&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; ControllerActionDescriptor controllerAction )\n            &#123;\n                key &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; controllerAction.ControllerName;\n            &#125;\n        &#125;\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; TrimTrailingNumbers( key );\n    &#125;\n\n    IEnumerable&lt;/span&gt;&amp;lt;IEnumerable&amp;lt;ActionDescriptor&amp;gt;&amp;gt; GroupActionsByController( IEnumerable&amp;lt;ActionDescriptor&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; actions )\n    &#123;\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; groups = &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; Dictionary&amp;lt;&lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt;, List&amp;lt;ActionDescriptor&amp;gt;&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;( StringComparer.OrdinalIgnoreCase );\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;foreach&lt;/span&gt; ( &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; action &lt;span style=&quot;color: #0000ff;&quot;&gt;in&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; actions )\n        &#123;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; key =&lt;span style=&quot;color: #000000;&quot;&gt; GetControllerName( action );\n\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( &lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;.IsNullOrEmpty( key ) )\n            &#123;\n                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;continue&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;;\n            &#125;\n\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( !groups.TryGetValue( key, &lt;span style=&quot;color: #0000ff;&quot;&gt;out&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; values ) )\n            &#123;\n                groups.Add( key, values &lt;/span&gt;= &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; List&amp;lt;ActionDescriptor&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;() );\n            &#125;\n\n            values.Add( action );\n        &#125;\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;foreach&lt;/span&gt; ( &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; value &lt;span style=&quot;color: #0000ff;&quot;&gt;in&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; groups.Values )\n        &#123;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;yield&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; value;\n        &#125;\n    &#125;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt; TrimTrailingNumbers( &lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt;?&lt;span style=&quot;color: #000000;&quot;&gt; name )\n    &#123;\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( &lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;.IsNullOrEmpty( name ) )\n        &#123;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;.Empty;\n        &#125;\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; last = name!.Length - &lt;span style=&quot;color: #800080;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;;\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;for&lt;/span&gt; ( &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; i = last; i &amp;gt;= &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt;; i--&lt;span style=&quot;color: #000000;&quot;&gt; )\n        &#123;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( !&lt;span style=&quot;color: #0000ff;&quot;&gt;char&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;.IsNumber( name[i] ) )\n            &#123;\n                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( i &amp;lt;&lt;span style=&quot;color: #000000;&quot;&gt; last )\n                &#123;\n                    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt; name.Substring( &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt;, i + &lt;span style=&quot;color: #800080;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; );\n                &#125;\n\n                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; name;\n            &#125;\n        &#125;\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; name;\n    &#125;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;static&lt;/span&gt; ApiVersionModel CollateModel( IEnumerable&amp;lt;ActionDescriptor&amp;gt; actions ) =&amp;gt; actions.Select( a =&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; a.GetApiVersionModel() ).Aggregate();\n&#125;\n</code></pre>\n<p>}</span></pre></p>\n</div>\n<span class=\"cnblogs_code_collapse\">View Code</span></div>\n<p>&nbsp;</p>\n<p>其中GroupActionsByController将Controller按照Controller的名字进行分组，再看看内部，分组的时候将<span class=\"pl-en\">GetControllerName( <span class=\"pl-smi\">action )作为key，那么GetControllerName是干嘛的，</span></span></p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> GetControllerName( ActionDescriptor action )\n        {\n            </span><span style=\"color: #0000ff;\">if</span> ( action == <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\"> )\n            {\n                </span><span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ArgumentNullException( nameof( action ) );\n            }\n\n<pre><code>        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( !action.RouteValues.TryGetValue( &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;controller&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #0000ff;&quot;&gt;out&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; key ) )\n        &#123;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( action &lt;span style=&quot;color: #0000ff;&quot;&gt;is&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; ControllerActionDescriptor controllerAction )\n            &#123;\n                key &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; controllerAction.ControllerName;\n            &#125;\n        &#125;\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; TrimTrailingNumbers( key );\n    &#125;&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<p>这个方法原本是没有问题的，但是牵扯到Area的时候就会出问题了。。它将根目录下的HomeController和User.HomeController视为同一类的Controller然后去做版本的属性注入，造成CurrentImplementationApiVersionSelector选择器选不到正确的版本，所以返回了上面的错误，我们将GetControllerName内部修改为</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> GetControllerName( ActionDescriptor action )\n        {\n            </span><span style=\"color: #0000ff;\">if</span> ( action == <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\"> )\n            {\n                </span><span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ArgumentNullException( nameof( action ) );\n            }\n\n<pre><code>        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( !action.RouteValues.TryGetValue( &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;controller&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #0000ff;&quot;&gt;out&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; key ) )\n        &#123;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( action &lt;span style=&quot;color: #0000ff;&quot;&gt;is&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; ControllerActionDescriptor controllerAction )\n            &#123;\n                key &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; controllerAction.ControllerName;\n            &#125;\n        &#125;\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( !action.RouteValues.TryGetValue( &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;area&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #0000ff;&quot;&gt;out&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; area ) )\n        &#123;\n        &#125;\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt; TrimTrailingNumbers( area +&lt;span style=&quot;color: #000000;&quot;&gt; key );\n    &#125;&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<p>这样就可以走通了</p>\n<p>&nbsp;</p>\n<p>我们有两种解决办法，一个是把源码拉取下来，方法修改掉，项目的依赖项替换为自己修改的Microsoft.AspNetCore.Mvc.Versioning，另一种办法是将services.AddApiVersioning重写。。。请相信我，拉取修改替换依赖比重写services.AddApiVersioning快且简便。。。</p>\n<p>issue：<a href=\"https://github.com/microsoft/aspnet-api-versioning/issues/630\">https://github.com/microsoft/aspnet-api-versioning/issues/630</a></p>","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"spatxos","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/spatxos","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"<div class=\"cnblogs_code\">\n<pre>Microsoft.AspNetCore.Mvc.Versioning //引入程序集</pre>\n</div>\n<p>.net core 下面api的版本控制作用不需要多说，可以查阅<a href=\"https://www.cnblogs.com/dc20181010/p/11313738.html\">https://www.cnblogs.com/dc20181010/p/11313738.html</a></p>\n<p>普通的版本控制一般是通过链接、header此类方法进行控制，对ApiVersionReader进行设置，例如</p>\n<div class=\"cnblogs_code\">\n<pre>services.AddApiVersioning(o =&gt;<span style=\"color: #000000;\"> {\n                //o.ReportApiVersions </span>= <span style=\"color: #0000ff;\">true</span>;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">返回版本可使用的版本</span>\n                o.ApiVersionReader = ApiVersionReader.Combine(<span style=\"color: #0000ff;\">new</span> HeaderApiVersionReader(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">api-version</span><span style=\"color: #800000;\">\"</span>), <span style=\"color: #0000ff;\">new</span> QueryStringApiVersionReader(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">api-version</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">));//通过</span>Header或QueryString<span>进行传值来判断api的版本<br />                //o.DefaultApiVersion </span>= <span style=\"color: #0000ff;\">new</span> ApiVersion(<span style=\"color: #800080;\">1</span>, <span style=\"color: #800080;\">0</span>);<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">默认版本号</span> <br />       });</pre>\n</div>\n<p>或者使用<a href=\"https://www.cnblogs.com/tdfblog/p/asp-net-core-api-versioning.html\">https://www.cnblogs.com/tdfblog/p/asp-net-core-api-versioning.html</a>这种方式</p>\n<p>这两种方式都需要传递api的版本信息，如果不传递将会报错</p>\n<div class=\"cnblogs_code\">\n<pre>{<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">error</span><span style=\"color: #800000;\">\"</span>:{<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">code</span><span style=\"color: #800000;\">\"</span>:<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ApiVersionUnspecified</span><span style=\"color: #800000;\">\"</span>,<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">message</span><span style=\"color: #800000;\">\"</span>:<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">An API version is required, but was not specified.</span><span style=\"color: #800000;\">\"</span>,<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">innerError</span><span style=\"color: #800000;\">\"</span>:<span style=\"color: #0000ff;\">null</span>}}</pre>\n</div>\n<p>如果我们不想传递api的版本信息时，可以将</p>\n<div class=\"cnblogs_code\">\n<pre>o.AssumeDefaultVersionWhenUnspecified = true; //此选项将用于在没有版本的情况下提供请求<br />o.DefaultApiVersion = <span style=\"color: #0000ff;\">new</span> ApiVersion(<span style=\"color: #800080;\">1</span>, <span style=\"color: #800080;\">0</span>); //设置默认Api版本是1.0</pre>\n</div>\n<p>打开，这个我们每次请求如果不传递版本信息也不会报错了，但我们的请求将会指向1.0版本，那么我想让默认版本指向我写的api里面的最高版本怎么做？</p>\n<p>我们将默认版本修改为最高版本可以吗？</p>\n<p>这里将会出现一个问题，我的api版本可能由于各种各样原因造成最高版本不一致的问题</p>\n<p>所以我们不能采用指定默认版本是最高版本的方法来解决，这个最高版本还必须要是动态的，通过翻阅<a href=\"https://github.com/microsoft/aspnet-api-versioning/wiki/API-Version-Selector#current-implementation-api-selector\">https://github.com/microsoft/aspnet-api-versioning/wiki/API-Version-Selector#current-implementation-api-selector</a>可以得知</p>\n<div class=\"cnblogs_code\">\n<pre>The CurrentImplementationApiVersionSelector selects the maximum API version available which does not have a version status. <br />If no match <span style=\"color: #0000ff;\">is</span> found, it falls back to the configured DefaultApiVersion. For example, <span style=\"color: #0000ff;\">if</span> the versions <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">1.0</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">2.0</span><span style=\"color: #800000;\">\"</span>, and <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">3.0-Alpha</span><span style=\"color: #800000;\">\"</span> are available, <br />then <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">2.0</span><span style=\"color: #800000;\">\"</span> will be selected because it<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">s the highest, implemented or released API version.</span>\n<span style=\"color: #000000;\">\nCurrentImplementationApiVersionSelector选择不具有版本状态的最大可用API版本。 如果找不到匹配项，它将回退到配置的DefaultApiVersion。<br /> 例如，如果提供版本&ldquo; </span><span style=\"color: #800080;\">1.0</span>&rdquo;，&ldquo; <span style=\"color: #800080;\">2.0</span>&rdquo;和&ldquo; <span style=\"color: #800080;\">3.0</span>-Alpha&rdquo;，则将选择&ldquo; <span style=\"color: #800080;\">2.0</span>&rdquo;，因为它是最高，已实施或已发布的API版本。<br /><br /></pre>\n<pre><span class=\"pl-smi\">services.<span class=\"pl-en\">AddApiVersioning(\n    <span class=\"pl-smi\">options <span class=\"pl-k\">=&gt; <span class=\"pl-smi\">options.<span class=\"pl-smi\">ApiVersionSelector <span class=\"pl-k\">=\n        <span class=\"pl-k\">new <span class=\"pl-en\">CurrentImplementationApiVersionSelector( <span class=\"pl-smi\">options ) );</span></span></span></span></span></span></span></span></span></span></pre>\n</div>\n<p>通过这个版本选择器，我们可以将最大版本得出，修改上面services.AddApiVersioning</p>\n<div class=\"cnblogs_code\">\n<pre>services.AddApiVersioning(o =&gt;<span style=\"color: #000000;\"> {\n                o.ReportApiVersions </span>= <span style=\"color: #0000ff;\">true</span>;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">返回版本可使用的版本\n                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">o.ApiVersionReader = new UrlSegmentApiVersionReader();\n                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">o.ApiVersionReader = ApiVersionReader.Combine(new HeaderApiVersionReader(\"api-version\"), new QueryStringApiVersionReader(\"api-version\"));\n                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">o.ApiVersionReader = ApiVersionReader.Combine(new QueryStringApiVersionReader(\"api-version\"));</span>\n                o.ApiVersionReader = ApiVersionReader.Combine(<span style=\"color: #0000ff;\">new</span> HeaderApiVersionReader(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">api-version</span><span style=\"color: #800000;\">\"</span>));<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">版本号以什么形式，什么字段传递</span>\n                o.AssumeDefaultVersionWhenUnspecified = <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;//此选项将用于在没有版本的情况下提供请求\n                o.DefaultApiVersion </span>= <span style=\"color: #0000ff;\">new</span> ApiVersion(<span style=\"color: #800080;\">1</span>, <span style=\"color: #800080;\">0</span>);<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">默认版本号</span>\n                o.ApiVersionSelector = <span style=\"color: #0000ff;\">new</span> CurrentImplementationApiVersionSelector(o);<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">默认以当前最高版本进行访问</span>\n            });</pre>\n</div>\n<p>举个栗子</p>\n<div class=\"cnblogs_code\" onclick=\"cnblogs_code_show('f45c43c2-8f6c-4b66-97f6-bc7f3c5a853d')\"><img id=\"code_img_closed_f45c43c2-8f6c-4b66-97f6-bc7f3c5a853d\" class=\"code_img_closed\" src=\"http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif\" alt=\"\" /><img id=\"code_img_opened_f45c43c2-8f6c-4b66-97f6-bc7f3c5a853d\" class=\"code_img_opened\" style=\"display: none;\" onclick=\"cnblogs_code_hide('f45c43c2-8f6c-4b66-97f6-bc7f3c5a853d',event)\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\n<div id=\"cnblogs_code_open_f45c43c2-8f6c-4b66-97f6-bc7f3c5a853d\" class=\"cnblogs_code_hide\">\n<pre><span style=\"color: #0000ff;\">namespace</span><span style=\"color: #000000;\"> Default.v1.Controllers\n{\n    [ApiVersion(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">1.0</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [Route(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">[controller]/[action]</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [ApiController]\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> HomeController : Controller, IBaseController\n    {\n        </span><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">readonly</span> ILogger&lt;HomeController&gt;<span style=\"color: #000000;\"> _logger;\n\n<pre><code>    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; HomeController (ILogger&amp;lt;HomeController&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; logger)\n    &#123;\n        _logger &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; logger;\n    &#125;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; JsonResult GetJson()\n    &#123;\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt; Json(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;Home 1.0&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n    &#125;\n</code></pre>\n<p>}</span></pre></p>\n</div>\n<span class=\"cnblogs_code_collapse\">Default.v1.Controllers.Home</span></div>\n<div class=\"cnblogs_code\" onclick=\"cnblogs_code_show('5272f5a4-1e24-4413-bf10-5385ce07030b')\"><img id=\"code_img_closed_5272f5a4-1e24-4413-bf10-5385ce07030b\" class=\"code_img_closed\" src=\"http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif\" alt=\"\" /><img id=\"code_img_opened_5272f5a4-1e24-4413-bf10-5385ce07030b\" class=\"code_img_opened\" style=\"display: none;\" onclick=\"cnblogs_code_hide('5272f5a4-1e24-4413-bf10-5385ce07030b',event)\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\n<div id=\"cnblogs_code_open_5272f5a4-1e24-4413-bf10-5385ce07030b\" class=\"cnblogs_code_hide\">\n<pre><span style=\"color: #0000ff;\">namespace</span><span style=\"color: #000000;\"> Default.v2.Controllers\n{\n    [ApiVersion(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">2.0</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [Route(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">[controller]/[action]</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [ApiController]\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> HomeController : Controller, IBaseController\n    {\n        </span><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">readonly</span> ILogger&lt;HomeController&gt;<span style=\"color: #000000;\"> _logger;\n\n<pre><code>    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; HomeController (ILogger&amp;lt;HomeController&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; logger)\n    &#123;\n        _logger &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; logger;\n    &#125;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; JsonResult GetJson()\n    &#123;\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt; Json(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;Home 2.0&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n    &#125;\n</code></pre>\n<p>}</span></pre></p>\n</div>\n<span class=\"cnblogs_code_collapse\">Default.v2.Controllers.Home</span></div>\n<div class=\"cnblogs_code\" onclick=\"cnblogs_code_show('5b846224-e3c0-40ba-80b8-37be0968cea5')\"><img id=\"code_img_closed_5b846224-e3c0-40ba-80b8-37be0968cea5\" class=\"code_img_closed\" src=\"http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif\" alt=\"\" /><img id=\"code_img_opened_5b846224-e3c0-40ba-80b8-37be0968cea5\" class=\"code_img_opened\" style=\"display: none;\" onclick=\"cnblogs_code_hide('5b846224-e3c0-40ba-80b8-37be0968cea5',event)\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\n<div id=\"cnblogs_code_open_5b846224-e3c0-40ba-80b8-37be0968cea5\" class=\"cnblogs_code_hide\">\n<pre><span style=\"color: #0000ff;\">namespace</span><span style=\"color: #000000;\"> Default.v1.Controllers\n{\n    [ApiVersion(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">1.0</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [Route(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">[controller]/[action]</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [ApiController]\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> TestController : Controller, IBaseController\n    {\n        </span><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">readonly</span> ILogger&lt;HomeController&gt;<span style=\"color: #000000;\"> _logger;\n\n<pre><code>    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; TestController (ILogger&amp;lt;HomeController&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; logger)\n    &#123;\n        _logger &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; logger;\n    &#125;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; JsonResult GetJson()\n    &#123;\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt; Json(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;Test 1.0&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n    &#125;\n</code></pre>\n<p>}</span></pre></p>\n</div>\n<span class=\"cnblogs_code_collapse\">Default.v1.Controllers.Test</span></div>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;我们在</p>\n<p>请求/home/getjson 时返回&ldquo;Home 2.0&rdquo;</p>\n<p>请求/test/getjson 时返回&ldquo;Test 1.0&rdquo;</p>\n<p>这样就可以动态的请求最高版本了</p>\n<p>&nbsp;</p>\n<p>但是还是会有问题的，比如，在我添加了Area和User区域下的HomeController，且User区域下的HomeController增加了1.0和3.0版本之后，神奇的一幕出现了</p>\n<p>我的HomeController进不去了。。。</p>\n<div class=\"cnblogs_code\">\n<pre>{<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">error</span><span style=\"color: #800000;\">\"</span>:{<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">code</span><span style=\"color: #800000;\">\"</span>:<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">UnsupportedApiVersion</span><span style=\"color: #800000;\">\"</span>,<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">message</span><span style=\"color: #800000;\">\"</span>:<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">The HTTP resource that matches the request URI 'https://localhost:44311/home/getjson' is not supported.</span><span style=\"color: #800000;\">\"</span>,<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">innerError</span><span style=\"color: #800000;\">\"</span>:<span style=\"color: #0000ff;\">null</span>}}</pre>\n</div>\n<p>这个时候去google都查不到原因。。。</p>\n<p>查看api-supported-versions，返回的是1.0,2.0,3.0。。。我的api版本控制被污染了3.0版本从哪里来的哪？第一反应是从User区域来的</p>\n<p>我现在在User区域下添加一个除了Home和Test以外Name的Controller就可以请求成功，这个让我怀疑到是不是api.versioning本身的问题，首先怀疑的是Controller的Name问题，源码拉取下来，从添加版本控制的地方(services.AddApiVersioning)开始找</p>\n<p><img src=\"/cnblogs/13040338/789895-20200603213817384-989892636.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>最后终于在ApiVersionCollator中找到了蛛丝马迹</p>\n<div class=\"cnblogs_code\" onclick=\"cnblogs_code_show('650bc907-d7fe-4dc3-ad52-c580107dc73f')\"><img id=\"code_img_closed_650bc907-d7fe-4dc3-ad52-c580107dc73f\" class=\"code_img_closed\" src=\"http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif\" alt=\"\" /><img id=\"code_img_opened_650bc907-d7fe-4dc3-ad52-c580107dc73f\" class=\"code_img_opened\" style=\"display: none;\" onclick=\"cnblogs_code_hide('650bc907-d7fe-4dc3-ad52-c580107dc73f',event)\" src=\"http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif\" alt=\"\" />\n<div id=\"cnblogs_code_open_650bc907-d7fe-4dc3-ad52-c580107dc73f\" class=\"cnblogs_code_hide\">\n<pre><span style=\"color: #808080;\">///</span><span style=\"color: #008000; text-decoration: underline;\">https://github.com/microsoft/aspnet-api-versioning/blob/master/src/Microsoft.AspNetCore.Mvc.Versioning/Versioning/ApiVersionCollator.cs</span>\n\n<p><span style=\"color: #0000ff;\">namespace</span><span style=\"color: #000000;\"> Microsoft.AspNetCore.Mvc.Versioning<br>{<br>    </span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> Microsoft.AspNetCore.Mvc.Abstractions;<br>    </span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> Microsoft.AspNetCore.Mvc.Controllers;<br>    </span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> Microsoft.Extensions.Options;<br>    </span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System;<br>    </span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System.Collections.Generic;<br>    </span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> System.Linq;</p>\n<pre><code>&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;\n&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Represents an object that collates &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;see cref=&quot;ApiVersion&quot;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;API versions&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/see&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; per &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;see cref=&quot;ActionDescriptor&quot;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;action&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/see&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;.\n&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;\n[CLSCompliant( &lt;span style=&quot;color: #0000ff;&quot;&gt;false&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; )]\n&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;class&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; ApiVersionCollator : IActionDescriptorProvider\n&#123;\n    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;readonly&lt;/span&gt; IOptions&amp;lt;ApiVersioningOptions&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; options;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Initializes a new instance of the &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;see cref=&quot;ApiVersionCollator&quot;/&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; class.\n    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;param name=&quot;options&quot;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;The current &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;see cref=&quot;ApiVersioningOptions&quot;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;API versioning options&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/see&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; ApiVersionCollator( IOptions&amp;lt;ApiVersioningOptions&amp;gt; options ) =&amp;gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;this&lt;/span&gt;.options =&lt;span style=&quot;color: #000000;&quot;&gt; options;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Gets the API versioning options associated with the collator.\n    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;The current &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;see cref=&quot;ApiVersioningOptions&quot;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;API versioning options&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/see&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;.&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #0000ff;&quot;&gt;protected&lt;/span&gt; ApiVersioningOptions Options =&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; options.Value;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;inheritdoc /&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;int&lt;/span&gt; Order &#123; &lt;span style=&quot;color: #0000ff;&quot;&gt;get&lt;/span&gt;; &lt;span style=&quot;color: #0000ff;&quot;&gt;protected&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;set&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;; &#125;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;inheritdoc /&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;virtual&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; OnProvidersExecuted( ActionDescriptorProviderContext context )\n    &#123;\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( context == &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; )\n        &#123;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;throw&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; ArgumentNullException( nameof( context ) );\n        &#125;\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;foreach&lt;/span&gt; ( &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; actions &lt;span style=&quot;color: #0000ff;&quot;&gt;in&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; GroupActionsByController( context.Results ) )\n        &#123;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; collatedModel =&lt;span style=&quot;color: #000000;&quot;&gt; CollateModel( actions );\n\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;foreach&lt;/span&gt; ( &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; action &lt;span style=&quot;color: #0000ff;&quot;&gt;in&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; actions )\n            &#123;\n                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; model = action.GetProperty&amp;lt;ApiVersionModel&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;();\n\n                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( model != &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; !&lt;span style=&quot;color: #000000;&quot;&gt;model.IsApiVersionNeutral )\n                &#123;\n                    action.SetProperty( model.Aggregate( collatedModel ) );\n                &#125;\n            &#125;\n        &#125;\n    &#125;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;inheritdoc /&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;virtual&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; OnProvidersExecuting( ActionDescriptorProviderContext context ) &#123; &#125;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; Resolves and returns the logical controller name for the specified action.\n    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;param name=&quot;action&quot;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;The &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;see cref=&quot;ActionDescriptor&quot;&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;action&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/see&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; to get the controller name from.&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/param&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;returns&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;The logical name of the associated controller.&lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/returns&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;remarks&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;para&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; The logical controller name is used to collate actions together and aggregate API versions. The\n    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; default implementation uses the &quot;controller&quot; route parameter and falls back to the\n    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;see cref=&quot;ControllerActionDescriptor.ControllerName&quot;/&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; property when available.\n    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/para&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;para&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; The default implementation will also trim trailing numbers in the controller name by convention. For example,\n    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; the type &quot;Values2Controller&quot; will have the controller name &quot;Values2&quot;, which will be trimmed to just &quot;Values&quot;.\n    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; This behavior can be changed by using the &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;see cref=&quot;ControllerNameAttribute&quot;/&amp;gt;&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; or overriding the default\n    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; implementation.\n    &lt;/span&gt;&lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/para&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #808080;&quot;&gt;///&lt;/span&gt; &lt;span style=&quot;color: #808080;&quot;&gt;&amp;lt;/remarks&amp;gt;&lt;/span&gt;\n    &lt;span style=&quot;color: #0000ff;&quot;&gt;protected&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;virtual&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; GetControllerName( ActionDescriptor action )\n    &#123;\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( action == &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; )\n        &#123;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;throw&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; ArgumentNullException( nameof( action ) );\n        &#125;\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( !action.RouteValues.TryGetValue( &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;controller&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #0000ff;&quot;&gt;out&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; key ) )\n        &#123;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( action &lt;span style=&quot;color: #0000ff;&quot;&gt;is&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; ControllerActionDescriptor controllerAction )\n            &#123;\n                key &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; controllerAction.ControllerName;\n            &#125;\n        &#125;\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; TrimTrailingNumbers( key );\n    &#125;\n\n    IEnumerable&lt;/span&gt;&amp;lt;IEnumerable&amp;lt;ActionDescriptor&amp;gt;&amp;gt; GroupActionsByController( IEnumerable&amp;lt;ActionDescriptor&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; actions )\n    &#123;\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; groups = &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; Dictionary&amp;lt;&lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt;, List&amp;lt;ActionDescriptor&amp;gt;&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;( StringComparer.OrdinalIgnoreCase );\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;foreach&lt;/span&gt; ( &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; action &lt;span style=&quot;color: #0000ff;&quot;&gt;in&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; actions )\n        &#123;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; key =&lt;span style=&quot;color: #000000;&quot;&gt; GetControllerName( action );\n\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( &lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;.IsNullOrEmpty( key ) )\n            &#123;\n                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;continue&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;;\n            &#125;\n\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( !groups.TryGetValue( key, &lt;span style=&quot;color: #0000ff;&quot;&gt;out&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; values ) )\n            &#123;\n                groups.Add( key, values &lt;/span&gt;= &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; List&amp;lt;ActionDescriptor&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;() );\n            &#125;\n\n            values.Add( action );\n        &#125;\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;foreach&lt;/span&gt; ( &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; value &lt;span style=&quot;color: #0000ff;&quot;&gt;in&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; groups.Values )\n        &#123;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;yield&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; value;\n        &#125;\n    &#125;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;static&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt; TrimTrailingNumbers( &lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt;?&lt;span style=&quot;color: #000000;&quot;&gt; name )\n    &#123;\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( &lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;.IsNullOrEmpty( name ) )\n        &#123;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;.Empty;\n        &#125;\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; last = name!.Length - &lt;span style=&quot;color: #800080;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;;\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;for&lt;/span&gt; ( &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; i = last; i &amp;gt;= &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt;; i--&lt;span style=&quot;color: #000000;&quot;&gt; )\n        &#123;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( !&lt;span style=&quot;color: #0000ff;&quot;&gt;char&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;.IsNumber( name[i] ) )\n            &#123;\n                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( i &amp;lt;&lt;span style=&quot;color: #000000;&quot;&gt; last )\n                &#123;\n                    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt; name.Substring( &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt;, i + &lt;span style=&quot;color: #800080;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; );\n                &#125;\n\n                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; name;\n            &#125;\n        &#125;\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; name;\n    &#125;\n\n    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;static&lt;/span&gt; ApiVersionModel CollateModel( IEnumerable&amp;lt;ActionDescriptor&amp;gt; actions ) =&amp;gt; actions.Select( a =&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; a.GetApiVersionModel() ).Aggregate();\n&#125;\n</code></pre>\n<p>}</span></pre></p>\n</div>\n<span class=\"cnblogs_code_collapse\">View Code</span></div>\n<p>&nbsp;</p>\n<p>其中GroupActionsByController将Controller按照Controller的名字进行分组，再看看内部，分组的时候将<span class=\"pl-en\">GetControllerName( <span class=\"pl-smi\">action )作为key，那么GetControllerName是干嘛的，</span></span></p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> GetControllerName( ActionDescriptor action )\n        {\n            </span><span style=\"color: #0000ff;\">if</span> ( action == <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\"> )\n            {\n                </span><span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ArgumentNullException( nameof( action ) );\n            }\n\n<pre><code>        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( !action.RouteValues.TryGetValue( &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;controller&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #0000ff;&quot;&gt;out&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; key ) )\n        &#123;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( action &lt;span style=&quot;color: #0000ff;&quot;&gt;is&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; ControllerActionDescriptor controllerAction )\n            &#123;\n                key &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; controllerAction.ControllerName;\n            &#125;\n        &#125;\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; TrimTrailingNumbers( key );\n    &#125;&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<p>这个方法原本是没有问题的，但是牵扯到Area的时候就会出问题了。。它将根目录下的HomeController和User.HomeController视为同一类的Controller然后去做版本的属性注入，造成CurrentImplementationApiVersionSelector选择器选不到正确的版本，所以返回了上面的错误，我们将GetControllerName内部修改为</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> GetControllerName( ActionDescriptor action )\n        {\n            </span><span style=\"color: #0000ff;\">if</span> ( action == <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\"> )\n            {\n                </span><span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ArgumentNullException( nameof( action ) );\n            }\n\n<pre><code>        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( !action.RouteValues.TryGetValue( &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;controller&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #0000ff;&quot;&gt;out&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; key ) )\n        &#123;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( action &lt;span style=&quot;color: #0000ff;&quot;&gt;is&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; ControllerActionDescriptor controllerAction )\n            &#123;\n                key &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; controllerAction.ControllerName;\n            &#125;\n        &#125;\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; ( !action.RouteValues.TryGetValue( &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;area&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #0000ff;&quot;&gt;out&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; area ) )\n        &#123;\n        &#125;\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt; TrimTrailingNumbers( area +&lt;span style=&quot;color: #000000;&quot;&gt; key );\n    &#125;&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<p>这样就可以走通了</p>\n<p>&nbsp;</p>\n<p>我们有两种解决办法，一个是把源码拉取下来，方法修改掉，项目的依赖项替换为自己修改的Microsoft.AspNetCore.Mvc.Versioning，另一种办法是将services.AddApiVersioning重写。。。请相信我，拉取修改替换依赖比重写services.AddApiVersioning快且简便。。。</p>\n<p>issue：<a href=\"https://github.com/microsoft/aspnet-api-versioning/issues/630\">https://github.com/microsoft/aspnet-api-versioning/issues/630</a></p>"},{"title":".netcore 定制化项目开发的思考和实现","date":"2020-05-06T04:00:00.000Z","author":"wpzblog","_content":"<p>今年年初进了一家新公司，进入之后一边维护老项目一边了解项目流程，为了接下来的项目重做积累点经验。</p>\n<p>先说下老项目吧，.net fx 3.5+oracle......</p>\n<p>在实际维护中逐渐发现，老项目有标准版、定制版两种，标准版就是一套代码，粗略计算了下，全部版本加起来有20+个版本，如果项目重做后还是依照这个模式去开发维护，估计距离猝死也不远了，并且不同版本代码的复用率极低（好吧，根本没有）。打个比方，我在标准版中发现了一个bug，需要去其他的20+版本里面都修改一遍，删库跑路了解一下。。。。</p>\n<p>为了提升工资（偷懒），进公司没多久就在想办法，如何去提高不同项目的代码复用率，然后想起来了wtm、abp、simplcommerce这三种项目，似乎有不同项目中代码服用的地方。</p>\n<p>wtm、abp类似，是将底层的部分controller、view封装在底层类库，然后项目最外层去使用；</p>\n<p>simplcommerce是将所有的模块放在各个类库中，然后在主项目中集成；</p>\n<p>（或许是我看的不够深入，欢迎指正）</p>\n<p>这三种项目，对于我的不同项目提交代码复用率来说，不能直接起到作用，但是却提供了一种思路，<span style=\"color: #ff0000;\">我们可以将原始的标准版作为一个类库，然后在不同的项目中引用这个类库，做到绝大部分的代码复用，少部分修改</span>。</p>\n<p>&nbsp;</p>\n<p>我们如果想在定制项目中对标准版某个controller的某个action进行修改该怎么办？</p>\n<p>1.我首先想到的是在个性化项目中写一个同名的controller，然后这个controller继承自默认版本的对应controller，来达到重写的目的，但是这个惯性思维陷入误区了，mvc对于controller的控制不和普通的type继承一样，如果同名controller存在，则会报错。。。在运行时我们可以判断出是哪个action不同，但是无法通过emit来进行修改，所以这种办法不可以。</p>\n<p>2.第一种办法不行，那么我们是否可以对于同名controller进行名称上的修改，比如homecontroller在Tailor.Custom1中修改未TailorCustom1homecontroller，然后利用路由进行重定向？结果发现路由重定向，要么自定义一个路由中间件（求大佬给解决办法，我不会。。），要么在请求进入的时候对请求进行重定向（这种重定向就是对HttpContext.Request.Path进行特殊判断和处理，符合条件的进行重定向，但是可能会有很大的问题）</p>\n<p>3.使用版本控制的思路，这个似乎可以，我们将标准版default中所有的都作为版本1.0，然后定制化作为2.0，在请求进入的时候，将请求头添加一个version，如果mvc找不到这个version的controller或者action，会自动转到默认的1.0版本中</p>\n<p>&nbsp;</p>\n<p>那我们开始新建一个简化版的项目，大概的分组可以做这样</p>\n<p><img src=\"/cnblogs/12833014/789895-20200505211512224-1873232722.png\" alt=\"\" /></p>\n<p>native/default作为标准版web类库；</p>\n<p>Tailor.Custom* 是定制化网站；</p>\n<p>entity是实体、service是服务，实体和服务我们暂且不说，先说明下default这个标准web类库，这个类库就是上面所说的标准类库，让其他的Tailor.Custom1、Tailor.Custom1.Https、Tailor.Custom2.Https、Tailor.Custom3.Https（以下称定制项目）去引用，然后再各自的项目中可以个性化修改</p>\n<p>标准web类库的csproj文件做适当的修改以更改成web类库</p>\n<div class=\"cnblogs_code\">\n<pre>&lt;Project Sdk=<span style=\"color: #800000;\">\"</span><span style=\"color: #ff0000;\">Microsoft.NET.Sdk.Web</span><span style=\"color: #800000;\">\"</span>&gt;\n\n  &lt;PropertyGroup Label=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Globals</span><span style=\"color: #800000;\">\"</span>&gt;\n    &lt;SccProjectName&gt;SAK&lt;/SccProjectName&gt;\n    &lt;SccProvider&gt;SAK&lt;/SccProvider&gt;\n    &lt;SccAuxPath&gt;SAK&lt;/SccAuxPath&gt;\n    &lt;SccLocalPath&gt;SAK&lt;/SccLocalPath&gt;\n  &lt;/PropertyGroup&gt;\n\n  &lt;PropertyGroup&gt;\n    &lt;TargetFramework&gt;netcoreapp3.<span style=\"color: #800080;\">1</span>&lt;/TargetFramework&gt;\n    <span style=\"color: #ff0000;\">&lt;OutputType&gt;Library&lt;/OutputType&gt;</span>\n  &lt;/PropertyGroup&gt;<span style=\"color: #000000;\">\n  ...\n</span>&lt;/Project&gt;</pre>\n</div>\n<p>然后借鉴wtm中使用项目对web类库的引用，在标准web类库中添加FrameworkServiceExtension.cs文件</p>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span> IServiceCollection AddFrameworkService(<span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\"> IServiceCollection services,\n            WebHostBuilderContext webHostBuilderContext </span>= <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">\n        )//在定制版本的Startup.ConfigureServices中添加services.AddFrameworkService();即可\n        {\n            CurrentDirectoryHelpers.SetCurrentDirectory();\n\n            </span><span style=\"color: #0000ff;\">var</span> configBuilder = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ConfigurationBuilder();\n\n            </span><span style=\"color: #0000ff;\">if</span> (!File.Exists(Path.Combine(Directory.GetCurrentDirectory(), <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">appsettings.json</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)))\n            {\n                </span><span style=\"color: #0000ff;\">var</span> binLocation = Assembly.GetEntryAssembly()?<span style=\"color: #000000;\">.Location;\n                </span><span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\">.IsNullOrEmpty(binLocation))\n                {\n                    </span><span style=\"color: #0000ff;\">var</span> binPath = <span style=\"color: #0000ff;\">new</span> FileInfo(binLocation).Directory?<span style=\"color: #000000;\">.FullName;\n                    </span><span style=\"color: #0000ff;\">if</span> (File.Exists(Path.Combine(binPath, <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">appsettings.json</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)))\n                    {\n                        Directory.SetCurrentDirectory(binPath);\n                        configBuilder.SetBasePath(binPath)\n                            .AddJsonFile(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">appsettings.json</span><span style=\"color: #800000;\">\"</span>, optional: <span style=\"color: #0000ff;\">true</span>, reloadOnChange: <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">)\n                            .AddEnvironmentVariables();\n                    }\n                }\n            }\n            </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">\n            {\n                configBuilder.SetBasePath(Directory.GetCurrentDirectory())\n                    .AddJsonFile(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">appsettings.json</span><span style=\"color: #800000;\">\"</span>, optional: <span style=\"color: #0000ff;\">true</span>, reloadOnChange: <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">)\n                    .AddEnvironmentVariables();\n            }\n\n            </span><span style=\"color: #0000ff;\">if</span> (webHostBuilderContext != <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)\n            {\n                </span><span style=\"color: #0000ff;\">var</span> env =<span style=\"color: #000000;\"> webHostBuilderContext.HostingEnvironment;\n                configBuilder\n                    .AddJsonFile($</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">appsettings.{env.EnvironmentName}.json</span><span style=\"color: #800000;\">\"</span>, optional: <span style=\"color: #0000ff;\">true</span>, reloadOnChange: <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);\n            }\n\n            </span><span style=\"color: #0000ff;\">var</span> config =<span style=\"color: #000000;\"> configBuilder.Build();\n\n            </span><span style=\"color: #0000ff;\">new</span> AppSettingProvider().Initial(config);<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">添加静态的配置全局配置文件</span>\n\n            <span style=\"color: #0000ff;\">var</span> gd =<span style=\"color: #000000;\"> AssemblyHelper.GetGlobalData();\n\n            </span><span style=\"color: #0000ff;\">var</span> currentNamespace =<span style=\"color: #000000;\"> MethodBase.GetCurrentMethod().DeclaringType.Namespace;\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">获取标准web类库的Assembly</span>\n            <span style=\"color: #0000ff;\">var</span> currentAssembly = gd.AllAssembly.Where(x =&gt; x.ManifestModule.Name == $<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">{currentNamespace}.dll</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">).FirstOrDefault();\n\n            StackTrace ss </span>= <span style=\"color: #0000ff;\">new</span> StackTrace(<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);\n            MethodBase mb </span>= ss.GetFrame(ss.FrameCount - <span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">).GetMethod();\n\n            </span><span style=\"color: #0000ff;\">var</span> userNamespace = mb.DeclaringType.Namespace;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">调用标准web类库的定制版项目命名空间</span>\n<span style=\"color: #000000;\">\n            services.AddMvc(options </span>=&gt;<span style=\"color: #000000;\">\n            {\n                options.EnableEndpointRouting </span>= <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\n            });\n\n            services.AddRazorPages()</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">添加RazorPages</span>\n<span style=\"color: #000000;\">                .AddRazorRuntimeCompilation()\n            .ConfigureApplicationPartManager(m </span>=&gt;<span style=\"color: #000000;\">\n            {\n                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">将标准web类库的Controllers添加到定制版，即我们要运行的网站中</span>\n                <span style=\"color: #0000ff;\">var</span> feature = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ControllerFeature();\n\n                </span><span style=\"color: #0000ff;\">if</span> (currentAssembly != <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)\n                {\n                    m.ApplicationParts.Add(</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> AssemblyPart(currentAssembly));\n                }\n                m.PopulateFeature(feature);\n                services.AddSingleton(feature.Controllers.Select(t </span>=&gt;<span style=\"color: #000000;\"> t.AsType()).ToArray());\n            })\n            .AddControllersAsServices()\n            .AddViewLocalization(LanguageViewLocationExpanderFormat.Suffix);</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">添加多语言支持\n\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">services.Configure&lt;MvcRazorRuntimeCompilationOptions&gt;(options =&gt;\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">{\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">    if (currentAssembly != null)\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">    {\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">        options.FileProviders.Add(\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">        new EmbeddedFileProvider(\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">            currentAssembly,\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">            currentNamespace </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> your external assembly's base namespace\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">        )\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">    );\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">    }\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">});</span>\n            services.AddSingleton&lt;ILoginUserService, LoginUserService&gt;();<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">添加需要引用的其他服务</span>\n<span style=\"color: #000000;\">\n            services.AddMvc(options </span>=&gt;<span style=\"color: #000000;\">\n            {\n                options.Conventions.Add(</span><span style=\"color: #0000ff;\">new</span> ApiControllerVersionConvention());<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">添加版本控制时忽略添加的某些重要属性</span>\n<span style=\"color: #000000;\">            });\n\n            services.AddApiVersioning(o </span>=&gt;<span style=\"color: #000000;\"> {\n                o.ReportApiVersions </span>= <span style=\"color: #0000ff;\">true</span>;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">返回版本可使用的版本\n                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">o.ApiVersionReader = new UrlSegmentApiVersionReader();\n                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">o.ApiVersionReader = ApiVersionReader.Combine(new HeaderApiVersionReader(\"api-version\"), new QueryStringApiVersionReader(\"api-version\"));\n                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">o.ApiVersionReader = ApiVersionReader.Combine(new QueryStringApiVersionReader(\"api-version\"));</span>\n                o.ApiVersionReader = ApiVersionReader.Combine(<span style=\"color: #0000ff;\">new</span> HeaderApiVersionReader(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">api-version</span><span style=\"color: #800000;\">\"</span>));<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">版本号以什么形式，什么字段传递</span>\n                o.AssumeDefaultVersionWhenUnspecified = <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\n                o.DefaultApiVersion </span>= <span style=\"color: #0000ff;\">new</span> ApiVersion(<span style=\"color: #800080;\">1</span>, <span style=\"color: #800080;\">0</span>);<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">默认版本号</span>\n                o.ApiVersionSelector = <span style=\"color: #0000ff;\">new</span> CurrentImplementationApiVersionSelector(o);<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">默认以当前最高版本进行访问</span>\n<span style=\"color: #000000;\">            });\n\n            </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> services;\n        }</span></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span> IApplicationBuilder UseFrameworkService(<span style=\"color: #0000ff;\">this</span> IApplicationBuilder app, Action&lt;IRouteBuilder&gt; customRoutes = <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)//在定制版本的Startup.ConfigureServices中添加services.UseFrameworkService();即可<br />\n        {\n            app.UseExceptionHandler(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">/Home/Error</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n\n            app.UseStaticFiles();\n            app.UseAuthentication();\n            app.Use(</span><span style=\"color: #0000ff;\">async</span> (context, next) =&gt;<span style=\"color: #000000;\">\n            {\n                </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\">\n                {\n                    </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> next.Invoke();\n                }\n                </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (ConnectionResetException) { }\n                </span><span style=\"color: #0000ff;\">if</span> (context.Response.StatusCode == <span style=\"color: #800080;\">404</span><span style=\"color: #000000;\">)\n                {\n                    </span><span style=\"color: #0000ff;\">await</span> context.Response.WriteAsync(<span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\">.Empty);\n                }\n            });\n\n            app.UseMiddleware</span>&lt;CustomRewriteMiddleware&gt;<span style=\"color: #000000;\">();\n\n            </span><span style=\"color: #0000ff;\">if</span> (customRoutes != <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)\n            {\n                app.UseMvc(customRoutes);\n            }\n            </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">\n            {\n                app.UseMvc(routes </span>=&gt;<span style=\"color: #000000;\">\n                {\n                    routes.MapRoute(\n                        name: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">areaRoute</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        template: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">{area:exists}/{controller=Home}/{action=Index}/{id?}</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n                    routes.MapRoute(\n                        name: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">default</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        template: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">{controller=Home}/{action=Index}/{id?}</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n                });\n\n            }\n\n            </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> app;\n        }</span></pre>\n</div>\n<p>&nbsp;</p>\n<p>我们在标准web类库中，将所有的Controller都添加上默认的版本号1.0</p>\n<div class=\"cnblogs_code\">\n<pre>    [ApiVersion(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">1.0</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [Route(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">[controller]/[action]</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [ApiController]\n或者Areas中的添加\n    [Area(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">User</span><span style=\"color: #800000;\">\"</span>)]<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">User时Area的name</span>\n    [ApiVersion(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">1.0</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [Route(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">[area]/[controller]/[action]</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [ApiController]</span></pre>\n</div>\n<p>我们的定制版本中，需要重写的Controller添加上对应标准web类库里面对应名字的Controller，对应的<span style=\"font-family: 'Courier New'; font-size: 12px;\">ApiVersion修改成大于1.0的版本号，新添加的Controller继承自对应的</span>标准web类库的对应Controller</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #0000ff;\">namespace</span><span style=\"color: #000000;\"> Tailor.Custom3.Https.Controllers\n{\n    [ApiVersion(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">2.0</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [Route(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">[controller]/[action]</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [ApiController]\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> HomeController : Default.Controllers.HomeController\n    {\n        </span><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">readonly</span> ILogger&lt;HomeController&gt;<span style=\"color: #000000;\"> _logger;\n        </span><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">readonly</span><span style=\"color: #000000;\"> ILoginUserService _userService;\n\n        </span><span style=\"color: #0000ff;\">public</span> HomeController(ILogger&lt;HomeController&gt; logger, ILoginUserService userService) : <span style=\"color: #0000ff;\">base</span><span style=\"color: #000000;\">(logger, userService)\n        {\n            _logger </span>=<span style=\"color: #000000;\"> logger;\n            _userService </span>=<span style=\"color: #000000;\"> userService;\n        }\n     }\n}</span></pre>\n</div>\n<p>此时，我们如果需要对某些Action进行重写，则override对应Action，然后进行重写；//Tailor.Custom1.Https和Tailor.Custom3.Https</p>\n<p>我们如果需要对某些cshtml进行重写，则在对应目录添加相同名字的cshtml，然后进行重写；//Tailor.Custom2.Https中只对cshtml进行重写，Tailor.Custom3.Https中对Controller和cshtml都进行重写</p>\n<p>此时我们就可以写一个标准版web类库，定制项目进行局部更改，如发现标准版web类库出现bug，可以只修改一处，处处生成上传即可；再进一步，我们可以将生成的标准版web类库的dll文件上传到指定的服务器特定目录，其他服务器对此目录进行定时的加载或者判断版本再去加载，这样就可以省去很大的精力</p>\n<p>&nbsp;</p>\n<p>但是在实际的项目使用中发现，可能由于Microsoft.AspNetCore.Mvc.Versioning这个包本身的问题，当我们的标准web类库中Controller有重名，但是不是同一个Views或者Areas目录下时，我们的版本控制将会出现所有的同名Controller的可使用版本信息将会变成所有的控制版本。。。这个暂时可以利用不同Controller名字进行规避，详见：<a href=\"https://github.com/microsoft/aspnet-api-versioning/issues/630\">https://github.com/microsoft/aspnet-api-versioning/issues/630</a>&nbsp;<span style=\"color: #ff0000;\">【已修复】</span></p>\n<p>具体实现代码地址：<a href=\"https://github.com/wangpengzong/Tailor\" target=\"_blank\">https://github.com/wangpengzong/Tailor</a></p>\n<p>Native/Default是标准版网站类库</p>\n<p>Tailor.Custom* 是定制化网站，可以在此路径下继承Native/Default的对应Controller，利用overvide对需要重写的action进行重写，不需要重写的不进行overvide即可，或者对cshtml进行重写，不需要重写的不在对应路径下增加cshtml文件即可</p>\n<p>&nbsp;</p>\n<p>&nbsp; &nbsp; &nbsp;&nbsp;</p>","source":"_posts/cnblogs/12833014.md","raw":"---\ntitle: .netcore 定制化项目开发的思考和实现\ndate: 2020-05-06T12:00:00\nauthor: wpzblog\ntags: [\"netcore\",\"定制化\"]\n---\n<p>今年年初进了一家新公司，进入之后一边维护老项目一边了解项目流程，为了接下来的项目重做积累点经验。</p>\n<p>先说下老项目吧，.net fx 3.5+oracle......</p>\n<p>在实际维护中逐渐发现，老项目有标准版、定制版两种，标准版就是一套代码，粗略计算了下，全部版本加起来有20+个版本，如果项目重做后还是依照这个模式去开发维护，估计距离猝死也不远了，并且不同版本代码的复用率极低（好吧，根本没有）。打个比方，我在标准版中发现了一个bug，需要去其他的20+版本里面都修改一遍，删库跑路了解一下。。。。</p>\n<p>为了提升工资（偷懒），进公司没多久就在想办法，如何去提高不同项目的代码复用率，然后想起来了wtm、abp、simplcommerce这三种项目，似乎有不同项目中代码服用的地方。</p>\n<p>wtm、abp类似，是将底层的部分controller、view封装在底层类库，然后项目最外层去使用；</p>\n<p>simplcommerce是将所有的模块放在各个类库中，然后在主项目中集成；</p>\n<p>（或许是我看的不够深入，欢迎指正）</p>\n<p>这三种项目，对于我的不同项目提交代码复用率来说，不能直接起到作用，但是却提供了一种思路，<span style=\"color: #ff0000;\">我们可以将原始的标准版作为一个类库，然后在不同的项目中引用这个类库，做到绝大部分的代码复用，少部分修改</span>。</p>\n<p>&nbsp;</p>\n<p>我们如果想在定制项目中对标准版某个controller的某个action进行修改该怎么办？</p>\n<p>1.我首先想到的是在个性化项目中写一个同名的controller，然后这个controller继承自默认版本的对应controller，来达到重写的目的，但是这个惯性思维陷入误区了，mvc对于controller的控制不和普通的type继承一样，如果同名controller存在，则会报错。。。在运行时我们可以判断出是哪个action不同，但是无法通过emit来进行修改，所以这种办法不可以。</p>\n<p>2.第一种办法不行，那么我们是否可以对于同名controller进行名称上的修改，比如homecontroller在Tailor.Custom1中修改未TailorCustom1homecontroller，然后利用路由进行重定向？结果发现路由重定向，要么自定义一个路由中间件（求大佬给解决办法，我不会。。），要么在请求进入的时候对请求进行重定向（这种重定向就是对HttpContext.Request.Path进行特殊判断和处理，符合条件的进行重定向，但是可能会有很大的问题）</p>\n<p>3.使用版本控制的思路，这个似乎可以，我们将标准版default中所有的都作为版本1.0，然后定制化作为2.0，在请求进入的时候，将请求头添加一个version，如果mvc找不到这个version的controller或者action，会自动转到默认的1.0版本中</p>\n<p>&nbsp;</p>\n<p>那我们开始新建一个简化版的项目，大概的分组可以做这样</p>\n<p><img src=\"/cnblogs/12833014/789895-20200505211512224-1873232722.png\" alt=\"\" /></p>\n<p>native/default作为标准版web类库；</p>\n<p>Tailor.Custom* 是定制化网站；</p>\n<p>entity是实体、service是服务，实体和服务我们暂且不说，先说明下default这个标准web类库，这个类库就是上面所说的标准类库，让其他的Tailor.Custom1、Tailor.Custom1.Https、Tailor.Custom2.Https、Tailor.Custom3.Https（以下称定制项目）去引用，然后再各自的项目中可以个性化修改</p>\n<p>标准web类库的csproj文件做适当的修改以更改成web类库</p>\n<div class=\"cnblogs_code\">\n<pre>&lt;Project Sdk=<span style=\"color: #800000;\">\"</span><span style=\"color: #ff0000;\">Microsoft.NET.Sdk.Web</span><span style=\"color: #800000;\">\"</span>&gt;\n\n  &lt;PropertyGroup Label=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Globals</span><span style=\"color: #800000;\">\"</span>&gt;\n    &lt;SccProjectName&gt;SAK&lt;/SccProjectName&gt;\n    &lt;SccProvider&gt;SAK&lt;/SccProvider&gt;\n    &lt;SccAuxPath&gt;SAK&lt;/SccAuxPath&gt;\n    &lt;SccLocalPath&gt;SAK&lt;/SccLocalPath&gt;\n  &lt;/PropertyGroup&gt;\n\n  &lt;PropertyGroup&gt;\n    &lt;TargetFramework&gt;netcoreapp3.<span style=\"color: #800080;\">1</span>&lt;/TargetFramework&gt;\n    <span style=\"color: #ff0000;\">&lt;OutputType&gt;Library&lt;/OutputType&gt;</span>\n  &lt;/PropertyGroup&gt;<span style=\"color: #000000;\">\n  ...\n</span>&lt;/Project&gt;</pre>\n</div>\n<p>然后借鉴wtm中使用项目对web类库的引用，在标准web类库中添加FrameworkServiceExtension.cs文件</p>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span> IServiceCollection AddFrameworkService(<span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\"> IServiceCollection services,\n            WebHostBuilderContext webHostBuilderContext </span>= <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">\n        )//在定制版本的Startup.ConfigureServices中添加services.AddFrameworkService();即可\n        {\n            CurrentDirectoryHelpers.SetCurrentDirectory();\n\n            </span><span style=\"color: #0000ff;\">var</span> configBuilder = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ConfigurationBuilder();\n\n            </span><span style=\"color: #0000ff;\">if</span> (!File.Exists(Path.Combine(Directory.GetCurrentDirectory(), <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">appsettings.json</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)))\n            {\n                </span><span style=\"color: #0000ff;\">var</span> binLocation = Assembly.GetEntryAssembly()?<span style=\"color: #000000;\">.Location;\n                </span><span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\">.IsNullOrEmpty(binLocation))\n                {\n                    </span><span style=\"color: #0000ff;\">var</span> binPath = <span style=\"color: #0000ff;\">new</span> FileInfo(binLocation).Directory?<span style=\"color: #000000;\">.FullName;\n                    </span><span style=\"color: #0000ff;\">if</span> (File.Exists(Path.Combine(binPath, <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">appsettings.json</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)))\n                    {\n                        Directory.SetCurrentDirectory(binPath);\n                        configBuilder.SetBasePath(binPath)\n                            .AddJsonFile(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">appsettings.json</span><span style=\"color: #800000;\">\"</span>, optional: <span style=\"color: #0000ff;\">true</span>, reloadOnChange: <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">)\n                            .AddEnvironmentVariables();\n                    }\n                }\n            }\n            </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">\n            {\n                configBuilder.SetBasePath(Directory.GetCurrentDirectory())\n                    .AddJsonFile(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">appsettings.json</span><span style=\"color: #800000;\">\"</span>, optional: <span style=\"color: #0000ff;\">true</span>, reloadOnChange: <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">)\n                    .AddEnvironmentVariables();\n            }\n\n            </span><span style=\"color: #0000ff;\">if</span> (webHostBuilderContext != <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)\n            {\n                </span><span style=\"color: #0000ff;\">var</span> env =<span style=\"color: #000000;\"> webHostBuilderContext.HostingEnvironment;\n                configBuilder\n                    .AddJsonFile($</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">appsettings.{env.EnvironmentName}.json</span><span style=\"color: #800000;\">\"</span>, optional: <span style=\"color: #0000ff;\">true</span>, reloadOnChange: <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);\n            }\n\n            </span><span style=\"color: #0000ff;\">var</span> config =<span style=\"color: #000000;\"> configBuilder.Build();\n\n            </span><span style=\"color: #0000ff;\">new</span> AppSettingProvider().Initial(config);<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">添加静态的配置全局配置文件</span>\n\n            <span style=\"color: #0000ff;\">var</span> gd =<span style=\"color: #000000;\"> AssemblyHelper.GetGlobalData();\n\n            </span><span style=\"color: #0000ff;\">var</span> currentNamespace =<span style=\"color: #000000;\"> MethodBase.GetCurrentMethod().DeclaringType.Namespace;\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">获取标准web类库的Assembly</span>\n            <span style=\"color: #0000ff;\">var</span> currentAssembly = gd.AllAssembly.Where(x =&gt; x.ManifestModule.Name == $<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">{currentNamespace}.dll</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">).FirstOrDefault();\n\n            StackTrace ss </span>= <span style=\"color: #0000ff;\">new</span> StackTrace(<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);\n            MethodBase mb </span>= ss.GetFrame(ss.FrameCount - <span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">).GetMethod();\n\n            </span><span style=\"color: #0000ff;\">var</span> userNamespace = mb.DeclaringType.Namespace;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">调用标准web类库的定制版项目命名空间</span>\n<span style=\"color: #000000;\">\n            services.AddMvc(options </span>=&gt;<span style=\"color: #000000;\">\n            {\n                options.EnableEndpointRouting </span>= <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\n            });\n\n            services.AddRazorPages()</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">添加RazorPages</span>\n<span style=\"color: #000000;\">                .AddRazorRuntimeCompilation()\n            .ConfigureApplicationPartManager(m </span>=&gt;<span style=\"color: #000000;\">\n            {\n                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">将标准web类库的Controllers添加到定制版，即我们要运行的网站中</span>\n                <span style=\"color: #0000ff;\">var</span> feature = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ControllerFeature();\n\n                </span><span style=\"color: #0000ff;\">if</span> (currentAssembly != <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)\n                {\n                    m.ApplicationParts.Add(</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> AssemblyPart(currentAssembly));\n                }\n                m.PopulateFeature(feature);\n                services.AddSingleton(feature.Controllers.Select(t </span>=&gt;<span style=\"color: #000000;\"> t.AsType()).ToArray());\n            })\n            .AddControllersAsServices()\n            .AddViewLocalization(LanguageViewLocationExpanderFormat.Suffix);</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">添加多语言支持\n\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">services.Configure&lt;MvcRazorRuntimeCompilationOptions&gt;(options =&gt;\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">{\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">    if (currentAssembly != null)\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">    {\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">        options.FileProviders.Add(\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">        new EmbeddedFileProvider(\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">            currentAssembly,\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">            currentNamespace </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> your external assembly's base namespace\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">        )\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">    );\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">    }\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">});</span>\n            services.AddSingleton&lt;ILoginUserService, LoginUserService&gt;();<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">添加需要引用的其他服务</span>\n<span style=\"color: #000000;\">\n            services.AddMvc(options </span>=&gt;<span style=\"color: #000000;\">\n            {\n                options.Conventions.Add(</span><span style=\"color: #0000ff;\">new</span> ApiControllerVersionConvention());<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">添加版本控制时忽略添加的某些重要属性</span>\n<span style=\"color: #000000;\">            });\n\n            services.AddApiVersioning(o </span>=&gt;<span style=\"color: #000000;\"> {\n                o.ReportApiVersions </span>= <span style=\"color: #0000ff;\">true</span>;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">返回版本可使用的版本\n                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">o.ApiVersionReader = new UrlSegmentApiVersionReader();\n                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">o.ApiVersionReader = ApiVersionReader.Combine(new HeaderApiVersionReader(\"api-version\"), new QueryStringApiVersionReader(\"api-version\"));\n                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">o.ApiVersionReader = ApiVersionReader.Combine(new QueryStringApiVersionReader(\"api-version\"));</span>\n                o.ApiVersionReader = ApiVersionReader.Combine(<span style=\"color: #0000ff;\">new</span> HeaderApiVersionReader(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">api-version</span><span style=\"color: #800000;\">\"</span>));<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">版本号以什么形式，什么字段传递</span>\n                o.AssumeDefaultVersionWhenUnspecified = <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\n                o.DefaultApiVersion </span>= <span style=\"color: #0000ff;\">new</span> ApiVersion(<span style=\"color: #800080;\">1</span>, <span style=\"color: #800080;\">0</span>);<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">默认版本号</span>\n                o.ApiVersionSelector = <span style=\"color: #0000ff;\">new</span> CurrentImplementationApiVersionSelector(o);<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">默认以当前最高版本进行访问</span>\n<span style=\"color: #000000;\">            });\n\n            </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> services;\n        }</span></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span> IApplicationBuilder UseFrameworkService(<span style=\"color: #0000ff;\">this</span> IApplicationBuilder app, Action&lt;IRouteBuilder&gt; customRoutes = <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)//在定制版本的Startup.ConfigureServices中添加services.UseFrameworkService();即可<br />\n        {\n            app.UseExceptionHandler(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">/Home/Error</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n\n            app.UseStaticFiles();\n            app.UseAuthentication();\n            app.Use(</span><span style=\"color: #0000ff;\">async</span> (context, next) =&gt;<span style=\"color: #000000;\">\n            {\n                </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\">\n                {\n                    </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> next.Invoke();\n                }\n                </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (ConnectionResetException) { }\n                </span><span style=\"color: #0000ff;\">if</span> (context.Response.StatusCode == <span style=\"color: #800080;\">404</span><span style=\"color: #000000;\">)\n                {\n                    </span><span style=\"color: #0000ff;\">await</span> context.Response.WriteAsync(<span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\">.Empty);\n                }\n            });\n\n            app.UseMiddleware</span>&lt;CustomRewriteMiddleware&gt;<span style=\"color: #000000;\">();\n\n            </span><span style=\"color: #0000ff;\">if</span> (customRoutes != <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)\n            {\n                app.UseMvc(customRoutes);\n            }\n            </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">\n            {\n                app.UseMvc(routes </span>=&gt;<span style=\"color: #000000;\">\n                {\n                    routes.MapRoute(\n                        name: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">areaRoute</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        template: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">{area:exists}/{controller=Home}/{action=Index}/{id?}</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n                    routes.MapRoute(\n                        name: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">default</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n                        template: </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">{controller=Home}/{action=Index}/{id?}</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n                });\n\n            }\n\n            </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> app;\n        }</span></pre>\n</div>\n<p>&nbsp;</p>\n<p>我们在标准web类库中，将所有的Controller都添加上默认的版本号1.0</p>\n<div class=\"cnblogs_code\">\n<pre>    [ApiVersion(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">1.0</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [Route(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">[controller]/[action]</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [ApiController]\n或者Areas中的添加\n    [Area(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">User</span><span style=\"color: #800000;\">\"</span>)]<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">User时Area的name</span>\n    [ApiVersion(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">1.0</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [Route(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">[area]/[controller]/[action]</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [ApiController]</span></pre>\n</div>\n<p>我们的定制版本中，需要重写的Controller添加上对应标准web类库里面对应名字的Controller，对应的<span style=\"font-family: 'Courier New'; font-size: 12px;\">ApiVersion修改成大于1.0的版本号，新添加的Controller继承自对应的</span>标准web类库的对应Controller</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #0000ff;\">namespace</span><span style=\"color: #000000;\"> Tailor.Custom3.Https.Controllers\n{\n    [ApiVersion(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">2.0</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [Route(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">[controller]/[action]</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [ApiController]\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> HomeController : Default.Controllers.HomeController\n    {\n        </span><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">readonly</span> ILogger&lt;HomeController&gt;<span style=\"color: #000000;\"> _logger;\n        </span><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">readonly</span><span style=\"color: #000000;\"> ILoginUserService _userService;\n\n        </span><span style=\"color: #0000ff;\">public</span> HomeController(ILogger&lt;HomeController&gt; logger, ILoginUserService userService) : <span style=\"color: #0000ff;\">base</span><span style=\"color: #000000;\">(logger, userService)\n        {\n            _logger </span>=<span style=\"color: #000000;\"> logger;\n            _userService </span>=<span style=\"color: #000000;\"> userService;\n        }\n     }\n}</span></pre>\n</div>\n<p>此时，我们如果需要对某些Action进行重写，则override对应Action，然后进行重写；//Tailor.Custom1.Https和Tailor.Custom3.Https</p>\n<p>我们如果需要对某些cshtml进行重写，则在对应目录添加相同名字的cshtml，然后进行重写；//Tailor.Custom2.Https中只对cshtml进行重写，Tailor.Custom3.Https中对Controller和cshtml都进行重写</p>\n<p>此时我们就可以写一个标准版web类库，定制项目进行局部更改，如发现标准版web类库出现bug，可以只修改一处，处处生成上传即可；再进一步，我们可以将生成的标准版web类库的dll文件上传到指定的服务器特定目录，其他服务器对此目录进行定时的加载或者判断版本再去加载，这样就可以省去很大的精力</p>\n<p>&nbsp;</p>\n<p>但是在实际的项目使用中发现，可能由于Microsoft.AspNetCore.Mvc.Versioning这个包本身的问题，当我们的标准web类库中Controller有重名，但是不是同一个Views或者Areas目录下时，我们的版本控制将会出现所有的同名Controller的可使用版本信息将会变成所有的控制版本。。。这个暂时可以利用不同Controller名字进行规避，详见：<a href=\"https://github.com/microsoft/aspnet-api-versioning/issues/630\">https://github.com/microsoft/aspnet-api-versioning/issues/630</a>&nbsp;<span style=\"color: #ff0000;\">【已修复】</span></p>\n<p>具体实现代码地址：<a href=\"https://github.com/wangpengzong/Tailor\" target=\"_blank\">https://github.com/wangpengzong/Tailor</a></p>\n<p>Native/Default是标准版网站类库</p>\n<p>Tailor.Custom* 是定制化网站，可以在此路径下继承Native/Default的对应Controller，利用overvide对需要重写的action进行重写，不需要重写的不进行overvide即可，或者对cshtml进行重写，不需要重写的不在对应路径下增加cshtml文件即可</p>\n<p>&nbsp;</p>\n<p>&nbsp; &nbsp; &nbsp;&nbsp;</p>","slug":"cnblogs/12833014","published":1,"updated":"2022-07-10T13:01:13.341Z","_id":"cl5f7ispq001gc0unb09000ja","comments":1,"layout":"post","photos":[],"link":"","content":"<p>今年年初进了一家新公司，进入之后一边维护老项目一边了解项目流程，为了接下来的项目重做积累点经验。</p>\n<p>先说下老项目吧，.net fx 3.5+oracle......</p>\n<p>在实际维护中逐渐发现，老项目有标准版、定制版两种，标准版就是一套代码，粗略计算了下，全部版本加起来有20+个版本，如果项目重做后还是依照这个模式去开发维护，估计距离猝死也不远了，并且不同版本代码的复用率极低（好吧，根本没有）。打个比方，我在标准版中发现了一个bug，需要去其他的20+版本里面都修改一遍，删库跑路了解一下。。。。</p>\n<p>为了提升工资（偷懒），进公司没多久就在想办法，如何去提高不同项目的代码复用率，然后想起来了wtm、abp、simplcommerce这三种项目，似乎有不同项目中代码服用的地方。</p>\n<p>wtm、abp类似，是将底层的部分controller、view封装在底层类库，然后项目最外层去使用；</p>\n<p>simplcommerce是将所有的模块放在各个类库中，然后在主项目中集成；</p>\n<p>（或许是我看的不够深入，欢迎指正）</p>\n<p>这三种项目，对于我的不同项目提交代码复用率来说，不能直接起到作用，但是却提供了一种思路，<span style=\"color: #ff0000;\">我们可以将原始的标准版作为一个类库，然后在不同的项目中引用这个类库，做到绝大部分的代码复用，少部分修改</span>。</p>\n<p>&nbsp;</p>\n<p>我们如果想在定制项目中对标准版某个controller的某个action进行修改该怎么办？</p>\n<p>1.我首先想到的是在个性化项目中写一个同名的controller，然后这个controller继承自默认版本的对应controller，来达到重写的目的，但是这个惯性思维陷入误区了，mvc对于controller的控制不和普通的type继承一样，如果同名controller存在，则会报错。。。在运行时我们可以判断出是哪个action不同，但是无法通过emit来进行修改，所以这种办法不可以。</p>\n<p>2.第一种办法不行，那么我们是否可以对于同名controller进行名称上的修改，比如homecontroller在Tailor.Custom1中修改未TailorCustom1homecontroller，然后利用路由进行重定向？结果发现路由重定向，要么自定义一个路由中间件（求大佬给解决办法，我不会。。），要么在请求进入的时候对请求进行重定向（这种重定向就是对HttpContext.Request.Path进行特殊判断和处理，符合条件的进行重定向，但是可能会有很大的问题）</p>\n<p>3.使用版本控制的思路，这个似乎可以，我们将标准版default中所有的都作为版本1.0，然后定制化作为2.0，在请求进入的时候，将请求头添加一个version，如果mvc找不到这个version的controller或者action，会自动转到默认的1.0版本中</p>\n<p>&nbsp;</p>\n<p>那我们开始新建一个简化版的项目，大概的分组可以做这样</p>\n<p><img src=\"/cnblogs/12833014/789895-20200505211512224-1873232722.png\" alt=\"\" /></p>\n<p>native/default作为标准版web类库；</p>\n<p>Tailor.Custom* 是定制化网站；</p>\n<p>entity是实体、service是服务，实体和服务我们暂且不说，先说明下default这个标准web类库，这个类库就是上面所说的标准类库，让其他的Tailor.Custom1、Tailor.Custom1.Https、Tailor.Custom2.Https、Tailor.Custom3.Https（以下称定制项目）去引用，然后再各自的项目中可以个性化修改</p>\n<p>标准web类库的csproj文件做适当的修改以更改成web类库</p>\n<div class=\"cnblogs_code\">\n<pre>&lt;Project Sdk=<span style=\"color: #800000;\">\"</span><span style=\"color: #ff0000;\">Microsoft.NET.Sdk.Web</span><span style=\"color: #800000;\">\"</span>&gt;\n\n<p>  &lt;PropertyGroup Label=<span style=\"color: #800000;\">“</span><span style=\"color: #800000;\">Globals</span><span style=\"color: #800000;\">“</span>&gt;<br>    &lt;SccProjectName&gt;SAK&lt;/SccProjectName&gt;<br>    &lt;SccProvider&gt;SAK&lt;/SccProvider&gt;<br>    &lt;SccAuxPath&gt;SAK&lt;/SccAuxPath&gt;<br>    &lt;SccLocalPath&gt;SAK&lt;/SccLocalPath&gt;<br>  &lt;/PropertyGroup&gt;</p>\n<p>  &lt;PropertyGroup&gt;<br>    &lt;TargetFramework&gt;netcoreapp3.<span style=\"color: #800080;\">1</span>&lt;/TargetFramework&gt;<br>    <span style=\"color: #ff0000;\">&lt;OutputType&gt;Library&lt;/OutputType&gt;</span><br>  &lt;/PropertyGroup&gt;<span style=\"color: #000000;\"><br>  …<br></span>&lt;/Project&gt;</pre></p>\n</div>\n<p>然后借鉴wtm中使用项目对web类库的引用，在标准web类库中添加FrameworkServiceExtension.cs文件</p>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span> IServiceCollection AddFrameworkService(<span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\"> IServiceCollection services,\n            WebHostBuilderContext webHostBuilderContext </span>= <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">\n        )//在定制版本的Startup.ConfigureServices中添加services.AddFrameworkService();即可\n        {\n            CurrentDirectoryHelpers.SetCurrentDirectory();\n\n<pre><code>        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; configBuilder = &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; ConfigurationBuilder();\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (!File.Exists(Path.Combine(Directory.GetCurrentDirectory(), &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;appsettings.json&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)))\n        &#123;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; binLocation = Assembly.GetEntryAssembly()?&lt;span style=&quot;color: #000000;&quot;&gt;.Location;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (!&lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;.IsNullOrEmpty(binLocation))\n            &#123;\n                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; binPath = &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; FileInfo(binLocation).Directory?&lt;span style=&quot;color: #000000;&quot;&gt;.FullName;\n                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (File.Exists(Path.Combine(binPath, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;appsettings.json&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)))\n                &#123;\n                    Directory.SetCurrentDirectory(binPath);\n                    configBuilder.SetBasePath(binPath)\n                        .AddJsonFile(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;appsettings.json&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, optional: &lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;, reloadOnChange: &lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)\n                        .AddEnvironmentVariables();\n                &#125;\n            &#125;\n        &#125;\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;\n        &#123;\n            configBuilder.SetBasePath(Directory.GetCurrentDirectory())\n                .AddJsonFile(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;appsettings.json&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, optional: &lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;, reloadOnChange: &lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)\n                .AddEnvironmentVariables();\n        &#125;\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (webHostBuilderContext != &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)\n        &#123;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; env =&lt;span style=&quot;color: #000000;&quot;&gt; webHostBuilderContext.HostingEnvironment;\n            configBuilder\n                .AddJsonFile($&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;appsettings.&#123;env.EnvironmentName&#125;.json&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, optional: &lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;, reloadOnChange: &lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n        &#125;\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; config =&lt;span style=&quot;color: #000000;&quot;&gt; configBuilder.Build();\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; AppSettingProvider().Initial(config);&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;添加静态的配置全局配置文件&lt;/span&gt;\n\n        &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; gd =&lt;span style=&quot;color: #000000;&quot;&gt; AssemblyHelper.GetGlobalData();\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; currentNamespace =&lt;span style=&quot;color: #000000;&quot;&gt; MethodBase.GetCurrentMethod().DeclaringType.Namespace;\n        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;获取标准web类库的Assembly&lt;/span&gt;\n        &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; currentAssembly = gd.AllAssembly.Where(x =&amp;gt; x.ManifestModule.Name == $&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&#123;currentNamespace&#125;.dll&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;).FirstOrDefault();\n\n        StackTrace ss &lt;/span&gt;= &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; StackTrace(&lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n        MethodBase mb &lt;/span&gt;= ss.GetFrame(ss.FrameCount - &lt;span style=&quot;color: #800080;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;).GetMethod();\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; userNamespace = mb.DeclaringType.Namespace;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;调用标准web类库的定制版项目命名空间&lt;/span&gt;\n</code></pre>\n<span style=\"color: #000000;\">\n            services.AddMvc(options </span>=&gt;<span style=\"color: #000000;\">\n            {\n                options.EnableEndpointRouting </span>= <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\n            });\n\n<pre><code>        services.AddRazorPages()&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;添加RazorPages&lt;/span&gt;\n</code></pre>\n<p><span style=\"color: #000000;\">                .AddRazorRuntimeCompilation()<br>            .ConfigureApplicationPartManager(m </span>=&gt;<span style=\"color: #000000;\"><br>            {<br>                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">将标准web类库的Controllers添加到定制版，即我们要运行的网站中</span><br>                <span style=\"color: #0000ff;\">var</span> feature = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ControllerFeature();</p>\n<pre><code>            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (currentAssembly != &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)\n            &#123;\n                m.ApplicationParts.Add(&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; AssemblyPart(currentAssembly));\n            &#125;\n            m.PopulateFeature(feature);\n            services.AddSingleton(feature.Controllers.Select(t &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; t.AsType()).ToArray());\n        &#125;)\n        .AddControllersAsServices()\n        .AddViewLocalization(LanguageViewLocationExpanderFormat.Suffix);&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;添加多语言支持\n\n        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;services.Configure&amp;lt;MvcRazorRuntimeCompilationOptions&amp;gt;(options =&amp;gt;\n        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;&#123;\n        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;    if (currentAssembly != null)\n        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;    &#123;\n        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;        options.FileProviders.Add(\n        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;        new EmbeddedFileProvider(\n        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;            currentAssembly,\n        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;            currentNamespace &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; your external assembly&#39;s base namespace\n        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;        )\n        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;    );\n        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;    &#125;\n        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;&#125;);&lt;/span&gt;\n        services.AddSingleton&amp;lt;ILoginUserService, LoginUserService&amp;gt;();&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;添加需要引用的其他服务&lt;/span&gt;\n</code></pre>\n<span style=\"color: #000000;\">\n            services.AddMvc(options </span>=&gt;<span style=\"color: #000000;\">\n            {\n                options.Conventions.Add(</span><span style=\"color: #0000ff;\">new</span> ApiControllerVersionConvention());<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">添加版本控制时忽略添加的某些重要属性</span>\n<span style=\"color: #000000;\">            });\n\n<pre><code>        services.AddApiVersioning(o &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; &#123;\n            o.ReportApiVersions &lt;/span&gt;= &lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;返回版本可使用的版本\n            &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;o.ApiVersionReader = new UrlSegmentApiVersionReader();\n            &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;o.ApiVersionReader = ApiVersionReader.Combine(new HeaderApiVersionReader(&quot;api-version&quot;), new QueryStringApiVersionReader(&quot;api-version&quot;));\n            &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;o.ApiVersionReader = ApiVersionReader.Combine(new QueryStringApiVersionReader(&quot;api-version&quot;));&lt;/span&gt;\n            o.ApiVersionReader = ApiVersionReader.Combine(&lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; HeaderApiVersionReader(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;api-version&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;));&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;版本号以什么形式，什么字段传递&lt;/span&gt;\n            o.AssumeDefaultVersionWhenUnspecified = &lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;;\n            o.DefaultApiVersion &lt;/span&gt;= &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; ApiVersion(&lt;span style=&quot;color: #800080;&quot;&gt;1&lt;/span&gt;, &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt;);&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;默认版本号&lt;/span&gt;\n            o.ApiVersionSelector = &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; CurrentImplementationApiVersionSelector(o);&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;默认以当前最高版本进行访问&lt;/span&gt;\n</code></pre>\n<p><span style=\"color: #000000;\">            });</p>\n<pre><code>        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; services;\n    &#125;&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span> IApplicationBuilder UseFrameworkService(<span style=\"color: #0000ff;\">this</span> IApplicationBuilder app, Action&lt;IRouteBuilder&gt; customRoutes = <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)//在定制版本的Startup.ConfigureServices中添加services.UseFrameworkService();即可<br />\n        {\n            app.UseExceptionHandler(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">/Home/Error</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n\n<pre><code>        app.UseStaticFiles();\n        app.UseAuthentication();\n        app.Use(&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;async&lt;/span&gt; (context, next) =&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;\n        &#123;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;try&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;\n            &#123;\n                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; next.Invoke();\n            &#125;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;catch&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; (ConnectionResetException) &#123; &#125;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (context.Response.StatusCode == &lt;span style=&quot;color: #800080;&quot;&gt;404&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)\n            &#123;\n                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt; context.Response.WriteAsync(&lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;.Empty);\n            &#125;\n        &#125;);\n\n        app.UseMiddleware&lt;/span&gt;&amp;lt;CustomRewriteMiddleware&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;();\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (customRoutes != &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)\n        &#123;\n            app.UseMvc(customRoutes);\n        &#125;\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;\n        &#123;\n            app.UseMvc(routes &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;\n            &#123;\n                routes.MapRoute(\n                    name: &lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;areaRoute&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;,\n                    template: &lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&#123;area:exists&#125;/&#123;controller=Home&#125;/&#123;action=Index&#125;/&#123;id?&#125;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n                routes.MapRoute(\n                    name: &lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;default&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;,\n                    template: &lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&#123;controller=Home&#125;/&#123;action=Index&#125;/&#123;id?&#125;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n            &#125;);\n\n        &#125;\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; app;\n    &#125;&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<p>&nbsp;</p>\n<p>我们在标准web类库中，将所有的Controller都添加上默认的版本号1.0</p>\n<div class=\"cnblogs_code\">\n<pre>    [ApiVersion(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">1.0</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [Route(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">[controller]/[action]</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [ApiController]\n或者Areas中的添加\n    [Area(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">User</span><span style=\"color: #800000;\">\"</span>)]<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">User时Area的name</span>\n    [ApiVersion(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">1.0</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [Route(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">[area]/[controller]/[action]</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [ApiController]</span></pre>\n</div>\n<p>我们的定制版本中，需要重写的Controller添加上对应标准web类库里面对应名字的Controller，对应的<span style=\"font-family: 'Courier New'; font-size: 12px;\">ApiVersion修改成大于1.0的版本号，新添加的Controller继承自对应的</span>标准web类库的对应Controller</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #0000ff;\">namespace</span><span style=\"color: #000000;\"> Tailor.Custom3.Https.Controllers\n{\n    [ApiVersion(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">2.0</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [Route(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">[controller]/[action]</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [ApiController]\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> HomeController : Default.Controllers.HomeController\n    {\n        </span><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">readonly</span> ILogger&lt;HomeController&gt;<span style=\"color: #000000;\"> _logger;\n        </span><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">readonly</span><span style=\"color: #000000;\"> ILoginUserService _userService;\n\n<pre><code>    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; HomeController(ILogger&amp;lt;HomeController&amp;gt; logger, ILoginUserService userService) : &lt;span style=&quot;color: #0000ff;&quot;&gt;base&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;(logger, userService)\n    &#123;\n        _logger &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; logger;\n        _userService &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; userService;\n    &#125;\n &#125;\n</code></pre>\n<p>}</span></pre></p>\n</div>\n<p>此时，我们如果需要对某些Action进行重写，则override对应Action，然后进行重写；//Tailor.Custom1.Https和Tailor.Custom3.Https</p>\n<p>我们如果需要对某些cshtml进行重写，则在对应目录添加相同名字的cshtml，然后进行重写；//Tailor.Custom2.Https中只对cshtml进行重写，Tailor.Custom3.Https中对Controller和cshtml都进行重写</p>\n<p>此时我们就可以写一个标准版web类库，定制项目进行局部更改，如发现标准版web类库出现bug，可以只修改一处，处处生成上传即可；再进一步，我们可以将生成的标准版web类库的dll文件上传到指定的服务器特定目录，其他服务器对此目录进行定时的加载或者判断版本再去加载，这样就可以省去很大的精力</p>\n<p>&nbsp;</p>\n<p>但是在实际的项目使用中发现，可能由于Microsoft.AspNetCore.Mvc.Versioning这个包本身的问题，当我们的标准web类库中Controller有重名，但是不是同一个Views或者Areas目录下时，我们的版本控制将会出现所有的同名Controller的可使用版本信息将会变成所有的控制版本。。。这个暂时可以利用不同Controller名字进行规避，详见：<a href=\"https://github.com/microsoft/aspnet-api-versioning/issues/630\">https://github.com/microsoft/aspnet-api-versioning/issues/630</a>&nbsp;<span style=\"color: #ff0000;\">【已修复】</span></p>\n<p>具体实现代码地址：<a href=\"https://github.com/wangpengzong/Tailor\" target=\"_blank\">https://github.com/wangpengzong/Tailor</a></p>\n<p>Native/Default是标准版网站类库</p>\n<p>Tailor.Custom* 是定制化网站，可以在此路径下继承Native/Default的对应Controller，利用overvide对需要重写的action进行重写，不需要重写的不进行overvide即可，或者对cshtml进行重写，不需要重写的不在对应路径下增加cshtml文件即可</p>\n<p>&nbsp;</p>\n<p>&nbsp; &nbsp; &nbsp;&nbsp;</p>","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"spatxos","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/spatxos","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"<p>今年年初进了一家新公司，进入之后一边维护老项目一边了解项目流程，为了接下来的项目重做积累点经验。</p>\n<p>先说下老项目吧，.net fx 3.5+oracle......</p>\n<p>在实际维护中逐渐发现，老项目有标准版、定制版两种，标准版就是一套代码，粗略计算了下，全部版本加起来有20+个版本，如果项目重做后还是依照这个模式去开发维护，估计距离猝死也不远了，并且不同版本代码的复用率极低（好吧，根本没有）。打个比方，我在标准版中发现了一个bug，需要去其他的20+版本里面都修改一遍，删库跑路了解一下。。。。</p>\n<p>为了提升工资（偷懒），进公司没多久就在想办法，如何去提高不同项目的代码复用率，然后想起来了wtm、abp、simplcommerce这三种项目，似乎有不同项目中代码服用的地方。</p>\n<p>wtm、abp类似，是将底层的部分controller、view封装在底层类库，然后项目最外层去使用；</p>\n<p>simplcommerce是将所有的模块放在各个类库中，然后在主项目中集成；</p>\n<p>（或许是我看的不够深入，欢迎指正）</p>\n<p>这三种项目，对于我的不同项目提交代码复用率来说，不能直接起到作用，但是却提供了一种思路，<span style=\"color: #ff0000;\">我们可以将原始的标准版作为一个类库，然后在不同的项目中引用这个类库，做到绝大部分的代码复用，少部分修改</span>。</p>\n<p>&nbsp;</p>\n<p>我们如果想在定制项目中对标准版某个controller的某个action进行修改该怎么办？</p>\n<p>1.我首先想到的是在个性化项目中写一个同名的controller，然后这个controller继承自默认版本的对应controller，来达到重写的目的，但是这个惯性思维陷入误区了，mvc对于controller的控制不和普通的type继承一样，如果同名controller存在，则会报错。。。在运行时我们可以判断出是哪个action不同，但是无法通过emit来进行修改，所以这种办法不可以。</p>\n<p>2.第一种办法不行，那么我们是否可以对于同名controller进行名称上的修改，比如homecontroller在Tailor.Custom1中修改未TailorCustom1homecontroller，然后利用路由进行重定向？结果发现路由重定向，要么自定义一个路由中间件（求大佬给解决办法，我不会。。），要么在请求进入的时候对请求进行重定向（这种重定向就是对HttpContext.Request.Path进行特殊判断和处理，符合条件的进行重定向，但是可能会有很大的问题）</p>\n<p>3.使用版本控制的思路，这个似乎可以，我们将标准版default中所有的都作为版本1.0，然后定制化作为2.0，在请求进入的时候，将请求头添加一个version，如果mvc找不到这个version的controller或者action，会自动转到默认的1.0版本中</p>\n<p>&nbsp;</p>\n<p>那我们开始新建一个简化版的项目，大概的分组可以做这样</p>\n<p><img src=\"/cnblogs/12833014/789895-20200505211512224-1873232722.png\" alt=\"\" /></p>\n<p>native/default作为标准版web类库；</p>\n<p>Tailor.Custom* 是定制化网站；</p>\n<p>entity是实体、service是服务，实体和服务我们暂且不说，先说明下default这个标准web类库，这个类库就是上面所说的标准类库，让其他的Tailor.Custom1、Tailor.Custom1.Https、Tailor.Custom2.Https、Tailor.Custom3.Https（以下称定制项目）去引用，然后再各自的项目中可以个性化修改</p>\n<p>标准web类库的csproj文件做适当的修改以更改成web类库</p>\n<div class=\"cnblogs_code\">\n<pre>&lt;Project Sdk=<span style=\"color: #800000;\">\"</span><span style=\"color: #ff0000;\">Microsoft.NET.Sdk.Web</span><span style=\"color: #800000;\">\"</span>&gt;\n\n<p>  &lt;PropertyGroup Label=<span style=\"color: #800000;\">“</span><span style=\"color: #800000;\">Globals</span><span style=\"color: #800000;\">“</span>&gt;<br>    &lt;SccProjectName&gt;SAK&lt;/SccProjectName&gt;<br>    &lt;SccProvider&gt;SAK&lt;/SccProvider&gt;<br>    &lt;SccAuxPath&gt;SAK&lt;/SccAuxPath&gt;<br>    &lt;SccLocalPath&gt;SAK&lt;/SccLocalPath&gt;<br>  &lt;/PropertyGroup&gt;</p>\n<p>  &lt;PropertyGroup&gt;<br>    &lt;TargetFramework&gt;netcoreapp3.<span style=\"color: #800080;\">1</span>&lt;/TargetFramework&gt;<br>    <span style=\"color: #ff0000;\">&lt;OutputType&gt;Library&lt;/OutputType&gt;</span><br>  &lt;/PropertyGroup&gt;<span style=\"color: #000000;\"><br>  …<br></span>&lt;/Project&gt;</pre></p>\n</div>\n<p>然后借鉴wtm中使用项目对web类库的引用，在标准web类库中添加FrameworkServiceExtension.cs文件</p>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span> IServiceCollection AddFrameworkService(<span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\"> IServiceCollection services,\n            WebHostBuilderContext webHostBuilderContext </span>= <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">\n        )//在定制版本的Startup.ConfigureServices中添加services.AddFrameworkService();即可\n        {\n            CurrentDirectoryHelpers.SetCurrentDirectory();\n\n<pre><code>        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; configBuilder = &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; ConfigurationBuilder();\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (!File.Exists(Path.Combine(Directory.GetCurrentDirectory(), &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;appsettings.json&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)))\n        &#123;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; binLocation = Assembly.GetEntryAssembly()?&lt;span style=&quot;color: #000000;&quot;&gt;.Location;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (!&lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;.IsNullOrEmpty(binLocation))\n            &#123;\n                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; binPath = &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; FileInfo(binLocation).Directory?&lt;span style=&quot;color: #000000;&quot;&gt;.FullName;\n                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (File.Exists(Path.Combine(binPath, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;appsettings.json&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)))\n                &#123;\n                    Directory.SetCurrentDirectory(binPath);\n                    configBuilder.SetBasePath(binPath)\n                        .AddJsonFile(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;appsettings.json&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, optional: &lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;, reloadOnChange: &lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)\n                        .AddEnvironmentVariables();\n                &#125;\n            &#125;\n        &#125;\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;\n        &#123;\n            configBuilder.SetBasePath(Directory.GetCurrentDirectory())\n                .AddJsonFile(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;appsettings.json&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, optional: &lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;, reloadOnChange: &lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)\n                .AddEnvironmentVariables();\n        &#125;\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (webHostBuilderContext != &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)\n        &#123;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; env =&lt;span style=&quot;color: #000000;&quot;&gt; webHostBuilderContext.HostingEnvironment;\n            configBuilder\n                .AddJsonFile($&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;appsettings.&#123;env.EnvironmentName&#125;.json&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, optional: &lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;, reloadOnChange: &lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n        &#125;\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; config =&lt;span style=&quot;color: #000000;&quot;&gt; configBuilder.Build();\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; AppSettingProvider().Initial(config);&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;添加静态的配置全局配置文件&lt;/span&gt;\n\n        &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; gd =&lt;span style=&quot;color: #000000;&quot;&gt; AssemblyHelper.GetGlobalData();\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; currentNamespace =&lt;span style=&quot;color: #000000;&quot;&gt; MethodBase.GetCurrentMethod().DeclaringType.Namespace;\n        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;获取标准web类库的Assembly&lt;/span&gt;\n        &lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; currentAssembly = gd.AllAssembly.Where(x =&amp;gt; x.ManifestModule.Name == $&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&#123;currentNamespace&#125;.dll&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;).FirstOrDefault();\n\n        StackTrace ss &lt;/span&gt;= &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; StackTrace(&lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n        MethodBase mb &lt;/span&gt;= ss.GetFrame(ss.FrameCount - &lt;span style=&quot;color: #800080;&quot;&gt;1&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;).GetMethod();\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;var&lt;/span&gt; userNamespace = mb.DeclaringType.Namespace;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;调用标准web类库的定制版项目命名空间&lt;/span&gt;\n</code></pre>\n<span style=\"color: #000000;\">\n            services.AddMvc(options </span>=&gt;<span style=\"color: #000000;\">\n            {\n                options.EnableEndpointRouting </span>= <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\n            });\n\n<pre><code>        services.AddRazorPages()&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;添加RazorPages&lt;/span&gt;\n</code></pre>\n<p><span style=\"color: #000000;\">                .AddRazorRuntimeCompilation()<br>            .ConfigureApplicationPartManager(m </span>=&gt;<span style=\"color: #000000;\"><br>            {<br>                </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">将标准web类库的Controllers添加到定制版，即我们要运行的网站中</span><br>                <span style=\"color: #0000ff;\">var</span> feature = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ControllerFeature();</p>\n<pre><code>            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (currentAssembly != &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)\n            &#123;\n                m.ApplicationParts.Add(&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; AssemblyPart(currentAssembly));\n            &#125;\n            m.PopulateFeature(feature);\n            services.AddSingleton(feature.Controllers.Select(t &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; t.AsType()).ToArray());\n        &#125;)\n        .AddControllersAsServices()\n        .AddViewLocalization(LanguageViewLocationExpanderFormat.Suffix);&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;添加多语言支持\n\n        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;services.Configure&amp;lt;MvcRazorRuntimeCompilationOptions&amp;gt;(options =&amp;gt;\n        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;&#123;\n        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;    if (currentAssembly != null)\n        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;    &#123;\n        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;        options.FileProviders.Add(\n        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;        new EmbeddedFileProvider(\n        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;            currentAssembly,\n        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;            currentNamespace &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt; your external assembly&#39;s base namespace\n        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;        )\n        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;    );\n        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;    &#125;\n        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;&#125;);&lt;/span&gt;\n        services.AddSingleton&amp;lt;ILoginUserService, LoginUserService&amp;gt;();&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;添加需要引用的其他服务&lt;/span&gt;\n</code></pre>\n<span style=\"color: #000000;\">\n            services.AddMvc(options </span>=&gt;<span style=\"color: #000000;\">\n            {\n                options.Conventions.Add(</span><span style=\"color: #0000ff;\">new</span> ApiControllerVersionConvention());<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">添加版本控制时忽略添加的某些重要属性</span>\n<span style=\"color: #000000;\">            });\n\n<pre><code>        services.AddApiVersioning(o &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; &#123;\n            o.ReportApiVersions &lt;/span&gt;= &lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;返回版本可使用的版本\n            &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;o.ApiVersionReader = new UrlSegmentApiVersionReader();\n            &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;o.ApiVersionReader = ApiVersionReader.Combine(new HeaderApiVersionReader(&quot;api-version&quot;), new QueryStringApiVersionReader(&quot;api-version&quot;));\n            &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;o.ApiVersionReader = ApiVersionReader.Combine(new QueryStringApiVersionReader(&quot;api-version&quot;));&lt;/span&gt;\n            o.ApiVersionReader = ApiVersionReader.Combine(&lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; HeaderApiVersionReader(&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;api-version&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;));&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;版本号以什么形式，什么字段传递&lt;/span&gt;\n            o.AssumeDefaultVersionWhenUnspecified = &lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;;\n            o.DefaultApiVersion &lt;/span&gt;= &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; ApiVersion(&lt;span style=&quot;color: #800080;&quot;&gt;1&lt;/span&gt;, &lt;span style=&quot;color: #800080;&quot;&gt;0&lt;/span&gt;);&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;默认版本号&lt;/span&gt;\n            o.ApiVersionSelector = &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt; CurrentImplementationApiVersionSelector(o);&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;默认以当前最高版本进行访问&lt;/span&gt;\n</code></pre>\n<p><span style=\"color: #000000;\">            });</p>\n<pre><code>        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; services;\n    &#125;&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span> IApplicationBuilder UseFrameworkService(<span style=\"color: #0000ff;\">this</span> IApplicationBuilder app, Action&lt;IRouteBuilder&gt; customRoutes = <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)//在定制版本的Startup.ConfigureServices中添加services.UseFrameworkService();即可<br />\n        {\n            app.UseExceptionHandler(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">/Home/Error</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n\n<pre><code>        app.UseStaticFiles();\n        app.UseAuthentication();\n        app.Use(&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;async&lt;/span&gt; (context, next) =&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;\n        &#123;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;try&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;\n            &#123;\n                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; next.Invoke();\n            &#125;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;catch&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; (ConnectionResetException) &#123; &#125;\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (context.Response.StatusCode == &lt;span style=&quot;color: #800080;&quot;&gt;404&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)\n            &#123;\n                &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;await&lt;/span&gt; context.Response.WriteAsync(&lt;span style=&quot;color: #0000ff;&quot;&gt;string&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;.Empty);\n            &#125;\n        &#125;);\n\n        app.UseMiddleware&lt;/span&gt;&amp;lt;CustomRewriteMiddleware&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;();\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;if&lt;/span&gt; (customRoutes != &lt;span style=&quot;color: #0000ff;&quot;&gt;null&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;)\n        &#123;\n            app.UseMvc(customRoutes);\n        &#125;\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;else&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;\n        &#123;\n            app.UseMvc(routes &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt;\n            &#123;\n                routes.MapRoute(\n                    name: &lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;areaRoute&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;,\n                    template: &lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&#123;area:exists&#125;/&#123;controller=Home&#125;/&#123;action=Index&#125;/&#123;id?&#125;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n                routes.MapRoute(\n                    name: &lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;default&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;,\n                    template: &lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&#123;controller=Home&#125;/&#123;action=Index&#125;/&#123;id?&#125;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n            &#125;);\n\n        &#125;\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; app;\n    &#125;&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<p>&nbsp;</p>\n<p>我们在标准web类库中，将所有的Controller都添加上默认的版本号1.0</p>\n<div class=\"cnblogs_code\">\n<pre>    [ApiVersion(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">1.0</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [Route(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">[controller]/[action]</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [ApiController]\n或者Areas中的添加\n    [Area(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">User</span><span style=\"color: #800000;\">\"</span>)]<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">User时Area的name</span>\n    [ApiVersion(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">1.0</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [Route(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">[area]/[controller]/[action]</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [ApiController]</span></pre>\n</div>\n<p>我们的定制版本中，需要重写的Controller添加上对应标准web类库里面对应名字的Controller，对应的<span style=\"font-family: 'Courier New'; font-size: 12px;\">ApiVersion修改成大于1.0的版本号，新添加的Controller继承自对应的</span>标准web类库的对应Controller</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #0000ff;\">namespace</span><span style=\"color: #000000;\"> Tailor.Custom3.Https.Controllers\n{\n    [ApiVersion(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">2.0</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [Route(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">[controller]/[action]</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">)]\n    [ApiController]\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> HomeController : Default.Controllers.HomeController\n    {\n        </span><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">readonly</span> ILogger&lt;HomeController&gt;<span style=\"color: #000000;\"> _logger;\n        </span><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">readonly</span><span style=\"color: #000000;\"> ILoginUserService _userService;\n\n<pre><code>    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; HomeController(ILogger&amp;lt;HomeController&amp;gt; logger, ILoginUserService userService) : &lt;span style=&quot;color: #0000ff;&quot;&gt;base&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;(logger, userService)\n    &#123;\n        _logger &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; logger;\n        _userService &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; userService;\n    &#125;\n &#125;\n</code></pre>\n<p>}</span></pre></p>\n</div>\n<p>此时，我们如果需要对某些Action进行重写，则override对应Action，然后进行重写；//Tailor.Custom1.Https和Tailor.Custom3.Https</p>\n<p>我们如果需要对某些cshtml进行重写，则在对应目录添加相同名字的cshtml，然后进行重写；//Tailor.Custom2.Https中只对cshtml进行重写，Tailor.Custom3.Https中对Controller和cshtml都进行重写</p>\n<p>此时我们就可以写一个标准版web类库，定制项目进行局部更改，如发现标准版web类库出现bug，可以只修改一处，处处生成上传即可；再进一步，我们可以将生成的标准版web类库的dll文件上传到指定的服务器特定目录，其他服务器对此目录进行定时的加载或者判断版本再去加载，这样就可以省去很大的精力</p>\n<p>&nbsp;</p>\n<p>但是在实际的项目使用中发现，可能由于Microsoft.AspNetCore.Mvc.Versioning这个包本身的问题，当我们的标准web类库中Controller有重名，但是不是同一个Views或者Areas目录下时，我们的版本控制将会出现所有的同名Controller的可使用版本信息将会变成所有的控制版本。。。这个暂时可以利用不同Controller名字进行规避，详见：<a href=\"https://github.com/microsoft/aspnet-api-versioning/issues/630\">https://github.com/microsoft/aspnet-api-versioning/issues/630</a>&nbsp;<span style=\"color: #ff0000;\">【已修复】</span></p>\n<p>具体实现代码地址：<a href=\"https://github.com/wangpengzong/Tailor\" target=\"_blank\">https://github.com/wangpengzong/Tailor</a></p>\n<p>Native/Default是标准版网站类库</p>\n<p>Tailor.Custom* 是定制化网站，可以在此路径下继承Native/Default的对应Controller，利用overvide对需要重写的action进行重写，不需要重写的不进行overvide即可，或者对cshtml进行重写，不需要重写的不在对应路径下增加cshtml文件即可</p>\n<p>&nbsp;</p>\n<p>&nbsp; &nbsp; &nbsp;&nbsp;</p>"},{"title":"netcore 非注入全局获取配置文件","date":"2020-04-14T12:40:00.000Z","author":"wpzblog","_content":"<p>在netcore开发中，最常见的就是注入，比如想获取appsettings.json的内容，我们就需要去注入，然后在controller里面去获取，但是我们如果想要在service中使用appsettings.json的内容，这样就是一个问题，并且每个controller去注入也是非常麻烦的事情</p>\n<p>&nbsp;</p>\n<p>下面的注入的（这种方法百度一下可以出来几百条相同的搜索结果。。。参见<a href=\"https://www.cnblogs.com/ideacore/p/6282926.html\">https://www.cnblogs.com/ideacore/p/6282926.html</a>）</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">services.AddOptions();\nservices.Configure</span>&lt;AppSettings&gt;(Configuration.GetSection(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AppSettings</span><span style=\"color: #800000;\">\"</span>));</pre>\n</div>\n<p>然后获取使用</p>\n<p><img src=\"/cnblogs/12700974/789895-20200414202950686-1257092366.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>我想要在service类库里面使用，这时该如何使用哪？</p>\n<p>直接上代码：</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">{\n  </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Logging</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">: {\n    </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">LogLevel</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">: {\n      </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Default</span><span style=\"color: #800000;\">\"</span>: <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Warning</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n    }\n  },\n  </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AllowedHosts</span><span style=\"color: #800000;\">\"</span>: <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">*</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n  </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AppSettings</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">: {\n    </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">TestString</span><span style=\"color: #800000;\">\"</span>: <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">This is default environment</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n    </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ConfigVersion</span><span style=\"color: #800000;\">\"</span>: <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">local</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n    </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">connectionString</span><span style=\"color: #800000;\">\"</span>: <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">connectionString</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n    </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">RedisExchangeHosts</span><span style=\"color: #800000;\">\"</span>: <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">RedisExchangeHosts</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n  }\n}</span></pre>\n</div>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre>    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> AppSettings\n    {\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> TestString { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> ConfigVersion { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> connectionString { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> RedisExchangeHosts { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> UploadPath { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n    }</span></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> Startup(IConfiguration configuration, ILoggerFactory factory, IHostingEnvironment env)\n        {\n            EnvironmentName </span>=<span style=\"color: #000000;\"> env.EnvironmentName;\n            Configuration </span>=<span style=\"color: #000000;\"> configuration;\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 将内置的日志组件设置为 NHibernate 的日志组件</span>\n            <span style=\"color: #0000ff;\">var</span> builder = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ConfigurationBuilder()\n                .SetBasePath(env.ContentRootPath)\n                .AddJsonFile(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">appsettings.json</span><span style=\"color: #800000;\">\"</span>, optional: <span style=\"color: #0000ff;\">true</span>, reloadOnChange: <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">)\n                .AddJsonFile($</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">appsettings.{env.EnvironmentName}.json</span><span style=\"color: #800000;\">\"</span>, optional: <span style=\"color: #0000ff;\">true</span>)<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">增加环境配置文件，新建项目默认有</span>\n<span style=\"color: #000000;\">                .AddEnvironmentVariables();\n\n            </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> AppSettingProvider().Initial(configuration);\n\n            Configuration </span>=<span style=\"color: #000000;\"> builder.Build();\n\n        }</span></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> AppSettingProvider\n    {\n        </span><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> AppSettings _myappSettings;\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span> AppSettings _appSettings { <span style=\"color: #0000ff;\">get</span> { <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> _myappSettings; } }\n\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> Initial(IConfiguration configuration)\n        {\n            _myappSettings </span>=  <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> AppSettings() {\n                ConfigVersion </span>= configuration[<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AppSettings:ConfigVersion</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">],\n                connectionString </span>= configuration[<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AppSettings:connectionString</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">],\n                TestString </span>= configuration[<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AppSettings:TestString</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">],\n                RedisExchangeHosts </span>= configuration[<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AppSettings:RedisExchangeHosts</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">],\n                UploadPath </span>= configuration[<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AppSettings:UploadPath</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">]\n            };\n        }\n\n    }</span></pre>\n</div>\n<p>这样，我们在要使用的时候只需要AppSettingProvider._appSettings.xxxx即可，不需要进行重复的、实现</p>\n<p>&nbsp;</p>\n<p><span style=\"color: #ff0000;\">有错误或者片面地方欢迎指正</span></p>","source":"_posts/cnblogs/12700974.md","raw":"---\ntitle: netcore 非注入全局获取配置文件\ndate: 2020-04-14T20:40:00\nauthor: wpzblog\ntags: [\"appsettings.json\",\"netcore\"]\n---\n<p>在netcore开发中，最常见的就是注入，比如想获取appsettings.json的内容，我们就需要去注入，然后在controller里面去获取，但是我们如果想要在service中使用appsettings.json的内容，这样就是一个问题，并且每个controller去注入也是非常麻烦的事情</p>\n<p>&nbsp;</p>\n<p>下面的注入的（这种方法百度一下可以出来几百条相同的搜索结果。。。参见<a href=\"https://www.cnblogs.com/ideacore/p/6282926.html\">https://www.cnblogs.com/ideacore/p/6282926.html</a>）</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">services.AddOptions();\nservices.Configure</span>&lt;AppSettings&gt;(Configuration.GetSection(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AppSettings</span><span style=\"color: #800000;\">\"</span>));</pre>\n</div>\n<p>然后获取使用</p>\n<p><img src=\"/cnblogs/12700974/789895-20200414202950686-1257092366.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>我想要在service类库里面使用，这时该如何使用哪？</p>\n<p>直接上代码：</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">{\n  </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Logging</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">: {\n    </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">LogLevel</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">: {\n      </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Default</span><span style=\"color: #800000;\">\"</span>: <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Warning</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n    }\n  },\n  </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AllowedHosts</span><span style=\"color: #800000;\">\"</span>: <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">*</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n  </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AppSettings</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">: {\n    </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">TestString</span><span style=\"color: #800000;\">\"</span>: <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">This is default environment</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n    </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ConfigVersion</span><span style=\"color: #800000;\">\"</span>: <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">local</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n    </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">connectionString</span><span style=\"color: #800000;\">\"</span>: <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">connectionString</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n    </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">RedisExchangeHosts</span><span style=\"color: #800000;\">\"</span>: <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">RedisExchangeHosts</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n  }\n}</span></pre>\n</div>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre>    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> AppSettings\n    {\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> TestString { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> ConfigVersion { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> connectionString { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> RedisExchangeHosts { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> UploadPath { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n    }</span></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> Startup(IConfiguration configuration, ILoggerFactory factory, IHostingEnvironment env)\n        {\n            EnvironmentName </span>=<span style=\"color: #000000;\"> env.EnvironmentName;\n            Configuration </span>=<span style=\"color: #000000;\"> configuration;\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 将内置的日志组件设置为 NHibernate 的日志组件</span>\n            <span style=\"color: #0000ff;\">var</span> builder = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ConfigurationBuilder()\n                .SetBasePath(env.ContentRootPath)\n                .AddJsonFile(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">appsettings.json</span><span style=\"color: #800000;\">\"</span>, optional: <span style=\"color: #0000ff;\">true</span>, reloadOnChange: <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">)\n                .AddJsonFile($</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">appsettings.{env.EnvironmentName}.json</span><span style=\"color: #800000;\">\"</span>, optional: <span style=\"color: #0000ff;\">true</span>)<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">增加环境配置文件，新建项目默认有</span>\n<span style=\"color: #000000;\">                .AddEnvironmentVariables();\n\n            </span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> AppSettingProvider().Initial(configuration);\n\n            Configuration </span>=<span style=\"color: #000000;\"> builder.Build();\n\n        }</span></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> AppSettingProvider\n    {\n        </span><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> AppSettings _myappSettings;\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span> AppSettings _appSettings { <span style=\"color: #0000ff;\">get</span> { <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> _myappSettings; } }\n\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> Initial(IConfiguration configuration)\n        {\n            _myappSettings </span>=  <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> AppSettings() {\n                ConfigVersion </span>= configuration[<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AppSettings:ConfigVersion</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">],\n                connectionString </span>= configuration[<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AppSettings:connectionString</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">],\n                TestString </span>= configuration[<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AppSettings:TestString</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">],\n                RedisExchangeHosts </span>= configuration[<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AppSettings:RedisExchangeHosts</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">],\n                UploadPath </span>= configuration[<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AppSettings:UploadPath</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">]\n            };\n        }\n\n    }</span></pre>\n</div>\n<p>这样，我们在要使用的时候只需要AppSettingProvider._appSettings.xxxx即可，不需要进行重复的、实现</p>\n<p>&nbsp;</p>\n<p><span style=\"color: #ff0000;\">有错误或者片面地方欢迎指正</span></p>","slug":"cnblogs/12700974","published":1,"updated":"2022-07-10T13:01:13.461Z","_id":"cl5f7it0a001kc0ungeb97696","comments":1,"layout":"post","photos":[],"link":"","content":"<p>在netcore开发中，最常见的就是注入，比如想获取appsettings.json的内容，我们就需要去注入，然后在controller里面去获取，但是我们如果想要在service中使用appsettings.json的内容，这样就是一个问题，并且每个controller去注入也是非常麻烦的事情</p>\n<p>&nbsp;</p>\n<p>下面的注入的（这种方法百度一下可以出来几百条相同的搜索结果。。。参见<a href=\"https://www.cnblogs.com/ideacore/p/6282926.html\">https://www.cnblogs.com/ideacore/p/6282926.html</a>）</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">services.AddOptions();\nservices.Configure</span>&lt;AppSettings&gt;(Configuration.GetSection(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AppSettings</span><span style=\"color: #800000;\">\"</span>));</pre>\n</div>\n<p>然后获取使用</p>\n<p><img src=\"/cnblogs/12700974/789895-20200414202950686-1257092366.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>我想要在service类库里面使用，这时该如何使用哪？</p>\n<p>直接上代码：</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">{\n  </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Logging</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">: {\n    </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">LogLevel</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">: {\n      </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Default</span><span style=\"color: #800000;\">\"</span>: <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Warning</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n    }\n  },\n  </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AllowedHosts</span><span style=\"color: #800000;\">\"</span>: <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">*</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n  </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AppSettings</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">: {\n    </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">TestString</span><span style=\"color: #800000;\">\"</span>: <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">This is default environment</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n    </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ConfigVersion</span><span style=\"color: #800000;\">\"</span>: <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">local</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n    </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">connectionString</span><span style=\"color: #800000;\">\"</span>: <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">connectionString</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n    </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">RedisExchangeHosts</span><span style=\"color: #800000;\">\"</span>: <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">RedisExchangeHosts</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n  }\n}</span></pre>\n</div>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre>    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> AppSettings\n    {\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> TestString { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> ConfigVersion { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> connectionString { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> RedisExchangeHosts { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> UploadPath { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n    }</span></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> Startup(IConfiguration configuration, ILoggerFactory factory, IHostingEnvironment env)\n        {\n            EnvironmentName </span>=<span style=\"color: #000000;\"> env.EnvironmentName;\n            Configuration </span>=<span style=\"color: #000000;\"> configuration;\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 将内置的日志组件设置为 NHibernate 的日志组件</span>\n            <span style=\"color: #0000ff;\">var</span> builder = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ConfigurationBuilder()\n                .SetBasePath(env.ContentRootPath)\n                .AddJsonFile(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">appsettings.json</span><span style=\"color: #800000;\">\"</span>, optional: <span style=\"color: #0000ff;\">true</span>, reloadOnChange: <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">)\n                .AddJsonFile($</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">appsettings.{env.EnvironmentName}.json</span><span style=\"color: #800000;\">\"</span>, optional: <span style=\"color: #0000ff;\">true</span>)<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">增加环境配置文件，新建项目默认有</span>\n<span style=\"color: #000000;\">                .AddEnvironmentVariables();\n\n<pre><code>        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; AppSettingProvider().Initial(configuration);\n\n        Configuration &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; builder.Build();\n\n    &#125;&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> AppSettingProvider\n    {\n        </span><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> AppSettings _myappSettings;\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span> AppSettings _appSettings { <span style=\"color: #0000ff;\">get</span> { <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> _myappSettings; } }\n\n<pre><code>    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; Initial(IConfiguration configuration)\n    &#123;\n        _myappSettings &lt;/span&gt;=  &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; AppSettings() &#123;\n            ConfigVersion &lt;/span&gt;= configuration[&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;AppSettings:ConfigVersion&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;],\n            connectionString &lt;/span&gt;= configuration[&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;AppSettings:connectionString&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;],\n            TestString &lt;/span&gt;= configuration[&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;AppSettings:TestString&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;],\n            RedisExchangeHosts &lt;/span&gt;= configuration[&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;AppSettings:RedisExchangeHosts&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;],\n            UploadPath &lt;/span&gt;= configuration[&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;AppSettings:UploadPath&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;]\n        &#125;;\n    &#125;\n\n&#125;&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<p>这样，我们在要使用的时候只需要AppSettingProvider._appSettings.xxxx即可，不需要进行重复的、实现</p>\n<p>&nbsp;</p>\n<p><span style=\"color: #ff0000;\">有错误或者片面地方欢迎指正</span></p>","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"spatxos","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/spatxos","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"<p>在netcore开发中，最常见的就是注入，比如想获取appsettings.json的内容，我们就需要去注入，然后在controller里面去获取，但是我们如果想要在service中使用appsettings.json的内容，这样就是一个问题，并且每个controller去注入也是非常麻烦的事情</p>\n<p>&nbsp;</p>\n<p>下面的注入的（这种方法百度一下可以出来几百条相同的搜索结果。。。参见<a href=\"https://www.cnblogs.com/ideacore/p/6282926.html\">https://www.cnblogs.com/ideacore/p/6282926.html</a>）</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">services.AddOptions();\nservices.Configure</span>&lt;AppSettings&gt;(Configuration.GetSection(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AppSettings</span><span style=\"color: #800000;\">\"</span>));</pre>\n</div>\n<p>然后获取使用</p>\n<p><img src=\"/cnblogs/12700974/789895-20200414202950686-1257092366.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>我想要在service类库里面使用，这时该如何使用哪？</p>\n<p>直接上代码：</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">{\n  </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Logging</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">: {\n    </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">LogLevel</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">: {\n      </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Default</span><span style=\"color: #800000;\">\"</span>: <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Warning</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n    }\n  },\n  </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AllowedHosts</span><span style=\"color: #800000;\">\"</span>: <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">*</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n  </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">AppSettings</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">: {\n    </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">TestString</span><span style=\"color: #800000;\">\"</span>: <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">This is default environment</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n    </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ConfigVersion</span><span style=\"color: #800000;\">\"</span>: <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">local</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n    </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">connectionString</span><span style=\"color: #800000;\">\"</span>: <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">connectionString</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">,\n    </span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">RedisExchangeHosts</span><span style=\"color: #800000;\">\"</span>: <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">RedisExchangeHosts</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">\n  }\n}</span></pre>\n</div>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre>    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> AppSettings\n    {\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> TestString { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> ConfigVersion { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> connectionString { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> RedisExchangeHosts { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">string</span> UploadPath { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n    }</span></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> Startup(IConfiguration configuration, ILoggerFactory factory, IHostingEnvironment env)\n        {\n            EnvironmentName </span>=<span style=\"color: #000000;\"> env.EnvironmentName;\n            Configuration </span>=<span style=\"color: #000000;\"> configuration;\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 将内置的日志组件设置为 NHibernate 的日志组件</span>\n            <span style=\"color: #0000ff;\">var</span> builder = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ConfigurationBuilder()\n                .SetBasePath(env.ContentRootPath)\n                .AddJsonFile(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">appsettings.json</span><span style=\"color: #800000;\">\"</span>, optional: <span style=\"color: #0000ff;\">true</span>, reloadOnChange: <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">)\n                .AddJsonFile($</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">appsettings.{env.EnvironmentName}.json</span><span style=\"color: #800000;\">\"</span>, optional: <span style=\"color: #0000ff;\">true</span>)<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">增加环境配置文件，新建项目默认有</span>\n<span style=\"color: #000000;\">                .AddEnvironmentVariables();\n\n<pre><code>        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; AppSettingProvider().Initial(configuration);\n\n        Configuration &lt;/span&gt;=&lt;span style=&quot;color: #000000;&quot;&gt; builder.Build();\n\n    &#125;&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> AppSettingProvider\n    {\n        </span><span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> AppSettings _myappSettings;\n        </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span> AppSettings _appSettings { <span style=\"color: #0000ff;\">get</span> { <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> _myappSettings; } }\n\n<pre><code>    &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #0000ff;&quot;&gt;void&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; Initial(IConfiguration configuration)\n    &#123;\n        _myappSettings &lt;/span&gt;=  &lt;span style=&quot;color: #0000ff;&quot;&gt;new&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; AppSettings() &#123;\n            ConfigVersion &lt;/span&gt;= configuration[&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;AppSettings:ConfigVersion&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;],\n            connectionString &lt;/span&gt;= configuration[&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;AppSettings:connectionString&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;],\n            TestString &lt;/span&gt;= configuration[&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;AppSettings:TestString&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;],\n            RedisExchangeHosts &lt;/span&gt;= configuration[&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;AppSettings:RedisExchangeHosts&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;],\n            UploadPath &lt;/span&gt;= configuration[&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;AppSettings:UploadPath&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;]\n        &#125;;\n    &#125;\n\n&#125;&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<p>这样，我们在要使用的时候只需要AppSettingProvider._appSettings.xxxx即可，不需要进行重复的、实现</p>\n<p>&nbsp;</p>\n<p><span style=\"color: #ff0000;\">有错误或者片面地方欢迎指正</span></p>"},{"title":"linux  nginx搭建与使用","date":"2020-03-20T03:33:00.000Z","author":"wpzblog","_content":"<div id=\"nginxinstall\">安装nginx</div>\n<div class=\"cnblogs_code\">\n<pre>yum -y install nginx</pre>\n</div>\n<pre><span><span>\n测试是否安装正确：\n\n</span></span></pre>\n<div class=\"cnblogs_code\">\n<pre>nginx -t</pre>\n</div>\n<pre><span><span><span>\n打印如下：</span></span></span></pre>\n<div class=\"cnblogs_code\">\n<pre>nginx: the configuration file /etc/nginx/nginx.conf syntax <span style=\"color: #0000ff;\">is</span><span style=\"color: #000000;\"> ok\nnginx: configuration file </span>/etc/nginx/nginx.conf test <span style=\"color: #0000ff;\">is</span> successful</pre>\n</div>\n<pre><span><span><span><span>\nCentOS7.0+<span> nginx实现停止、启动、重启</span></span></span></span></span></pre>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">systemctl stop nginx.service;  \nsystemctl start nginx.service;\nsystemctl restart nginx.service;\nsystemctl status nginx.service;</span></pre>\n</div>\n<pre><span><span><span><span><span>\n开机自启：</span></span></span></span></span></pre>\n<div class=\"cnblogs_code\">\n<pre>systemctl enable nginx.service</pre>\n</div>\n<pre><span><span><span><span><span>\n取消开机自启：</span></span></span></span></span></pre>\n<div class=\"cnblogs_code\">\n<pre>systemctl disable nginx.service</pre>\n</div>\n<pre><span><span><span><span><span>\n\nnginx配置的修改：\n修改nginx.conf（位置在/etc/nginx/）文件，可将配置文件放在一个文件夹中，让nginx自己去读取自定义的配置文件，修改结果如下</span></span></span></span></span></pre>\n<div class=\"cnblogs_code\">\n<pre><span># For more information on configuration, see:\n#   * Official English Documentation: http://nginx.org/en/docs/\n#   * Official Russian Documentation: http://nginx.org/ru/docs/\n<span>\nuser nginx;\nworker_processes auto;\nerror_log /var/log/nginx/<span>error.log;\npid /run/<span>nginx.pid;\n\n# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.\ninclude /usr/share/nginx/modules/*.conf;\n\nevents {\n    worker_connections 1024;\n}\n\nhttp {\n    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n                      '$status $body_bytes_sent \"$http_referer\" '\n                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    access_log  /var/log/nginx/access.log  main;\n\n    sendfile            on;\n    tcp_nopush          on;\n    tcp_nodelay         on;\n    keepalive_timeout   65;\n    types_hash_max_size 2048;\n\n    include             /etc/nginx/mime.types;\n    default_type        application/octet-stream;\n\n    # Load modular configuration files from the /etc/nginx/conf.d directory.\n    # See http://nginx.org/en/docs/ngx_core_module.html#include\n    # for more information.\n    include /etc/nginx/conf.d/*.conf;\n}</span></span></span></span></pre>\n</div>\n<pre>include /etc/nginx/conf.d/*.conf;这一句的意思是从/etc/nginx/conf.d/文件夹中搜索所有*.conf的配置文件填充进配置中，例如我发布了一个网站，端口号是5000，如果不进行nginx映射，只能在linux的内网中进行访问，</pre>\n<pre>无法在外网进行访问</pre>\n<p>例如我在/etc/nginx/conf.d/中添加了myblog.conf，如下面，重启nginx后，80端口的http请求都会转向到内部的5000端口，这样自己的网站就可以访问了</p>\n<div class=\"cnblogs_code\">\n<pre><span>server {\n   listen 80<span>;\n   location /<span> {\n        proxy_pass http://localhost:5000;\n        proxy_http_version 1.1<span>;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection keep-<span>alive;   \n        proxy_set_header Host $host;\n        proxy_cache_bypass $http_ipgrade;\n   }  \n}</span></span></span></span></span></pre>\n</div>\n<p>&nbsp;</p>","source":"_posts/cnblogs/12530605.md","raw":"---\ntitle: linux  nginx搭建与使用\ndate: 2020-03-20T11:33:00\nauthor: wpzblog\ntags: []\n---\n<div id=\"nginxinstall\">安装nginx</div>\n<div class=\"cnblogs_code\">\n<pre>yum -y install nginx</pre>\n</div>\n<pre><span><span>\n测试是否安装正确：\n\n</span></span></pre>\n<div class=\"cnblogs_code\">\n<pre>nginx -t</pre>\n</div>\n<pre><span><span><span>\n打印如下：</span></span></span></pre>\n<div class=\"cnblogs_code\">\n<pre>nginx: the configuration file /etc/nginx/nginx.conf syntax <span style=\"color: #0000ff;\">is</span><span style=\"color: #000000;\"> ok\nnginx: configuration file </span>/etc/nginx/nginx.conf test <span style=\"color: #0000ff;\">is</span> successful</pre>\n</div>\n<pre><span><span><span><span>\nCentOS7.0+<span> nginx实现停止、启动、重启</span></span></span></span></span></pre>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">systemctl stop nginx.service;  \nsystemctl start nginx.service;\nsystemctl restart nginx.service;\nsystemctl status nginx.service;</span></pre>\n</div>\n<pre><span><span><span><span><span>\n开机自启：</span></span></span></span></span></pre>\n<div class=\"cnblogs_code\">\n<pre>systemctl enable nginx.service</pre>\n</div>\n<pre><span><span><span><span><span>\n取消开机自启：</span></span></span></span></span></pre>\n<div class=\"cnblogs_code\">\n<pre>systemctl disable nginx.service</pre>\n</div>\n<pre><span><span><span><span><span>\n\nnginx配置的修改：\n修改nginx.conf（位置在/etc/nginx/）文件，可将配置文件放在一个文件夹中，让nginx自己去读取自定义的配置文件，修改结果如下</span></span></span></span></span></pre>\n<div class=\"cnblogs_code\">\n<pre><span># For more information on configuration, see:\n#   * Official English Documentation: http://nginx.org/en/docs/\n#   * Official Russian Documentation: http://nginx.org/ru/docs/\n<span>\nuser nginx;\nworker_processes auto;\nerror_log /var/log/nginx/<span>error.log;\npid /run/<span>nginx.pid;\n\n# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.\ninclude /usr/share/nginx/modules/*.conf;\n\nevents {\n    worker_connections 1024;\n}\n\nhttp {\n    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n                      '$status $body_bytes_sent \"$http_referer\" '\n                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    access_log  /var/log/nginx/access.log  main;\n\n    sendfile            on;\n    tcp_nopush          on;\n    tcp_nodelay         on;\n    keepalive_timeout   65;\n    types_hash_max_size 2048;\n\n    include             /etc/nginx/mime.types;\n    default_type        application/octet-stream;\n\n    # Load modular configuration files from the /etc/nginx/conf.d directory.\n    # See http://nginx.org/en/docs/ngx_core_module.html#include\n    # for more information.\n    include /etc/nginx/conf.d/*.conf;\n}</span></span></span></span></pre>\n</div>\n<pre>include /etc/nginx/conf.d/*.conf;这一句的意思是从/etc/nginx/conf.d/文件夹中搜索所有*.conf的配置文件填充进配置中，例如我发布了一个网站，端口号是5000，如果不进行nginx映射，只能在linux的内网中进行访问，</pre>\n<pre>无法在外网进行访问</pre>\n<p>例如我在/etc/nginx/conf.d/中添加了myblog.conf，如下面，重启nginx后，80端口的http请求都会转向到内部的5000端口，这样自己的网站就可以访问了</p>\n<div class=\"cnblogs_code\">\n<pre><span>server {\n   listen 80<span>;\n   location /<span> {\n        proxy_pass http://localhost:5000;\n        proxy_http_version 1.1<span>;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection keep-<span>alive;   \n        proxy_set_header Host $host;\n        proxy_cache_bypass $http_ipgrade;\n   }  \n}</span></span></span></span></span></pre>\n</div>\n<p>&nbsp;</p>","slug":"cnblogs/12530605","published":1,"updated":"2022-07-10T13:01:13.624Z","_id":"cl5f7it7z001oc0un904t2d3f","comments":1,"layout":"post","photos":[],"link":"","content":"<div id=\"nginxinstall\">安装nginx</div>\n<div class=\"cnblogs_code\">\n<pre>yum -y install nginx</pre>\n</div>\n<pre><span><span>\n测试是否安装正确：\n\n<p></span></span></pre></p>\n<div class=\"cnblogs_code\">\n<pre>nginx -t</pre>\n</div>\n<pre><span><span><span>\n打印如下：</span></span></span></pre>\n<div class=\"cnblogs_code\">\n<pre>nginx: the configuration file /etc/nginx/nginx.conf syntax <span style=\"color: #0000ff;\">is</span><span style=\"color: #000000;\"> ok\nnginx: configuration file </span>/etc/nginx/nginx.conf test <span style=\"color: #0000ff;\">is</span> successful</pre>\n</div>\n<pre><span><span><span><span>\nCentOS7.0+<span> nginx实现停止、启动、重启</span></span></span></span></span></pre>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">systemctl stop nginx.service;  \nsystemctl start nginx.service;\nsystemctl restart nginx.service;\nsystemctl status nginx.service;</span></pre>\n</div>\n<pre><span><span><span><span><span>\n开机自启：</span></span></span></span></span></pre>\n<div class=\"cnblogs_code\">\n<pre>systemctl enable nginx.service</pre>\n</div>\n<pre><span><span><span><span><span>\n取消开机自启：</span></span></span></span></span></pre>\n<div class=\"cnblogs_code\">\n<pre>systemctl disable nginx.service</pre>\n</div>\n<pre><span><span><span><span><span>\n\n<p>nginx配置的修改：<br>修改nginx.conf（位置在/etc/nginx/）文件，可将配置文件放在一个文件夹中，让nginx自己去读取自定义的配置文件，修改结果如下</span></span></span></span></span></pre></p>\n<div class=\"cnblogs_code\">\n<pre><span># For more information on configuration, see:\n#   * Official English Documentation: http://nginx.org/en/docs/\n#   * Official Russian Documentation: http://nginx.org/ru/docs/\n<span>\nuser nginx;\nworker_processes auto;\nerror_log /var/log/nginx/<span>error.log;\npid /run/<span>nginx.pid;\n\n<h1 id=\"Load-dynamic-modules-See-usr-share-doc-nginx-README-dynamic\"><a href=\"#Load-dynamic-modules-See-usr-share-doc-nginx-README-dynamic\" class=\"headerlink\" title=\"Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.\"></a>Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.</h1><p>include /usr/share/nginx/modules/*.conf;</p>\n<p>events {<br>    worker_connections 1024;<br>}</p>\n<p>http {<br>    log_format  main  ‘$remote_addr - $remote_user [$time_local] “$request” ‘<br>                      ‘$status $body_bytes_sent “$http_referer” ‘<br>                      ‘“$http_user_agent” “$http_x_forwarded_for”‘;</p>\n<pre><code>access_log  /var/log/nginx/access.log  main;\n\nsendfile            on;\ntcp_nopush          on;\ntcp_nodelay         on;\nkeepalive_timeout   65;\ntypes_hash_max_size 2048;\n\ninclude             /etc/nginx/mime.types;\ndefault_type        application/octet-stream;\n\n# Load modular configuration files from the /etc/nginx/conf.d directory.\n# See http://nginx.org/en/docs/ngx_core_module.html#include\n# for more information.\ninclude /etc/nginx/conf.d/*.conf;\n</code></pre>\n<p>}</span></span></span></span></pre></p>\n</div>\n<pre>include /etc/nginx/conf.d/*.conf;这一句的意思是从/etc/nginx/conf.d/文件夹中搜索所有*.conf的配置文件填充进配置中，例如我发布了一个网站，端口号是5000，如果不进行nginx映射，只能在linux的内网中进行访问，</pre>\n<pre>无法在外网进行访问</pre>\n<p>例如我在/etc/nginx/conf.d/中添加了myblog.conf，如下面，重启nginx后，80端口的http请求都会转向到内部的5000端口，这样自己的网站就可以访问了</p>\n<div class=\"cnblogs_code\">\n<pre><span>server {\n   listen 80<span>;\n   location /<span> {\n        proxy_pass http://localhost:5000;\n        proxy_http_version 1.1<span>;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection keep-<span>alive;   \n        proxy_set_header Host $host;\n        proxy_cache_bypass $http_ipgrade;\n   }  \n}</span></span></span></span></span></pre>\n</div>\n<p>&nbsp;</p>","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"spatxos","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/spatxos","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"<div id=\"nginxinstall\">安装nginx</div>\n<div class=\"cnblogs_code\">\n<pre>yum -y install nginx</pre>\n</div>\n<pre><span><span>\n测试是否安装正确：\n\n<p></span></span></pre></p>\n<div class=\"cnblogs_code\">\n<pre>nginx -t</pre>\n</div>\n<pre><span><span><span>\n打印如下：</span></span></span></pre>\n<div class=\"cnblogs_code\">\n<pre>nginx: the configuration file /etc/nginx/nginx.conf syntax <span style=\"color: #0000ff;\">is</span><span style=\"color: #000000;\"> ok\nnginx: configuration file </span>/etc/nginx/nginx.conf test <span style=\"color: #0000ff;\">is</span> successful</pre>\n</div>\n<pre><span><span><span><span>\nCentOS7.0+<span> nginx实现停止、启动、重启</span></span></span></span></span></pre>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">systemctl stop nginx.service;  \nsystemctl start nginx.service;\nsystemctl restart nginx.service;\nsystemctl status nginx.service;</span></pre>\n</div>\n<pre><span><span><span><span><span>\n开机自启：</span></span></span></span></span></pre>\n<div class=\"cnblogs_code\">\n<pre>systemctl enable nginx.service</pre>\n</div>\n<pre><span><span><span><span><span>\n取消开机自启：</span></span></span></span></span></pre>\n<div class=\"cnblogs_code\">\n<pre>systemctl disable nginx.service</pre>\n</div>\n<pre><span><span><span><span><span>\n\n<p>nginx配置的修改：<br>修改nginx.conf（位置在/etc/nginx/）文件，可将配置文件放在一个文件夹中，让nginx自己去读取自定义的配置文件，修改结果如下</span></span></span></span></span></pre></p>\n<div class=\"cnblogs_code\">\n<pre><span># For more information on configuration, see:\n#   * Official English Documentation: http://nginx.org/en/docs/\n#   * Official Russian Documentation: http://nginx.org/ru/docs/\n<span>\nuser nginx;\nworker_processes auto;\nerror_log /var/log/nginx/<span>error.log;\npid /run/<span>nginx.pid;\n\n<h1 id=\"Load-dynamic-modules-See-usr-share-doc-nginx-README-dynamic\"><a href=\"#Load-dynamic-modules-See-usr-share-doc-nginx-README-dynamic\" class=\"headerlink\" title=\"Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.\"></a>Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.</h1><p>include /usr/share/nginx/modules/*.conf;</p>\n<p>events {<br>    worker_connections 1024;<br>}</p>\n<p>http {<br>    log_format  main  ‘$remote_addr - $remote_user [$time_local] “$request” ‘<br>                      ‘$status $body_bytes_sent “$http_referer” ‘<br>                      ‘“$http_user_agent” “$http_x_forwarded_for”‘;</p>\n<pre><code>access_log  /var/log/nginx/access.log  main;\n\nsendfile            on;\ntcp_nopush          on;\ntcp_nodelay         on;\nkeepalive_timeout   65;\ntypes_hash_max_size 2048;\n\ninclude             /etc/nginx/mime.types;\ndefault_type        application/octet-stream;\n\n# Load modular configuration files from the /etc/nginx/conf.d directory.\n# See http://nginx.org/en/docs/ngx_core_module.html#include\n# for more information.\ninclude /etc/nginx/conf.d/*.conf;\n</code></pre>\n<p>}</span></span></span></span></pre></p>\n</div>\n<pre>include /etc/nginx/conf.d/*.conf;这一句的意思是从/etc/nginx/conf.d/文件夹中搜索所有*.conf的配置文件填充进配置中，例如我发布了一个网站，端口号是5000，如果不进行nginx映射，只能在linux的内网中进行访问，</pre>\n<pre>无法在外网进行访问</pre>\n<p>例如我在/etc/nginx/conf.d/中添加了myblog.conf，如下面，重启nginx后，80端口的http请求都会转向到内部的5000端口，这样自己的网站就可以访问了</p>\n<div class=\"cnblogs_code\">\n<pre><span>server {\n   listen 80<span>;\n   location /<span> {\n        proxy_pass http://localhost:5000;\n        proxy_http_version 1.1<span>;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection keep-<span>alive;   \n        proxy_set_header Host $host;\n        proxy_cache_bypass $http_ipgrade;\n   }  \n}</span></span></span></span></span></pre>\n</div>\n<p>&nbsp;</p>"},{"title":"linux docker .net core  从建立网站到预览","date":"2020-03-20T03:22:00.000Z","author":"wpzblog","_content":"<p>docker的安装在网上一搜一大把，windows安装的就是exe双击，linux安装需要执行语句</p>\n<p>ps：需要准备xftp、xshell、vs 2019、linux服务器、docker账号密码</p>\n<p>例如：</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">服务器刚买好时，最好执行一次yum update<br /><br />打开xshell，连接上linux服务器<br />安装、运行、配置docker\n</span><span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">、安装docker\nyum install </span>-<span style=\"color: #000000;\">y docker</span>\n<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">、查看docker是否安装成功\nyum list installed </span>|<span style=\"color: #000000;\">grep docker</span>\n<span style=\"color: #800080;\">3</span><span style=\"color: #000000;\">、启动docker服务(并设置开机自启)\nsystemctl start docker.service\nsystemctl enable docker.service</span>\n<span style=\"color: #800080;\">4</span><span style=\"color: #000000;\">、查看docker服务状态\nsystemctl status docker</span></pre>\n</div>\n<p>如果拉镜像慢可以开挂（daemon.json），百度一波一大把&nbsp;<a href=\"https://blog.csdn.net/ZZ2713634772/article/details/103980464\">https://blog.csdn.net/ZZ2713634772/article/details/103980464</a></p>\n<div class=\"cnblogs_code\">\n<pre>vim/vi/nano /etc/docker/daemon.json //如果没有这个文件就去新建一个 <br /><br />修改之后进行保存  //保证<span class=\"hljs-string\">\"registry-mirrors\":[<span class=\"hljs-string\">\"\"] 的格式正确，没有多余标点符号&lt;内部符号全用英文符号&gt;</span></span><br /><br />然后执行：<br />systemctl daemon-reload //重载配置<br />systemctl restart docker  //重启docker<br /><br />收集到的加速器地址：<br />https://docker.mirrors.ustc.edu.cn //中科大<br />https://reg-mirror.qiniu.com  //七牛<br />https://dockerhub.azk8s.cn<br /><a href=\"http://hub-mirror.c.163.com/\" rel=\"nofollow\">http://hub-mirror.c.163.com</a>  //网易<br /><a href=\"https://registry.docker-cn.com/\" rel=\"nofollow\">https://registry.docker-cn.com</a>  //国内<br /><a href=\"https://aa25jngun.mirror.aliyuncs.com/\" rel=\"nofollow\">https://aa25jngun.mirror.aliyuncs.com</a> //阿里云</pre>\n</div>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>接下来可以自己试试打包一下网站，这里用.netcore 3.1举例</p>\n<p>网站可以自己去新建，我这里以wtm生成的模板为例</p>\n<p>进入<a href=\"https://wtmdoc.walkingtec.cn/setup\">https://wtmdoc.walkingtec.cn/setup</a>，项目名填写：MyWtm</p>\n<p><img src=\"/cnblogs/12525540/789895-20200319163629002-354206810.png\" alt=\"\" width=\"642\" height=\"327\" /></p>\n<p>&nbsp;</p>\n<p>点击下一步，版本选择.net core 3.1</p>\n<p><img src=\"/cnblogs/12525540/789895-20200319163732934-1485815953.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>点击开始配置，然后会生成一个压缩文件，在本地解压缩，双击.sln（下载时间不一样，可能目录也不一样，这个没问题的，只是一个演示）</p>\n<p>右键点击MyWtm，添加=&gt;docker支持=&gt;linux（此时根据自己的docker运行系统选择不同版本，我这里选择linux）</p>\n<p>然后会生成一个Dockerfile文件</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p><img src=\"/cnblogs/12525540/789895-20200319164038644-1263763272.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>打开Dockerfile文件，然后将中间的全部删掉，倒数第二句做一个修改</p>\n<div class=\"cnblogs_code\">\n<pre>#See https:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">aka.ms/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.</span>\n<span style=\"color: #000000;\">\nFROM mcr.microsoft.com</span>/dotnet/core/aspnet:<span style=\"color: #800080;\">3.1</span>-buster-slim AS <span style=\"color: #0000ff;\">base</span><span style=\"color: #000000;\">\nWORKDIR </span>/<span style=\"color: #000000;\">app\nEXPOSE </span><span style=\"color: #800080;\">80</span><span style=\"color: #000000;\">\n\nCOPY </span>/ /<span style=\"color: #000000;\">app</span></pre>\n<pre><span style=\"color: #000000;\">ENTRYPOINT [</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">dotnet</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MyWtm.dll</span><span style=\"color: #800000;\">\"</span>]</pre>\n</div>\n<p>将Dockerfile文件属性改一下，改为始终复制</p>\n<p><img src=\"/cnblogs/12525540/789895-20200321141834541-429866891.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>好了， 我们的网站已经做好了准备，下一步，点击发布=&gt;文件夹=&gt;创建配置文件，什么都不需要改</p>\n<p><img src=\"/cnblogs/12525540/789895-20200319164325337-719717806.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;然后点击发布按钮</p>\n<p>&nbsp;<img src=\"/cnblogs/12525540/789895-20200319164432955-318576517.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;点击复制下这个文件夹（如果复制出来没有带盘符，自己去加上）</p>\n<p><img src=\"/cnblogs/12525540/789895-20200319164451725-1925277368.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>打开xftp（自行下载），连接到自己的linux服务器，创建一个mywtm文件夹，将刚才的&ldquo;D:\\xxx\\MyWtm\\MyWtm\\bin\\Release\\netcoreapp3.1\\publish\\&rdquo;字符串粘贴进本地地址栏</p>\n<p><img src=\"/cnblogs/12525540/789895-20200319164725210-1272652233.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>然后左边文件夹publish全选上传，此时我们的文件工作全部做好了</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;现在打开xshell，连接上linux服务器</p>\n<p>&nbsp;登陆自己的docker账号</p>\n<div class=\"cnblogs_code\">\n<pre>docker login</pre>\n</div>\n<p>按照提示输入dockerid和密码，出现successly就可以了</p>\n<p>然后进入到自己的mywtm项目文件夹下（之前修改的Dockerfile文件倒数第二句，COPY / /app&nbsp; 第一个斜杠就是本目录，你也可以在上级目录(如publish)执行镜像创建，但是第一个斜杠前要加目录名称，例如COPY publish/ /app），比如我的是</p>\n<div class=\"cnblogs_code\">\n<pre>cd /root/docker/mywtm  #如果自己不在根目录下，可以先执行cd /</pre>\n</div>\n<p>现在开始，创建docker镜像，出现Successfully就可以了</p>\n<div class=\"cnblogs_code\">\n<pre>docker build -t [dockerid]/mywtm .</pre>\n</div>\n<p><img src=\"/cnblogs/12525540/789895-20200319173859759-522955515.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;然后启动容器</p>\n<div class=\"cnblogs_code\">\n<pre>docker run -d -p 8081:80 --name mywtm [dockerid]/mywtm</pre>\n</div>\n<p><img src=\"/cnblogs/12525540/789895-20200321142847608-345165120.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;此时我们可以使用curl来查看自己的网站是否运行成功：</p>\n<div class=\"cnblogs_code\">\n<pre>curl http:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">localhost:8081  #出现html代码说明我们的网站已经发布到docker生成镜像，并且于linux映射成功,如果没有出现html也没有关系，在外网查看下就可以了</span></pre>\n</div>\n<p>&nbsp;此时，在外网一般是可以访问到的，ip+端口即可，如果不能访问到，去云服务器控制台安全组中开放端口即可（一般阿里云需要手动去开放）</p>\n<p>&nbsp;经测试发现，腾讯云服务器docker映射后不需要配置安全组，阿里云服务器需要自己去手动配置</p>\n<p>&nbsp;<img src=\"/cnblogs/12525540/789895-20200321144900449-1370390112.png\" alt=\"\" width=\"915\" height=\"562\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>推送到自己的docker仓库</p>\n<div class=\"cnblogs_code\">\n<pre>docker push [dockerid]/mywtm</pre>\n</div>\n<p><img src=\"/cnblogs/12525540/789895-20200319175139996-1452396882.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>docker的其他操作：</p>\n<p>停止容器：</p>\n<div class=\"cnblogs_code\">\n<pre>docker stop [容器id]</pre>\n</div>\n<p>删除容器</p>\n<div class=\"cnblogs_code\">\n<pre>docker rm [容器id]  #或者docker container rm [容器名]</pre>\n</div>\n<p>删除镜像</p>\n<div class=\"cnblogs_code\">\n<pre>docker rmi [镜像名称]</pre>\n</div>\n<p>查看运行的docker容器</p>\n<div class=\"cnblogs_code\">\n<pre>docker ps</pre>\n</div>\n<p>查看所有docker容器</p>\n<div class=\"cnblogs_code\">\n<pre>docker ps -a</pre>\n</div>\n<p>&nbsp;查看docker的日志</p>\n<div class=\"cnblogs_code\">\n<pre>docker logs --tail=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">100</span><span style=\"color: #800000;\">\"</span> mywtm <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">查看最近100行日志</span>\n<span style=\"color: #000000;\">\ndocker logs命令\ndocker logs [options] 容器获取容器的日志。\n\n名字    默认值    描述\n&ndash;details        显示提供给日志的额外细节\n&ndash;follow或</span>-<span style=\"color: #000000;\">f        按日志输出\n&ndash;since        从某个时间开始显示，例如2013</span>-<span style=\"color: #800080;\">01</span>-02T13:<span style=\"color: #800080;\">23</span>:<span style=\"color: #800080;\">37</span><span style=\"color: #000000;\">\n&ndash;tail    all    从日志末尾多少行开始显示\n&ndash;timestamps或</span>-<span style=\"color: #000000;\">t        显示时间戳\n&ndash;until        打印某个时间以前的日志，例如 </span><span style=\"color: #800080;\">2013</span>-<span style=\"color: #800080;\">01</span>-02T13:<span style=\"color: #800080;\">23</span>:<span style=\"color: #800080;\">37</span></pre>\n</div>\n<p>进入docker内部</p>\n<div class=\"cnblogs_code\">\n<pre>sudo docker exec -it containerID /bin/bash  //最后的路径是可以更改的</pre>\n</div>\n<p>&nbsp;</p>\n<p>docker常见报错信息：</p>\n<p>参见<a href=\"https://www.jianshu.com/p/605a7c0e1d0f\">https://www.jianshu.com/p/605a7c0e1d0f</a></p>","source":"_posts/cnblogs/12525540.md","raw":"---\ntitle: linux docker .net core  从建立网站到预览\ndate: 2020-03-20T11:22:00\nauthor: wpzblog\ntags: [\"linux\",\"netcore\",\"docker\"]\n---\n<p>docker的安装在网上一搜一大把，windows安装的就是exe双击，linux安装需要执行语句</p>\n<p>ps：需要准备xftp、xshell、vs 2019、linux服务器、docker账号密码</p>\n<p>例如：</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">服务器刚买好时，最好执行一次yum update<br /><br />打开xshell，连接上linux服务器<br />安装、运行、配置docker\n</span><span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">、安装docker\nyum install </span>-<span style=\"color: #000000;\">y docker</span>\n<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">、查看docker是否安装成功\nyum list installed </span>|<span style=\"color: #000000;\">grep docker</span>\n<span style=\"color: #800080;\">3</span><span style=\"color: #000000;\">、启动docker服务(并设置开机自启)\nsystemctl start docker.service\nsystemctl enable docker.service</span>\n<span style=\"color: #800080;\">4</span><span style=\"color: #000000;\">、查看docker服务状态\nsystemctl status docker</span></pre>\n</div>\n<p>如果拉镜像慢可以开挂（daemon.json），百度一波一大把&nbsp;<a href=\"https://blog.csdn.net/ZZ2713634772/article/details/103980464\">https://blog.csdn.net/ZZ2713634772/article/details/103980464</a></p>\n<div class=\"cnblogs_code\">\n<pre>vim/vi/nano /etc/docker/daemon.json //如果没有这个文件就去新建一个 <br /><br />修改之后进行保存  //保证<span class=\"hljs-string\">\"registry-mirrors\":[<span class=\"hljs-string\">\"\"] 的格式正确，没有多余标点符号&lt;内部符号全用英文符号&gt;</span></span><br /><br />然后执行：<br />systemctl daemon-reload //重载配置<br />systemctl restart docker  //重启docker<br /><br />收集到的加速器地址：<br />https://docker.mirrors.ustc.edu.cn //中科大<br />https://reg-mirror.qiniu.com  //七牛<br />https://dockerhub.azk8s.cn<br /><a href=\"http://hub-mirror.c.163.com/\" rel=\"nofollow\">http://hub-mirror.c.163.com</a>  //网易<br /><a href=\"https://registry.docker-cn.com/\" rel=\"nofollow\">https://registry.docker-cn.com</a>  //国内<br /><a href=\"https://aa25jngun.mirror.aliyuncs.com/\" rel=\"nofollow\">https://aa25jngun.mirror.aliyuncs.com</a> //阿里云</pre>\n</div>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>接下来可以自己试试打包一下网站，这里用.netcore 3.1举例</p>\n<p>网站可以自己去新建，我这里以wtm生成的模板为例</p>\n<p>进入<a href=\"https://wtmdoc.walkingtec.cn/setup\">https://wtmdoc.walkingtec.cn/setup</a>，项目名填写：MyWtm</p>\n<p><img src=\"/cnblogs/12525540/789895-20200319163629002-354206810.png\" alt=\"\" width=\"642\" height=\"327\" /></p>\n<p>&nbsp;</p>\n<p>点击下一步，版本选择.net core 3.1</p>\n<p><img src=\"/cnblogs/12525540/789895-20200319163732934-1485815953.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>点击开始配置，然后会生成一个压缩文件，在本地解压缩，双击.sln（下载时间不一样，可能目录也不一样，这个没问题的，只是一个演示）</p>\n<p>右键点击MyWtm，添加=&gt;docker支持=&gt;linux（此时根据自己的docker运行系统选择不同版本，我这里选择linux）</p>\n<p>然后会生成一个Dockerfile文件</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p><img src=\"/cnblogs/12525540/789895-20200319164038644-1263763272.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>打开Dockerfile文件，然后将中间的全部删掉，倒数第二句做一个修改</p>\n<div class=\"cnblogs_code\">\n<pre>#See https:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">aka.ms/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.</span>\n<span style=\"color: #000000;\">\nFROM mcr.microsoft.com</span>/dotnet/core/aspnet:<span style=\"color: #800080;\">3.1</span>-buster-slim AS <span style=\"color: #0000ff;\">base</span><span style=\"color: #000000;\">\nWORKDIR </span>/<span style=\"color: #000000;\">app\nEXPOSE </span><span style=\"color: #800080;\">80</span><span style=\"color: #000000;\">\n\nCOPY </span>/ /<span style=\"color: #000000;\">app</span></pre>\n<pre><span style=\"color: #000000;\">ENTRYPOINT [</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">dotnet</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MyWtm.dll</span><span style=\"color: #800000;\">\"</span>]</pre>\n</div>\n<p>将Dockerfile文件属性改一下，改为始终复制</p>\n<p><img src=\"/cnblogs/12525540/789895-20200321141834541-429866891.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>好了， 我们的网站已经做好了准备，下一步，点击发布=&gt;文件夹=&gt;创建配置文件，什么都不需要改</p>\n<p><img src=\"/cnblogs/12525540/789895-20200319164325337-719717806.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;然后点击发布按钮</p>\n<p>&nbsp;<img src=\"/cnblogs/12525540/789895-20200319164432955-318576517.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;点击复制下这个文件夹（如果复制出来没有带盘符，自己去加上）</p>\n<p><img src=\"/cnblogs/12525540/789895-20200319164451725-1925277368.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>打开xftp（自行下载），连接到自己的linux服务器，创建一个mywtm文件夹，将刚才的&ldquo;D:\\xxx\\MyWtm\\MyWtm\\bin\\Release\\netcoreapp3.1\\publish\\&rdquo;字符串粘贴进本地地址栏</p>\n<p><img src=\"/cnblogs/12525540/789895-20200319164725210-1272652233.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>然后左边文件夹publish全选上传，此时我们的文件工作全部做好了</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;现在打开xshell，连接上linux服务器</p>\n<p>&nbsp;登陆自己的docker账号</p>\n<div class=\"cnblogs_code\">\n<pre>docker login</pre>\n</div>\n<p>按照提示输入dockerid和密码，出现successly就可以了</p>\n<p>然后进入到自己的mywtm项目文件夹下（之前修改的Dockerfile文件倒数第二句，COPY / /app&nbsp; 第一个斜杠就是本目录，你也可以在上级目录(如publish)执行镜像创建，但是第一个斜杠前要加目录名称，例如COPY publish/ /app），比如我的是</p>\n<div class=\"cnblogs_code\">\n<pre>cd /root/docker/mywtm  #如果自己不在根目录下，可以先执行cd /</pre>\n</div>\n<p>现在开始，创建docker镜像，出现Successfully就可以了</p>\n<div class=\"cnblogs_code\">\n<pre>docker build -t [dockerid]/mywtm .</pre>\n</div>\n<p><img src=\"/cnblogs/12525540/789895-20200319173859759-522955515.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;然后启动容器</p>\n<div class=\"cnblogs_code\">\n<pre>docker run -d -p 8081:80 --name mywtm [dockerid]/mywtm</pre>\n</div>\n<p><img src=\"/cnblogs/12525540/789895-20200321142847608-345165120.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;此时我们可以使用curl来查看自己的网站是否运行成功：</p>\n<div class=\"cnblogs_code\">\n<pre>curl http:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">localhost:8081  #出现html代码说明我们的网站已经发布到docker生成镜像，并且于linux映射成功,如果没有出现html也没有关系，在外网查看下就可以了</span></pre>\n</div>\n<p>&nbsp;此时，在外网一般是可以访问到的，ip+端口即可，如果不能访问到，去云服务器控制台安全组中开放端口即可（一般阿里云需要手动去开放）</p>\n<p>&nbsp;经测试发现，腾讯云服务器docker映射后不需要配置安全组，阿里云服务器需要自己去手动配置</p>\n<p>&nbsp;<img src=\"/cnblogs/12525540/789895-20200321144900449-1370390112.png\" alt=\"\" width=\"915\" height=\"562\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>推送到自己的docker仓库</p>\n<div class=\"cnblogs_code\">\n<pre>docker push [dockerid]/mywtm</pre>\n</div>\n<p><img src=\"/cnblogs/12525540/789895-20200319175139996-1452396882.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>docker的其他操作：</p>\n<p>停止容器：</p>\n<div class=\"cnblogs_code\">\n<pre>docker stop [容器id]</pre>\n</div>\n<p>删除容器</p>\n<div class=\"cnblogs_code\">\n<pre>docker rm [容器id]  #或者docker container rm [容器名]</pre>\n</div>\n<p>删除镜像</p>\n<div class=\"cnblogs_code\">\n<pre>docker rmi [镜像名称]</pre>\n</div>\n<p>查看运行的docker容器</p>\n<div class=\"cnblogs_code\">\n<pre>docker ps</pre>\n</div>\n<p>查看所有docker容器</p>\n<div class=\"cnblogs_code\">\n<pre>docker ps -a</pre>\n</div>\n<p>&nbsp;查看docker的日志</p>\n<div class=\"cnblogs_code\">\n<pre>docker logs --tail=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">100</span><span style=\"color: #800000;\">\"</span> mywtm <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">查看最近100行日志</span>\n<span style=\"color: #000000;\">\ndocker logs命令\ndocker logs [options] 容器获取容器的日志。\n\n名字    默认值    描述\n&ndash;details        显示提供给日志的额外细节\n&ndash;follow或</span>-<span style=\"color: #000000;\">f        按日志输出\n&ndash;since        从某个时间开始显示，例如2013</span>-<span style=\"color: #800080;\">01</span>-02T13:<span style=\"color: #800080;\">23</span>:<span style=\"color: #800080;\">37</span><span style=\"color: #000000;\">\n&ndash;tail    all    从日志末尾多少行开始显示\n&ndash;timestamps或</span>-<span style=\"color: #000000;\">t        显示时间戳\n&ndash;until        打印某个时间以前的日志，例如 </span><span style=\"color: #800080;\">2013</span>-<span style=\"color: #800080;\">01</span>-02T13:<span style=\"color: #800080;\">23</span>:<span style=\"color: #800080;\">37</span></pre>\n</div>\n<p>进入docker内部</p>\n<div class=\"cnblogs_code\">\n<pre>sudo docker exec -it containerID /bin/bash  //最后的路径是可以更改的</pre>\n</div>\n<p>&nbsp;</p>\n<p>docker常见报错信息：</p>\n<p>参见<a href=\"https://www.jianshu.com/p/605a7c0e1d0f\">https://www.jianshu.com/p/605a7c0e1d0f</a></p>","slug":"cnblogs/12525540","published":1,"updated":"2022-07-10T13:01:14.500Z","_id":"cl5f7ivnq001pc0un7cf82f18","comments":1,"layout":"post","photos":[],"link":"","content":"<p>docker的安装在网上一搜一大把，windows安装的就是exe双击，linux安装需要执行语句</p>\n<p>ps：需要准备xftp、xshell、vs 2019、linux服务器、docker账号密码</p>\n<p>例如：</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">服务器刚买好时，最好执行一次yum update<br /><br />打开xshell，连接上linux服务器<br />安装、运行、配置docker\n</span><span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">、安装docker\nyum install </span>-<span style=\"color: #000000;\">y docker</span>\n<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">、查看docker是否安装成功\nyum list installed </span>|<span style=\"color: #000000;\">grep docker</span>\n<span style=\"color: #800080;\">3</span><span style=\"color: #000000;\">、启动docker服务(并设置开机自启)\nsystemctl start docker.service\nsystemctl enable docker.service</span>\n<span style=\"color: #800080;\">4</span><span style=\"color: #000000;\">、查看docker服务状态\nsystemctl status docker</span></pre>\n</div>\n<p>如果拉镜像慢可以开挂（daemon.json），百度一波一大把&nbsp;<a href=\"https://blog.csdn.net/ZZ2713634772/article/details/103980464\">https://blog.csdn.net/ZZ2713634772/article/details/103980464</a></p>\n<div class=\"cnblogs_code\">\n<pre>vim/vi/nano /etc/docker/daemon.json //如果没有这个文件就去新建一个 <br /><br />修改之后进行保存  //保证<span class=\"hljs-string\">\"registry-mirrors\":[<span class=\"hljs-string\">\"\"] 的格式正确，没有多余标点符号&lt;内部符号全用英文符号&gt;</span></span><br /><br />然后执行：<br />systemctl daemon-reload //重载配置<br />systemctl restart docker  //重启docker<br /><br />收集到的加速器地址：<br />https://docker.mirrors.ustc.edu.cn //中科大<br />https://reg-mirror.qiniu.com  //七牛<br />https://dockerhub.azk8s.cn<br /><a href=\"http://hub-mirror.c.163.com/\" rel=\"nofollow\">http://hub-mirror.c.163.com</a>  //网易<br /><a href=\"https://registry.docker-cn.com/\" rel=\"nofollow\">https://registry.docker-cn.com</a>  //国内<br /><a href=\"https://aa25jngun.mirror.aliyuncs.com/\" rel=\"nofollow\">https://aa25jngun.mirror.aliyuncs.com</a> //阿里云</pre>\n</div>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>接下来可以自己试试打包一下网站，这里用.netcore 3.1举例</p>\n<p>网站可以自己去新建，我这里以wtm生成的模板为例</p>\n<p>进入<a href=\"https://wtmdoc.walkingtec.cn/setup\">https://wtmdoc.walkingtec.cn/setup</a>，项目名填写：MyWtm</p>\n<p><img src=\"/cnblogs/12525540/789895-20200319163629002-354206810.png\" alt=\"\" width=\"642\" height=\"327\" /></p>\n<p>&nbsp;</p>\n<p>点击下一步，版本选择.net core 3.1</p>\n<p><img src=\"/cnblogs/12525540/789895-20200319163732934-1485815953.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>点击开始配置，然后会生成一个压缩文件，在本地解压缩，双击.sln（下载时间不一样，可能目录也不一样，这个没问题的，只是一个演示）</p>\n<p>右键点击MyWtm，添加=&gt;docker支持=&gt;linux（此时根据自己的docker运行系统选择不同版本，我这里选择linux）</p>\n<p>然后会生成一个Dockerfile文件</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p><img src=\"/cnblogs/12525540/789895-20200319164038644-1263763272.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>打开Dockerfile文件，然后将中间的全部删掉，倒数第二句做一个修改</p>\n<div class=\"cnblogs_code\">\n<pre>#See https:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">aka.ms/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.</span>\n<span style=\"color: #000000;\">\nFROM mcr.microsoft.com</span>/dotnet/core/aspnet:<span style=\"color: #800080;\">3.1</span>-buster-slim AS <span style=\"color: #0000ff;\">base</span><span style=\"color: #000000;\">\nWORKDIR </span>/<span style=\"color: #000000;\">app\nEXPOSE </span><span style=\"color: #800080;\">80</span><span style=\"color: #000000;\">\n\n<p>COPY </span>/ /<span style=\"color: #000000;\">app</span></pre></p>\n<pre><span style=\"color: #000000;\">ENTRYPOINT [</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">dotnet</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MyWtm.dll</span><span style=\"color: #800000;\">\"</span>]</pre>\n</div>\n<p>将Dockerfile文件属性改一下，改为始终复制</p>\n<p><img src=\"/cnblogs/12525540/789895-20200321141834541-429866891.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>好了， 我们的网站已经做好了准备，下一步，点击发布=&gt;文件夹=&gt;创建配置文件，什么都不需要改</p>\n<p><img src=\"/cnblogs/12525540/789895-20200319164325337-719717806.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;然后点击发布按钮</p>\n<p>&nbsp;<img src=\"/cnblogs/12525540/789895-20200319164432955-318576517.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;点击复制下这个文件夹（如果复制出来没有带盘符，自己去加上）</p>\n<p><img src=\"/cnblogs/12525540/789895-20200319164451725-1925277368.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>打开xftp（自行下载），连接到自己的linux服务器，创建一个mywtm文件夹，将刚才的&ldquo;D:\\xxx\\MyWtm\\MyWtm\\bin\\Release\\netcoreapp3.1\\publish\\&rdquo;字符串粘贴进本地地址栏</p>\n<p><img src=\"/cnblogs/12525540/789895-20200319164725210-1272652233.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>然后左边文件夹publish全选上传，此时我们的文件工作全部做好了</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;现在打开xshell，连接上linux服务器</p>\n<p>&nbsp;登陆自己的docker账号</p>\n<div class=\"cnblogs_code\">\n<pre>docker login</pre>\n</div>\n<p>按照提示输入dockerid和密码，出现successly就可以了</p>\n<p>然后进入到自己的mywtm项目文件夹下（之前修改的Dockerfile文件倒数第二句，COPY / /app&nbsp; 第一个斜杠就是本目录，你也可以在上级目录(如publish)执行镜像创建，但是第一个斜杠前要加目录名称，例如COPY publish/ /app），比如我的是</p>\n<div class=\"cnblogs_code\">\n<pre>cd /root/docker/mywtm  #如果自己不在根目录下，可以先执行cd /</pre>\n</div>\n<p>现在开始，创建docker镜像，出现Successfully就可以了</p>\n<div class=\"cnblogs_code\">\n<pre>docker build -t [dockerid]/mywtm .</pre>\n</div>\n<p><img src=\"/cnblogs/12525540/789895-20200319173859759-522955515.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;然后启动容器</p>\n<div class=\"cnblogs_code\">\n<pre>docker run -d -p 8081:80 --name mywtm [dockerid]/mywtm</pre>\n</div>\n<p><img src=\"/cnblogs/12525540/789895-20200321142847608-345165120.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;此时我们可以使用curl来查看自己的网站是否运行成功：</p>\n<div class=\"cnblogs_code\">\n<pre>curl http:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">localhost:8081  #出现html代码说明我们的网站已经发布到docker生成镜像，并且于linux映射成功,如果没有出现html也没有关系，在外网查看下就可以了</span></pre>\n</div>\n<p>&nbsp;此时，在外网一般是可以访问到的，ip+端口即可，如果不能访问到，去云服务器控制台安全组中开放端口即可（一般阿里云需要手动去开放）</p>\n<p>&nbsp;经测试发现，腾讯云服务器docker映射后不需要配置安全组，阿里云服务器需要自己去手动配置</p>\n<p>&nbsp;<img src=\"/cnblogs/12525540/789895-20200321144900449-1370390112.png\" alt=\"\" width=\"915\" height=\"562\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>推送到自己的docker仓库</p>\n<div class=\"cnblogs_code\">\n<pre>docker push [dockerid]/mywtm</pre>\n</div>\n<p><img src=\"/cnblogs/12525540/789895-20200319175139996-1452396882.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>docker的其他操作：</p>\n<p>停止容器：</p>\n<div class=\"cnblogs_code\">\n<pre>docker stop [容器id]</pre>\n</div>\n<p>删除容器</p>\n<div class=\"cnblogs_code\">\n<pre>docker rm [容器id]  #或者docker container rm [容器名]</pre>\n</div>\n<p>删除镜像</p>\n<div class=\"cnblogs_code\">\n<pre>docker rmi [镜像名称]</pre>\n</div>\n<p>查看运行的docker容器</p>\n<div class=\"cnblogs_code\">\n<pre>docker ps</pre>\n</div>\n<p>查看所有docker容器</p>\n<div class=\"cnblogs_code\">\n<pre>docker ps -a</pre>\n</div>\n<p>&nbsp;查看docker的日志</p>\n<div class=\"cnblogs_code\">\n<pre>docker logs --tail=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">100</span><span style=\"color: #800000;\">\"</span> mywtm <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">查看最近100行日志</span>\n<span style=\"color: #000000;\">\ndocker logs命令\ndocker logs [options] 容器获取容器的日志。\n\n<p>名字    默认值    描述<br>&ndash;details        显示提供给日志的额外细节<br>&ndash;follow或</span>-<span style=\"color: #000000;\">f        按日志输出<br>&ndash;since        从某个时间开始显示，例如2013</span>-<span style=\"color: #800080;\">01</span>-02T13:<span style=\"color: #800080;\">23</span>:<span style=\"color: #800080;\">37</span><span style=\"color: #000000;\"><br>&ndash;tail    all    从日志末尾多少行开始显示<br>&ndash;timestamps或</span>-<span style=\"color: #000000;\">t        显示时间戳<br>&ndash;until        打印某个时间以前的日志，例如 </span><span style=\"color: #800080;\">2013</span>-<span style=\"color: #800080;\">01</span>-02T13:<span style=\"color: #800080;\">23</span>:<span style=\"color: #800080;\">37</span></pre></p>\n</div>\n<p>进入docker内部</p>\n<div class=\"cnblogs_code\">\n<pre>sudo docker exec -it containerID /bin/bash  //最后的路径是可以更改的</pre>\n</div>\n<p>&nbsp;</p>\n<p>docker常见报错信息：</p>\n<p>参见<a href=\"https://www.jianshu.com/p/605a7c0e1d0f\">https://www.jianshu.com/p/605a7c0e1d0f</a></p>","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"spatxos","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/spatxos","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"<p>docker的安装在网上一搜一大把，windows安装的就是exe双击，linux安装需要执行语句</p>\n<p>ps：需要准备xftp、xshell、vs 2019、linux服务器、docker账号密码</p>\n<p>例如：</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">服务器刚买好时，最好执行一次yum update<br /><br />打开xshell，连接上linux服务器<br />安装、运行、配置docker\n</span><span style=\"color: #800080;\">1</span><span style=\"color: #000000;\">、安装docker\nyum install </span>-<span style=\"color: #000000;\">y docker</span>\n<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">、查看docker是否安装成功\nyum list installed </span>|<span style=\"color: #000000;\">grep docker</span>\n<span style=\"color: #800080;\">3</span><span style=\"color: #000000;\">、启动docker服务(并设置开机自启)\nsystemctl start docker.service\nsystemctl enable docker.service</span>\n<span style=\"color: #800080;\">4</span><span style=\"color: #000000;\">、查看docker服务状态\nsystemctl status docker</span></pre>\n</div>\n<p>如果拉镜像慢可以开挂（daemon.json），百度一波一大把&nbsp;<a href=\"https://blog.csdn.net/ZZ2713634772/article/details/103980464\">https://blog.csdn.net/ZZ2713634772/article/details/103980464</a></p>\n<div class=\"cnblogs_code\">\n<pre>vim/vi/nano /etc/docker/daemon.json //如果没有这个文件就去新建一个 <br /><br />修改之后进行保存  //保证<span class=\"hljs-string\">\"registry-mirrors\":[<span class=\"hljs-string\">\"\"] 的格式正确，没有多余标点符号&lt;内部符号全用英文符号&gt;</span></span><br /><br />然后执行：<br />systemctl daemon-reload //重载配置<br />systemctl restart docker  //重启docker<br /><br />收集到的加速器地址：<br />https://docker.mirrors.ustc.edu.cn //中科大<br />https://reg-mirror.qiniu.com  //七牛<br />https://dockerhub.azk8s.cn<br /><a href=\"http://hub-mirror.c.163.com/\" rel=\"nofollow\">http://hub-mirror.c.163.com</a>  //网易<br /><a href=\"https://registry.docker-cn.com/\" rel=\"nofollow\">https://registry.docker-cn.com</a>  //国内<br /><a href=\"https://aa25jngun.mirror.aliyuncs.com/\" rel=\"nofollow\">https://aa25jngun.mirror.aliyuncs.com</a> //阿里云</pre>\n</div>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>接下来可以自己试试打包一下网站，这里用.netcore 3.1举例</p>\n<p>网站可以自己去新建，我这里以wtm生成的模板为例</p>\n<p>进入<a href=\"https://wtmdoc.walkingtec.cn/setup\">https://wtmdoc.walkingtec.cn/setup</a>，项目名填写：MyWtm</p>\n<p><img src=\"/cnblogs/12525540/789895-20200319163629002-354206810.png\" alt=\"\" width=\"642\" height=\"327\" /></p>\n<p>&nbsp;</p>\n<p>点击下一步，版本选择.net core 3.1</p>\n<p><img src=\"/cnblogs/12525540/789895-20200319163732934-1485815953.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>点击开始配置，然后会生成一个压缩文件，在本地解压缩，双击.sln（下载时间不一样，可能目录也不一样，这个没问题的，只是一个演示）</p>\n<p>右键点击MyWtm，添加=&gt;docker支持=&gt;linux（此时根据自己的docker运行系统选择不同版本，我这里选择linux）</p>\n<p>然后会生成一个Dockerfile文件</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p><img src=\"/cnblogs/12525540/789895-20200319164038644-1263763272.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>打开Dockerfile文件，然后将中间的全部删掉，倒数第二句做一个修改</p>\n<div class=\"cnblogs_code\">\n<pre>#See https:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">aka.ms/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.</span>\n<span style=\"color: #000000;\">\nFROM mcr.microsoft.com</span>/dotnet/core/aspnet:<span style=\"color: #800080;\">3.1</span>-buster-slim AS <span style=\"color: #0000ff;\">base</span><span style=\"color: #000000;\">\nWORKDIR </span>/<span style=\"color: #000000;\">app\nEXPOSE </span><span style=\"color: #800080;\">80</span><span style=\"color: #000000;\">\n\n<p>COPY </span>/ /<span style=\"color: #000000;\">app</span></pre></p>\n<pre><span style=\"color: #000000;\">ENTRYPOINT [</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">dotnet</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">MyWtm.dll</span><span style=\"color: #800000;\">\"</span>]</pre>\n</div>\n<p>将Dockerfile文件属性改一下，改为始终复制</p>\n<p><img src=\"/cnblogs/12525540/789895-20200321141834541-429866891.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>好了， 我们的网站已经做好了准备，下一步，点击发布=&gt;文件夹=&gt;创建配置文件，什么都不需要改</p>\n<p><img src=\"/cnblogs/12525540/789895-20200319164325337-719717806.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;然后点击发布按钮</p>\n<p>&nbsp;<img src=\"/cnblogs/12525540/789895-20200319164432955-318576517.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;点击复制下这个文件夹（如果复制出来没有带盘符，自己去加上）</p>\n<p><img src=\"/cnblogs/12525540/789895-20200319164451725-1925277368.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>打开xftp（自行下载），连接到自己的linux服务器，创建一个mywtm文件夹，将刚才的&ldquo;D:\\xxx\\MyWtm\\MyWtm\\bin\\Release\\netcoreapp3.1\\publish\\&rdquo;字符串粘贴进本地地址栏</p>\n<p><img src=\"/cnblogs/12525540/789895-20200319164725210-1272652233.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>然后左边文件夹publish全选上传，此时我们的文件工作全部做好了</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;现在打开xshell，连接上linux服务器</p>\n<p>&nbsp;登陆自己的docker账号</p>\n<div class=\"cnblogs_code\">\n<pre>docker login</pre>\n</div>\n<p>按照提示输入dockerid和密码，出现successly就可以了</p>\n<p>然后进入到自己的mywtm项目文件夹下（之前修改的Dockerfile文件倒数第二句，COPY / /app&nbsp; 第一个斜杠就是本目录，你也可以在上级目录(如publish)执行镜像创建，但是第一个斜杠前要加目录名称，例如COPY publish/ /app），比如我的是</p>\n<div class=\"cnblogs_code\">\n<pre>cd /root/docker/mywtm  #如果自己不在根目录下，可以先执行cd /</pre>\n</div>\n<p>现在开始，创建docker镜像，出现Successfully就可以了</p>\n<div class=\"cnblogs_code\">\n<pre>docker build -t [dockerid]/mywtm .</pre>\n</div>\n<p><img src=\"/cnblogs/12525540/789895-20200319173859759-522955515.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;然后启动容器</p>\n<div class=\"cnblogs_code\">\n<pre>docker run -d -p 8081:80 --name mywtm [dockerid]/mywtm</pre>\n</div>\n<p><img src=\"/cnblogs/12525540/789895-20200321142847608-345165120.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;此时我们可以使用curl来查看自己的网站是否运行成功：</p>\n<div class=\"cnblogs_code\">\n<pre>curl http:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">localhost:8081  #出现html代码说明我们的网站已经发布到docker生成镜像，并且于linux映射成功,如果没有出现html也没有关系，在外网查看下就可以了</span></pre>\n</div>\n<p>&nbsp;此时，在外网一般是可以访问到的，ip+端口即可，如果不能访问到，去云服务器控制台安全组中开放端口即可（一般阿里云需要手动去开放）</p>\n<p>&nbsp;经测试发现，腾讯云服务器docker映射后不需要配置安全组，阿里云服务器需要自己去手动配置</p>\n<p>&nbsp;<img src=\"/cnblogs/12525540/789895-20200321144900449-1370390112.png\" alt=\"\" width=\"915\" height=\"562\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>推送到自己的docker仓库</p>\n<div class=\"cnblogs_code\">\n<pre>docker push [dockerid]/mywtm</pre>\n</div>\n<p><img src=\"/cnblogs/12525540/789895-20200319175139996-1452396882.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>docker的其他操作：</p>\n<p>停止容器：</p>\n<div class=\"cnblogs_code\">\n<pre>docker stop [容器id]</pre>\n</div>\n<p>删除容器</p>\n<div class=\"cnblogs_code\">\n<pre>docker rm [容器id]  #或者docker container rm [容器名]</pre>\n</div>\n<p>删除镜像</p>\n<div class=\"cnblogs_code\">\n<pre>docker rmi [镜像名称]</pre>\n</div>\n<p>查看运行的docker容器</p>\n<div class=\"cnblogs_code\">\n<pre>docker ps</pre>\n</div>\n<p>查看所有docker容器</p>\n<div class=\"cnblogs_code\">\n<pre>docker ps -a</pre>\n</div>\n<p>&nbsp;查看docker的日志</p>\n<div class=\"cnblogs_code\">\n<pre>docker logs --tail=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">100</span><span style=\"color: #800000;\">\"</span> mywtm <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">查看最近100行日志</span>\n<span style=\"color: #000000;\">\ndocker logs命令\ndocker logs [options] 容器获取容器的日志。\n\n<p>名字    默认值    描述<br>&ndash;details        显示提供给日志的额外细节<br>&ndash;follow或</span>-<span style=\"color: #000000;\">f        按日志输出<br>&ndash;since        从某个时间开始显示，例如2013</span>-<span style=\"color: #800080;\">01</span>-02T13:<span style=\"color: #800080;\">23</span>:<span style=\"color: #800080;\">37</span><span style=\"color: #000000;\"><br>&ndash;tail    all    从日志末尾多少行开始显示<br>&ndash;timestamps或</span>-<span style=\"color: #000000;\">t        显示时间戳<br>&ndash;until        打印某个时间以前的日志，例如 </span><span style=\"color: #800080;\">2013</span>-<span style=\"color: #800080;\">01</span>-02T13:<span style=\"color: #800080;\">23</span>:<span style=\"color: #800080;\">37</span></pre></p>\n</div>\n<p>进入docker内部</p>\n<div class=\"cnblogs_code\">\n<pre>sudo docker exec -it containerID /bin/bash  //最后的路径是可以更改的</pre>\n</div>\n<p>&nbsp;</p>\n<p>docker常见报错信息：</p>\n<p>参见<a href=\"https://www.jianshu.com/p/605a7c0e1d0f\">https://www.jianshu.com/p/605a7c0e1d0f</a></p>"},{"title":"linux 学习 mysql安装到连接","date":"2020-03-14T03:30:00.000Z","author":"不辍","_content":"<h1><span style=\"color: #ff0000;\"><span style=\"font-size: 24px;\">在Centos7.6 上安装mysql</span></span></h1>\n<p>&nbsp;ps：一般mysql安装后会在/var/log/下面生成一个mysqld.log文件，如果遇到启动不了或者其他问题，基本都可以在这个log文件里面找到错误原因</p>\n<h2><span style=\"font-size: 18pt; color: #ff0000;\">1.下载mysql和安装</span></h2>\n<div class=\"cnblogs_code\">\n<h3><span id=\"Method1\" style=\"color: #000000;\">1.1 有梯子，可以使用下面的方法</span></h3>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">二、先下载Linux下的Mysql包，打开Mysql官网\nhttps:</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">www.mysql.com/</span>\n<span style=\"color: #000000;\">点击DOWNLOAD，进入\n\nhttps:</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">www.mysql.com/downloads/<br /><img src=\"/cnblogs/12490995/789895-20200314103719008-486099808.png\" alt=\"\" width=\"732\" height=\"297\" /></span></pre>\n<p>&nbsp;</p>\n<pre></pre>\n<p>&nbsp;</p>\n<pre><span style=\"color: #008000;\"><br /></span>\n<span style=\"color: #000000;\">\n到页面最底部，点击社区版 community(GPL)Downloads</span>&gt;&gt;<span style=\"color: #000000;\">，进入\n\nhttps:</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">dev.mysql.com/downloads/</span>\n</pre>\n<img src=\"/cnblogs/12490995/789895-20200314103659453-1423707822.png\" alt=\"\" width=\"701\" height=\"400\" />\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<pre><span style=\"color: #000000;\">\n\n继续点击社区版服务器，进入<br /></span></pre>\n<pre><span>https://dev.mysql.com/downloads/mysql/</span></pre>\n<pre><span style=\"color: #000000;\"><br /><img src=\"/cnblogs/12490995/789895-20200314103608996-226690568.png\" alt=\"\" width=\"771\" height=\"409\" /></span></pre>\n<pre><span style=\"color: #000000;\">\n\n三、选择版本及系统，点击右侧的Download，进入页面\n\n<img src=\"/cnblogs/12490995/789895-20200314103531976-1657277194.png\" alt=\"\" width=\"808\" height=\"527\" /></span></pre>\n<p>&nbsp;</p>\n<pre></pre>\n<p>&nbsp;</p>\n<pre><span style=\"color: #000000;\">\n四、最后开始下载\n\n<img src=\"/cnblogs/12490995/789895-20200314103515432-233460820.png\" alt=\"\" width=\"831\" height=\"477\" /></span></pre>\n<p>&nbsp;</p>\n<pre></pre>\n<p>&nbsp;</p>\n<pre><span style=\"color: #000000;\">\n五、下载完成后的包列表，选择版本不同，后面的版本号可能不同，这个没有关系\n<img src=\"/cnblogs/12490995/789895-20200314103742076-1506683442.png\" alt=\"\" /></span></pre>\n<pre><span style=\"color: #000000;\">\n陈列如下\n\nmysql</span>-community-client-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">16</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el7.x86_64.rpm\nmysql</span>-community-common-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">16</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el7.x86_64.rpm\nmysql</span>-community-devel-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">16</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el7.x86_64.rpm\nmysql</span>-community-embedded-compat-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">16</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el7.x86_64.rpm\nmysql</span>-community-libs-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">16</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el7.x86_64.rpm\nmysql</span>-community-libs-compat-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">16</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el7.x86_64.rpm\nmysql</span>-community-server-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">16</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el7.x86_64.rpm\nmysql</span>-community-test-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">16</span>-<span style=\"color: #800080;\">2</span>.el7.x86_64.rpm<br /><br />此方法来自<a href=\"https://www.cnblogs.com/lukefan/p/10406522.html\">https://www.cnblogs.com/lukefan/p/10406522.html</a></pre>\n</div>\n<pre></pre>\n<h3><span id=\"Method2\" style=\"color: #000000;\">1.2 没有梯子，请使用下面的方法<br /></span></h3>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">一、获取mysql YUM源   \n\n打开网址：https:</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">dev.mysql.com/downloads/repo/yum/,选择对应linux版本</span>\n</pre>\n<img src=\"/cnblogs/12490995/789895-20200314103935434-15938096.png\" alt=\"\" width=\"805\" height=\"372\" />\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<pre><span style=\"color: #000000;\">\n\n\n点击&ldquo;No thanks, just start my download.&rdquo;，进行下载\n\n<img src=\"/cnblogs/12490995/789895-20200314104005087-1747405802.png\" alt=\"\" width=\"791\" height=\"574\" /></span></pre>\n<p>&nbsp;</p>\n<pre></pre>\n<p>&nbsp;</p>\n<pre><span style=\"color: #000000;\">\n\n将下载地址复制，得到rpm包的地址\n\n<img src=\"/cnblogs/12490995/789895-20200314104017330-12695127.png\" alt=\"\" width=\"683\" height=\"368\" /><br /><br />此方法来源<a href=\"https://www.cnblogs.com/lemon-feng/p/11233227.html\">https://www.cnblogs.com/lemon-feng/p/11233227.html</a></span></pre>\n</div>\n<pre></pre>\n<h3>这两种方法的区别是是否要在服务器上下载后面的安装包，按照后面的方法，服务器下载时网速渣的要命（感谢长城），但是可以断点，下次继续下载</h3>\n</div>\n<p>在后续安装的时候，可以按照选择的不同办法进行安装，其实都是大同小异，在安装完成之后，建议采用下面的办法进行初始化和配置</p>\n<h2><span id=\"Set1\" style=\"color: #ff0000; font-size: 18pt;\"><span style=\"color: #ff0000; font-size: 18pt;\">2.初始化和配置<br /></span></span></h2>\n<div class=\"cnblogs_code\">\n<pre>顺序执行以下语句</pre>\n<div class=\"cnblogs_code\">\n<pre>mysqld</pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>mysqld --initialize --user=mysql</pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>mysqld --initialize --lower-<span style=\"color: #0000ff;\">case</span>-table-names=<span style=\"color: #800080;\">1 #此设置是设置大小写是否敏感，可前往<a href=\"https://blog.csdn.net/jesseyoung/article/details/40617031\">https://blog.csdn.net/jesseyoung/article/details/40617031</a>查看是否需要设置<br />#ps：<span style=\"color: #ff0000;\">在mysql8中，大小写敏感设置需要在初始化的时候进行设置，后面在配置中进行更改是无效的，所以慎重选择，不然就需要重装。。。。</span></span></pre>\n</div>\n</div>\n<div class=\"cnblogs_code\">\n<pre>查看初始密码：</pre>\n<div class=\"cnblogs_code\">\n<pre>cat /<span style=\"color: #0000ff;\">var</span>/log/mysqld.log  #或者 <strong>cat /var/log/mysqld.log | grep password 或者文件系统进入/var/log/mysqld.log进行查看<br /><br /><img src=\"/cnblogs/12490995/789895-20200314111035435-454576915.png\" alt=\"\" /></strong></pre>\n</div>\n<p>&nbsp;启动mysql服务：</p>\n<div class=\"cnblogs_code\">\n<pre>service mysqld start</pre>\n</div>\n<p>查看一下服务状态是否启动：</p>\n<div class=\"cnblogs_code\">\n<pre>service mysqld status</pre>\n</div>\n<p>登入数据库：</p>\n<div class=\"cnblogs_code\">\n<pre>mysql -uroot -p</pre>\n</div>\n<p><img src=\"/cnblogs/12490995/789895-20200314111255378-1900099054.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;输入或者复制进刚才的随机密码</p>\n<p><img src=\"/cnblogs/12490995/789895-20200314111330497-1914185865.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;下面会出现一个输入命令的地方</p>\n<p><img src=\"/cnblogs/12490995/789895-20200314111407787-1937103574.png\" alt=\"\" /></p>\n<p>值得注意的是，在mysql中，每一个执行语句后面要加上一个英文分号，不然不会执行，如果忘记加了，可以在下面的\"&gt;\"后面输入英文分号然后回车，例如</p>\n<p><img src=\"/cnblogs/12490995/789895-20200314111742266-166098681.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<h3><span id=\"Set2\" style=\"color: #ff0000;\">设置远程访问授权</span></h3>\n<div class=\"cnblogs_code\">\n<pre></pre>\n<pre>mysql -u root -p         //登录数据库,如果已经登入，不需要再执行\n\nuse mysql                  //进入mysql数据库,如果已经进入，不需要再执行</pre>\n<pre>select Host,User from user; //查看可以访问数据库的ip</pre>\n<pre><span style=\"color: #000000;\">select 'host' from user where user='root';<br /><br />update user set host = '%' where user ='root';  //将默认的localhost更新为%，%是默认全部可以访问，localhost只是本地可访问，还可以指定公网ip\n\ngrant all privileges on </span>*.* to <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">root</span><span style=\"color: #800000;\">'</span>@<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">%</span><span style=\"color: #800000;\">'</span><span style=\"color: #000000;\"> with grant option;\n\nflush privileges;</span></pre>\n</div>\n<p><strong>输入exit退出，<span style=\"color: #ff0000;\">打开</span></strong><span style=\"color: #ff0000;\"><strong>防火墙开放</strong><strong>3306</strong><strong>端口，此步骤不在mysql里面执行</strong></span></p>\n<p>如果没有开启防火墙，则输入：systemctl start firewalld&nbsp; 开启</p>\n<p><img src=\"/cnblogs/12490995/1730174-20190723172447650-1888406330.png\" alt=\"\" /></p>\n<p><strong>输入下面命令，开放</strong><strong>3306</strong><strong>端口</strong></p>\n<p>firewall-cmd --zone=public --add-port=3306/tcp --permanent</p>\n<p>firewall-cmd --reload</p>\n<p><img src=\"/cnblogs/12490995/789895-20200314111825524-170131346.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;<span style=\"color: #ff0000;\"><strong>配置默认编码为</strong><strong>UTF-8<strong>，此步骤不在mysql里面执行</strong></strong></span></p>\n<p>修改/etc/my.cnf配置文件，在[mysqld]下添加编码配置，如下所示：</p>\n<p>（这个步骤可以使用vim或者xftp进行修改）</p>\n<p align=\"left\">character_set_server=utf8</p>\n<p>init_connect='SET NAMES utf8'</p>\n<p>&nbsp;<img src=\"/cnblogs/12490995/1730174-20190723172533547-1436305325.png\" alt=\"\" /></p>\n<p><strong>编辑保存完重启mysql服务: systemctl restart mysqld</strong></p>\n<p><strong><img src=\"/cnblogs/12490995/1730174-20190723172615004-1777913221.png\" alt=\"\" /></strong></p>\n<p>查看下编码：mysql&gt; show variables like '%character%';</p>\n<p><img src=\"/cnblogs/12490995/1730174-20190723172640897-1725389911.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>此时，外部如果还是不能连接上数据库（可查看<a href=\"https://www.cnblogs.com/zzqit/p/10095597.html\">https://www.cnblogs.com/zzqit/p/10095597.html</a>），首先查看<strong>安全规则组，看是否打开了3306端口</strong></p>\n<p><strong><img src=\"/cnblogs/12490995/789895-20200314112146960-1975346260.png\" alt=\"\" width=\"830\" height=\"362\" /></strong></p>\n<p>&nbsp;</p>\n<h3>更改密码</h3>\n<p>更改密码，其实就是更改上面user对应的密码，举例：</p>\n<div class=\"cnblogs_code\">\n<pre>ALTER USER <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">root</span><span style=\"color: #800000;\">'</span>@<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">localhost</span><span style=\"color: #800000;\">'</span> IDENTIFIED WITH mysql_native_password BY <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">你的密码</span><span style=\"color: #800000;\">'</span>;</pre>\n</div>\n<p>这一句话，里面root对应上面的user列，localhost对应host列</p>\n<p>&nbsp;<img src=\"/cnblogs/12490995/789895-20200315144745201-372259132.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;如果我这句话写成：ALTER USER 'root'@'%' IDENTIFIED WITH mysql_native_password BY 'TiLaMiSu13213#13';</p>\n<p>就会报以下错误：ERROR 1396 (HY000): Operation ALTER USER failed for 'root'@'%'</p>\n<p><img src=\"/cnblogs/12490995/789895-20200315144855769-1157086710.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;，意思就是找不到对应的user和host，无法进行密码设置，所以这个地方要对应起来才可以</p>\n<p>我们如果想更改远程连接rootr的密码，就把上面这句话改成</p>\n<div class=\"cnblogs_code\">\n<pre>ALTER USER <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">rootr</span><span style=\"color: #800000;\">'</span>@<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">%</span><span style=\"color: #800000;\">'</span> IDENTIFIED WITH mysql_native_password BY <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">你的密码</span><span style=\"color: #800000;\">'</span>;</pre>\n</div>\n<p><span style=\"color: #ff0000;\">这个地方需要自己去设置修改，别直接复制粘贴</span></p>\n<p>&nbsp;</p>\n<p id=\"Set4\">设置开机启动：<br />在/usr/lib/systemd/system/文件夹下创建一个mysql.service，然后进行编辑</p>\n<pre><span>#ExecStart 目录可在执行which mysqld 进行查询，注意不要少d</span></pre>\n<img src=\"/cnblogs/12490995/789895-20200315140044551-1148857260.png\" alt=\"\" />\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">[Unit]\nDescription</span>=<span style=\"color: #000000;\">MySQL Server\nDocumentation</span>=man:mysqld(<span style=\"color: #800080;\">8</span><span style=\"color: #000000;\">)\nDocumentation</span>=http:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">dev.mysql.com/doc/refman/en/using-systemd.html</span>\nAfter=<span style=\"color: #000000;\">network.target\nAfter</span>=<span style=\"color: #000000;\">syslog.target\n \n[Install]\nWantedBy</span>=multi-<span style=\"color: #000000;\">user.target\n \n[Service]\nUser</span>=<span style=\"color: #000000;\">root\nGroup</span>=<span style=\"color: #000000;\">mysql\nExecStart</span>=/usr/sbin/mysqld --defaults-file=/etc/<span style=\"color: #000000;\">my.cnf <br /></span><span>LimitNOFILE </span>= <span style=\"color: #800080;\">5000</span></pre>\n</div>\n<p>保存后，然后依次执行</p>\n<div class=\"cnblogs_code\">\n<pre></pre>\n<pre><span>systemctl daemon-reload #重新加载服务配置文件</span></pre>\n<pre><span style=\"color: #000000;\">systemctl start mysql #启动mysql<br /><br />systemctl enable mysqld  #设置开机启动\n<br />systemctl status mysql #查看mysql的状态\n<br /></span></pre>\n</div>\n<p>&nbsp;</p>\n</div>","source":"_posts/cnblogs/12490995.md","raw":"---\ntitle: linux 学习 mysql安装到连接\ndate: 2020-03-14T11:30:00\nauthor: 不辍\ntags: []\n---\n<h1><span style=\"color: #ff0000;\"><span style=\"font-size: 24px;\">在Centos7.6 上安装mysql</span></span></h1>\n<p>&nbsp;ps：一般mysql安装后会在/var/log/下面生成一个mysqld.log文件，如果遇到启动不了或者其他问题，基本都可以在这个log文件里面找到错误原因</p>\n<h2><span style=\"font-size: 18pt; color: #ff0000;\">1.下载mysql和安装</span></h2>\n<div class=\"cnblogs_code\">\n<h3><span id=\"Method1\" style=\"color: #000000;\">1.1 有梯子，可以使用下面的方法</span></h3>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">二、先下载Linux下的Mysql包，打开Mysql官网\nhttps:</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">www.mysql.com/</span>\n<span style=\"color: #000000;\">点击DOWNLOAD，进入\n\nhttps:</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">www.mysql.com/downloads/<br /><img src=\"/cnblogs/12490995/789895-20200314103719008-486099808.png\" alt=\"\" width=\"732\" height=\"297\" /></span></pre>\n<p>&nbsp;</p>\n<pre></pre>\n<p>&nbsp;</p>\n<pre><span style=\"color: #008000;\"><br /></span>\n<span style=\"color: #000000;\">\n到页面最底部，点击社区版 community(GPL)Downloads</span>&gt;&gt;<span style=\"color: #000000;\">，进入\n\nhttps:</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">dev.mysql.com/downloads/</span>\n</pre>\n<img src=\"/cnblogs/12490995/789895-20200314103659453-1423707822.png\" alt=\"\" width=\"701\" height=\"400\" />\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<pre><span style=\"color: #000000;\">\n\n继续点击社区版服务器，进入<br /></span></pre>\n<pre><span>https://dev.mysql.com/downloads/mysql/</span></pre>\n<pre><span style=\"color: #000000;\"><br /><img src=\"/cnblogs/12490995/789895-20200314103608996-226690568.png\" alt=\"\" width=\"771\" height=\"409\" /></span></pre>\n<pre><span style=\"color: #000000;\">\n\n三、选择版本及系统，点击右侧的Download，进入页面\n\n<img src=\"/cnblogs/12490995/789895-20200314103531976-1657277194.png\" alt=\"\" width=\"808\" height=\"527\" /></span></pre>\n<p>&nbsp;</p>\n<pre></pre>\n<p>&nbsp;</p>\n<pre><span style=\"color: #000000;\">\n四、最后开始下载\n\n<img src=\"/cnblogs/12490995/789895-20200314103515432-233460820.png\" alt=\"\" width=\"831\" height=\"477\" /></span></pre>\n<p>&nbsp;</p>\n<pre></pre>\n<p>&nbsp;</p>\n<pre><span style=\"color: #000000;\">\n五、下载完成后的包列表，选择版本不同，后面的版本号可能不同，这个没有关系\n<img src=\"/cnblogs/12490995/789895-20200314103742076-1506683442.png\" alt=\"\" /></span></pre>\n<pre><span style=\"color: #000000;\">\n陈列如下\n\nmysql</span>-community-client-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">16</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el7.x86_64.rpm\nmysql</span>-community-common-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">16</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el7.x86_64.rpm\nmysql</span>-community-devel-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">16</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el7.x86_64.rpm\nmysql</span>-community-embedded-compat-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">16</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el7.x86_64.rpm\nmysql</span>-community-libs-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">16</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el7.x86_64.rpm\nmysql</span>-community-libs-compat-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">16</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el7.x86_64.rpm\nmysql</span>-community-server-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">16</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el7.x86_64.rpm\nmysql</span>-community-test-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">16</span>-<span style=\"color: #800080;\">2</span>.el7.x86_64.rpm<br /><br />此方法来自<a href=\"https://www.cnblogs.com/lukefan/p/10406522.html\">https://www.cnblogs.com/lukefan/p/10406522.html</a></pre>\n</div>\n<pre></pre>\n<h3><span id=\"Method2\" style=\"color: #000000;\">1.2 没有梯子，请使用下面的方法<br /></span></h3>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">一、获取mysql YUM源   \n\n打开网址：https:</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">dev.mysql.com/downloads/repo/yum/,选择对应linux版本</span>\n</pre>\n<img src=\"/cnblogs/12490995/789895-20200314103935434-15938096.png\" alt=\"\" width=\"805\" height=\"372\" />\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<pre><span style=\"color: #000000;\">\n\n\n点击&ldquo;No thanks, just start my download.&rdquo;，进行下载\n\n<img src=\"/cnblogs/12490995/789895-20200314104005087-1747405802.png\" alt=\"\" width=\"791\" height=\"574\" /></span></pre>\n<p>&nbsp;</p>\n<pre></pre>\n<p>&nbsp;</p>\n<pre><span style=\"color: #000000;\">\n\n将下载地址复制，得到rpm包的地址\n\n<img src=\"/cnblogs/12490995/789895-20200314104017330-12695127.png\" alt=\"\" width=\"683\" height=\"368\" /><br /><br />此方法来源<a href=\"https://www.cnblogs.com/lemon-feng/p/11233227.html\">https://www.cnblogs.com/lemon-feng/p/11233227.html</a></span></pre>\n</div>\n<pre></pre>\n<h3>这两种方法的区别是是否要在服务器上下载后面的安装包，按照后面的方法，服务器下载时网速渣的要命（感谢长城），但是可以断点，下次继续下载</h3>\n</div>\n<p>在后续安装的时候，可以按照选择的不同办法进行安装，其实都是大同小异，在安装完成之后，建议采用下面的办法进行初始化和配置</p>\n<h2><span id=\"Set1\" style=\"color: #ff0000; font-size: 18pt;\"><span style=\"color: #ff0000; font-size: 18pt;\">2.初始化和配置<br /></span></span></h2>\n<div class=\"cnblogs_code\">\n<pre>顺序执行以下语句</pre>\n<div class=\"cnblogs_code\">\n<pre>mysqld</pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>mysqld --initialize --user=mysql</pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>mysqld --initialize --lower-<span style=\"color: #0000ff;\">case</span>-table-names=<span style=\"color: #800080;\">1 #此设置是设置大小写是否敏感，可前往<a href=\"https://blog.csdn.net/jesseyoung/article/details/40617031\">https://blog.csdn.net/jesseyoung/article/details/40617031</a>查看是否需要设置<br />#ps：<span style=\"color: #ff0000;\">在mysql8中，大小写敏感设置需要在初始化的时候进行设置，后面在配置中进行更改是无效的，所以慎重选择，不然就需要重装。。。。</span></span></pre>\n</div>\n</div>\n<div class=\"cnblogs_code\">\n<pre>查看初始密码：</pre>\n<div class=\"cnblogs_code\">\n<pre>cat /<span style=\"color: #0000ff;\">var</span>/log/mysqld.log  #或者 <strong>cat /var/log/mysqld.log | grep password 或者文件系统进入/var/log/mysqld.log进行查看<br /><br /><img src=\"/cnblogs/12490995/789895-20200314111035435-454576915.png\" alt=\"\" /></strong></pre>\n</div>\n<p>&nbsp;启动mysql服务：</p>\n<div class=\"cnblogs_code\">\n<pre>service mysqld start</pre>\n</div>\n<p>查看一下服务状态是否启动：</p>\n<div class=\"cnblogs_code\">\n<pre>service mysqld status</pre>\n</div>\n<p>登入数据库：</p>\n<div class=\"cnblogs_code\">\n<pre>mysql -uroot -p</pre>\n</div>\n<p><img src=\"/cnblogs/12490995/789895-20200314111255378-1900099054.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;输入或者复制进刚才的随机密码</p>\n<p><img src=\"/cnblogs/12490995/789895-20200314111330497-1914185865.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;下面会出现一个输入命令的地方</p>\n<p><img src=\"/cnblogs/12490995/789895-20200314111407787-1937103574.png\" alt=\"\" /></p>\n<p>值得注意的是，在mysql中，每一个执行语句后面要加上一个英文分号，不然不会执行，如果忘记加了，可以在下面的\"&gt;\"后面输入英文分号然后回车，例如</p>\n<p><img src=\"/cnblogs/12490995/789895-20200314111742266-166098681.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<h3><span id=\"Set2\" style=\"color: #ff0000;\">设置远程访问授权</span></h3>\n<div class=\"cnblogs_code\">\n<pre></pre>\n<pre>mysql -u root -p         //登录数据库,如果已经登入，不需要再执行\n\nuse mysql                  //进入mysql数据库,如果已经进入，不需要再执行</pre>\n<pre>select Host,User from user; //查看可以访问数据库的ip</pre>\n<pre><span style=\"color: #000000;\">select 'host' from user where user='root';<br /><br />update user set host = '%' where user ='root';  //将默认的localhost更新为%，%是默认全部可以访问，localhost只是本地可访问，还可以指定公网ip\n\ngrant all privileges on </span>*.* to <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">root</span><span style=\"color: #800000;\">'</span>@<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">%</span><span style=\"color: #800000;\">'</span><span style=\"color: #000000;\"> with grant option;\n\nflush privileges;</span></pre>\n</div>\n<p><strong>输入exit退出，<span style=\"color: #ff0000;\">打开</span></strong><span style=\"color: #ff0000;\"><strong>防火墙开放</strong><strong>3306</strong><strong>端口，此步骤不在mysql里面执行</strong></span></p>\n<p>如果没有开启防火墙，则输入：systemctl start firewalld&nbsp; 开启</p>\n<p><img src=\"/cnblogs/12490995/1730174-20190723172447650-1888406330.png\" alt=\"\" /></p>\n<p><strong>输入下面命令，开放</strong><strong>3306</strong><strong>端口</strong></p>\n<p>firewall-cmd --zone=public --add-port=3306/tcp --permanent</p>\n<p>firewall-cmd --reload</p>\n<p><img src=\"/cnblogs/12490995/789895-20200314111825524-170131346.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;<span style=\"color: #ff0000;\"><strong>配置默认编码为</strong><strong>UTF-8<strong>，此步骤不在mysql里面执行</strong></strong></span></p>\n<p>修改/etc/my.cnf配置文件，在[mysqld]下添加编码配置，如下所示：</p>\n<p>（这个步骤可以使用vim或者xftp进行修改）</p>\n<p align=\"left\">character_set_server=utf8</p>\n<p>init_connect='SET NAMES utf8'</p>\n<p>&nbsp;<img src=\"/cnblogs/12490995/1730174-20190723172533547-1436305325.png\" alt=\"\" /></p>\n<p><strong>编辑保存完重启mysql服务: systemctl restart mysqld</strong></p>\n<p><strong><img src=\"/cnblogs/12490995/1730174-20190723172615004-1777913221.png\" alt=\"\" /></strong></p>\n<p>查看下编码：mysql&gt; show variables like '%character%';</p>\n<p><img src=\"/cnblogs/12490995/1730174-20190723172640897-1725389911.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>此时，外部如果还是不能连接上数据库（可查看<a href=\"https://www.cnblogs.com/zzqit/p/10095597.html\">https://www.cnblogs.com/zzqit/p/10095597.html</a>），首先查看<strong>安全规则组，看是否打开了3306端口</strong></p>\n<p><strong><img src=\"/cnblogs/12490995/789895-20200314112146960-1975346260.png\" alt=\"\" width=\"830\" height=\"362\" /></strong></p>\n<p>&nbsp;</p>\n<h3>更改密码</h3>\n<p>更改密码，其实就是更改上面user对应的密码，举例：</p>\n<div class=\"cnblogs_code\">\n<pre>ALTER USER <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">root</span><span style=\"color: #800000;\">'</span>@<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">localhost</span><span style=\"color: #800000;\">'</span> IDENTIFIED WITH mysql_native_password BY <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">你的密码</span><span style=\"color: #800000;\">'</span>;</pre>\n</div>\n<p>这一句话，里面root对应上面的user列，localhost对应host列</p>\n<p>&nbsp;<img src=\"/cnblogs/12490995/789895-20200315144745201-372259132.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;如果我这句话写成：ALTER USER 'root'@'%' IDENTIFIED WITH mysql_native_password BY 'TiLaMiSu13213#13';</p>\n<p>就会报以下错误：ERROR 1396 (HY000): Operation ALTER USER failed for 'root'@'%'</p>\n<p><img src=\"/cnblogs/12490995/789895-20200315144855769-1157086710.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;，意思就是找不到对应的user和host，无法进行密码设置，所以这个地方要对应起来才可以</p>\n<p>我们如果想更改远程连接rootr的密码，就把上面这句话改成</p>\n<div class=\"cnblogs_code\">\n<pre>ALTER USER <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">rootr</span><span style=\"color: #800000;\">'</span>@<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">%</span><span style=\"color: #800000;\">'</span> IDENTIFIED WITH mysql_native_password BY <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">你的密码</span><span style=\"color: #800000;\">'</span>;</pre>\n</div>\n<p><span style=\"color: #ff0000;\">这个地方需要自己去设置修改，别直接复制粘贴</span></p>\n<p>&nbsp;</p>\n<p id=\"Set4\">设置开机启动：<br />在/usr/lib/systemd/system/文件夹下创建一个mysql.service，然后进行编辑</p>\n<pre><span>#ExecStart 目录可在执行which mysqld 进行查询，注意不要少d</span></pre>\n<img src=\"/cnblogs/12490995/789895-20200315140044551-1148857260.png\" alt=\"\" />\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">[Unit]\nDescription</span>=<span style=\"color: #000000;\">MySQL Server\nDocumentation</span>=man:mysqld(<span style=\"color: #800080;\">8</span><span style=\"color: #000000;\">)\nDocumentation</span>=http:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">dev.mysql.com/doc/refman/en/using-systemd.html</span>\nAfter=<span style=\"color: #000000;\">network.target\nAfter</span>=<span style=\"color: #000000;\">syslog.target\n \n[Install]\nWantedBy</span>=multi-<span style=\"color: #000000;\">user.target\n \n[Service]\nUser</span>=<span style=\"color: #000000;\">root\nGroup</span>=<span style=\"color: #000000;\">mysql\nExecStart</span>=/usr/sbin/mysqld --defaults-file=/etc/<span style=\"color: #000000;\">my.cnf <br /></span><span>LimitNOFILE </span>= <span style=\"color: #800080;\">5000</span></pre>\n</div>\n<p>保存后，然后依次执行</p>\n<div class=\"cnblogs_code\">\n<pre></pre>\n<pre><span>systemctl daemon-reload #重新加载服务配置文件</span></pre>\n<pre><span style=\"color: #000000;\">systemctl start mysql #启动mysql<br /><br />systemctl enable mysqld  #设置开机启动\n<br />systemctl status mysql #查看mysql的状态\n<br /></span></pre>\n</div>\n<p>&nbsp;</p>\n</div>","slug":"cnblogs/12490995","published":1,"updated":"2022-07-10T13:01:17.490Z","_id":"cl5f7ixdh001tc0und29e5eb1","comments":1,"layout":"post","photos":[],"link":"","content":"<h1><span style=\"color: #ff0000;\"><span style=\"font-size: 24px;\">在Centos7.6 上安装mysql</span></span></h1>\n<p>&nbsp;ps：一般mysql安装后会在/var/log/下面生成一个mysqld.log文件，如果遇到启动不了或者其他问题，基本都可以在这个log文件里面找到错误原因</p>\n<h2><span style=\"font-size: 18pt; color: #ff0000;\">1.下载mysql和安装</span></h2>\n<div class=\"cnblogs_code\">\n<h3><span id=\"Method1\" style=\"color: #000000;\">1.1 有梯子，可以使用下面的方法</span></h3>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">二、先下载Linux下的Mysql包，打开Mysql官网\nhttps:</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">www.mysql.com/</span>\n<span style=\"color: #000000;\">点击DOWNLOAD，进入\n\n<p>https:</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"><a href=\"http://www.mysql.com/downloads/\">www.mysql.com/downloads/</a><br /><img src=\"/cnblogs/12490995/789895-20200314103719008-486099808.png\" alt=\"\" width=\"732\" height=\"297\" /></span></pre></p>\n<p>&nbsp;</p>\n<pre></pre>\n<p>&nbsp;</p>\n<pre><span style=\"color: #008000;\"><br /></span>\n<span style=\"color: #000000;\">\n到页面最底部，点击社区版 community(GPL)Downloads</span>&gt;&gt;<span style=\"color: #000000;\">，进入\n\n<p>https:</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">dev.mysql.com/downloads/</span><br></pre><br><img src=\"/cnblogs/12490995/789895-20200314103659453-1423707822.png\" alt=\"\" width=\"701\" height=\"400\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<pre><span style=\"color: #000000;\">\n\n<p>继续点击社区版服务器，进入<br /></span></pre></p>\n<pre><span>https://dev.mysql.com/downloads/mysql/</span></pre>\n<pre><span style=\"color: #000000;\"><br /><img src=\"/cnblogs/12490995/789895-20200314103608996-226690568.png\" alt=\"\" width=\"771\" height=\"409\" /></span></pre>\n<pre><span style=\"color: #000000;\">\n\n三、选择版本及系统，点击右侧的Download，进入页面\n\n<img src=\"/cnblogs/12490995/789895-20200314103531976-1657277194.png\" alt=\"\" width=\"808\" height=\"527\" /></span></pre>\n<p>&nbsp;</p>\n<pre></pre>\n<p>&nbsp;</p>\n<pre><span style=\"color: #000000;\">\n四、最后开始下载\n\n<p><img src=\"/cnblogs/12490995/789895-20200314103515432-233460820.png\" alt=\"\" width=\"831\" height=\"477\" /></span></pre></p>\n<p>&nbsp;</p>\n<pre></pre>\n<p>&nbsp;</p>\n<pre><span style=\"color: #000000;\">\n五、下载完成后的包列表，选择版本不同，后面的版本号可能不同，这个没有关系\n<img src=\"/cnblogs/12490995/789895-20200314103742076-1506683442.png\" alt=\"\" /></span></pre>\n<pre><span style=\"color: #000000;\">\n陈列如下\n\n<p>mysql</span>-community-client-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">16</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el7.x86_64.rpm<br>mysql</span>-community-common-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">16</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el7.x86_64.rpm<br>mysql</span>-community-devel-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">16</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el7.x86_64.rpm<br>mysql</span>-community-embedded-compat-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">16</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el7.x86_64.rpm<br>mysql</span>-community-libs-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">16</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el7.x86_64.rpm<br>mysql</span>-community-libs-compat-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">16</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el7.x86_64.rpm<br>mysql</span>-community-server-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">16</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el7.x86_64.rpm<br>mysql</span>-community-test-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">16</span>-<span style=\"color: #800080;\">2</span>.el7.x86_64.rpm<br /><br />此方法来自<a href=\"https://www.cnblogs.com/lukefan/p/10406522.html\">https://www.cnblogs.com/lukefan/p/10406522.html</a></pre></p>\n</div>\n<pre></pre>\n<h3><span id=\"Method2\" style=\"color: #000000;\">1.2 没有梯子，请使用下面的方法<br /></span></h3>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">一、获取mysql YUM源   \n\n<p>打开网址：https:</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">dev.mysql.com/downloads/repo/yum/,选择对应linux版本</span><br></pre><br><img src=\"/cnblogs/12490995/789895-20200314103935434-15938096.png\" alt=\"\" width=\"805\" height=\"372\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<pre><span style=\"color: #000000;\">\n\n\n<p>点击&ldquo;No thanks, just start my download.&rdquo;，进行下载</p>\n<p><img src=\"/cnblogs/12490995/789895-20200314104005087-1747405802.png\" alt=\"\" width=\"791\" height=\"574\" /></span></pre></p>\n<p>&nbsp;</p>\n<pre></pre>\n<p>&nbsp;</p>\n<pre><span style=\"color: #000000;\">\n\n<p>将下载地址复制，得到rpm包的地址</p>\n<p><img src=\"/cnblogs/12490995/789895-20200314104017330-12695127.png\" alt=\"\" width=\"683\" height=\"368\" /><br /><br />此方法来源<a href=\"https://www.cnblogs.com/lemon-feng/p/11233227.html\">https://www.cnblogs.com/lemon-feng/p/11233227.html</a></span></pre></p>\n</div>\n<pre></pre>\n<h3>这两种方法的区别是是否要在服务器上下载后面的安装包，按照后面的方法，服务器下载时网速渣的要命（感谢长城），但是可以断点，下次继续下载</h3>\n</div>\n<p>在后续安装的时候，可以按照选择的不同办法进行安装，其实都是大同小异，在安装完成之后，建议采用下面的办法进行初始化和配置</p>\n<h2><span id=\"Set1\" style=\"color: #ff0000; font-size: 18pt;\"><span style=\"color: #ff0000; font-size: 18pt;\">2.初始化和配置<br /></span></span></h2>\n<div class=\"cnblogs_code\">\n<pre>顺序执行以下语句</pre>\n<div class=\"cnblogs_code\">\n<pre>mysqld</pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>mysqld --initialize --user=mysql</pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>mysqld --initialize --lower-<span style=\"color: #0000ff;\">case</span>-table-names=<span style=\"color: #800080;\">1 #此设置是设置大小写是否敏感，可前往<a href=\"https://blog.csdn.net/jesseyoung/article/details/40617031\">https://blog.csdn.net/jesseyoung/article/details/40617031</a>查看是否需要设置<br />#ps：<span style=\"color: #ff0000;\">在mysql8中，大小写敏感设置需要在初始化的时候进行设置，后面在配置中进行更改是无效的，所以慎重选择，不然就需要重装。。。。</span></span></pre>\n</div>\n</div>\n<div class=\"cnblogs_code\">\n<pre>查看初始密码：</pre>\n<div class=\"cnblogs_code\">\n<pre>cat /<span style=\"color: #0000ff;\">var</span>/log/mysqld.log  #或者 <strong>cat /var/log/mysqld.log | grep password 或者文件系统进入/var/log/mysqld.log进行查看<br /><br /><img src=\"/cnblogs/12490995/789895-20200314111035435-454576915.png\" alt=\"\" /></strong></pre>\n</div>\n<p>&nbsp;启动mysql服务：</p>\n<div class=\"cnblogs_code\">\n<pre>service mysqld start</pre>\n</div>\n<p>查看一下服务状态是否启动：</p>\n<div class=\"cnblogs_code\">\n<pre>service mysqld status</pre>\n</div>\n<p>登入数据库：</p>\n<div class=\"cnblogs_code\">\n<pre>mysql -uroot -p</pre>\n</div>\n<p><img src=\"/cnblogs/12490995/789895-20200314111255378-1900099054.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;输入或者复制进刚才的随机密码</p>\n<p><img src=\"/cnblogs/12490995/789895-20200314111330497-1914185865.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;下面会出现一个输入命令的地方</p>\n<p><img src=\"/cnblogs/12490995/789895-20200314111407787-1937103574.png\" alt=\"\" /></p>\n<p>值得注意的是，在mysql中，每一个执行语句后面要加上一个英文分号，不然不会执行，如果忘记加了，可以在下面的\"&gt;\"后面输入英文分号然后回车，例如</p>\n<p><img src=\"/cnblogs/12490995/789895-20200314111742266-166098681.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<h3><span id=\"Set2\" style=\"color: #ff0000;\">设置远程访问授权</span></h3>\n<div class=\"cnblogs_code\">\n<pre></pre>\n<pre>mysql -u root -p         //登录数据库,如果已经登入，不需要再执行\n\n<p>use mysql                  //进入mysql数据库,如果已经进入，不需要再执行</pre></p>\n<pre>select Host,User from user; //查看可以访问数据库的ip</pre>\n<pre><span style=\"color: #000000;\">select 'host' from user where user='root';<br /><br />update user set host = '%' where user ='root';  //将默认的localhost更新为%，%是默认全部可以访问，localhost只是本地可访问，还可以指定公网ip\n\ngrant all privileges on </span>*.* to <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">root</span><span style=\"color: #800000;\">'</span>@<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">%</span><span style=\"color: #800000;\">'</span><span style=\"color: #000000;\"> with grant option;\n\nflush privileges;</span></pre>\n</div>\n<p><strong>输入exit退出，<span style=\"color: #ff0000;\">打开</span></strong><span style=\"color: #ff0000;\"><strong>防火墙开放</strong><strong>3306</strong><strong>端口，此步骤不在mysql里面执行</strong></span></p>\n<p>如果没有开启防火墙，则输入：systemctl start firewalld&nbsp; 开启</p>\n<p><img src=\"/cnblogs/12490995/1730174-20190723172447650-1888406330.png\" alt=\"\" /></p>\n<p><strong>输入下面命令，开放</strong><strong>3306</strong><strong>端口</strong></p>\n<p>firewall-cmd --zone=public --add-port=3306/tcp --permanent</p>\n<p>firewall-cmd --reload</p>\n<p><img src=\"/cnblogs/12490995/789895-20200314111825524-170131346.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;<span style=\"color: #ff0000;\"><strong>配置默认编码为</strong><strong>UTF-8<strong>，此步骤不在mysql里面执行</strong></strong></span></p>\n<p>修改/etc/my.cnf配置文件，在[mysqld]下添加编码配置，如下所示：</p>\n<p>（这个步骤可以使用vim或者xftp进行修改）</p>\n<p align=\"left\">character_set_server=utf8</p>\n<p>init_connect='SET NAMES utf8'</p>\n<p>&nbsp;<img src=\"/cnblogs/12490995/1730174-20190723172533547-1436305325.png\" alt=\"\" /></p>\n<p><strong>编辑保存完重启mysql服务: systemctl restart mysqld</strong></p>\n<p><strong><img src=\"/cnblogs/12490995/1730174-20190723172615004-1777913221.png\" alt=\"\" /></strong></p>\n<p>查看下编码：mysql&gt; show variables like '%character%';</p>\n<p><img src=\"/cnblogs/12490995/1730174-20190723172640897-1725389911.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>此时，外部如果还是不能连接上数据库（可查看<a href=\"https://www.cnblogs.com/zzqit/p/10095597.html\">https://www.cnblogs.com/zzqit/p/10095597.html</a>），首先查看<strong>安全规则组，看是否打开了3306端口</strong></p>\n<p><strong><img src=\"/cnblogs/12490995/789895-20200314112146960-1975346260.png\" alt=\"\" width=\"830\" height=\"362\" /></strong></p>\n<p>&nbsp;</p>\n<h3>更改密码</h3>\n<p>更改密码，其实就是更改上面user对应的密码，举例：</p>\n<div class=\"cnblogs_code\">\n<pre>ALTER USER <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">root</span><span style=\"color: #800000;\">'</span>@<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">localhost</span><span style=\"color: #800000;\">'</span> IDENTIFIED WITH mysql_native_password BY <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">你的密码</span><span style=\"color: #800000;\">'</span>;</pre>\n</div>\n<p>这一句话，里面root对应上面的user列，localhost对应host列</p>\n<p>&nbsp;<img src=\"/cnblogs/12490995/789895-20200315144745201-372259132.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;如果我这句话写成：ALTER USER 'root'@'%' IDENTIFIED WITH mysql_native_password BY 'TiLaMiSu13213#13';</p>\n<p>就会报以下错误：ERROR 1396 (HY000): Operation ALTER USER failed for 'root'@'%'</p>\n<p><img src=\"/cnblogs/12490995/789895-20200315144855769-1157086710.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;，意思就是找不到对应的user和host，无法进行密码设置，所以这个地方要对应起来才可以</p>\n<p>我们如果想更改远程连接rootr的密码，就把上面这句话改成</p>\n<div class=\"cnblogs_code\">\n<pre>ALTER USER <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">rootr</span><span style=\"color: #800000;\">'</span>@<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">%</span><span style=\"color: #800000;\">'</span> IDENTIFIED WITH mysql_native_password BY <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">你的密码</span><span style=\"color: #800000;\">'</span>;</pre>\n</div>\n<p><span style=\"color: #ff0000;\">这个地方需要自己去设置修改，别直接复制粘贴</span></p>\n<p>&nbsp;</p>\n<p id=\"Set4\">设置开机启动：<br />在/usr/lib/systemd/system/文件夹下创建一个mysql.service，然后进行编辑</p>\n<pre><span>#ExecStart 目录可在执行which mysqld 进行查询，注意不要少d</span></pre>\n<img src=\"/cnblogs/12490995/789895-20200315140044551-1148857260.png\" alt=\"\" />\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">[Unit]\nDescription</span>=<span style=\"color: #000000;\">MySQL Server\nDocumentation</span>=man:mysqld(<span style=\"color: #800080;\">8</span><span style=\"color: #000000;\">)\nDocumentation</span>=http:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">dev.mysql.com/doc/refman/en/using-systemd.html</span>\nAfter=<span style=\"color: #000000;\">network.target\nAfter</span>=<span style=\"color: #000000;\">syslog.target\n \n<p>[Install]<br>WantedBy</span>=multi-<span style=\"color: #000000;\">user.target</p>\n<p>[Service]<br>User</span>=<span style=\"color: #000000;\">root<br>Group</span>=<span style=\"color: #000000;\">mysql<br>ExecStart</span>=/usr/sbin/mysqld –defaults-file=/etc/<span style=\"color: #000000;\">my.cnf <br /></span><span>LimitNOFILE </span>= <span style=\"color: #800080;\">5000</span></pre></p>\n</div>\n<p>保存后，然后依次执行</p>\n<div class=\"cnblogs_code\">\n<pre></pre>\n<pre><span>systemctl daemon-reload #重新加载服务配置文件</span></pre>\n<pre><span style=\"color: #000000;\">systemctl start mysql #启动mysql<br /><br />systemctl enable mysqld  #设置开机启动\n<br />systemctl status mysql #查看mysql的状态\n<br /></span></pre>\n</div>\n<p>&nbsp;</p>\n</div>","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"spatxos","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/spatxos","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"<h1><span style=\"color: #ff0000;\"><span style=\"font-size: 24px;\">在Centos7.6 上安装mysql</span></span></h1>\n<p>&nbsp;ps：一般mysql安装后会在/var/log/下面生成一个mysqld.log文件，如果遇到启动不了或者其他问题，基本都可以在这个log文件里面找到错误原因</p>\n<h2><span style=\"font-size: 18pt; color: #ff0000;\">1.下载mysql和安装</span></h2>\n<div class=\"cnblogs_code\">\n<h3><span id=\"Method1\" style=\"color: #000000;\">1.1 有梯子，可以使用下面的方法</span></h3>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">二、先下载Linux下的Mysql包，打开Mysql官网\nhttps:</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">www.mysql.com/</span>\n<span style=\"color: #000000;\">点击DOWNLOAD，进入\n\n<p>https:</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"><a href=\"http://www.mysql.com/downloads/\">www.mysql.com/downloads/</a><br /><img src=\"/cnblogs/12490995/789895-20200314103719008-486099808.png\" alt=\"\" width=\"732\" height=\"297\" /></span></pre></p>\n<p>&nbsp;</p>\n<pre></pre>\n<p>&nbsp;</p>\n<pre><span style=\"color: #008000;\"><br /></span>\n<span style=\"color: #000000;\">\n到页面最底部，点击社区版 community(GPL)Downloads</span>&gt;&gt;<span style=\"color: #000000;\">，进入\n\n<p>https:</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">dev.mysql.com/downloads/</span><br></pre><br><img src=\"/cnblogs/12490995/789895-20200314103659453-1423707822.png\" alt=\"\" width=\"701\" height=\"400\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<pre><span style=\"color: #000000;\">\n\n<p>继续点击社区版服务器，进入<br /></span></pre></p>\n<pre><span>https://dev.mysql.com/downloads/mysql/</span></pre>\n<pre><span style=\"color: #000000;\"><br /><img src=\"/cnblogs/12490995/789895-20200314103608996-226690568.png\" alt=\"\" width=\"771\" height=\"409\" /></span></pre>\n<pre><span style=\"color: #000000;\">\n\n三、选择版本及系统，点击右侧的Download，进入页面\n\n<img src=\"/cnblogs/12490995/789895-20200314103531976-1657277194.png\" alt=\"\" width=\"808\" height=\"527\" /></span></pre>\n<p>&nbsp;</p>\n<pre></pre>\n<p>&nbsp;</p>\n<pre><span style=\"color: #000000;\">\n四、最后开始下载\n\n<p><img src=\"/cnblogs/12490995/789895-20200314103515432-233460820.png\" alt=\"\" width=\"831\" height=\"477\" /></span></pre></p>\n<p>&nbsp;</p>\n<pre></pre>\n<p>&nbsp;</p>\n<pre><span style=\"color: #000000;\">\n五、下载完成后的包列表，选择版本不同，后面的版本号可能不同，这个没有关系\n<img src=\"/cnblogs/12490995/789895-20200314103742076-1506683442.png\" alt=\"\" /></span></pre>\n<pre><span style=\"color: #000000;\">\n陈列如下\n\n<p>mysql</span>-community-client-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">16</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el7.x86_64.rpm<br>mysql</span>-community-common-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">16</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el7.x86_64.rpm<br>mysql</span>-community-devel-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">16</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el7.x86_64.rpm<br>mysql</span>-community-embedded-compat-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">16</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el7.x86_64.rpm<br>mysql</span>-community-libs-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">16</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el7.x86_64.rpm<br>mysql</span>-community-libs-compat-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">16</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el7.x86_64.rpm<br>mysql</span>-community-server-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">16</span>-<span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">.el7.x86_64.rpm<br>mysql</span>-community-test-<span style=\"color: #800080;\">8.0</span>.<span style=\"color: #800080;\">16</span>-<span style=\"color: #800080;\">2</span>.el7.x86_64.rpm<br /><br />此方法来自<a href=\"https://www.cnblogs.com/lukefan/p/10406522.html\">https://www.cnblogs.com/lukefan/p/10406522.html</a></pre></p>\n</div>\n<pre></pre>\n<h3><span id=\"Method2\" style=\"color: #000000;\">1.2 没有梯子，请使用下面的方法<br /></span></h3>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">一、获取mysql YUM源   \n\n<p>打开网址：https:</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">dev.mysql.com/downloads/repo/yum/,选择对应linux版本</span><br></pre><br><img src=\"/cnblogs/12490995/789895-20200314103935434-15938096.png\" alt=\"\" width=\"805\" height=\"372\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<pre><span style=\"color: #000000;\">\n\n\n<p>点击&ldquo;No thanks, just start my download.&rdquo;，进行下载</p>\n<p><img src=\"/cnblogs/12490995/789895-20200314104005087-1747405802.png\" alt=\"\" width=\"791\" height=\"574\" /></span></pre></p>\n<p>&nbsp;</p>\n<pre></pre>\n<p>&nbsp;</p>\n<pre><span style=\"color: #000000;\">\n\n<p>将下载地址复制，得到rpm包的地址</p>\n<p><img src=\"/cnblogs/12490995/789895-20200314104017330-12695127.png\" alt=\"\" width=\"683\" height=\"368\" /><br /><br />此方法来源<a href=\"https://www.cnblogs.com/lemon-feng/p/11233227.html\">https://www.cnblogs.com/lemon-feng/p/11233227.html</a></span></pre></p>\n</div>\n<pre></pre>\n<h3>这两种方法的区别是是否要在服务器上下载后面的安装包，按照后面的方法，服务器下载时网速渣的要命（感谢长城），但是可以断点，下次继续下载</h3>\n</div>\n<p>在后续安装的时候，可以按照选择的不同办法进行安装，其实都是大同小异，在安装完成之后，建议采用下面的办法进行初始化和配置</p>\n<h2><span id=\"Set1\" style=\"color: #ff0000; font-size: 18pt;\"><span style=\"color: #ff0000; font-size: 18pt;\">2.初始化和配置<br /></span></span></h2>\n<div class=\"cnblogs_code\">\n<pre>顺序执行以下语句</pre>\n<div class=\"cnblogs_code\">\n<pre>mysqld</pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>mysqld --initialize --user=mysql</pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>mysqld --initialize --lower-<span style=\"color: #0000ff;\">case</span>-table-names=<span style=\"color: #800080;\">1 #此设置是设置大小写是否敏感，可前往<a href=\"https://blog.csdn.net/jesseyoung/article/details/40617031\">https://blog.csdn.net/jesseyoung/article/details/40617031</a>查看是否需要设置<br />#ps：<span style=\"color: #ff0000;\">在mysql8中，大小写敏感设置需要在初始化的时候进行设置，后面在配置中进行更改是无效的，所以慎重选择，不然就需要重装。。。。</span></span></pre>\n</div>\n</div>\n<div class=\"cnblogs_code\">\n<pre>查看初始密码：</pre>\n<div class=\"cnblogs_code\">\n<pre>cat /<span style=\"color: #0000ff;\">var</span>/log/mysqld.log  #或者 <strong>cat /var/log/mysqld.log | grep password 或者文件系统进入/var/log/mysqld.log进行查看<br /><br /><img src=\"/cnblogs/12490995/789895-20200314111035435-454576915.png\" alt=\"\" /></strong></pre>\n</div>\n<p>&nbsp;启动mysql服务：</p>\n<div class=\"cnblogs_code\">\n<pre>service mysqld start</pre>\n</div>\n<p>查看一下服务状态是否启动：</p>\n<div class=\"cnblogs_code\">\n<pre>service mysqld status</pre>\n</div>\n<p>登入数据库：</p>\n<div class=\"cnblogs_code\">\n<pre>mysql -uroot -p</pre>\n</div>\n<p><img src=\"/cnblogs/12490995/789895-20200314111255378-1900099054.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;输入或者复制进刚才的随机密码</p>\n<p><img src=\"/cnblogs/12490995/789895-20200314111330497-1914185865.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;下面会出现一个输入命令的地方</p>\n<p><img src=\"/cnblogs/12490995/789895-20200314111407787-1937103574.png\" alt=\"\" /></p>\n<p>值得注意的是，在mysql中，每一个执行语句后面要加上一个英文分号，不然不会执行，如果忘记加了，可以在下面的\"&gt;\"后面输入英文分号然后回车，例如</p>\n<p><img src=\"/cnblogs/12490995/789895-20200314111742266-166098681.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<h3><span id=\"Set2\" style=\"color: #ff0000;\">设置远程访问授权</span></h3>\n<div class=\"cnblogs_code\">\n<pre></pre>\n<pre>mysql -u root -p         //登录数据库,如果已经登入，不需要再执行\n\n<p>use mysql                  //进入mysql数据库,如果已经进入，不需要再执行</pre></p>\n<pre>select Host,User from user; //查看可以访问数据库的ip</pre>\n<pre><span style=\"color: #000000;\">select 'host' from user where user='root';<br /><br />update user set host = '%' where user ='root';  //将默认的localhost更新为%，%是默认全部可以访问，localhost只是本地可访问，还可以指定公网ip\n\ngrant all privileges on </span>*.* to <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">root</span><span style=\"color: #800000;\">'</span>@<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">%</span><span style=\"color: #800000;\">'</span><span style=\"color: #000000;\"> with grant option;\n\nflush privileges;</span></pre>\n</div>\n<p><strong>输入exit退出，<span style=\"color: #ff0000;\">打开</span></strong><span style=\"color: #ff0000;\"><strong>防火墙开放</strong><strong>3306</strong><strong>端口，此步骤不在mysql里面执行</strong></span></p>\n<p>如果没有开启防火墙，则输入：systemctl start firewalld&nbsp; 开启</p>\n<p><img src=\"/cnblogs/12490995/1730174-20190723172447650-1888406330.png\" alt=\"\" /></p>\n<p><strong>输入下面命令，开放</strong><strong>3306</strong><strong>端口</strong></p>\n<p>firewall-cmd --zone=public --add-port=3306/tcp --permanent</p>\n<p>firewall-cmd --reload</p>\n<p><img src=\"/cnblogs/12490995/789895-20200314111825524-170131346.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;<span style=\"color: #ff0000;\"><strong>配置默认编码为</strong><strong>UTF-8<strong>，此步骤不在mysql里面执行</strong></strong></span></p>\n<p>修改/etc/my.cnf配置文件，在[mysqld]下添加编码配置，如下所示：</p>\n<p>（这个步骤可以使用vim或者xftp进行修改）</p>\n<p align=\"left\">character_set_server=utf8</p>\n<p>init_connect='SET NAMES utf8'</p>\n<p>&nbsp;<img src=\"/cnblogs/12490995/1730174-20190723172533547-1436305325.png\" alt=\"\" /></p>\n<p><strong>编辑保存完重启mysql服务: systemctl restart mysqld</strong></p>\n<p><strong><img src=\"/cnblogs/12490995/1730174-20190723172615004-1777913221.png\" alt=\"\" /></strong></p>\n<p>查看下编码：mysql&gt; show variables like '%character%';</p>\n<p><img src=\"/cnblogs/12490995/1730174-20190723172640897-1725389911.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>此时，外部如果还是不能连接上数据库（可查看<a href=\"https://www.cnblogs.com/zzqit/p/10095597.html\">https://www.cnblogs.com/zzqit/p/10095597.html</a>），首先查看<strong>安全规则组，看是否打开了3306端口</strong></p>\n<p><strong><img src=\"/cnblogs/12490995/789895-20200314112146960-1975346260.png\" alt=\"\" width=\"830\" height=\"362\" /></strong></p>\n<p>&nbsp;</p>\n<h3>更改密码</h3>\n<p>更改密码，其实就是更改上面user对应的密码，举例：</p>\n<div class=\"cnblogs_code\">\n<pre>ALTER USER <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">root</span><span style=\"color: #800000;\">'</span>@<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">localhost</span><span style=\"color: #800000;\">'</span> IDENTIFIED WITH mysql_native_password BY <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">你的密码</span><span style=\"color: #800000;\">'</span>;</pre>\n</div>\n<p>这一句话，里面root对应上面的user列，localhost对应host列</p>\n<p>&nbsp;<img src=\"/cnblogs/12490995/789895-20200315144745201-372259132.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;如果我这句话写成：ALTER USER 'root'@'%' IDENTIFIED WITH mysql_native_password BY 'TiLaMiSu13213#13';</p>\n<p>就会报以下错误：ERROR 1396 (HY000): Operation ALTER USER failed for 'root'@'%'</p>\n<p><img src=\"/cnblogs/12490995/789895-20200315144855769-1157086710.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;，意思就是找不到对应的user和host，无法进行密码设置，所以这个地方要对应起来才可以</p>\n<p>我们如果想更改远程连接rootr的密码，就把上面这句话改成</p>\n<div class=\"cnblogs_code\">\n<pre>ALTER USER <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">rootr</span><span style=\"color: #800000;\">'</span>@<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">%</span><span style=\"color: #800000;\">'</span> IDENTIFIED WITH mysql_native_password BY <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">你的密码</span><span style=\"color: #800000;\">'</span>;</pre>\n</div>\n<p><span style=\"color: #ff0000;\">这个地方需要自己去设置修改，别直接复制粘贴</span></p>\n<p>&nbsp;</p>\n<p id=\"Set4\">设置开机启动：<br />在/usr/lib/systemd/system/文件夹下创建一个mysql.service，然后进行编辑</p>\n<pre><span>#ExecStart 目录可在执行which mysqld 进行查询，注意不要少d</span></pre>\n<img src=\"/cnblogs/12490995/789895-20200315140044551-1148857260.png\" alt=\"\" />\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">[Unit]\nDescription</span>=<span style=\"color: #000000;\">MySQL Server\nDocumentation</span>=man:mysqld(<span style=\"color: #800080;\">8</span><span style=\"color: #000000;\">)\nDocumentation</span>=http:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">dev.mysql.com/doc/refman/en/using-systemd.html</span>\nAfter=<span style=\"color: #000000;\">network.target\nAfter</span>=<span style=\"color: #000000;\">syslog.target\n \n<p>[Install]<br>WantedBy</span>=multi-<span style=\"color: #000000;\">user.target</p>\n<p>[Service]<br>User</span>=<span style=\"color: #000000;\">root<br>Group</span>=<span style=\"color: #000000;\">mysql<br>ExecStart</span>=/usr/sbin/mysqld –defaults-file=/etc/<span style=\"color: #000000;\">my.cnf <br /></span><span>LimitNOFILE </span>= <span style=\"color: #800080;\">5000</span></pre></p>\n</div>\n<p>保存后，然后依次执行</p>\n<div class=\"cnblogs_code\">\n<pre></pre>\n<pre><span>systemctl daemon-reload #重新加载服务配置文件</span></pre>\n<pre><span style=\"color: #000000;\">systemctl start mysql #启动mysql<br /><br />systemctl enable mysqld  #设置开机启动\n<br />systemctl status mysql #查看mysql的状态\n<br /></span></pre>\n</div>\n<p>&nbsp;</p>\n</div>"},{"title":"linux 安装redis及问题收集","date":"2020-03-06T11:57:00.000Z","author":"不辍","_content":"<p>contos 7 下安装redis教程可参照<a href=\"https://www.cnblogs.com/hxun/p/11075755.html\">https://www.cnblogs.com/hxun/p/11075755.html</a><br /><br />值得注意的是在第6步方法一（所以建议使用方法二），如果直接使用xftp添加redis文件，并保存后，在执行</p>\n<pre>service redis start时会出现以下错误，</pre>\n<p><img src=\"/cnblogs/12430453/789895-20200306195120995-807700091.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;解决办法在<a href=\"https://blog.csdn.net/xzm5708796/article/details/88344074\">https://blog.csdn.net/xzm5708796/article/details/88344074</a>，就是在/etc/init.d/文件夹下执行以下语句即可</p>\n<div class=\"cnblogs_code\">\n<pre>sed -i <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">s/\\r//g</span><span style=\"color: #800000;\">'</span> redis #redis是/etc/init.d/文件夹下的文件名，如果生成的文件是其他名字，请自行更改</pre>\n</div>\n<p>&nbsp;</p>\n<p>下面是原文</p>\n<p>最近一直忙于项目上的要求，在编写各种自动化安装的脚本，正好有一个需求是在之前的项目上编写过的，目前只需要拿来修改下即可。<br />之前的shell脚本是在服务器上编写的，后来又已复制的方式存在在了电脑上，以txt文件的形式存放的。于是复制到了编辑工具中，进行了相应项的修改。修改完毕后，拿到服务器上测试，结果执行sh XXX.sh后就一直提示</p>\n<p><img src=\"/cnblogs/12430453/789895-20200306195431746-1019534379.png\" alt=\"\" /></p>\n<p>很是奇怪？？？？脚本检查了没有错误的，为什么会有这个提示呢。<br />使用vi 命令打开检查下脚本<br />vi XXX.sh</p>\n<p><img src=\"/cnblogs/12430453/789895-20200306195442560-1506252793.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>还是没什么问题呢？脚本中没有错误，也没有什么特殊的地方？？？？怎么回事呢？？？？</p>\n<p>突然想到了这个脚本是从txt文件中粘贴出来的，会不会是格式的问题？？脚本在存在在txt中，在进行粘贴后可能会出现格式的问题，这个之前是很常见的问题！！！<br />于是抱着这个问题查找的态度。我们再次执行下vim命令，不过需要加参数了！！！！！</p>\n<p>vim -b XXX.sh<br />1<br />我ca，果然如此，在复制进来后，怎么每行后面都多了&ldquo;&rdquo;&ldquo;^M&rdquo;这个玩意！！！！kengdie!!!<br />注：关于vi命令的详细使用方法及参数，我们后续再基础命令系列里会将</p>\n<p><img src=\"/cnblogs/12430453/789895-20200306195506353-591684384.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>几百行的代码，如果手动处理要处理到什么时候？要天荒地老了吧。</p>\n<p>好，这里我们来进行快速处理！</p>\n<p>sed -i 's/\\r//g' javaInstall.sh<br /><img src=\"/cnblogs/12430453/789895-20200306195519061-1807506073.png\" alt=\"\" /></p>\n<p>&nbsp;</p>","source":"_posts/cnblogs/12430453.md","raw":"---\ntitle: linux 安装redis及问题收集\ndate: 2020-03-06T19:57:00\nauthor: 不辍\ntags: []\n---\n<p>contos 7 下安装redis教程可参照<a href=\"https://www.cnblogs.com/hxun/p/11075755.html\">https://www.cnblogs.com/hxun/p/11075755.html</a><br /><br />值得注意的是在第6步方法一（所以建议使用方法二），如果直接使用xftp添加redis文件，并保存后，在执行</p>\n<pre>service redis start时会出现以下错误，</pre>\n<p><img src=\"/cnblogs/12430453/789895-20200306195120995-807700091.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;解决办法在<a href=\"https://blog.csdn.net/xzm5708796/article/details/88344074\">https://blog.csdn.net/xzm5708796/article/details/88344074</a>，就是在/etc/init.d/文件夹下执行以下语句即可</p>\n<div class=\"cnblogs_code\">\n<pre>sed -i <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">s/\\r//g</span><span style=\"color: #800000;\">'</span> redis #redis是/etc/init.d/文件夹下的文件名，如果生成的文件是其他名字，请自行更改</pre>\n</div>\n<p>&nbsp;</p>\n<p>下面是原文</p>\n<p>最近一直忙于项目上的要求，在编写各种自动化安装的脚本，正好有一个需求是在之前的项目上编写过的，目前只需要拿来修改下即可。<br />之前的shell脚本是在服务器上编写的，后来又已复制的方式存在在了电脑上，以txt文件的形式存放的。于是复制到了编辑工具中，进行了相应项的修改。修改完毕后，拿到服务器上测试，结果执行sh XXX.sh后就一直提示</p>\n<p><img src=\"/cnblogs/12430453/789895-20200306195431746-1019534379.png\" alt=\"\" /></p>\n<p>很是奇怪？？？？脚本检查了没有错误的，为什么会有这个提示呢。<br />使用vi 命令打开检查下脚本<br />vi XXX.sh</p>\n<p><img src=\"/cnblogs/12430453/789895-20200306195442560-1506252793.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>还是没什么问题呢？脚本中没有错误，也没有什么特殊的地方？？？？怎么回事呢？？？？</p>\n<p>突然想到了这个脚本是从txt文件中粘贴出来的，会不会是格式的问题？？脚本在存在在txt中，在进行粘贴后可能会出现格式的问题，这个之前是很常见的问题！！！<br />于是抱着这个问题查找的态度。我们再次执行下vim命令，不过需要加参数了！！！！！</p>\n<p>vim -b XXX.sh<br />1<br />我ca，果然如此，在复制进来后，怎么每行后面都多了&ldquo;&rdquo;&ldquo;^M&rdquo;这个玩意！！！！kengdie!!!<br />注：关于vi命令的详细使用方法及参数，我们后续再基础命令系列里会将</p>\n<p><img src=\"/cnblogs/12430453/789895-20200306195506353-591684384.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>几百行的代码，如果手动处理要处理到什么时候？要天荒地老了吧。</p>\n<p>好，这里我们来进行快速处理！</p>\n<p>sed -i 's/\\r//g' javaInstall.sh<br /><img src=\"/cnblogs/12430453/789895-20200306195519061-1807506073.png\" alt=\"\" /></p>\n<p>&nbsp;</p>","slug":"cnblogs/12430453","published":1,"updated":"2022-07-10T13:01:19.613Z","_id":"cl5f7ixvm001uc0un0y0efql7","comments":1,"layout":"post","photos":[],"link":"","content":"<p>contos 7 下安装redis教程可参照<a href=\"https://www.cnblogs.com/hxun/p/11075755.html\">https://www.cnblogs.com/hxun/p/11075755.html</a><br /><br />值得注意的是在第6步方法一（所以建议使用方法二），如果直接使用xftp添加redis文件，并保存后，在执行</p>\n<pre>service redis start时会出现以下错误，</pre>\n<p><img src=\"/cnblogs/12430453/789895-20200306195120995-807700091.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;解决办法在<a href=\"https://blog.csdn.net/xzm5708796/article/details/88344074\">https://blog.csdn.net/xzm5708796/article/details/88344074</a>，就是在/etc/init.d/文件夹下执行以下语句即可</p>\n<div class=\"cnblogs_code\">\n<pre>sed -i <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">s/\\r//g</span><span style=\"color: #800000;\">'</span> redis #redis是/etc/init.d/文件夹下的文件名，如果生成的文件是其他名字，请自行更改</pre>\n</div>\n<p>&nbsp;</p>\n<p>下面是原文</p>\n<p>最近一直忙于项目上的要求，在编写各种自动化安装的脚本，正好有一个需求是在之前的项目上编写过的，目前只需要拿来修改下即可。<br />之前的shell脚本是在服务器上编写的，后来又已复制的方式存在在了电脑上，以txt文件的形式存放的。于是复制到了编辑工具中，进行了相应项的修改。修改完毕后，拿到服务器上测试，结果执行sh XXX.sh后就一直提示</p>\n<p><img src=\"/cnblogs/12430453/789895-20200306195431746-1019534379.png\" alt=\"\" /></p>\n<p>很是奇怪？？？？脚本检查了没有错误的，为什么会有这个提示呢。<br />使用vi 命令打开检查下脚本<br />vi XXX.sh</p>\n<p><img src=\"/cnblogs/12430453/789895-20200306195442560-1506252793.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>还是没什么问题呢？脚本中没有错误，也没有什么特殊的地方？？？？怎么回事呢？？？？</p>\n<p>突然想到了这个脚本是从txt文件中粘贴出来的，会不会是格式的问题？？脚本在存在在txt中，在进行粘贴后可能会出现格式的问题，这个之前是很常见的问题！！！<br />于是抱着这个问题查找的态度。我们再次执行下vim命令，不过需要加参数了！！！！！</p>\n<p>vim -b XXX.sh<br />1<br />我ca，果然如此，在复制进来后，怎么每行后面都多了&ldquo;&rdquo;&ldquo;^M&rdquo;这个玩意！！！！kengdie!!!<br />注：关于vi命令的详细使用方法及参数，我们后续再基础命令系列里会将</p>\n<p><img src=\"/cnblogs/12430453/789895-20200306195506353-591684384.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>几百行的代码，如果手动处理要处理到什么时候？要天荒地老了吧。</p>\n<p>好，这里我们来进行快速处理！</p>\n<p>sed -i 's/\\r//g' javaInstall.sh<br /><img src=\"/cnblogs/12430453/789895-20200306195519061-1807506073.png\" alt=\"\" /></p>\n<p>&nbsp;</p>","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"spatxos","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/spatxos","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"<p>contos 7 下安装redis教程可参照<a href=\"https://www.cnblogs.com/hxun/p/11075755.html\">https://www.cnblogs.com/hxun/p/11075755.html</a><br /><br />值得注意的是在第6步方法一（所以建议使用方法二），如果直接使用xftp添加redis文件，并保存后，在执行</p>\n<pre>service redis start时会出现以下错误，</pre>\n<p><img src=\"/cnblogs/12430453/789895-20200306195120995-807700091.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;解决办法在<a href=\"https://blog.csdn.net/xzm5708796/article/details/88344074\">https://blog.csdn.net/xzm5708796/article/details/88344074</a>，就是在/etc/init.d/文件夹下执行以下语句即可</p>\n<div class=\"cnblogs_code\">\n<pre>sed -i <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">s/\\r//g</span><span style=\"color: #800000;\">'</span> redis #redis是/etc/init.d/文件夹下的文件名，如果生成的文件是其他名字，请自行更改</pre>\n</div>\n<p>&nbsp;</p>\n<p>下面是原文</p>\n<p>最近一直忙于项目上的要求，在编写各种自动化安装的脚本，正好有一个需求是在之前的项目上编写过的，目前只需要拿来修改下即可。<br />之前的shell脚本是在服务器上编写的，后来又已复制的方式存在在了电脑上，以txt文件的形式存放的。于是复制到了编辑工具中，进行了相应项的修改。修改完毕后，拿到服务器上测试，结果执行sh XXX.sh后就一直提示</p>\n<p><img src=\"/cnblogs/12430453/789895-20200306195431746-1019534379.png\" alt=\"\" /></p>\n<p>很是奇怪？？？？脚本检查了没有错误的，为什么会有这个提示呢。<br />使用vi 命令打开检查下脚本<br />vi XXX.sh</p>\n<p><img src=\"/cnblogs/12430453/789895-20200306195442560-1506252793.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>还是没什么问题呢？脚本中没有错误，也没有什么特殊的地方？？？？怎么回事呢？？？？</p>\n<p>突然想到了这个脚本是从txt文件中粘贴出来的，会不会是格式的问题？？脚本在存在在txt中，在进行粘贴后可能会出现格式的问题，这个之前是很常见的问题！！！<br />于是抱着这个问题查找的态度。我们再次执行下vim命令，不过需要加参数了！！！！！</p>\n<p>vim -b XXX.sh<br />1<br />我ca，果然如此，在复制进来后，怎么每行后面都多了&ldquo;&rdquo;&ldquo;^M&rdquo;这个玩意！！！！kengdie!!!<br />注：关于vi命令的详细使用方法及参数，我们后续再基础命令系列里会将</p>\n<p><img src=\"/cnblogs/12430453/789895-20200306195506353-591684384.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>几百行的代码，如果手动处理要处理到什么时候？要天荒地老了吧。</p>\n<p>好，这里我们来进行快速处理！</p>\n<p>sed -i 's/\\r//g' javaInstall.sh<br /><img src=\"/cnblogs/12430453/789895-20200306195519061-1807506073.png\" alt=\"\" /></p>\n<p>&nbsp;</p>"},{"title":"linux学习（小白篇）","date":"2020-03-02T12:49:00.000Z","author":"不辍","_content":"<div class=\"cnblogs_code\">\n<pre>当前服务器：centos <span style=\"color: #800080;\">7</span><span style=\"color: #000000;\">\n\nshell命令框：xshell\n\n文件预览及上传：xftp （界面化软件，非常好用）\n\n数据库连接：navicat</span></pre>\n</div>\n<p>&nbsp;</p>\n<p>此文是在学习linux时做一个指令合集，方便自己查阅</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">进文件夹：cd xxx\n返回最上级文件夹：cd </span>/<span style=\"color: #000000;\">\n查看当前文件夹的所有文件：ls<br />访问linux本地的网站端口：curl http://localhost:[端口号]<br /><br />前期准备：<a href=\"#netcoreinstall\">安装netcore环境</a>(点击直接跳转)，参照<a href=\"https://www.cnblogs.com/v587yy/p/12148087.html\">https://www.cnblogs.com/v587yy/p/12148087.html</a><br />netcore网站发布后可使用xftp上传到linux服务器，进入网站所在文件夹之后netcore网站可使用dotnet xxx.dll运行，运行后想要在外网访问，需要搭建<a href=\"https://www.cnblogs.com/wangpengzong/p/12530605.html\" target=\"_blank\">nginx</a>(点击直接跳转)</span></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>1.查看所有进程：ps -<span style=\"color: #000000;\">ef\n\n\n</span>2.查看特定进程：ps -ef |<span style=\"color: #000000;\">grep redis\n\nps:将某个进程显示出来\n</span>-<span style=\"color: #000000;\">A 　显示所有程序。 \n</span>-e 　此参数的效果和指定\"A\"<span style=\"color: #000000;\">参数相同。\n</span>-<span style=\"color: #000000;\">f 　显示UID,PPIP,C与STIME栏位。 \ngrep命令是查找\n中间的</span>|<span style=\"color: #000000;\">是管道命令 是指ps命令与grep同时执行\n\n这条命令的意思是显示有关redis有关的进程<br /><br />3.查看端口：netstat -ntulp  #查看哪些端口被打开</span>：<span>netstat -anp</span></pre>\n<pre><em><span style=\"color: #000000;\"><br />4.查看特定端口：netstat -ntulp | grep 80<br />5.关闭端口号：iptables -A INPUT -p tcp --drop [端口号]-j DROP<br />6.打开端口号：打开端口号：iptables -I INPUT -ptcp --dport</span></em>[端口号]<em id=\"__mceDel\"><em id=\"__mceDel\"><span>-j ACCEPT <br /><br /></span><span>7.kill[参数][进程号] <br />kill </span>-9 4394<span> kill<br />就是给某个进程id发送了一个信号。默认发送的信号是SIGTERM，而kill </span>-9发送的信号是SIGKILL，即exit。<br />exit信号不会被系统阻塞，所以kill -9能顺利杀掉进程。当然你也可以使用kill发送其他信号给进程。</em></em></pre>\n<pre><em id=\"__mceDel\"><em id=\"__mceDel\"><br />摘自<a href=\"https://www.cnblogs.com/yiyangl/p/11130577.html\">https://www.cnblogs.com/yiyangl/p/11130577.html<br /></a><a href=\"https://baijiahao.baidu.com/s?id=1610751947194251627&amp;wfr=spider&amp;for=pc\">https://baijiahao.baidu.com/s?id=1610751947194251627&amp;wfr=spider&amp;for=pc</a><a href=\"https://www.cnblogs.com/yiyangl/p/11130577.html\"><br /></a></em></em></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">创建服务定义文件：\n\nsudo nano </span>/etc/systemd/system/kestrel-<span style=\"color: #000000;\">hellomvc.service\n以下是应用的示例服务文件：</span></pre>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">[Unit]\nDescription</span>=<span style=\"color: #000000;\">Example .NET Web API App running on Ubuntu\n \n[Service]\nWorkingDirectory</span>=/var/aspnetcore/hellomvc\nExecStart=/usr/bin/dotnet /<span style=\"color: #0000ff;\">var</span>/aspnetcore/hellomvc/hellomvc.dll\nRestart=<span style=\"color: #000000;\">always\n# Restart service after </span>10 seconds <span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> the dotnet service crashes:\nRestartSec</span>=10<span style=\"color: #000000;\">\nSyslogIdentifier</span>=dotnet-<span style=\"color: #000000;\">example\nUser</span>=<span style=\"color: #000000;\">xxx\nEnvironment</span>=ASPNETCORE_ENVIRONMENT=<span style=\"color: #000000;\">Development\n \n[Install]\nWantedBy</span>=multi-user.target</pre>\n</div>\n<pre></pre>\n<pre><span style=\"color: #000000;\">保存文件并启用服务。\n\nsystemctl enable kestrel</span>-<span style=\"color: #000000;\">hellomvc.service\n启动服务并验证其是否正在运行。\n\nsystemctl start kestrel</span>-<span style=\"color: #000000;\">hellomvc.service\nsystemctl status kestrel</span>-<span style=\"color: #000000;\">hellomvc.service\n您需要使用应用 dll 的路径将工作目录（ 路径到您的应用和Exec Start）设置为文件夹。默认情况下，这就足够了。<br /><br />摘自<a href=\"https://blog.csdn.net/wojiaosha123/article/details/98784936\">https://blog.csdn.net/wojiaosha123/article/details/98784936</a></span></pre>\n</div>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<div id=\"netcoreinstall\">centos安装.net core 环境</div>\n<pre><span style=\"color: #000000;\">\nsudo yum update\n注册Microsoft签名密钥，每个机器只要注册一次就可以\nsudo rpm </span>-Uvh https:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">packages.microsoft.com/config/rhel/7/packages-microsoft-prod.rpm</span>\n<span style=\"color: #000000;\">\n安装.Net Core SDK ，这里根据项目环境，需要安装2.2版的。不同的开发环境选择对应的运行时版本\nsudo yum install dotnet</span>-sdk-2.2<span style=\"color: #000000;\">\n\n完成后，通过命令，可以看出.net core的版本\n\ndotnet </span>--<span style=\"color: #000000;\">version\n\n摘自https:</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">www.cnblogs.com/v587yy/p/12148087.html</span></pre>\n</div>","source":"_posts/cnblogs/12397911.md","raw":"---\ntitle: linux学习（小白篇）\ndate: 2020-03-02T20:49:00\nauthor: 不辍\ntags: []\n---\n<div class=\"cnblogs_code\">\n<pre>当前服务器：centos <span style=\"color: #800080;\">7</span><span style=\"color: #000000;\">\n\nshell命令框：xshell\n\n文件预览及上传：xftp （界面化软件，非常好用）\n\n数据库连接：navicat</span></pre>\n</div>\n<p>&nbsp;</p>\n<p>此文是在学习linux时做一个指令合集，方便自己查阅</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">进文件夹：cd xxx\n返回最上级文件夹：cd </span>/<span style=\"color: #000000;\">\n查看当前文件夹的所有文件：ls<br />访问linux本地的网站端口：curl http://localhost:[端口号]<br /><br />前期准备：<a href=\"#netcoreinstall\">安装netcore环境</a>(点击直接跳转)，参照<a href=\"https://www.cnblogs.com/v587yy/p/12148087.html\">https://www.cnblogs.com/v587yy/p/12148087.html</a><br />netcore网站发布后可使用xftp上传到linux服务器，进入网站所在文件夹之后netcore网站可使用dotnet xxx.dll运行，运行后想要在外网访问，需要搭建<a href=\"https://www.cnblogs.com/wangpengzong/p/12530605.html\" target=\"_blank\">nginx</a>(点击直接跳转)</span></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>1.查看所有进程：ps -<span style=\"color: #000000;\">ef\n\n\n</span>2.查看特定进程：ps -ef |<span style=\"color: #000000;\">grep redis\n\nps:将某个进程显示出来\n</span>-<span style=\"color: #000000;\">A 　显示所有程序。 \n</span>-e 　此参数的效果和指定\"A\"<span style=\"color: #000000;\">参数相同。\n</span>-<span style=\"color: #000000;\">f 　显示UID,PPIP,C与STIME栏位。 \ngrep命令是查找\n中间的</span>|<span style=\"color: #000000;\">是管道命令 是指ps命令与grep同时执行\n\n这条命令的意思是显示有关redis有关的进程<br /><br />3.查看端口：netstat -ntulp  #查看哪些端口被打开</span>：<span>netstat -anp</span></pre>\n<pre><em><span style=\"color: #000000;\"><br />4.查看特定端口：netstat -ntulp | grep 80<br />5.关闭端口号：iptables -A INPUT -p tcp --drop [端口号]-j DROP<br />6.打开端口号：打开端口号：iptables -I INPUT -ptcp --dport</span></em>[端口号]<em id=\"__mceDel\"><em id=\"__mceDel\"><span>-j ACCEPT <br /><br /></span><span>7.kill[参数][进程号] <br />kill </span>-9 4394<span> kill<br />就是给某个进程id发送了一个信号。默认发送的信号是SIGTERM，而kill </span>-9发送的信号是SIGKILL，即exit。<br />exit信号不会被系统阻塞，所以kill -9能顺利杀掉进程。当然你也可以使用kill发送其他信号给进程。</em></em></pre>\n<pre><em id=\"__mceDel\"><em id=\"__mceDel\"><br />摘自<a href=\"https://www.cnblogs.com/yiyangl/p/11130577.html\">https://www.cnblogs.com/yiyangl/p/11130577.html<br /></a><a href=\"https://baijiahao.baidu.com/s?id=1610751947194251627&amp;wfr=spider&amp;for=pc\">https://baijiahao.baidu.com/s?id=1610751947194251627&amp;wfr=spider&amp;for=pc</a><a href=\"https://www.cnblogs.com/yiyangl/p/11130577.html\"><br /></a></em></em></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">创建服务定义文件：\n\nsudo nano </span>/etc/systemd/system/kestrel-<span style=\"color: #000000;\">hellomvc.service\n以下是应用的示例服务文件：</span></pre>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">[Unit]\nDescription</span>=<span style=\"color: #000000;\">Example .NET Web API App running on Ubuntu\n \n[Service]\nWorkingDirectory</span>=/var/aspnetcore/hellomvc\nExecStart=/usr/bin/dotnet /<span style=\"color: #0000ff;\">var</span>/aspnetcore/hellomvc/hellomvc.dll\nRestart=<span style=\"color: #000000;\">always\n# Restart service after </span>10 seconds <span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> the dotnet service crashes:\nRestartSec</span>=10<span style=\"color: #000000;\">\nSyslogIdentifier</span>=dotnet-<span style=\"color: #000000;\">example\nUser</span>=<span style=\"color: #000000;\">xxx\nEnvironment</span>=ASPNETCORE_ENVIRONMENT=<span style=\"color: #000000;\">Development\n \n[Install]\nWantedBy</span>=multi-user.target</pre>\n</div>\n<pre></pre>\n<pre><span style=\"color: #000000;\">保存文件并启用服务。\n\nsystemctl enable kestrel</span>-<span style=\"color: #000000;\">hellomvc.service\n启动服务并验证其是否正在运行。\n\nsystemctl start kestrel</span>-<span style=\"color: #000000;\">hellomvc.service\nsystemctl status kestrel</span>-<span style=\"color: #000000;\">hellomvc.service\n您需要使用应用 dll 的路径将工作目录（ 路径到您的应用和Exec Start）设置为文件夹。默认情况下，这就足够了。<br /><br />摘自<a href=\"https://blog.csdn.net/wojiaosha123/article/details/98784936\">https://blog.csdn.net/wojiaosha123/article/details/98784936</a></span></pre>\n</div>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<div id=\"netcoreinstall\">centos安装.net core 环境</div>\n<pre><span style=\"color: #000000;\">\nsudo yum update\n注册Microsoft签名密钥，每个机器只要注册一次就可以\nsudo rpm </span>-Uvh https:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">packages.microsoft.com/config/rhel/7/packages-microsoft-prod.rpm</span>\n<span style=\"color: #000000;\">\n安装.Net Core SDK ，这里根据项目环境，需要安装2.2版的。不同的开发环境选择对应的运行时版本\nsudo yum install dotnet</span>-sdk-2.2<span style=\"color: #000000;\">\n\n完成后，通过命令，可以看出.net core的版本\n\ndotnet </span>--<span style=\"color: #000000;\">version\n\n摘自https:</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">www.cnblogs.com/v587yy/p/12148087.html</span></pre>\n</div>","slug":"cnblogs/12397911","published":1,"updated":"2022-07-10T13:01:19.694Z","_id":"cl5f7ixwm001vc0un9e0ihprd","comments":1,"layout":"post","photos":[],"link":"","content":"<div class=\"cnblogs_code\">\n<pre>当前服务器：centos <span style=\"color: #800080;\">7</span><span style=\"color: #000000;\">\n\n<p>shell命令框：xshell</p>\n<p>文件预览及上传：xftp （界面化软件，非常好用）</p>\n<p>数据库连接：navicat</span></pre></p>\n</div>\n<p>&nbsp;</p>\n<p>此文是在学习linux时做一个指令合集，方便自己查阅</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">进文件夹：cd xxx\n返回最上级文件夹：cd </span>/<span style=\"color: #000000;\">\n查看当前文件夹的所有文件：ls<br />访问linux本地的网站端口：curl http://localhost:[端口号]<br /><br />前期准备：<a href=\"#netcoreinstall\">安装netcore环境</a>(点击直接跳转)，参照<a href=\"https://www.cnblogs.com/v587yy/p/12148087.html\">https://www.cnblogs.com/v587yy/p/12148087.html</a><br />netcore网站发布后可使用xftp上传到linux服务器，进入网站所在文件夹之后netcore网站可使用dotnet xxx.dll运行，运行后想要在外网访问，需要搭建<a href=\"https://www.cnblogs.com/wangpengzong/p/12530605.html\" target=\"_blank\">nginx</a>(点击直接跳转)</span></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>1.查看所有进程：ps -<span style=\"color: #000000;\">ef\n\n\n<p></span>2.查看特定进程：ps -ef |<span style=\"color: #000000;\">grep redis</p>\n<p>ps:将某个进程显示出来<br></span>-<span style=\"color: #000000;\">A 　显示所有程序。<br></span>-e 　此参数的效果和指定”A”<span style=\"color: #000000;\">参数相同。<br></span>-<span style=\"color: #000000;\">f 　显示UID,PPIP,C与STIME栏位。<br>grep命令是查找<br>中间的</span>|<span style=\"color: #000000;\">是管道命令 是指ps命令与grep同时执行</p>\n<p>这条命令的意思是显示有关redis有关的进程<br /><br />3.查看端口：netstat -ntulp  #查看哪些端口被打开</span>：<span>netstat -anp</span></pre></p>\n<pre><em><span style=\"color: #000000;\"><br />4.查看特定端口：netstat -ntulp | grep 80<br />5.关闭端口号：iptables -A INPUT -p tcp --drop [端口号]-j DROP<br />6.打开端口号：打开端口号：iptables -I INPUT -ptcp --dport</span></em>[端口号]<em id=\"__mceDel\"><em id=\"__mceDel\"><span>-j ACCEPT <br /><br /></span><span>7.kill[参数][进程号] <br />kill </span>-9 4394<span> kill<br />就是给某个进程id发送了一个信号。默认发送的信号是SIGTERM，而kill </span>-9发送的信号是SIGKILL，即exit。<br />exit信号不会被系统阻塞，所以kill -9能顺利杀掉进程。当然你也可以使用kill发送其他信号给进程。</em></em></pre>\n<pre><em id=\"__mceDel\"><em id=\"__mceDel\"><br />摘自<a href=\"https://www.cnblogs.com/yiyangl/p/11130577.html\">https://www.cnblogs.com/yiyangl/p/11130577.html<br /></a><a href=\"https://baijiahao.baidu.com/s?id=1610751947194251627&amp;wfr=spider&amp;for=pc\">https://baijiahao.baidu.com/s?id=1610751947194251627&amp;wfr=spider&amp;for=pc</a><a href=\"https://www.cnblogs.com/yiyangl/p/11130577.html\"><br /></a></em></em></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">创建服务定义文件：\n\n<p>sudo nano </span>/etc/systemd/system/kestrel-<span style=\"color: #000000;\">hellomvc.service<br>以下是应用的示例服务文件：</span></pre></p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">[Unit]\nDescription</span>=<span style=\"color: #000000;\">Example .NET Web API App running on Ubuntu\n \n<p>[Service]<br>WorkingDirectory</span>=/var/aspnetcore/hellomvc<br>ExecStart=/usr/bin/dotnet /<span style=\"color: #0000ff;\">var</span>/aspnetcore/hellomvc/hellomvc.dll<br>Restart=<span style=\"color: #000000;\">always</p>\n<h1 id=\"Restart-service-after-10-seconds-if-the-dotnet-service-crashes\"><a href=\"#Restart-service-after-10-seconds-if-the-dotnet-service-crashes\" class=\"headerlink\" title=\"Restart service after 10 seconds if the dotnet service crashes:\"></a>Restart service after </span>10 seconds <span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> the dotnet service crashes:</h1><p>RestartSec</span>=10<span style=\"color: #000000;\"><br>SyslogIdentifier</span>=dotnet-<span style=\"color: #000000;\">example<br>User</span>=<span style=\"color: #000000;\">xxx<br>Environment</span>=ASPNETCORE_ENVIRONMENT=<span style=\"color: #000000;\">Development</p>\n<p>[Install]<br>WantedBy</span>=multi-user.target</pre></p>\n</div>\n<pre></pre>\n<pre><span style=\"color: #000000;\">保存文件并启用服务。\n\n<p>systemctl enable kestrel</span>-<span style=\"color: #000000;\">hellomvc.service<br>启动服务并验证其是否正在运行。</p>\n<p>systemctl start kestrel</span>-<span style=\"color: #000000;\">hellomvc.service<br>systemctl status kestrel</span>-<span style=\"color: #000000;\">hellomvc.service<br>您需要使用应用 dll 的路径将工作目录（ 路径到您的应用和Exec Start）设置为文件夹。默认情况下，这就足够了。<br /><br />摘自<a href=\"https://blog.csdn.net/wojiaosha123/article/details/98784936\">https://blog.csdn.net/wojiaosha123/article/details/98784936</a></span></pre></p>\n</div>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<div id=\"netcoreinstall\">centos安装.net core 环境</div>\n<pre><span style=\"color: #000000;\">\nsudo yum update\n注册Microsoft签名密钥，每个机器只要注册一次就可以\nsudo rpm </span>-Uvh https:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">packages.microsoft.com/config/rhel/7/packages-microsoft-prod.rpm</span>\n<span style=\"color: #000000;\">\n安装.Net Core SDK ，这里根据项目环境，需要安装2.2版的。不同的开发环境选择对应的运行时版本\nsudo yum install dotnet</span>-sdk-2.2<span style=\"color: #000000;\">\n\n<p>完成后，通过命令，可以看出.net core的版本</p>\n<p>dotnet </span>–<span style=\"color: #000000;\">version</p>\n<p>摘自https:</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"><a href=\"http://www.cnblogs.com/v587yy/p/12148087.html\">www.cnblogs.com/v587yy/p/12148087.html</a></span></pre></p>\n</div>","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"spatxos","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/spatxos","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"<div class=\"cnblogs_code\">\n<pre>当前服务器：centos <span style=\"color: #800080;\">7</span><span style=\"color: #000000;\">\n\n<p>shell命令框：xshell</p>\n<p>文件预览及上传：xftp （界面化软件，非常好用）</p>\n<p>数据库连接：navicat</span></pre></p>\n</div>\n<p>&nbsp;</p>\n<p>此文是在学习linux时做一个指令合集，方便自己查阅</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">进文件夹：cd xxx\n返回最上级文件夹：cd </span>/<span style=\"color: #000000;\">\n查看当前文件夹的所有文件：ls<br />访问linux本地的网站端口：curl http://localhost:[端口号]<br /><br />前期准备：<a href=\"#netcoreinstall\">安装netcore环境</a>(点击直接跳转)，参照<a href=\"https://www.cnblogs.com/v587yy/p/12148087.html\">https://www.cnblogs.com/v587yy/p/12148087.html</a><br />netcore网站发布后可使用xftp上传到linux服务器，进入网站所在文件夹之后netcore网站可使用dotnet xxx.dll运行，运行后想要在外网访问，需要搭建<a href=\"https://www.cnblogs.com/wangpengzong/p/12530605.html\" target=\"_blank\">nginx</a>(点击直接跳转)</span></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre>1.查看所有进程：ps -<span style=\"color: #000000;\">ef\n\n\n<p></span>2.查看特定进程：ps -ef |<span style=\"color: #000000;\">grep redis</p>\n<p>ps:将某个进程显示出来<br></span>-<span style=\"color: #000000;\">A 　显示所有程序。<br></span>-e 　此参数的效果和指定”A”<span style=\"color: #000000;\">参数相同。<br></span>-<span style=\"color: #000000;\">f 　显示UID,PPIP,C与STIME栏位。<br>grep命令是查找<br>中间的</span>|<span style=\"color: #000000;\">是管道命令 是指ps命令与grep同时执行</p>\n<p>这条命令的意思是显示有关redis有关的进程<br /><br />3.查看端口：netstat -ntulp  #查看哪些端口被打开</span>：<span>netstat -anp</span></pre></p>\n<pre><em><span style=\"color: #000000;\"><br />4.查看特定端口：netstat -ntulp | grep 80<br />5.关闭端口号：iptables -A INPUT -p tcp --drop [端口号]-j DROP<br />6.打开端口号：打开端口号：iptables -I INPUT -ptcp --dport</span></em>[端口号]<em id=\"__mceDel\"><em id=\"__mceDel\"><span>-j ACCEPT <br /><br /></span><span>7.kill[参数][进程号] <br />kill </span>-9 4394<span> kill<br />就是给某个进程id发送了一个信号。默认发送的信号是SIGTERM，而kill </span>-9发送的信号是SIGKILL，即exit。<br />exit信号不会被系统阻塞，所以kill -9能顺利杀掉进程。当然你也可以使用kill发送其他信号给进程。</em></em></pre>\n<pre><em id=\"__mceDel\"><em id=\"__mceDel\"><br />摘自<a href=\"https://www.cnblogs.com/yiyangl/p/11130577.html\">https://www.cnblogs.com/yiyangl/p/11130577.html<br /></a><a href=\"https://baijiahao.baidu.com/s?id=1610751947194251627&amp;wfr=spider&amp;for=pc\">https://baijiahao.baidu.com/s?id=1610751947194251627&amp;wfr=spider&amp;for=pc</a><a href=\"https://www.cnblogs.com/yiyangl/p/11130577.html\"><br /></a></em></em></pre>\n</div>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">创建服务定义文件：\n\n<p>sudo nano </span>/etc/systemd/system/kestrel-<span style=\"color: #000000;\">hellomvc.service<br>以下是应用的示例服务文件：</span></pre></p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #000000;\">[Unit]\nDescription</span>=<span style=\"color: #000000;\">Example .NET Web API App running on Ubuntu\n \n<p>[Service]<br>WorkingDirectory</span>=/var/aspnetcore/hellomvc<br>ExecStart=/usr/bin/dotnet /<span style=\"color: #0000ff;\">var</span>/aspnetcore/hellomvc/hellomvc.dll<br>Restart=<span style=\"color: #000000;\">always</p>\n<h1 id=\"Restart-service-after-10-seconds-if-the-dotnet-service-crashes\"><a href=\"#Restart-service-after-10-seconds-if-the-dotnet-service-crashes\" class=\"headerlink\" title=\"Restart service after 10 seconds if the dotnet service crashes:\"></a>Restart service after </span>10 seconds <span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> the dotnet service crashes:</h1><p>RestartSec</span>=10<span style=\"color: #000000;\"><br>SyslogIdentifier</span>=dotnet-<span style=\"color: #000000;\">example<br>User</span>=<span style=\"color: #000000;\">xxx<br>Environment</span>=ASPNETCORE_ENVIRONMENT=<span style=\"color: #000000;\">Development</p>\n<p>[Install]<br>WantedBy</span>=multi-user.target</pre></p>\n</div>\n<pre></pre>\n<pre><span style=\"color: #000000;\">保存文件并启用服务。\n\n<p>systemctl enable kestrel</span>-<span style=\"color: #000000;\">hellomvc.service<br>启动服务并验证其是否正在运行。</p>\n<p>systemctl start kestrel</span>-<span style=\"color: #000000;\">hellomvc.service<br>systemctl status kestrel</span>-<span style=\"color: #000000;\">hellomvc.service<br>您需要使用应用 dll 的路径将工作目录（ 路径到您的应用和Exec Start）设置为文件夹。默认情况下，这就足够了。<br /><br />摘自<a href=\"https://blog.csdn.net/wojiaosha123/article/details/98784936\">https://blog.csdn.net/wojiaosha123/article/details/98784936</a></span></pre></p>\n</div>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<div id=\"netcoreinstall\">centos安装.net core 环境</div>\n<pre><span style=\"color: #000000;\">\nsudo yum update\n注册Microsoft签名密钥，每个机器只要注册一次就可以\nsudo rpm </span>-Uvh https:<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">packages.microsoft.com/config/rhel/7/packages-microsoft-prod.rpm</span>\n<span style=\"color: #000000;\">\n安装.Net Core SDK ，这里根据项目环境，需要安装2.2版的。不同的开发环境选择对应的运行时版本\nsudo yum install dotnet</span>-sdk-2.2<span style=\"color: #000000;\">\n\n<p>完成后，通过命令，可以看出.net core的版本</p>\n<p>dotnet </span>–<span style=\"color: #000000;\">version</p>\n<p>摘自https:</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"><a href=\"http://www.cnblogs.com/v587yy/p/12148087.html\">www.cnblogs.com/v587yy/p/12148087.html</a></span></pre></p>\n</div>"},{"title":"NetCore.SignalR.Demo演示","date":"2019-07-12T05:54:00.000Z","author":"不辍","_content":"<p>项目github，点击<a title=\"NetCore.SignalR.Demo\" href=\"https://github.com/wangpengzong/NetCore.SignalR.Demo\" target=\"_blank\">https://github.com/wangpengzong/NetCore.SignalR.Demo</a></p>\n<p>&nbsp;</p>\n<p>1.打开服务端Server（\\SignalR.Server\\bin\\Debug\\netcoreapp2.2\\win10-x64\\SignalR.Server.exe）</p>\n<p>&nbsp;</p>\n<p>2.打开客户端，开5个标签页，分别是</p>\n<p><span style=\"font-family: 宋体;\">两个</span>http://localhost:63891/test/index&nbsp; &nbsp; &nbsp;groupid：1，用户1，identifier = \"00000000-0000-0000-0000-000000000000\"</p>\n<p><span style=\"font-family: 宋体;\">一个</span>http://localhost:63891/test/index1&nbsp;&nbsp;&nbsp;groupid：1，用户2，identifier = \"11111111-1111-1111-1111-111111111111\"</p>\n<p><span style=\"font-family: 宋体;\">一个</span>http://localhost:63891/test/index2&nbsp;&nbsp;&nbsp;groupid：2，用户3，identifier = \"33333333-3333-3333-3333-333333333333\"</p>\n<p><span style=\"font-family: 宋体;\">一个</span>http://localhost:63891/test/index3&nbsp;&nbsp;&nbsp;groupid：3，用户4，identifier = \"44444444-4444-4444-4444-444444444444\"</p>\n<p>&nbsp;<img src=\"/cnblogs/11175665/789895-20190712135006227-2107371641.png\" alt=\"\" width=\"965\" height=\"573\" /></p>\n<p>&nbsp;</p>\n<p>Javascript调用：</p>\n<p><span style=\"font-family: 宋体;\">在</span>test/index中的user框，输入00000000-0000-0000-0000-000000000000<span style=\"font-family: 宋体;\">，</span>message输入hi，点击sendmessage，就可以在全部的标签页看到以上页面，此时调用的是</p>\n<p>document.getElementById(\"sendButton\").addEventListener(\"click\", event =&gt; {</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const user = document.getElementById(\"userInput\").value;</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const message = document.getElementById(\"messageInput\").value;</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;connection.invoke(\"SendMessageToAll\", { From: user, Content: message }).catch(err =&gt; console.error(err.toString()));</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event.preventDefault();</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}); &nbsp;&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>.net 客户端调用</p>\n<p>再打开一个标签页，输入<a href=\"http://localhost:63891/test/SendMessageToAll\"><span style=\"text-decoration: underline;\">http://localhost:63891/test/SendMessageToAll</span></a></p>\n<p>&nbsp;<img src=\"/cnblogs/11175665/789895-20190712135205933-637885315.png\" alt=\"\" width=\"1109\" height=\"663\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>这个和上面的say hi都是调用SendMessageToAll方法，发送给所有人</p>\n<p>&nbsp;</p>\n<p>将此标签页输入<a href=\"http://localhost:63891/test/SendMessageToAll\"><span style=\"text-decoration: underline;\">http://localhost:63891/test/</span>SendMessageToUser</a>，调用SendMessageToUser方法，此时前两个页面显示00000000-0000-0000-0000-000000000000 says SendMessageTo1<span style=\"font-family: 宋体;\">，这个是发给用户</span>1</p>\n<p>&nbsp;<img src=\"/cnblogs/11175665/789895-20190712135227098-2050240776.png\" alt=\"\" width=\"1096\" height=\"666\" /></p>\n<p>&nbsp;</p>\n<p>将此标签页输入<a href=\"http://localhost:63891/test/SendMessageToAll\"><span style=\"text-decoration: underline;\">http://localhost:63891/test/</span>SendMessageToGroup1</a>，调用SendMessageToMyGroup方法，此时前三个页面显示00000000-0000-0000-0000-000000000000 says SendMessageToGroup1<span style=\"font-family: 宋体;\">，这个是发给组</span>1</p>\n<p>&nbsp;<img src=\"/cnblogs/11175665/789895-20190712135246919-1887689710.png\" alt=\"\" width=\"1087\" height=\"657\" /></p>\n<p>&nbsp;</p>\n<p>将此标签页输入<a href=\"http://localhost:63891/test/SendMessageToAll\"><span style=\"text-decoration: underline;\">http://localhost:63891/test/</span>SendMessageToGroup1and2</a>，调用SendMessageToMyGroup方法，此时前四个页面显示00000000-0000-0000-0000-000000000000 says SendMessageToGroup1<span style=\"font-family: 宋体;\">，这个是发给组</span>1和组2</p>\n<p>&nbsp;<img src=\"/cnblogs/11175665/789895-20190712135307144-1229518040.png\" alt=\"\" width=\"1078\" height=\"658\" /></p>","source":"_posts/cnblogs/11175665.md","raw":"---\ntitle: NetCore.SignalR.Demo演示\ndate: 2019-07-12T13:54:00\nauthor: 不辍\ntags: []\n---\n<p>项目github，点击<a title=\"NetCore.SignalR.Demo\" href=\"https://github.com/wangpengzong/NetCore.SignalR.Demo\" target=\"_blank\">https://github.com/wangpengzong/NetCore.SignalR.Demo</a></p>\n<p>&nbsp;</p>\n<p>1.打开服务端Server（\\SignalR.Server\\bin\\Debug\\netcoreapp2.2\\win10-x64\\SignalR.Server.exe）</p>\n<p>&nbsp;</p>\n<p>2.打开客户端，开5个标签页，分别是</p>\n<p><span style=\"font-family: 宋体;\">两个</span>http://localhost:63891/test/index&nbsp; &nbsp; &nbsp;groupid：1，用户1，identifier = \"00000000-0000-0000-0000-000000000000\"</p>\n<p><span style=\"font-family: 宋体;\">一个</span>http://localhost:63891/test/index1&nbsp;&nbsp;&nbsp;groupid：1，用户2，identifier = \"11111111-1111-1111-1111-111111111111\"</p>\n<p><span style=\"font-family: 宋体;\">一个</span>http://localhost:63891/test/index2&nbsp;&nbsp;&nbsp;groupid：2，用户3，identifier = \"33333333-3333-3333-3333-333333333333\"</p>\n<p><span style=\"font-family: 宋体;\">一个</span>http://localhost:63891/test/index3&nbsp;&nbsp;&nbsp;groupid：3，用户4，identifier = \"44444444-4444-4444-4444-444444444444\"</p>\n<p>&nbsp;<img src=\"/cnblogs/11175665/789895-20190712135006227-2107371641.png\" alt=\"\" width=\"965\" height=\"573\" /></p>\n<p>&nbsp;</p>\n<p>Javascript调用：</p>\n<p><span style=\"font-family: 宋体;\">在</span>test/index中的user框，输入00000000-0000-0000-0000-000000000000<span style=\"font-family: 宋体;\">，</span>message输入hi，点击sendmessage，就可以在全部的标签页看到以上页面，此时调用的是</p>\n<p>document.getElementById(\"sendButton\").addEventListener(\"click\", event =&gt; {</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const user = document.getElementById(\"userInput\").value;</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const message = document.getElementById(\"messageInput\").value;</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;connection.invoke(\"SendMessageToAll\", { From: user, Content: message }).catch(err =&gt; console.error(err.toString()));</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event.preventDefault();</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}); &nbsp;&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>.net 客户端调用</p>\n<p>再打开一个标签页，输入<a href=\"http://localhost:63891/test/SendMessageToAll\"><span style=\"text-decoration: underline;\">http://localhost:63891/test/SendMessageToAll</span></a></p>\n<p>&nbsp;<img src=\"/cnblogs/11175665/789895-20190712135205933-637885315.png\" alt=\"\" width=\"1109\" height=\"663\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>这个和上面的say hi都是调用SendMessageToAll方法，发送给所有人</p>\n<p>&nbsp;</p>\n<p>将此标签页输入<a href=\"http://localhost:63891/test/SendMessageToAll\"><span style=\"text-decoration: underline;\">http://localhost:63891/test/</span>SendMessageToUser</a>，调用SendMessageToUser方法，此时前两个页面显示00000000-0000-0000-0000-000000000000 says SendMessageTo1<span style=\"font-family: 宋体;\">，这个是发给用户</span>1</p>\n<p>&nbsp;<img src=\"/cnblogs/11175665/789895-20190712135227098-2050240776.png\" alt=\"\" width=\"1096\" height=\"666\" /></p>\n<p>&nbsp;</p>\n<p>将此标签页输入<a href=\"http://localhost:63891/test/SendMessageToAll\"><span style=\"text-decoration: underline;\">http://localhost:63891/test/</span>SendMessageToGroup1</a>，调用SendMessageToMyGroup方法，此时前三个页面显示00000000-0000-0000-0000-000000000000 says SendMessageToGroup1<span style=\"font-family: 宋体;\">，这个是发给组</span>1</p>\n<p>&nbsp;<img src=\"/cnblogs/11175665/789895-20190712135246919-1887689710.png\" alt=\"\" width=\"1087\" height=\"657\" /></p>\n<p>&nbsp;</p>\n<p>将此标签页输入<a href=\"http://localhost:63891/test/SendMessageToAll\"><span style=\"text-decoration: underline;\">http://localhost:63891/test/</span>SendMessageToGroup1and2</a>，调用SendMessageToMyGroup方法，此时前四个页面显示00000000-0000-0000-0000-000000000000 says SendMessageToGroup1<span style=\"font-family: 宋体;\">，这个是发给组</span>1和组2</p>\n<p>&nbsp;<img src=\"/cnblogs/11175665/789895-20190712135307144-1229518040.png\" alt=\"\" width=\"1078\" height=\"658\" /></p>","slug":"cnblogs/11175665","published":1,"updated":"2022-07-10T13:01:24.377Z","_id":"cl5f7iyu0001wc0unf3ovg2gr","comments":1,"layout":"post","photos":[],"link":"","content":"<p>项目github，点击<a title=\"NetCore.SignalR.Demo\" href=\"https://github.com/wangpengzong/NetCore.SignalR.Demo\" target=\"_blank\">https://github.com/wangpengzong/NetCore.SignalR.Demo</a></p>\n<p>&nbsp;</p>\n<p>1.打开服务端Server（\\SignalR.Server\\bin\\Debug\\netcoreapp2.2\\win10-x64\\SignalR.Server.exe）</p>\n<p>&nbsp;</p>\n<p>2.打开客户端，开5个标签页，分别是</p>\n<p><span style=\"font-family: 宋体;\">两个</span>http://localhost:63891/test/index&nbsp; &nbsp; &nbsp;groupid：1，用户1，identifier = \"00000000-0000-0000-0000-000000000000\"</p>\n<p><span style=\"font-family: 宋体;\">一个</span>http://localhost:63891/test/index1&nbsp;&nbsp;&nbsp;groupid：1，用户2，identifier = \"11111111-1111-1111-1111-111111111111\"</p>\n<p><span style=\"font-family: 宋体;\">一个</span>http://localhost:63891/test/index2&nbsp;&nbsp;&nbsp;groupid：2，用户3，identifier = \"33333333-3333-3333-3333-333333333333\"</p>\n<p><span style=\"font-family: 宋体;\">一个</span>http://localhost:63891/test/index3&nbsp;&nbsp;&nbsp;groupid：3，用户4，identifier = \"44444444-4444-4444-4444-444444444444\"</p>\n<p>&nbsp;<img src=\"/cnblogs/11175665/789895-20190712135006227-2107371641.png\" alt=\"\" width=\"965\" height=\"573\" /></p>\n<p>&nbsp;</p>\n<p>Javascript调用：</p>\n<p><span style=\"font-family: 宋体;\">在</span>test/index中的user框，输入00000000-0000-0000-0000-000000000000<span style=\"font-family: 宋体;\">，</span>message输入hi，点击sendmessage，就可以在全部的标签页看到以上页面，此时调用的是</p>\n<p>document.getElementById(\"sendButton\").addEventListener(\"click\", event =&gt; {</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const user = document.getElementById(\"userInput\").value;</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const message = document.getElementById(\"messageInput\").value;</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;connection.invoke(\"SendMessageToAll\", { From: user, Content: message }).catch(err =&gt; console.error(err.toString()));</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event.preventDefault();</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}); &nbsp;&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>.net 客户端调用</p>\n<p>再打开一个标签页，输入<a href=\"http://localhost:63891/test/SendMessageToAll\"><span style=\"text-decoration: underline;\">http://localhost:63891/test/SendMessageToAll</span></a></p>\n<p>&nbsp;<img src=\"/cnblogs/11175665/789895-20190712135205933-637885315.png\" alt=\"\" width=\"1109\" height=\"663\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>这个和上面的say hi都是调用SendMessageToAll方法，发送给所有人</p>\n<p>&nbsp;</p>\n<p>将此标签页输入<a href=\"http://localhost:63891/test/SendMessageToAll\"><span style=\"text-decoration: underline;\">http://localhost:63891/test/</span>SendMessageToUser</a>，调用SendMessageToUser方法，此时前两个页面显示00000000-0000-0000-0000-000000000000 says SendMessageTo1<span style=\"font-family: 宋体;\">，这个是发给用户</span>1</p>\n<p>&nbsp;<img src=\"/cnblogs/11175665/789895-20190712135227098-2050240776.png\" alt=\"\" width=\"1096\" height=\"666\" /></p>\n<p>&nbsp;</p>\n<p>将此标签页输入<a href=\"http://localhost:63891/test/SendMessageToAll\"><span style=\"text-decoration: underline;\">http://localhost:63891/test/</span>SendMessageToGroup1</a>，调用SendMessageToMyGroup方法，此时前三个页面显示00000000-0000-0000-0000-000000000000 says SendMessageToGroup1<span style=\"font-family: 宋体;\">，这个是发给组</span>1</p>\n<p>&nbsp;<img src=\"/cnblogs/11175665/789895-20190712135246919-1887689710.png\" alt=\"\" width=\"1087\" height=\"657\" /></p>\n<p>&nbsp;</p>\n<p>将此标签页输入<a href=\"http://localhost:63891/test/SendMessageToAll\"><span style=\"text-decoration: underline;\">http://localhost:63891/test/</span>SendMessageToGroup1and2</a>，调用SendMessageToMyGroup方法，此时前四个页面显示00000000-0000-0000-0000-000000000000 says SendMessageToGroup1<span style=\"font-family: 宋体;\">，这个是发给组</span>1和组2</p>\n<p>&nbsp;<img src=\"/cnblogs/11175665/789895-20190712135307144-1229518040.png\" alt=\"\" width=\"1078\" height=\"658\" /></p>","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"spatxos","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/spatxos","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"<p>项目github，点击<a title=\"NetCore.SignalR.Demo\" href=\"https://github.com/wangpengzong/NetCore.SignalR.Demo\" target=\"_blank\">https://github.com/wangpengzong/NetCore.SignalR.Demo</a></p>\n<p>&nbsp;</p>\n<p>1.打开服务端Server（\\SignalR.Server\\bin\\Debug\\netcoreapp2.2\\win10-x64\\SignalR.Server.exe）</p>\n<p>&nbsp;</p>\n<p>2.打开客户端，开5个标签页，分别是</p>\n<p><span style=\"font-family: 宋体;\">两个</span>http://localhost:63891/test/index&nbsp; &nbsp; &nbsp;groupid：1，用户1，identifier = \"00000000-0000-0000-0000-000000000000\"</p>\n<p><span style=\"font-family: 宋体;\">一个</span>http://localhost:63891/test/index1&nbsp;&nbsp;&nbsp;groupid：1，用户2，identifier = \"11111111-1111-1111-1111-111111111111\"</p>\n<p><span style=\"font-family: 宋体;\">一个</span>http://localhost:63891/test/index2&nbsp;&nbsp;&nbsp;groupid：2，用户3，identifier = \"33333333-3333-3333-3333-333333333333\"</p>\n<p><span style=\"font-family: 宋体;\">一个</span>http://localhost:63891/test/index3&nbsp;&nbsp;&nbsp;groupid：3，用户4，identifier = \"44444444-4444-4444-4444-444444444444\"</p>\n<p>&nbsp;<img src=\"/cnblogs/11175665/789895-20190712135006227-2107371641.png\" alt=\"\" width=\"965\" height=\"573\" /></p>\n<p>&nbsp;</p>\n<p>Javascript调用：</p>\n<p><span style=\"font-family: 宋体;\">在</span>test/index中的user框，输入00000000-0000-0000-0000-000000000000<span style=\"font-family: 宋体;\">，</span>message输入hi，点击sendmessage，就可以在全部的标签页看到以上页面，此时调用的是</p>\n<p>document.getElementById(\"sendButton\").addEventListener(\"click\", event =&gt; {</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const user = document.getElementById(\"userInput\").value;</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;const message = document.getElementById(\"messageInput\").value;</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;connection.invoke(\"SendMessageToAll\", { From: user, Content: message }).catch(err =&gt; console.error(err.toString()));</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;event.preventDefault();</p>\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}); &nbsp;&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>.net 客户端调用</p>\n<p>再打开一个标签页，输入<a href=\"http://localhost:63891/test/SendMessageToAll\"><span style=\"text-decoration: underline;\">http://localhost:63891/test/SendMessageToAll</span></a></p>\n<p>&nbsp;<img src=\"/cnblogs/11175665/789895-20190712135205933-637885315.png\" alt=\"\" width=\"1109\" height=\"663\" /></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>这个和上面的say hi都是调用SendMessageToAll方法，发送给所有人</p>\n<p>&nbsp;</p>\n<p>将此标签页输入<a href=\"http://localhost:63891/test/SendMessageToAll\"><span style=\"text-decoration: underline;\">http://localhost:63891/test/</span>SendMessageToUser</a>，调用SendMessageToUser方法，此时前两个页面显示00000000-0000-0000-0000-000000000000 says SendMessageTo1<span style=\"font-family: 宋体;\">，这个是发给用户</span>1</p>\n<p>&nbsp;<img src=\"/cnblogs/11175665/789895-20190712135227098-2050240776.png\" alt=\"\" width=\"1096\" height=\"666\" /></p>\n<p>&nbsp;</p>\n<p>将此标签页输入<a href=\"http://localhost:63891/test/SendMessageToAll\"><span style=\"text-decoration: underline;\">http://localhost:63891/test/</span>SendMessageToGroup1</a>，调用SendMessageToMyGroup方法，此时前三个页面显示00000000-0000-0000-0000-000000000000 says SendMessageToGroup1<span style=\"font-family: 宋体;\">，这个是发给组</span>1</p>\n<p>&nbsp;<img src=\"/cnblogs/11175665/789895-20190712135246919-1887689710.png\" alt=\"\" width=\"1087\" height=\"657\" /></p>\n<p>&nbsp;</p>\n<p>将此标签页输入<a href=\"http://localhost:63891/test/SendMessageToAll\"><span style=\"text-decoration: underline;\">http://localhost:63891/test/</span>SendMessageToGroup1and2</a>，调用SendMessageToMyGroup方法，此时前四个页面显示00000000-0000-0000-0000-000000000000 says SendMessageToGroup1<span style=\"font-family: 宋体;\">，这个是发给组</span>1和组2</p>\n<p>&nbsp;<img src=\"/cnblogs/11175665/789895-20190712135307144-1229518040.png\" alt=\"\" width=\"1078\" height=\"658\" /></p>"},{"title":"html标签从.net framework转移到.net standard(.net core 2.2)时遇到的坑及填坑","date":"2019-06-28T08:43:00.000Z","author":"不辍","_content":"<p>在原来的.net framework mvc中html的标签可以使用下面的方法</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #008080;\"> 1</span> &lt;<span style=\"color: #0000ff;\">select</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span> id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">categoryinfoid</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">categoryinfoid</span><span style=\"color: #800000;\">\"</span>&gt;\n<span style=\"color: #008080;\"> 2</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">0</span><span style=\"color: #800000;\">\"</span>&gt;选择&lt;/option&gt;\n<span style=\"color: #008080;\"> 3</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">22</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">22</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;内双&lt;/option&gt;\n<span style=\"color: #008080;\"> 4</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">23</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">23</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;内三&lt;/option&gt;\n<span style=\"color: #008080;\"> 5</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">24</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">24</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;内四&lt;/option&gt;\n<span style=\"color: #008080;\"> 6</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">32</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">32</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;海双&lt;/option&gt;\n<span style=\"color: #008080;\"> 7</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">33</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">33</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;海三&lt;/option&gt;\n<span style=\"color: #008080;\"> 8</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">34</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">34</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;海四&lt;/option&gt;\n<span style=\"color: #008080;\"> 9</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">42</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">42</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;阳双&lt;/option&gt;\n<span style=\"color: #008080;\">10</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">43</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">43</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;阳三&lt;/option&gt;\n<span style=\"color: #008080;\">11</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">44</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">44</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;阳四&lt;/option&gt;\n<span style=\"color: #008080;\">12</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">52</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">52</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;套双&lt;/option&gt;\n<span style=\"color: #008080;\">13</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">53</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">53</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;套三&lt;/option&gt;\n<span style=\"color: #008080;\">14</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">54</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">54</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;套四&lt;/option&gt;\n<span style=\"color: #008080;\">15</span>                                 &lt;/<span style=\"color: #0000ff;\">select</span>&gt;</pre>\n</div>\n<p>此时html标签里面属性与值的对应要求不是很高，但是在.net core 2.2中，html标签里面属性与值的必须要对应要求，上面得这种情况会报错</p>\n<div class=\"cnblogs_code\">\n<pre>The tag helper <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">option</span><span style=\"color: #800000;\">'</span> must not have C# <span style=\"color: #0000ff;\">in</span> the element<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">s attribute declaration area.</span></pre>\n</div>\n<p>标记帮助器\"选项\"在元素的属性声明区域中不得包含 C# 语句。</p>\n<p>编辑器会认为，@(&ldquo;...&rdquo;)不是一个属性。</p>\n<p>解决办法很奇特，看代码：</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #008080;\"> 1</span> &lt;<span style=\"color: #0000ff;\">select</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span> id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">categoryinfoid</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">categoryinfoid</span><span style=\"color: #800000;\">\"</span>&gt;\n<span style=\"color: #008080;\"> 2</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">0</span><span style=\"color: #800000;\">\"</span>&gt;选择&lt;/option&gt;\n<span style=\"color: #008080;\"> 3</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">22</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">22</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;内双&lt;/!option&gt;\n<span style=\"color: #008080;\"> 4</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">23</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">23</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;内三&lt;/!option&gt;\n<span style=\"color: #008080;\"> 5</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">24</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">24</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;内四&lt;/!option&gt;\n<span style=\"color: #008080;\"> 6</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">32</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">32</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;海双&lt;/!option&gt;\n<span style=\"color: #008080;\"> 7</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">33</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">33</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;海三&lt;/!option&gt;\n<span style=\"color: #008080;\"> 8</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">34</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">34</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;海四&lt;/!option&gt;\n<span style=\"color: #008080;\"> 9</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">42</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">42</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;阳双&lt;/!option&gt;\n<span style=\"color: #008080;\">10</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">43</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">43</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;阳三&lt;/!option&gt;\n<span style=\"color: #008080;\">11</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">44</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">44</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;阳四&lt;/!option&gt;\n<span style=\"color: #008080;\">12</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">52</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">52</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;套双&lt;/!option&gt;\n<span style=\"color: #008080;\">13</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">53</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">53</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;套三&lt;/!option&gt;\n<span style=\"color: #008080;\">14</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">54</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">54</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;套四&lt;/!option&gt;\n<span style=\"color: #008080;\">15</span>                                 &lt;/<span style=\"color: #0000ff;\">select</span>&gt;</pre>\n</div>\n<p>每个要使用@(&ldquo;...&rdquo;)的标签前面加一个&ldquo;!&rdquo;号就OK了，不明觉厉</p>","source":"_posts/cnblogs/11103547.md","raw":"---\ntitle: html标签从.net framework转移到.net standard(.net core 2.2)时遇到的坑及填坑\ndate: 2019-06-28T16:43:00\nauthor: 不辍\ntags: [\".Net Core 2.2\",\"html\"]\n---\n<p>在原来的.net framework mvc中html的标签可以使用下面的方法</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #008080;\"> 1</span> &lt;<span style=\"color: #0000ff;\">select</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span> id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">categoryinfoid</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">categoryinfoid</span><span style=\"color: #800000;\">\"</span>&gt;\n<span style=\"color: #008080;\"> 2</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">0</span><span style=\"color: #800000;\">\"</span>&gt;选择&lt;/option&gt;\n<span style=\"color: #008080;\"> 3</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">22</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">22</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;内双&lt;/option&gt;\n<span style=\"color: #008080;\"> 4</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">23</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">23</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;内三&lt;/option&gt;\n<span style=\"color: #008080;\"> 5</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">24</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">24</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;内四&lt;/option&gt;\n<span style=\"color: #008080;\"> 6</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">32</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">32</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;海双&lt;/option&gt;\n<span style=\"color: #008080;\"> 7</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">33</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">33</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;海三&lt;/option&gt;\n<span style=\"color: #008080;\"> 8</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">34</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">34</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;海四&lt;/option&gt;\n<span style=\"color: #008080;\"> 9</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">42</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">42</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;阳双&lt;/option&gt;\n<span style=\"color: #008080;\">10</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">43</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">43</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;阳三&lt;/option&gt;\n<span style=\"color: #008080;\">11</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">44</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">44</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;阳四&lt;/option&gt;\n<span style=\"color: #008080;\">12</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">52</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">52</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;套双&lt;/option&gt;\n<span style=\"color: #008080;\">13</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">53</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">53</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;套三&lt;/option&gt;\n<span style=\"color: #008080;\">14</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">54</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">54</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;套四&lt;/option&gt;\n<span style=\"color: #008080;\">15</span>                                 &lt;/<span style=\"color: #0000ff;\">select</span>&gt;</pre>\n</div>\n<p>此时html标签里面属性与值的对应要求不是很高，但是在.net core 2.2中，html标签里面属性与值的必须要对应要求，上面得这种情况会报错</p>\n<div class=\"cnblogs_code\">\n<pre>The tag helper <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">option</span><span style=\"color: #800000;\">'</span> must not have C# <span style=\"color: #0000ff;\">in</span> the element<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">s attribute declaration area.</span></pre>\n</div>\n<p>标记帮助器\"选项\"在元素的属性声明区域中不得包含 C# 语句。</p>\n<p>编辑器会认为，@(&ldquo;...&rdquo;)不是一个属性。</p>\n<p>解决办法很奇特，看代码：</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #008080;\"> 1</span> &lt;<span style=\"color: #0000ff;\">select</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span> id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">categoryinfoid</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">categoryinfoid</span><span style=\"color: #800000;\">\"</span>&gt;\n<span style=\"color: #008080;\"> 2</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">0</span><span style=\"color: #800000;\">\"</span>&gt;选择&lt;/option&gt;\n<span style=\"color: #008080;\"> 3</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">22</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">22</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;内双&lt;/!option&gt;\n<span style=\"color: #008080;\"> 4</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">23</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">23</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;内三&lt;/!option&gt;\n<span style=\"color: #008080;\"> 5</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">24</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">24</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;内四&lt;/!option&gt;\n<span style=\"color: #008080;\"> 6</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">32</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">32</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;海双&lt;/!option&gt;\n<span style=\"color: #008080;\"> 7</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">33</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">33</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;海三&lt;/!option&gt;\n<span style=\"color: #008080;\"> 8</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">34</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">34</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;海四&lt;/!option&gt;\n<span style=\"color: #008080;\"> 9</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">42</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">42</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;阳双&lt;/!option&gt;\n<span style=\"color: #008080;\">10</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">43</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">43</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;阳三&lt;/!option&gt;\n<span style=\"color: #008080;\">11</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">44</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">44</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;阳四&lt;/!option&gt;\n<span style=\"color: #008080;\">12</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">52</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">52</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;套双&lt;/!option&gt;\n<span style=\"color: #008080;\">13</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">53</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">53</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;套三&lt;/!option&gt;\n<span style=\"color: #008080;\">14</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">54</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">54</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;套四&lt;/!option&gt;\n<span style=\"color: #008080;\">15</span>                                 &lt;/<span style=\"color: #0000ff;\">select</span>&gt;</pre>\n</div>\n<p>每个要使用@(&ldquo;...&rdquo;)的标签前面加一个&ldquo;!&rdquo;号就OK了，不明觉厉</p>","slug":"cnblogs/11103547","published":1,"updated":"2022-07-10T13:01:24.467Z","_id":"cl5f7iyu4001xc0unehubgwl5","comments":1,"layout":"post","photos":[],"link":"","content":"<p>在原来的.net framework mvc中html的标签可以使用下面的方法</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #008080;\"> 1</span> &lt;<span style=\"color: #0000ff;\">select</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span> id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">categoryinfoid</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">categoryinfoid</span><span style=\"color: #800000;\">\"</span>&gt;\n<span style=\"color: #008080;\"> 2</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">0</span><span style=\"color: #800000;\">\"</span>&gt;选择&lt;/option&gt;\n<span style=\"color: #008080;\"> 3</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">22</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">22</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;内双&lt;/option&gt;\n<span style=\"color: #008080;\"> 4</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">23</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">23</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;内三&lt;/option&gt;\n<span style=\"color: #008080;\"> 5</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">24</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">24</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;内四&lt;/option&gt;\n<span style=\"color: #008080;\"> 6</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">32</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">32</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;海双&lt;/option&gt;\n<span style=\"color: #008080;\"> 7</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">33</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">33</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;海三&lt;/option&gt;\n<span style=\"color: #008080;\"> 8</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">34</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">34</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;海四&lt;/option&gt;\n<span style=\"color: #008080;\"> 9</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">42</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">42</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;阳双&lt;/option&gt;\n<span style=\"color: #008080;\">10</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">43</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">43</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;阳三&lt;/option&gt;\n<span style=\"color: #008080;\">11</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">44</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">44</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;阳四&lt;/option&gt;\n<span style=\"color: #008080;\">12</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">52</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">52</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;套双&lt;/option&gt;\n<span style=\"color: #008080;\">13</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">53</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">53</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;套三&lt;/option&gt;\n<span style=\"color: #008080;\">14</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">54</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">54</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;套四&lt;/option&gt;\n<span style=\"color: #008080;\">15</span>                                 &lt;/<span style=\"color: #0000ff;\">select</span>&gt;</pre>\n</div>\n<p>此时html标签里面属性与值的对应要求不是很高，但是在.net core 2.2中，html标签里面属性与值的必须要对应要求，上面得这种情况会报错</p>\n<div class=\"cnblogs_code\">\n<pre>The tag helper <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">option</span><span style=\"color: #800000;\">'</span> must not have C# <span style=\"color: #0000ff;\">in</span> the element<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">s attribute declaration area.</span></pre>\n</div>\n<p>标记帮助器\"选项\"在元素的属性声明区域中不得包含 C# 语句。</p>\n<p>编辑器会认为，@(&ldquo;...&rdquo;)不是一个属性。</p>\n<p>解决办法很奇特，看代码：</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #008080;\"> 1</span> &lt;<span style=\"color: #0000ff;\">select</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span> id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">categoryinfoid</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">categoryinfoid</span><span style=\"color: #800000;\">\"</span>&gt;\n<span style=\"color: #008080;\"> 2</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">0</span><span style=\"color: #800000;\">\"</span>&gt;选择&lt;/option&gt;\n<span style=\"color: #008080;\"> 3</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">22</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">22</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;内双&lt;/!option&gt;\n<span style=\"color: #008080;\"> 4</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">23</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">23</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;内三&lt;/!option&gt;\n<span style=\"color: #008080;\"> 5</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">24</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">24</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;内四&lt;/!option&gt;\n<span style=\"color: #008080;\"> 6</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">32</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">32</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;海双&lt;/!option&gt;\n<span style=\"color: #008080;\"> 7</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">33</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">33</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;海三&lt;/!option&gt;\n<span style=\"color: #008080;\"> 8</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">34</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">34</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;海四&lt;/!option&gt;\n<span style=\"color: #008080;\"> 9</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">42</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">42</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;阳双&lt;/!option&gt;\n<span style=\"color: #008080;\">10</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">43</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">43</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;阳三&lt;/!option&gt;\n<span style=\"color: #008080;\">11</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">44</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">44</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;阳四&lt;/!option&gt;\n<span style=\"color: #008080;\">12</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">52</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">52</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;套双&lt;/!option&gt;\n<span style=\"color: #008080;\">13</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">53</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">53</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;套三&lt;/!option&gt;\n<span style=\"color: #008080;\">14</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">54</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">54</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;套四&lt;/!option&gt;\n<span style=\"color: #008080;\">15</span>                                 &lt;/<span style=\"color: #0000ff;\">select</span>&gt;</pre>\n</div>\n<p>每个要使用@(&ldquo;...&rdquo;)的标签前面加一个&ldquo;!&rdquo;号就OK了，不明觉厉</p>","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"spatxos","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/spatxos","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"<p>在原来的.net framework mvc中html的标签可以使用下面的方法</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #008080;\"> 1</span> &lt;<span style=\"color: #0000ff;\">select</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span> id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">categoryinfoid</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">categoryinfoid</span><span style=\"color: #800000;\">\"</span>&gt;\n<span style=\"color: #008080;\"> 2</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">0</span><span style=\"color: #800000;\">\"</span>&gt;选择&lt;/option&gt;\n<span style=\"color: #008080;\"> 3</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">22</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">22</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;内双&lt;/option&gt;\n<span style=\"color: #008080;\"> 4</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">23</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">23</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;内三&lt;/option&gt;\n<span style=\"color: #008080;\"> 5</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">24</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">24</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;内四&lt;/option&gt;\n<span style=\"color: #008080;\"> 6</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">32</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">32</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;海双&lt;/option&gt;\n<span style=\"color: #008080;\"> 7</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">33</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">33</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;海三&lt;/option&gt;\n<span style=\"color: #008080;\"> 8</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">34</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">34</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;海四&lt;/option&gt;\n<span style=\"color: #008080;\"> 9</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">42</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">42</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;阳双&lt;/option&gt;\n<span style=\"color: #008080;\">10</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">43</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">43</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;阳三&lt;/option&gt;\n<span style=\"color: #008080;\">11</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">44</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">44</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;阳四&lt;/option&gt;\n<span style=\"color: #008080;\">12</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">52</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">52</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;套双&lt;/option&gt;\n<span style=\"color: #008080;\">13</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">53</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">53</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;套三&lt;/option&gt;\n<span style=\"color: #008080;\">14</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">54</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid == <span style=\"color: #800080;\">54</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span>)&gt;套四&lt;/option&gt;\n<span style=\"color: #008080;\">15</span>                                 &lt;/<span style=\"color: #0000ff;\">select</span>&gt;</pre>\n</div>\n<p>此时html标签里面属性与值的对应要求不是很高，但是在.net core 2.2中，html标签里面属性与值的必须要对应要求，上面得这种情况会报错</p>\n<div class=\"cnblogs_code\">\n<pre>The tag helper <span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">option</span><span style=\"color: #800000;\">'</span> must not have C# <span style=\"color: #0000ff;\">in</span> the element<span style=\"color: #800000;\">'</span><span style=\"color: #800000;\">s attribute declaration area.</span></pre>\n</div>\n<p>标记帮助器\"选项\"在元素的属性声明区域中不得包含 C# 语句。</p>\n<p>编辑器会认为，@(&ldquo;...&rdquo;)不是一个属性。</p>\n<p>解决办法很奇特，看代码：</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #008080;\"> 1</span> &lt;<span style=\"color: #0000ff;\">select</span> <span style=\"color: #0000ff;\">class</span>=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">form-control</span><span style=\"color: #800000;\">\"</span> id=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">categoryinfoid</span><span style=\"color: #800000;\">\"</span> name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">categoryinfoid</span><span style=\"color: #800000;\">\"</span>&gt;\n<span style=\"color: #008080;\"> 2</span>                                     &lt;option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">0</span><span style=\"color: #800000;\">\"</span>&gt;选择&lt;/option&gt;\n<span style=\"color: #008080;\"> 3</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">22</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">22</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;内双&lt;/!option&gt;\n<span style=\"color: #008080;\"> 4</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">23</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">23</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;内三&lt;/!option&gt;\n<span style=\"color: #008080;\"> 5</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">24</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">24</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;内四&lt;/!option&gt;\n<span style=\"color: #008080;\"> 6</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">32</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">32</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;海双&lt;/!option&gt;\n<span style=\"color: #008080;\"> 7</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">33</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">33</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;海三&lt;/!option&gt;\n<span style=\"color: #008080;\"> 8</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">34</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">34</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;海四&lt;/!option&gt;\n<span style=\"color: #008080;\"> 9</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">42</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">42</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;阳双&lt;/!option&gt;\n<span style=\"color: #008080;\">10</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">43</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">43</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;阳三&lt;/!option&gt;\n<span style=\"color: #008080;\">11</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">44</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">44</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;阳四&lt;/!option&gt;\n<span style=\"color: #008080;\">12</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">52</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">52</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;套双&lt;/!option&gt;\n<span style=\"color: #008080;\">13</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">53</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">53</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;套三&lt;/!option&gt;\n<span style=\"color: #008080;\">14</span>                                     &lt;!option value=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">54</span><span style=\"color: #800000;\">\"</span> @(categoryinfoid==<span style=\"color: #800080;\">54</span> ? <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">selected=selected</span><span style=\"color: #800000;\">\"</span> : <span style=\"color: #800000;\">\"\"</span> )&gt;套四&lt;/!option&gt;\n<span style=\"color: #008080;\">15</span>                                 &lt;/<span style=\"color: #0000ff;\">select</span>&gt;</pre>\n</div>\n<p>每个要使用@(&ldquo;...&rdquo;)的标签前面加一个&ldquo;!&rdquo;号就OK了，不明觉厉</p>"},{"title":"MVC5项目转.Net Core 2.2学习与填坑记录（1）","date":"2019-06-28T07:08:00.000Z","author":"不辍","_content":"<p>流程都是自己摸索，错误地方随便指正。。。</p>\n<p>老项目过于臃肿，并且所有请求都是提交到一个api中，这样当api挂掉的时候，基本所有的项目都瘫痪掉了。</p>\n<p>在4月底的时候，下决心将项目用微服务进行重写，刚开始的时候，希望能找到.net framework的微服务解决方案，最后发现，一个都没有。。。并且一个人开发，重写的时间很难控制，决定用.Net Core来进行基础的重写，重点代码迁移过来，这样可以节省一点时间。</p>\n<p>新项目使用了Ocelot来做apigateway，进行api转发，IdentityServer4进行认证。</p>\n<p>ORM老项目使用的是NHiberante，但是总感觉NHiberante过于臃肿，新项目开发的时候，找到了一个新的ORM sqlsugar，但是sqlsugar的语法和NHiberante的语法差别很大，对于项目迁移来说工程量太大，所以暂时还是用的NHiberante，等闲下来的时候再重写下sqlsugar，将语法尽量同步后再用sqlsugar替换掉。</p>\n<p>&nbsp;1.<span style=\"color: #ff0000;\"><a title=\"NHiberante从.net framework转移到.net standard(.net core 2.2)时遇到的坑及填坑\" href=\"https://www.cnblogs.com/wangpengzong/p/11103355.html\" target=\"_blank\"><span style=\"color: #ff0000;\">NHiberante从.net&nbsp;framework转移到.net standard时遇到的坑</span></a></span></p>\n<p>&nbsp;2.<span style=\"color: #ff0000;\"><a id=\"cb_post_title_url\" class=\"postTitle2\" title=\"html标签从.net framework转移到.net standard(.net core 2.2)时遇到的坑及填坑\" href=\"https://www.cnblogs.com/wangpengzong/p/11103547.html\"><span style=\"color: #ff0000;\">html标签从.net framework转移到.net standard(.net core 2.2)时遇到的坑及填坑</span></a></span></p>\n<p>&nbsp;3.<span style=\"color: #ff0000;\"><a title=\"SignalR从.net framework转移到.net standard(.net core 2.2)\" href=\"https://www.cnblogs.com/wangpengzong/p/11175665.html\" target=\"_blank\"><span style=\"color: #ff0000;\">SignalR从.net framework转移到.net standard(.net core 2.2)</span></a></span></p>\n<p><span style=\"color: #ff0000;\"><span style=\"color: #ff0000;\">&nbsp;<span style=\"color: #000000;\">4.<span style=\"color: #ff0000;\"><a href=\"https://github.com/dotnet/aspnetcore/issues/17003\" target=\"_blank\"><span style=\"color: #ff0000;\">System.Text.Encoding.Default.GetBytes()从.net framework转移到.net standard遇到的转码结果不同问题</span></a></span></span></span></span></p>\n<p>&nbsp;</p>","source":"_posts/cnblogs/11102764.md","raw":"---\ntitle: MVC5项目转.Net Core 2.2学习与填坑记录（1）\ndate: 2019-06-28T15:08:00\nauthor: 不辍\ntags: [\".Net Core 2.2\"]\n---\n<p>流程都是自己摸索，错误地方随便指正。。。</p>\n<p>老项目过于臃肿，并且所有请求都是提交到一个api中，这样当api挂掉的时候，基本所有的项目都瘫痪掉了。</p>\n<p>在4月底的时候，下决心将项目用微服务进行重写，刚开始的时候，希望能找到.net framework的微服务解决方案，最后发现，一个都没有。。。并且一个人开发，重写的时间很难控制，决定用.Net Core来进行基础的重写，重点代码迁移过来，这样可以节省一点时间。</p>\n<p>新项目使用了Ocelot来做apigateway，进行api转发，IdentityServer4进行认证。</p>\n<p>ORM老项目使用的是NHiberante，但是总感觉NHiberante过于臃肿，新项目开发的时候，找到了一个新的ORM sqlsugar，但是sqlsugar的语法和NHiberante的语法差别很大，对于项目迁移来说工程量太大，所以暂时还是用的NHiberante，等闲下来的时候再重写下sqlsugar，将语法尽量同步后再用sqlsugar替换掉。</p>\n<p>&nbsp;1.<span style=\"color: #ff0000;\"><a title=\"NHiberante从.net framework转移到.net standard(.net core 2.2)时遇到的坑及填坑\" href=\"https://www.cnblogs.com/wangpengzong/p/11103355.html\" target=\"_blank\"><span style=\"color: #ff0000;\">NHiberante从.net&nbsp;framework转移到.net standard时遇到的坑</span></a></span></p>\n<p>&nbsp;2.<span style=\"color: #ff0000;\"><a id=\"cb_post_title_url\" class=\"postTitle2\" title=\"html标签从.net framework转移到.net standard(.net core 2.2)时遇到的坑及填坑\" href=\"https://www.cnblogs.com/wangpengzong/p/11103547.html\"><span style=\"color: #ff0000;\">html标签从.net framework转移到.net standard(.net core 2.2)时遇到的坑及填坑</span></a></span></p>\n<p>&nbsp;3.<span style=\"color: #ff0000;\"><a title=\"SignalR从.net framework转移到.net standard(.net core 2.2)\" href=\"https://www.cnblogs.com/wangpengzong/p/11175665.html\" target=\"_blank\"><span style=\"color: #ff0000;\">SignalR从.net framework转移到.net standard(.net core 2.2)</span></a></span></p>\n<p><span style=\"color: #ff0000;\"><span style=\"color: #ff0000;\">&nbsp;<span style=\"color: #000000;\">4.<span style=\"color: #ff0000;\"><a href=\"https://github.com/dotnet/aspnetcore/issues/17003\" target=\"_blank\"><span style=\"color: #ff0000;\">System.Text.Encoding.Default.GetBytes()从.net framework转移到.net standard遇到的转码结果不同问题</span></a></span></span></span></span></p>\n<p>&nbsp;</p>","slug":"cnblogs/11102764","published":1,"updated":"2022-07-10T13:01:24.907Z","_id":"cl5f7iz9k0021c0un0uakhq9f","comments":1,"layout":"post","photos":[],"link":"","content":"<p>流程都是自己摸索，错误地方随便指正。。。</p>\n<p>老项目过于臃肿，并且所有请求都是提交到一个api中，这样当api挂掉的时候，基本所有的项目都瘫痪掉了。</p>\n<p>在4月底的时候，下决心将项目用微服务进行重写，刚开始的时候，希望能找到.net framework的微服务解决方案，最后发现，一个都没有。。。并且一个人开发，重写的时间很难控制，决定用.Net Core来进行基础的重写，重点代码迁移过来，这样可以节省一点时间。</p>\n<p>新项目使用了Ocelot来做apigateway，进行api转发，IdentityServer4进行认证。</p>\n<p>ORM老项目使用的是NHiberante，但是总感觉NHiberante过于臃肿，新项目开发的时候，找到了一个新的ORM sqlsugar，但是sqlsugar的语法和NHiberante的语法差别很大，对于项目迁移来说工程量太大，所以暂时还是用的NHiberante，等闲下来的时候再重写下sqlsugar，将语法尽量同步后再用sqlsugar替换掉。</p>\n<p>&nbsp;1.<span style=\"color: #ff0000;\"><a title=\"NHiberante从.net framework转移到.net standard(.net core 2.2)时遇到的坑及填坑\" href=\"https://www.cnblogs.com/wangpengzong/p/11103355.html\" target=\"_blank\"><span style=\"color: #ff0000;\">NHiberante从.net&nbsp;framework转移到.net standard时遇到的坑</span></a></span></p>\n<p>&nbsp;2.<span style=\"color: #ff0000;\"><a id=\"cb_post_title_url\" class=\"postTitle2\" title=\"html标签从.net framework转移到.net standard(.net core 2.2)时遇到的坑及填坑\" href=\"https://www.cnblogs.com/wangpengzong/p/11103547.html\"><span style=\"color: #ff0000;\">html标签从.net framework转移到.net standard(.net core 2.2)时遇到的坑及填坑</span></a></span></p>\n<p>&nbsp;3.<span style=\"color: #ff0000;\"><a title=\"SignalR从.net framework转移到.net standard(.net core 2.2)\" href=\"https://www.cnblogs.com/wangpengzong/p/11175665.html\" target=\"_blank\"><span style=\"color: #ff0000;\">SignalR从.net framework转移到.net standard(.net core 2.2)</span></a></span></p>\n<p><span style=\"color: #ff0000;\"><span style=\"color: #ff0000;\">&nbsp;<span style=\"color: #000000;\">4.<span style=\"color: #ff0000;\"><a href=\"https://github.com/dotnet/aspnetcore/issues/17003\" target=\"_blank\"><span style=\"color: #ff0000;\">System.Text.Encoding.Default.GetBytes()从.net framework转移到.net standard遇到的转码结果不同问题</span></a></span></span></span></span></p>\n<p>&nbsp;</p>","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"spatxos","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/spatxos","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"<p>流程都是自己摸索，错误地方随便指正。。。</p>\n<p>老项目过于臃肿，并且所有请求都是提交到一个api中，这样当api挂掉的时候，基本所有的项目都瘫痪掉了。</p>\n<p>在4月底的时候，下决心将项目用微服务进行重写，刚开始的时候，希望能找到.net framework的微服务解决方案，最后发现，一个都没有。。。并且一个人开发，重写的时间很难控制，决定用.Net Core来进行基础的重写，重点代码迁移过来，这样可以节省一点时间。</p>\n<p>新项目使用了Ocelot来做apigateway，进行api转发，IdentityServer4进行认证。</p>\n<p>ORM老项目使用的是NHiberante，但是总感觉NHiberante过于臃肿，新项目开发的时候，找到了一个新的ORM sqlsugar，但是sqlsugar的语法和NHiberante的语法差别很大，对于项目迁移来说工程量太大，所以暂时还是用的NHiberante，等闲下来的时候再重写下sqlsugar，将语法尽量同步后再用sqlsugar替换掉。</p>\n<p>&nbsp;1.<span style=\"color: #ff0000;\"><a title=\"NHiberante从.net framework转移到.net standard(.net core 2.2)时遇到的坑及填坑\" href=\"https://www.cnblogs.com/wangpengzong/p/11103355.html\" target=\"_blank\"><span style=\"color: #ff0000;\">NHiberante从.net&nbsp;framework转移到.net standard时遇到的坑</span></a></span></p>\n<p>&nbsp;2.<span style=\"color: #ff0000;\"><a id=\"cb_post_title_url\" class=\"postTitle2\" title=\"html标签从.net framework转移到.net standard(.net core 2.2)时遇到的坑及填坑\" href=\"https://www.cnblogs.com/wangpengzong/p/11103547.html\"><span style=\"color: #ff0000;\">html标签从.net framework转移到.net standard(.net core 2.2)时遇到的坑及填坑</span></a></span></p>\n<p>&nbsp;3.<span style=\"color: #ff0000;\"><a title=\"SignalR从.net framework转移到.net standard(.net core 2.2)\" href=\"https://www.cnblogs.com/wangpengzong/p/11175665.html\" target=\"_blank\"><span style=\"color: #ff0000;\">SignalR从.net framework转移到.net standard(.net core 2.2)</span></a></span></p>\n<p><span style=\"color: #ff0000;\"><span style=\"color: #ff0000;\">&nbsp;<span style=\"color: #000000;\">4.<span style=\"color: #ff0000;\"><a href=\"https://github.com/dotnet/aspnetcore/issues/17003\" target=\"_blank\"><span style=\"color: #ff0000;\">System.Text.Encoding.Default.GetBytes()从.net framework转移到.net standard遇到的转码结果不同问题</span></a></span></span></span></span></p>\n<p>&nbsp;</p>"},{"title":"NHiberante从.net framework转移到.net standard(.net core 2.2)时遇到的坑及填坑","date":"2019-06-28T08:19:00.000Z","author":"不辍","_content":"<p><span style=\"color: #ff0000;\"><span style=\"color: #000000;\">在.net&nbsp;framework中的创建session代码先贴一个</span></span></p>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #008080;\"> 1</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> SessionBuilder\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">    {\n</span><span style=\"color: #008080;\"> 3</span>         <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">static</span> ISessionFactory _sessionFactory = <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\"> 4</span> \n<span style=\"color: #008080;\"> 5</span>         <span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> SessionBuilder()\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\"> 7</span>             <span style=\"color: #0000ff;\">if</span> (_sessionFactory == <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">创建ISessionFactory</span>\n<span style=\"color: #008080;\">10</span>                 _sessionFactory =<span style=\"color: #000000;\"> GetSessionFactory();\n</span><span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">12</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">13</span> \n<span style=\"color: #008080;\">14</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">15</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 创建ISessionFactory\n</span><span style=\"color: #008080;\">16</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">17</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">18</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> ISessionFactory GetSessionFactory()\n</span><span style=\"color: #008080;\">19</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">20</span> <span style=\"color: #000000;\">            //HibernatingRhinos.Profiler.Appender.NHibernate.NHibernateProfiler.Initialize();\n</span><span style=\"color: #008080;\">21</span> \n<span style=\"color: #008080;\">22</span>             <span style=\"color: #0000ff;\">var</span> mappers = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ModelMapper();\n</span><span style=\"color: #008080;\">23</span> <span style=\"color: #000000;\">            mappers.AddMappings(Assembly.GetExecutingAssembly().GetExportedTypes());\n</span><span style=\"color: #008080;\">24</span> \n<span style=\"color: #008080;\">25</span>             <span style=\"color: #0000ff;\">var</span> cfg = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Configuration().Configure();\n</span><span style=\"color: #008080;\">26</span>             cfg.AddDeserializedMapping(mappers.CompileMappingForAllExplicitlyAddedEntities(), <span style=\"color: #800000;\">\"\"</span><span style=\"color: #000000;\">);\n</span><span style=\"color: #008080;\">27</span> \n<span style=\"color: #008080;\">28</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> cfg.BuildSessionFactory();\n</span><span style=\"color: #008080;\">29</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">30</span> \n<span style=\"color: #008080;\">31</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">32</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 打开ISession\n</span><span style=\"color: #008080;\">33</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">34</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">35</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> ISession GetSession()\n</span><span style=\"color: #008080;\">36</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">37</span>             <span style=\"color: #0000ff;\">if</span> (_sessionFactory == <span style=\"color: #0000ff;\">null</span> ||<span style=\"color: #000000;\"> _sessionFactory.IsClosed)\n</span><span style=\"color: #008080;\">38</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">39</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">创建ISessionFactory</span>\n<span style=\"color: #008080;\">40</span>                 _sessionFactory =<span style=\"color: #000000;\"> GetSessionFactory();\n</span><span style=\"color: #008080;\">41</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">42</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">43</span> \n<span style=\"color: #008080;\">44</span> \n<span style=\"color: #008080;\">45</span>         <span style=\"color: #0000ff;\">#region</span> 打开一个新的Session\n<span style=\"color: #008080;\">46</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> ISession OpenSession()\n</span><span style=\"color: #008080;\">47</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">48</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> _sessionFactory.OpenSession();\n</span><span style=\"color: #008080;\">49</span>\n<span style=\"color: #008080;\">50</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">51</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">52</span> \n<span style=\"color: #008080;\">53</span>     }</pre>\n</div>\n<p>与数据库的交互时，需要先在web.config配置（数据库为sql server）</p>\n<div class=\"cnblogs_code\">\n<pre>&lt;configuration&gt;\n  &lt;configSections&gt;\n    &lt;section name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">hibernate-configuration</span><span style=\"color: #800000;\">\"</span> type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">NHibernate.Cfg.ConfigurationSectionHandler, NHibernate</span><span style=\"color: #800000;\">\"</span> /&gt;\n  &lt;/configSections&gt;\n  &lt;!--NHibernate配置开始--&gt;\n  &lt;hibernate-configuration xmlns=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">urn:nhibernate-configuration-2.2</span><span style=\"color: #800000;\">\"</span>&gt;\n    &lt;session-factory&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">connection.provider</span><span style=\"color: #800000;\">\"</span>&gt;NHibernate.Connection.DriverConnectionProvider&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">connection.driver_class</span><span style=\"color: #800000;\">\"</span>&gt;NHibernate.Driver.SqlClientDriver&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">dialect</span><span style=\"color: #800000;\">\"</span>&gt;NHibernate.Dialect.MsSql2012Dialect&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">show_sql</span><span style=\"color: #800000;\">\"</span>&gt;<span style=\"color: #0000ff;\">false</span>&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">connection.connection_string_name</span><span style=\"color: #800000;\">\"</span>&gt;ylsdai&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">adonet.batch_size</span><span style=\"color: #800000;\">\"</span>&gt;<span style=\"color: #800080;\">30</span>&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">generate_statistics</span><span style=\"color: #800000;\">\"</span>&gt;<span style=\"color: #0000ff;\">false</span>&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">format_sql</span><span style=\"color: #800000;\">\"</span>&gt;<span style=\"color: #0000ff;\">true</span>&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">command_timeout</span><span style=\"color: #800000;\">\"</span>&gt;<span style=\"color: #800080;\">60</span>&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">current_session_context_class</span><span style=\"color: #800000;\">\"</span>&gt;web&lt;/property&gt;\n      &lt;!--&lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">cache.provider_class</span><span style=\"color: #800000;\">\"</span>&gt;NHibernate.Caches.SysCache2.SysCacheProvider,NHibernate.Caches.SysCache2&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">cache.default_expiration</span><span style=\"color: #800000;\">\"</span>&gt;<span style=\"color: #800080;\">120</span>&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">cache.use_second_level_cache</span><span style=\"color: #800000;\">\"</span>&gt;<span style=\"color: #0000ff;\">true</span>&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">cache.use_query_cache</span><span style=\"color: #800000;\">\"</span>&gt;<span style=\"color: #0000ff;\">true</span>&lt;/property&gt;--&gt;\n    &lt;/session-factory&gt;\n  &lt;/hibernate-configuration&gt;\n  &lt;!--NHibernate配置结束--&gt;\n  &lt;connectionStrings&gt;\n    &lt;!--test_db--&gt;\n    &lt;!--&lt;add name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ylsdai</span><span style=\"color: #800000;\">\"</span> connectionString=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">data source=0.0.0.1,111;database=test_db;uid=sa;pwd=123456</span><span style=\"color: #800000;\">\"</span> providerName=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">System.Data.SqlClient</span><span style=\"color: #800000;\">\"</span> /&gt;\n  &lt;/connectionStrings&gt;\n&lt;/configuration&gt;</pre>\n</div>\n<p>映射类</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> NHibernate.Mapping.ByCode;\n</span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> NHibernate.Mapping.ByCode.Conformist;\n\n</span><span style=\"color: #0000ff;\">namespace</span><span style=\"color: #000000;\"> ClassMapping\n{\n    </span><span style=\"color: #0000ff;\">#region</span> CityMap\n    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span> CityMap : ClassMapping&lt;City&gt;<span style=\"color: #000000;\">\n    {\n        </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> CityMap()\n        {\n            \n            SelectBeforeUpdate(</span><span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);\n            DynamicUpdate(</span><span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Cache(p =&gt; p.Usage(CacheUsage.ReadWrite));</span>\n            Id(p =&gt; p.CityId, map =&gt;<span style=\"color: #000000;\"> map.Generator(Generators.Native));\n            Property(p </span>=&gt;<span style=\"color: #000000;\"> p.OldCityId);\n            Property(p </span>=&gt;<span style=\"color: #000000;\"> p.ParentId);\n            Property(p </span>=&gt;<span style=\"color: #000000;\"> p.CityName);\n            Property(p </span>=&gt;<span style=\"color: #000000;\"> p.EnCityName);\n            Property(p </span>=&gt;<span style=\"color: #000000;\"> p.CityImgUrl);\n            Property(p </span>=&gt;<span style=\"color: #000000;\"> p.LatLng);\n            Property(p </span>=&gt;<span style=\"color: #000000;\"> p.Keywords);\n            Property(p </span>=&gt;<span style=\"color: #000000;\"> p.IsRecommend);\n            Property(p </span>=&gt;<span style=\"color: #000000;\"> p.IsDepart);\n            Property(p </span>=&gt;<span style=\"color: #000000;\"> p.AreaId);\n            Property(p </span>=&gt;<span style=\"color: #000000;\"> p.CityContent);\n        }\n    }\n    </span><span style=\"color: #0000ff;\">#endregion</span><span style=\"color: #000000;\">\n}</span></pre>\n</div>\n<p>&nbsp;</p>\n<p>将实体写好，就可以进行实现了</p>\n<p>&nbsp;</p>\n<p>但是在迁移到.net core的时候遇到的问题：</p>\n<p>1. 创建Session，使用.net&nbsp;framework的方法将不可用</p>\n<p>2.config中对于NHiberante的配置也读取不到</p>\n<p>3.基于问题1，映射类也无法进行实现</p>\n<p>好在是在.net core中有一个辅助的开源框架<a href=\"http://fluentnhibernate.org/\">Fluent NHibernate</a>，它可以帮我解决上面遇到的问题，但是在具体使用时也踩了不少坑</p>\n<p>1.网上的文档基本都是映射类在xml中的，但是当实际项目在.cs文件中时，大量的文件映射从.cs文件迁到到.xml文件将变得特别繁琐</p>\n<p>最后的解决办法，创建session方法中GetSessionFactory方法做以下修改</p>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 创建ISessionFactory\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> ISessionFactory GetSessionFactory()\n        {\n            </span><span style=\"color: #0000ff;\">var</span> assemblyName = Assembly.Load(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ClassMapping</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n\n            NHibernate.Cfg.Configuration setCfg(NHibernate.Cfg.Configuration c)\n            {\n                c.Properties.Add(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">show_sql</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">true</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n                c.Properties.Add(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">adonet.batch_size</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">1000</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n                c.Properties.Add(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">generate_statistics</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">false</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n                c.Properties.Add(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">format_sql</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">true</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n                c.Properties.Add(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">command_timeout</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">60</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n                c.Properties.Add(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">current_session_context_class</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">web</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n                </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> c;\n            }\n\n            </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> Fluently.Configure().Database(\nFluentNHibernate.Cfg.Db.MsSqlConfiguration.MsSql2012.ConnectionString(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Server=0.0.0.1,111;Database=test_db;Uid=sa;Pwd=123456;</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">))\n                        .Mappings(m </span>=&gt;<span style=\"color: #000000;\"> m.FluentMappings.AddFromAssembly(assemblyName))\n                        .ExposeConfiguration(c </span>=&gt; <span style=\"color: #0000ff;\">new</span> SchemaUpdate(c).Execute(<span style=\"color: #0000ff;\">true</span>, <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">))\n                        .ExposeConfiguration(c </span>=&gt;<span style=\"color: #000000;\"> setCfg(c))\n                        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">.ExposeConfiguration(f =&gt; f.SetInterceptor(new SqlStatementInterceptor()))</span>\n<span style=\"color: #000000;\">                        .BuildSessionFactory();\n\n        }</span></pre>\n</div>\n<p>其中映射类的引入在</p>\n<p>.Mappings(m =&gt; m.FluentMappings.AddFromAssembly(assemblyName))</p>\n<p>这句话，是将命名空间引入，所以具体映射类可以重新新建一个项目，名字就叫做ClassMapping，具体的映射类做以下修改</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> Entity;\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> FluentNHibernate.Mapping;\n</span><span style=\"color: #008080;\"> 3</span> \n<span style=\"color: #008080;\"> 4</span> <span style=\"color: #0000ff;\">namespace</span><span style=\"color: #000000;\"> ClassMapping\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">{\n</span><span style=\"color: #008080;\"> 6</span>     <span style=\"color: #0000ff;\">#region</span> CityMap\n<span style=\"color: #008080;\"> 7</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span> CityMap : ClassMap&lt;City&gt;\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">    {\n</span><span style=\"color: #008080;\"> 9</span>         <span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> CityMap()\n</span><span style=\"color: #008080;\">10</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">11</span>             Table(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">City</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n</span><span style=\"color: #008080;\">12</span> \n<span style=\"color: #008080;\">13</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">SelectBeforeUpdate(true);\n</span><span style=\"color: #008080;\">14</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">DynamicUpdate(true);\n</span><span style=\"color: #008080;\">15</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Cache(p =&gt; p.Usage(CacheUsage.ReadWrite));</span>\n<span style=\"color: #008080;\">16</span>             Id(p =&gt;<span style=\"color: #000000;\"> p.CityId);\n</span><span style=\"color: #008080;\">17</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.OldCityId);\n</span><span style=\"color: #008080;\">18</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.ParentId);\n</span><span style=\"color: #008080;\">19</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.CityName);\n</span><span style=\"color: #008080;\">20</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.EnCityName);\n</span><span style=\"color: #008080;\">21</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.CityImgUrl);\n</span><span style=\"color: #008080;\">22</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.LatLng);\n</span><span style=\"color: #008080;\">23</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.Keywords);\n</span><span style=\"color: #008080;\">24</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.IsRecommend);\n</span><span style=\"color: #008080;\">25</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.IsDepart);\n</span><span style=\"color: #008080;\">26</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.AreaId);\n</span><span style=\"color: #008080;\">27</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.CityContent);\n</span><span style=\"color: #008080;\">28</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">29</span> <span style=\"color: #000000;\">    }\n</span><span style=\"color: #008080;\">30</span>     <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">31</span> \n<span style=\"color: #008080;\">32</span> }</pre>\n</div>\n<p>&nbsp;</p>\n<p>在迁移过程中会碰到映射关系的迁移</p>\n<p>以前的版本中为</p>\n<div class=\"cnblogs_code\">\n<pre>            OneToOne(p =&gt; p.City, map =&gt;<span style=\"color: #000000;\">\n            {\n                map.Cascade(Cascade.All);\n                map.Lazy(LazyRelation.Proxy);\n            });</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">一对一</span>\n<span style=\"color: #000000;\">\n            ManyToOne(p </span>=&gt; p.Province, map =&gt; map.Column(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ProvinceId</span><span style=\"color: #800000;\">\"</span>));<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">多对一</span>\n<span style=\"color: #000000;\">\n            Bag(p </span>=&gt; p.Counties, map =&gt;<span style=\"color: #000000;\">\n            {\n                map.Key(k </span>=&gt; k.Column(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">CountyId</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">));\n                map.OrderBy(k </span>=&gt;<span style=\"color: #000000;\"> k.SortId);\n            }, rel </span>=&gt; rel.OneToMany());<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">一对多</span></pre>\n</div>\n<p>.net core版本中对应为</p>\n<div class=\"cnblogs_code\">\n<pre>HasOne(p =&gt; p.City).Cascade.All().LazyLoad();<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">一对一\n\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">References&lt;Province&gt;(r =&gt; r.Province).Column(\"ProvinceId\").ForeignKey(\"ProvinceId\").Cascade.None();</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">多对一，在实际运用中会出现问题</span>\n<span style=\"color: #000000;\">\nHasMany(p </span>=&gt; p.Counties).KeyColumn(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">CountyId</span><span style=\"color: #800000;\">\"</span>).OrderBy(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">CountyId</span><span style=\"color: #800000;\">\"</span>).LazyLoad();<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">一对多</span></pre>\n</div>\n<p>&nbsp;</p>\n<p>city实体</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #000000;\">    [Serializable]\n</span><span style=\"color: #008080;\"> 2</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> City : BaseEntity\n</span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #000000;\">    {\n</span><span style=\"color: #008080;\"> 4</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\"> 5</span>          <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> CityId\n</span><span style=\"color: #008080;\"> 6</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\"> 7</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">int</span> CityId { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n</span><span style=\"color: #008080;\"> 8</span> \n<span style=\"color: #008080;\"> 9</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">10</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Version\n</span><span style=\"color: #008080;\">11</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">12</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">int</span> Version { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n</span><span style=\"color: #008080;\">13</span> \n<span style=\"color: #008080;\">14</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">15</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> OldCityId\n</span><span style=\"color: #008080;\">16</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">17</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">int</span> OldCityId { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; } \n</span><span style=\"color: #008080;\">18</span> \n<span style=\"color: #008080;\">19</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">20</span>          <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> ParentId\n</span><span style=\"color: #008080;\">21</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">22</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">int</span> ParentId { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; } \n</span><span style=\"color: #008080;\">23</span> \n<span style=\"color: #008080;\">24</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">25</span>          <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 城市名称\n</span><span style=\"color: #008080;\">26</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">27</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">string</span> CityName { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; } \n</span><span style=\"color: #008080;\">28</span> \n<span style=\"color: #008080;\">29</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">30</span>          <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 城市英文名称\n</span><span style=\"color: #008080;\">31</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">32</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">string</span> EnCityName { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; } \n</span><span style=\"color: #008080;\">33</span> \n<span style=\"color: #008080;\">34</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">35</span>          <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> CityImgUrl\n</span><span style=\"color: #008080;\">36</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">37</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">string</span> CityImgUrl { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; } \n</span><span style=\"color: #008080;\">38</span> \n<span style=\"color: #008080;\">39</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">40</span>          <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 经纬度\n</span><span style=\"color: #008080;\">41</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">42</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">string</span> LatLng { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; } \n</span><span style=\"color: #008080;\">43</span> \n<span style=\"color: #008080;\">44</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">45</span>          <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 关键字\n</span><span style=\"color: #008080;\">46</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">47</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">string</span> Keywords { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n</span><span style=\"color: #008080;\">48</span> \n<span style=\"color: #008080;\">49</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">50</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 是否推荐\n</span><span style=\"color: #008080;\">51</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">52</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">bool</span> IsRecommend { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n</span><span style=\"color: #008080;\">53</span> \n<span style=\"color: #008080;\">54</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">55</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> IsDepart\n</span><span style=\"color: #008080;\">56</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">57</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">bool</span> IsDepart { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; } \n</span><span style=\"color: #008080;\">58</span> \n<span style=\"color: #008080;\">59</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">60</span>          <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 航区\n</span><span style=\"color: #008080;\">61</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">62</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">int</span> AreaId { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; } \n</span><span style=\"color: #008080;\">63</span> \n<span style=\"color: #008080;\">64</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">65</span>          <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 城市介绍\n</span><span style=\"color: #008080;\">66</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">67</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">string</span> CityContent { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; } \n</span><span style=\"color: #008080;\">68</span> \n<span style=\"color: #008080;\">69</span>     }</pre>\n</div>\n<p>&nbsp;</p>\n<p>下面是操作session，进行数据库调用的方法</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #008080;\">  1</span>     <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">  2</span>     <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Hibernate操作Helper \n</span><span style=\"color: #008080;\">  3</span>     <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">  4</span>     <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;typeparam name=\"T\"&gt;&lt;/typeparam&gt;</span>\n<span style=\"color: #008080;\">  5</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span> DbHelper&lt;T&gt; <span style=\"color: #0000ff;\">where</span><span style=\"color: #000000;\"> T : BaseEntity\n</span><span style=\"color: #008080;\">  6</span> <span style=\"color: #000000;\">    {\n</span><span style=\"color: #008080;\">  7</span>         <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">readonly</span> ISession _session =<span style=\"color: #000000;\"> SessionBuilder.GetSession();\n</span><span style=\"color: #008080;\">  8</span>         <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">protected static readonly ILog Log = LogManager.GetLogger(MethodBase.GetCurrentMethod().DeclaringType);</span>\n<span style=\"color: #008080;\">  9</span> \n<span style=\"color: #008080;\"> 10</span>         <span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> DbHelper() { }\n</span><span style=\"color: #008080;\"> 11</span> \n<span style=\"color: #008080;\"> 12</span>         <span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> DbHelper(ISession session)\n</span><span style=\"color: #008080;\"> 13</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\"> 14</span>             _session =<span style=\"color: #000000;\"> session;\n</span><span style=\"color: #008080;\"> 15</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\"> 16</span> \n<span style=\"color: #008080;\"> 17</span>         <span style=\"color: #0000ff;\">#region</span> 获取一个实体\n<span style=\"color: #008080;\"> 18</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\"> 19</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 获取一个实体（一级缓存）\n</span><span style=\"color: #008080;\"> 20</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\"> 21</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"id\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\"> 22</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\"> 23</span>         <span style=\"color: #0000ff;\">public</span> T Load(<span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> id)\n</span><span style=\"color: #008080;\"> 24</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\"> 25</span>             <span style=\"color: #0000ff;\">return</span> _session.Load&lt;T&gt;<span style=\"color: #000000;\">(id);\n</span><span style=\"color: #008080;\"> 26</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\"> 27</span> \n<span style=\"color: #008080;\"> 28</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\"> 29</span> \n<span style=\"color: #008080;\"> 30</span>         <span style=\"color: #0000ff;\">#region</span> 获取一个实体（缓存）\n<span style=\"color: #008080;\"> 31</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\"> 32</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 获取一个实体（二级缓存）\n</span><span style=\"color: #008080;\"> 33</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\"> 34</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"id\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\"> 35</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\"> 36</span>         <span style=\"color: #0000ff;\">public</span> T Get(<span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> id)\n</span><span style=\"color: #008080;\"> 37</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\"> 38</span>             <span style=\"color: #0000ff;\">return</span> _session.Get&lt;T&gt;<span style=\"color: #000000;\">(id);\n</span><span style=\"color: #008080;\"> 39</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\"> 40</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\"> 41</span> \n<span style=\"color: #008080;\"> 42</span>         <span style=\"color: #0000ff;\">#region</span> 销毁一个实体\n<span style=\"color: #008080;\"> 43</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\"> 44</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 销毁一个实体\n</span><span style=\"color: #008080;\"> 45</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\"> 46</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"obj\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\"> 47</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\"> 48</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">void</span> Evict(<span style=\"color: #0000ff;\">object</span><span style=\"color: #000000;\"> obj)\n</span><span style=\"color: #008080;\"> 49</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\"> 50</span> <span style=\"color: #000000;\">            _session.Evict(obj);\n</span><span style=\"color: #008080;\"> 51</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\"> 52</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\"> 53</span> \n<span style=\"color: #008080;\"> 54</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\"> 55</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 根据SQL语句获取\n</span><span style=\"color: #008080;\"> 56</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\"> 57</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"sql\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\"> 58</span>         <span style=\"color: #0000ff;\">public</span> ISQLQuery CreateSqlQuery(<span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> sql)\n</span><span style=\"color: #008080;\"> 59</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\"> 60</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> _session.CreateSQLQuery(sql);\n</span><span style=\"color: #008080;\"> 61</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\"> 62</span> \n<span style=\"color: #008080;\"> 63</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\"> 64</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 获取集合\n</span><span style=\"color: #008080;\"> 65</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\"> 66</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"hql\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\"> 67</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\"> 68</span>         <span style=\"color: #0000ff;\">public</span> ICriteria GetCriteria(<span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> hql)\n</span><span style=\"color: #008080;\"> 69</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\"> 70</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> _session.CreateCriteria(hql);\n</span><span style=\"color: #008080;\"> 71</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\"> 72</span> \n<span style=\"color: #008080;\"> 73</span>         <span style=\"color: #0000ff;\">#region</span> 获取全部数据\n<span style=\"color: #008080;\"> 74</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\"> 75</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 获取全部数据\n</span><span style=\"color: #008080;\"> 76</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\"> 77</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"cacheable\"&gt;</span><span style=\"color: #008000;\">是否缓存</span><span style=\"color: #808080;\">&lt;/param&gt;</span>\n<span style=\"color: #008080;\"> 78</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\"> 79</span>         <span style=\"color: #0000ff;\">public</span> IEnumerable&lt;T&gt; GetAll(<span style=\"color: #0000ff;\">bool</span><span style=\"color: #000000;\"> cacheable)\n</span><span style=\"color: #008080;\"> 80</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\"> 81</span>             <span style=\"color: #0000ff;\">var</span> ic = _session.CreateCriteria(<span style=\"color: #0000ff;\">typeof</span><span style=\"color: #000000;\">(T));\n</span><span style=\"color: #008080;\"> 82</span>             IEnumerable&lt;T&gt; list = ic.SetCacheable(cacheable).List&lt;T&gt;() ?? <span style=\"color: #0000ff;\">new</span> List&lt;T&gt;<span style=\"color: #000000;\">();\n</span><span style=\"color: #008080;\"> 83</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> list;\n</span><span style=\"color: #008080;\"> 84</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\"> 85</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\"> 86</span> \n<span style=\"color: #008080;\"> 87</span>         <span style=\"color: #0000ff;\">#region</span> 插入或者更新数据\n<span style=\"color: #008080;\"> 88</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\"> 89</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 插入数据\n</span><span style=\"color: #008080;\"> 90</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\"> 91</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"entity\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\"> 92</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\"> 93</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> Save(T entity)\n</span><span style=\"color: #008080;\"> 94</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\"> 95</span>             <span style=\"color: #0000ff;\">var</span> id = <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\"> 96</span>             <span style=\"color: #0000ff;\">var</span> session = <span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">._session;\n</span><span style=\"color: #008080;\"> 97</span>             ITransaction tan =<span style=\"color: #000000;\"> session.BeginTransaction();\n</span><span style=\"color: #008080;\"> 98</span> \n<span style=\"color: #008080;\"> 99</span>             <span style=\"color: #0000ff;\">try</span>\n<span style=\"color: #008080;\">100</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">101</span>                 entity =<span style=\"color: #000000;\"> session.Merge(entity);\n</span><span style=\"color: #008080;\">102</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">103</span>             <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e)\n</span><span style=\"color: #008080;\">104</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">105</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Log.DebugFormat($\"Save124，Exception：{e.Message}，entity:{JsonConvert.SerializeObject(entity)}\");</span>\n<span style=\"color: #008080;\">106</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">107</span> \n<span style=\"color: #008080;\">108</span>             <span style=\"color: #0000ff;\">try</span>\n<span style=\"color: #008080;\">109</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">110</span> <span style=\"color: #000000;\">                tan.Begin();\n</span><span style=\"color: #008080;\">111</span>                 id = (<span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\">)session.Save(entity);\n</span><span style=\"color: #008080;\">112</span> <span style=\"color: #000000;\">                session.Flush();\n</span><span style=\"color: #008080;\">113</span> <span style=\"color: #000000;\">                tan.Commit();\n</span><span style=\"color: #008080;\">114</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">115</span>             <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e)\n</span><span style=\"color: #008080;\">116</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">117</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Log.DebugFormat($\"Save136，Exception：{e.Message}，entity:{JsonConvert.SerializeObject(entity)}\");</span>\n<span style=\"color: #008080;\">118</span> <span style=\"color: #000000;\">                tan.Rollback();\n</span><span style=\"color: #008080;\">119</span>                 <span style=\"color: #0000ff;\">throw</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">120</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">121</span> \n<span style=\"color: #008080;\">122</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> id;\n</span><span style=\"color: #008080;\">123</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">124</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">125</span> \n<span style=\"color: #008080;\">126</span>         <span style=\"color: #0000ff;\">#region</span> 更新数据\n<span style=\"color: #008080;\">127</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">128</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 更新数据\n</span><span style=\"color: #008080;\">129</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">130</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"entity\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\">131</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">132</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> Update(T entity)\n</span><span style=\"color: #008080;\">133</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">134</span>             <span style=\"color: #0000ff;\">int</span> result = <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">135</span>             ITransaction tan =<span style=\"color: #000000;\"> _session.BeginTransaction();\n</span><span style=\"color: #008080;\">136</span>             <span style=\"color: #0000ff;\">var</span> session = <span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">._session;\n</span><span style=\"color: #008080;\">137</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">entity = (T)_session.Merge(entity);</span>\n<span style=\"color: #008080;\">138</span>             <span style=\"color: #0000ff;\">try</span>\n<span style=\"color: #008080;\">139</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">140</span>                 entity =<span style=\"color: #000000;\"> session.Merge(entity);\n</span><span style=\"color: #008080;\">141</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">142</span>             <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e)\n</span><span style=\"color: #008080;\">143</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">144</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Log.DebugFormat($\"Update163，Exception：{e.Message}，entity:{JsonConvert.SerializeObject(entity)}\");</span>\n<span style=\"color: #008080;\">145</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">146</span>             <span style=\"color: #0000ff;\">try</span>\n<span style=\"color: #008080;\">147</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">148</span> <span style=\"color: #000000;\">                tan.Begin();\n</span><span style=\"color: #008080;\">149</span> <span style=\"color: #000000;\">                _session.Update(entity);\n</span><span style=\"color: #008080;\">150</span> <span style=\"color: #000000;\">                _session.Flush();\n</span><span style=\"color: #008080;\">151</span> <span style=\"color: #000000;\">                tan.Commit();\n</span><span style=\"color: #008080;\">152</span>                 result++<span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">153</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">154</span>             <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e)\n</span><span style=\"color: #008080;\">155</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">156</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Log.DebugFormat($\"Update175，Exception：{e.Message}，entity:{JsonConvert.SerializeObject(entity)}\");</span>\n<span style=\"color: #008080;\">157</span> <span style=\"color: #000000;\">                tan.Rollback();\n</span><span style=\"color: #008080;\">158</span>                 <span style=\"color: #0000ff;\">throw</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">159</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">160</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> result;\n</span><span style=\"color: #008080;\">161</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">162</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">163</span> \n<span style=\"color: #008080;\">164</span>         <span style=\"color: #0000ff;\">#region</span> 删除一条数据\n<span style=\"color: #008080;\">165</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">166</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 删除一条数据\n</span><span style=\"color: #008080;\">167</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">168</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"id\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\">169</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">170</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">int</span> DeleteModelById(<span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> id)\n</span><span style=\"color: #008080;\">171</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">172</span>             <span style=\"color: #0000ff;\">int</span> result = <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">173</span>             <span style=\"color: #0000ff;\">object</span> item =<span style=\"color: #000000;\"> Get(id);\n</span><span style=\"color: #008080;\">174</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">ITransaction tan = _session.BeginTransaction();</span>\n<span style=\"color: #008080;\">175</span>             <span style=\"color: #0000ff;\">try</span>\n<span style=\"color: #008080;\">176</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">177</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">tan.Begin();</span>\n<span style=\"color: #008080;\">178</span> <span style=\"color: #000000;\">                _session.Delete(item);\n</span><span style=\"color: #008080;\">179</span> <span style=\"color: #000000;\">                _session.Flush();\n</span><span style=\"color: #008080;\">180</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">tan.Commit();</span>\n<span style=\"color: #008080;\">181</span>                 result++<span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">182</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">183</span>             <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception)\n</span><span style=\"color: #008080;\">184</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">185</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">tan.Rollback();</span>\n<span style=\"color: #008080;\">186</span>                 <span style=\"color: #0000ff;\">throw</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">187</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">188</span> \n<span style=\"color: #008080;\">189</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> result;\n</span><span style=\"color: #008080;\">190</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">191</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">192</span> \n<span style=\"color: #008080;\">193</span>         <span style=\"color: #0000ff;\">#region</span> 删除一个实体对象\n<span style=\"color: #008080;\">194</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">195</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 删除一个实体对象\n</span><span style=\"color: #008080;\">196</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">197</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"entity\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\">198</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">199</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> DeleteModel(BaseEntity entity)\n</span><span style=\"color: #008080;\">200</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">201</span>             <span style=\"color: #0000ff;\">var</span> result = <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">202</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">ITransaction tan = _session.BeginTransaction();</span>\n<span style=\"color: #008080;\">203</span>             <span style=\"color: #0000ff;\">try</span>\n<span style=\"color: #008080;\">204</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">205</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">tan.Begin();</span>\n<span style=\"color: #008080;\">206</span> <span style=\"color: #000000;\">                _session.Delete(entity);\n</span><span style=\"color: #008080;\">207</span> <span style=\"color: #000000;\">                _session.Flush();\n</span><span style=\"color: #008080;\">208</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">tan.Commit();</span>\n<span style=\"color: #008080;\">209</span>                 result++<span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">210</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">211</span>             <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception)\n</span><span style=\"color: #008080;\">212</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">213</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">tan.Rollback();</span>\n<span style=\"color: #008080;\">214</span>                 <span style=\"color: #0000ff;\">throw</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">215</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">216</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> result;\n</span><span style=\"color: #008080;\">217</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">218</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">219</span> \n<span style=\"color: #008080;\">220</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">221</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 根据SQL语句删除\n</span><span style=\"color: #008080;\">222</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">223</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"sql\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\">224</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">void</span> DeleteList(<span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> sql)\n</span><span style=\"color: #008080;\">225</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">226</span> <span style=\"color: #000000;\">            _session.CreateSQLQuery(sql).UniqueResult();\n</span><span style=\"color: #008080;\">227</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">228</span> \n<span style=\"color: #008080;\">229</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">230</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 删除泛型集合\n</span><span style=\"color: #008080;\">231</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">232</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"models\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\">233</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">void</span> DeleteList(IList&lt;T&gt;<span style=\"color: #000000;\"> models)\n</span><span style=\"color: #008080;\">234</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">235</span>             <span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #0000ff;\">var</span> model <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> models)\n</span><span style=\"color: #008080;\">236</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">237</span> <span style=\"color: #000000;\">                DeleteModel(model);\n</span><span style=\"color: #008080;\">238</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">239</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">240</span> \n<span style=\"color: #008080;\">241</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">bool</span> IsExist(Expression&lt;Func&lt;T, <span style=\"color: #0000ff;\">bool</span>&gt;&gt;<span style=\"color: #000000;\"> keyWhere)\n</span><span style=\"color: #008080;\">242</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">243</span>             <span style=\"color: #0000ff;\">var</span> ss = _session.QueryOver&lt;T&gt;<span style=\"color: #000000;\">().Where(keyWhere);\n</span><span style=\"color: #008080;\">244</span>             <span style=\"color: #0000ff;\">return</span> ss.RowCount() &gt; <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">245</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">246</span> \n<span style=\"color: #008080;\">247</span>         <span style=\"color: #0000ff;\">#region</span> GetQuery\n<span style=\"color: #008080;\">248</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">249</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> GetQuery\n</span><span style=\"color: #008080;\">250</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">251</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">252</span>         <span style=\"color: #0000ff;\">public</span> IQueryable&lt;T&gt;<span style=\"color: #000000;\"> GetQuery()\n</span><span style=\"color: #008080;\">253</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">254</span>             <span style=\"color: #0000ff;\">try</span>\n<span style=\"color: #008080;\">255</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">256</span>                 <span style=\"color: #0000ff;\">return</span> _session.Query&lt;T&gt;<span style=\"color: #000000;\">();\n</span><span style=\"color: #008080;\">257</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">258</span>             <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e)\n</span><span style=\"color: #008080;\">259</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">260</span>                 <span style=\"color: #0000ff;\">var</span> session =<span style=\"color: #000000;\"> SessionBuilder.GetSession();\n</span><span style=\"color: #008080;\">261</span>                 <span style=\"color: #0000ff;\">return</span> session.Query&lt;T&gt;<span style=\"color: #000000;\">();\n</span><span style=\"color: #008080;\">262</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">263</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">264</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">265</span> \n<span style=\"color: #008080;\">266</span>         <span style=\"color: #0000ff;\">#region</span> GetQueryOver\n<span style=\"color: #008080;\">267</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">268</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> GetQueryOver\n</span><span style=\"color: #008080;\">269</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">270</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">271</span>         <span style=\"color: #0000ff;\">public</span> IQueryOver&lt;T, T&gt; GetQueryOver(Expression&lt;Func&lt;T, <span style=\"color: #0000ff;\">bool</span>&gt;&gt;<span style=\"color: #000000;\"> keyWhere)\n</span><span style=\"color: #008080;\">272</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">273</span>             <span style=\"color: #0000ff;\">return</span> _session.QueryOver&lt;T&gt;<span style=\"color: #000000;\">().Where(keyWhere);\n</span><span style=\"color: #008080;\">274</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">275</span> \n<span style=\"color: #008080;\">276</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">277</span> \n<span style=\"color: #008080;\">278</span>         <span style=\"color: #0000ff;\">#region</span> GetQueryOver\n<span style=\"color: #008080;\">279</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">280</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> GetQueryOver\n</span><span style=\"color: #008080;\">281</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">282</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">283</span>         <span style=\"color: #0000ff;\">public</span> IQueryOver&lt;T, T&gt;<span style=\"color: #000000;\"> GetQueryOver()\n</span><span style=\"color: #008080;\">284</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">285</span>             <span style=\"color: #0000ff;\">return</span> _session.QueryOver&lt;T&gt;<span style=\"color: #000000;\">();\n</span><span style=\"color: #008080;\">286</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">287</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">288</span> \n<span style=\"color: #008080;\">289</span>         <span style=\"color: #0000ff;\">#region</span> 获取集合ByHql\n<span style=\"color: #008080;\">290</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">291</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 获取集合ByHql\n</span><span style=\"color: #008080;\">292</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">293</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"strHql\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\">294</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">295</span>         <span style=\"color: #0000ff;\">public</span> IQuery GetQueryByHql(<span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> strHql)\n</span><span style=\"color: #008080;\">296</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">297</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> _session.CreateQuery(strHql);\n</span><span style=\"color: #008080;\">298</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">299</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">300</span> \n<span style=\"color: #008080;\">301</span>         <span style=\"color: #0000ff;\">#region</span> 获取集合BySql\n<span style=\"color: #008080;\">302</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">303</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 获取集合BySql\n</span><span style=\"color: #008080;\">304</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">305</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"strSql\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\">306</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">307</span>         <span style=\"color: #0000ff;\">public</span> IQuery GetQueryBySql(<span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> strSql)\n</span><span style=\"color: #008080;\">308</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">309</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> _session.CreateSQLQuery(strSql);\n</span><span style=\"color: #008080;\">310</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">311</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">312</span>     }</pre>\n</div>\n<p>&nbsp;</p>","source":"_posts/cnblogs/11103355.md","raw":"---\ntitle: NHiberante从.net framework转移到.net standard(.net core 2.2)时遇到的坑及填坑\ndate: 2019-06-28T16:19:00\nauthor: 不辍\ntags: []\n---\n<p><span style=\"color: #ff0000;\"><span style=\"color: #000000;\">在.net&nbsp;framework中的创建session代码先贴一个</span></span></p>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #008080;\"> 1</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> SessionBuilder\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">    {\n</span><span style=\"color: #008080;\"> 3</span>         <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">static</span> ISessionFactory _sessionFactory = <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\"> 4</span> \n<span style=\"color: #008080;\"> 5</span>         <span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> SessionBuilder()\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\"> 7</span>             <span style=\"color: #0000ff;\">if</span> (_sessionFactory == <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">创建ISessionFactory</span>\n<span style=\"color: #008080;\">10</span>                 _sessionFactory =<span style=\"color: #000000;\"> GetSessionFactory();\n</span><span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">12</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">13</span> \n<span style=\"color: #008080;\">14</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">15</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 创建ISessionFactory\n</span><span style=\"color: #008080;\">16</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">17</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">18</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> ISessionFactory GetSessionFactory()\n</span><span style=\"color: #008080;\">19</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">20</span> <span style=\"color: #000000;\">            //HibernatingRhinos.Profiler.Appender.NHibernate.NHibernateProfiler.Initialize();\n</span><span style=\"color: #008080;\">21</span> \n<span style=\"color: #008080;\">22</span>             <span style=\"color: #0000ff;\">var</span> mappers = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ModelMapper();\n</span><span style=\"color: #008080;\">23</span> <span style=\"color: #000000;\">            mappers.AddMappings(Assembly.GetExecutingAssembly().GetExportedTypes());\n</span><span style=\"color: #008080;\">24</span> \n<span style=\"color: #008080;\">25</span>             <span style=\"color: #0000ff;\">var</span> cfg = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Configuration().Configure();\n</span><span style=\"color: #008080;\">26</span>             cfg.AddDeserializedMapping(mappers.CompileMappingForAllExplicitlyAddedEntities(), <span style=\"color: #800000;\">\"\"</span><span style=\"color: #000000;\">);\n</span><span style=\"color: #008080;\">27</span> \n<span style=\"color: #008080;\">28</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> cfg.BuildSessionFactory();\n</span><span style=\"color: #008080;\">29</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">30</span> \n<span style=\"color: #008080;\">31</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">32</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 打开ISession\n</span><span style=\"color: #008080;\">33</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">34</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">35</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> ISession GetSession()\n</span><span style=\"color: #008080;\">36</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">37</span>             <span style=\"color: #0000ff;\">if</span> (_sessionFactory == <span style=\"color: #0000ff;\">null</span> ||<span style=\"color: #000000;\"> _sessionFactory.IsClosed)\n</span><span style=\"color: #008080;\">38</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">39</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">创建ISessionFactory</span>\n<span style=\"color: #008080;\">40</span>                 _sessionFactory =<span style=\"color: #000000;\"> GetSessionFactory();\n</span><span style=\"color: #008080;\">41</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">42</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">43</span> \n<span style=\"color: #008080;\">44</span> \n<span style=\"color: #008080;\">45</span>         <span style=\"color: #0000ff;\">#region</span> 打开一个新的Session\n<span style=\"color: #008080;\">46</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> ISession OpenSession()\n</span><span style=\"color: #008080;\">47</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">48</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> _sessionFactory.OpenSession();\n</span><span style=\"color: #008080;\">49</span>\n<span style=\"color: #008080;\">50</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">51</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">52</span> \n<span style=\"color: #008080;\">53</span>     }</pre>\n</div>\n<p>与数据库的交互时，需要先在web.config配置（数据库为sql server）</p>\n<div class=\"cnblogs_code\">\n<pre>&lt;configuration&gt;\n  &lt;configSections&gt;\n    &lt;section name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">hibernate-configuration</span><span style=\"color: #800000;\">\"</span> type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">NHibernate.Cfg.ConfigurationSectionHandler, NHibernate</span><span style=\"color: #800000;\">\"</span> /&gt;\n  &lt;/configSections&gt;\n  &lt;!--NHibernate配置开始--&gt;\n  &lt;hibernate-configuration xmlns=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">urn:nhibernate-configuration-2.2</span><span style=\"color: #800000;\">\"</span>&gt;\n    &lt;session-factory&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">connection.provider</span><span style=\"color: #800000;\">\"</span>&gt;NHibernate.Connection.DriverConnectionProvider&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">connection.driver_class</span><span style=\"color: #800000;\">\"</span>&gt;NHibernate.Driver.SqlClientDriver&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">dialect</span><span style=\"color: #800000;\">\"</span>&gt;NHibernate.Dialect.MsSql2012Dialect&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">show_sql</span><span style=\"color: #800000;\">\"</span>&gt;<span style=\"color: #0000ff;\">false</span>&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">connection.connection_string_name</span><span style=\"color: #800000;\">\"</span>&gt;ylsdai&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">adonet.batch_size</span><span style=\"color: #800000;\">\"</span>&gt;<span style=\"color: #800080;\">30</span>&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">generate_statistics</span><span style=\"color: #800000;\">\"</span>&gt;<span style=\"color: #0000ff;\">false</span>&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">format_sql</span><span style=\"color: #800000;\">\"</span>&gt;<span style=\"color: #0000ff;\">true</span>&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">command_timeout</span><span style=\"color: #800000;\">\"</span>&gt;<span style=\"color: #800080;\">60</span>&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">current_session_context_class</span><span style=\"color: #800000;\">\"</span>&gt;web&lt;/property&gt;\n      &lt;!--&lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">cache.provider_class</span><span style=\"color: #800000;\">\"</span>&gt;NHibernate.Caches.SysCache2.SysCacheProvider,NHibernate.Caches.SysCache2&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">cache.default_expiration</span><span style=\"color: #800000;\">\"</span>&gt;<span style=\"color: #800080;\">120</span>&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">cache.use_second_level_cache</span><span style=\"color: #800000;\">\"</span>&gt;<span style=\"color: #0000ff;\">true</span>&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">cache.use_query_cache</span><span style=\"color: #800000;\">\"</span>&gt;<span style=\"color: #0000ff;\">true</span>&lt;/property&gt;--&gt;\n    &lt;/session-factory&gt;\n  &lt;/hibernate-configuration&gt;\n  &lt;!--NHibernate配置结束--&gt;\n  &lt;connectionStrings&gt;\n    &lt;!--test_db--&gt;\n    &lt;!--&lt;add name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ylsdai</span><span style=\"color: #800000;\">\"</span> connectionString=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">data source=0.0.0.1,111;database=test_db;uid=sa;pwd=123456</span><span style=\"color: #800000;\">\"</span> providerName=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">System.Data.SqlClient</span><span style=\"color: #800000;\">\"</span> /&gt;\n  &lt;/connectionStrings&gt;\n&lt;/configuration&gt;</pre>\n</div>\n<p>映射类</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> NHibernate.Mapping.ByCode;\n</span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> NHibernate.Mapping.ByCode.Conformist;\n\n</span><span style=\"color: #0000ff;\">namespace</span><span style=\"color: #000000;\"> ClassMapping\n{\n    </span><span style=\"color: #0000ff;\">#region</span> CityMap\n    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span> CityMap : ClassMapping&lt;City&gt;<span style=\"color: #000000;\">\n    {\n        </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> CityMap()\n        {\n            \n            SelectBeforeUpdate(</span><span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);\n            DynamicUpdate(</span><span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);\n            </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Cache(p =&gt; p.Usage(CacheUsage.ReadWrite));</span>\n            Id(p =&gt; p.CityId, map =&gt;<span style=\"color: #000000;\"> map.Generator(Generators.Native));\n            Property(p </span>=&gt;<span style=\"color: #000000;\"> p.OldCityId);\n            Property(p </span>=&gt;<span style=\"color: #000000;\"> p.ParentId);\n            Property(p </span>=&gt;<span style=\"color: #000000;\"> p.CityName);\n            Property(p </span>=&gt;<span style=\"color: #000000;\"> p.EnCityName);\n            Property(p </span>=&gt;<span style=\"color: #000000;\"> p.CityImgUrl);\n            Property(p </span>=&gt;<span style=\"color: #000000;\"> p.LatLng);\n            Property(p </span>=&gt;<span style=\"color: #000000;\"> p.Keywords);\n            Property(p </span>=&gt;<span style=\"color: #000000;\"> p.IsRecommend);\n            Property(p </span>=&gt;<span style=\"color: #000000;\"> p.IsDepart);\n            Property(p </span>=&gt;<span style=\"color: #000000;\"> p.AreaId);\n            Property(p </span>=&gt;<span style=\"color: #000000;\"> p.CityContent);\n        }\n    }\n    </span><span style=\"color: #0000ff;\">#endregion</span><span style=\"color: #000000;\">\n}</span></pre>\n</div>\n<p>&nbsp;</p>\n<p>将实体写好，就可以进行实现了</p>\n<p>&nbsp;</p>\n<p>但是在迁移到.net core的时候遇到的问题：</p>\n<p>1. 创建Session，使用.net&nbsp;framework的方法将不可用</p>\n<p>2.config中对于NHiberante的配置也读取不到</p>\n<p>3.基于问题1，映射类也无法进行实现</p>\n<p>好在是在.net core中有一个辅助的开源框架<a href=\"http://fluentnhibernate.org/\">Fluent NHibernate</a>，它可以帮我解决上面遇到的问题，但是在具体使用时也踩了不少坑</p>\n<p>1.网上的文档基本都是映射类在xml中的，但是当实际项目在.cs文件中时，大量的文件映射从.cs文件迁到到.xml文件将变得特别繁琐</p>\n<p>最后的解决办法，创建session方法中GetSessionFactory方法做以下修改</p>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 创建ISessionFactory\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> ISessionFactory GetSessionFactory()\n        {\n            </span><span style=\"color: #0000ff;\">var</span> assemblyName = Assembly.Load(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ClassMapping</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n\n            NHibernate.Cfg.Configuration setCfg(NHibernate.Cfg.Configuration c)\n            {\n                c.Properties.Add(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">show_sql</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">true</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n                c.Properties.Add(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">adonet.batch_size</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">1000</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n                c.Properties.Add(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">generate_statistics</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">false</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n                c.Properties.Add(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">format_sql</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">true</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n                c.Properties.Add(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">command_timeout</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">60</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n                c.Properties.Add(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">current_session_context_class</span><span style=\"color: #800000;\">\"</span>, <span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">web</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n                </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> c;\n            }\n\n            </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> Fluently.Configure().Database(\nFluentNHibernate.Cfg.Db.MsSqlConfiguration.MsSql2012.ConnectionString(</span><span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">Server=0.0.0.1,111;Database=test_db;Uid=sa;Pwd=123456;</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">))\n                        .Mappings(m </span>=&gt;<span style=\"color: #000000;\"> m.FluentMappings.AddFromAssembly(assemblyName))\n                        .ExposeConfiguration(c </span>=&gt; <span style=\"color: #0000ff;\">new</span> SchemaUpdate(c).Execute(<span style=\"color: #0000ff;\">true</span>, <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">))\n                        .ExposeConfiguration(c </span>=&gt;<span style=\"color: #000000;\"> setCfg(c))\n                        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">.ExposeConfiguration(f =&gt; f.SetInterceptor(new SqlStatementInterceptor()))</span>\n<span style=\"color: #000000;\">                        .BuildSessionFactory();\n\n        }</span></pre>\n</div>\n<p>其中映射类的引入在</p>\n<p>.Mappings(m =&gt; m.FluentMappings.AddFromAssembly(assemblyName))</p>\n<p>这句话，是将命名空间引入，所以具体映射类可以重新新建一个项目，名字就叫做ClassMapping，具体的映射类做以下修改</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> Entity;\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> FluentNHibernate.Mapping;\n</span><span style=\"color: #008080;\"> 3</span> \n<span style=\"color: #008080;\"> 4</span> <span style=\"color: #0000ff;\">namespace</span><span style=\"color: #000000;\"> ClassMapping\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">{\n</span><span style=\"color: #008080;\"> 6</span>     <span style=\"color: #0000ff;\">#region</span> CityMap\n<span style=\"color: #008080;\"> 7</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span> CityMap : ClassMap&lt;City&gt;\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">    {\n</span><span style=\"color: #008080;\"> 9</span>         <span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> CityMap()\n</span><span style=\"color: #008080;\">10</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">11</span>             Table(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">City</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n</span><span style=\"color: #008080;\">12</span> \n<span style=\"color: #008080;\">13</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">SelectBeforeUpdate(true);\n</span><span style=\"color: #008080;\">14</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">DynamicUpdate(true);\n</span><span style=\"color: #008080;\">15</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Cache(p =&gt; p.Usage(CacheUsage.ReadWrite));</span>\n<span style=\"color: #008080;\">16</span>             Id(p =&gt;<span style=\"color: #000000;\"> p.CityId);\n</span><span style=\"color: #008080;\">17</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.OldCityId);\n</span><span style=\"color: #008080;\">18</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.ParentId);\n</span><span style=\"color: #008080;\">19</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.CityName);\n</span><span style=\"color: #008080;\">20</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.EnCityName);\n</span><span style=\"color: #008080;\">21</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.CityImgUrl);\n</span><span style=\"color: #008080;\">22</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.LatLng);\n</span><span style=\"color: #008080;\">23</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.Keywords);\n</span><span style=\"color: #008080;\">24</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.IsRecommend);\n</span><span style=\"color: #008080;\">25</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.IsDepart);\n</span><span style=\"color: #008080;\">26</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.AreaId);\n</span><span style=\"color: #008080;\">27</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.CityContent);\n</span><span style=\"color: #008080;\">28</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">29</span> <span style=\"color: #000000;\">    }\n</span><span style=\"color: #008080;\">30</span>     <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">31</span> \n<span style=\"color: #008080;\">32</span> }</pre>\n</div>\n<p>&nbsp;</p>\n<p>在迁移过程中会碰到映射关系的迁移</p>\n<p>以前的版本中为</p>\n<div class=\"cnblogs_code\">\n<pre>            OneToOne(p =&gt; p.City, map =&gt;<span style=\"color: #000000;\">\n            {\n                map.Cascade(Cascade.All);\n                map.Lazy(LazyRelation.Proxy);\n            });</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">一对一</span>\n<span style=\"color: #000000;\">\n            ManyToOne(p </span>=&gt; p.Province, map =&gt; map.Column(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ProvinceId</span><span style=\"color: #800000;\">\"</span>));<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">多对一</span>\n<span style=\"color: #000000;\">\n            Bag(p </span>=&gt; p.Counties, map =&gt;<span style=\"color: #000000;\">\n            {\n                map.Key(k </span>=&gt; k.Column(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">CountyId</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">));\n                map.OrderBy(k </span>=&gt;<span style=\"color: #000000;\"> k.SortId);\n            }, rel </span>=&gt; rel.OneToMany());<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">一对多</span></pre>\n</div>\n<p>.net core版本中对应为</p>\n<div class=\"cnblogs_code\">\n<pre>HasOne(p =&gt; p.City).Cascade.All().LazyLoad();<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">一对一\n\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">References&lt;Province&gt;(r =&gt; r.Province).Column(\"ProvinceId\").ForeignKey(\"ProvinceId\").Cascade.None();</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">多对一，在实际运用中会出现问题</span>\n<span style=\"color: #000000;\">\nHasMany(p </span>=&gt; p.Counties).KeyColumn(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">CountyId</span><span style=\"color: #800000;\">\"</span>).OrderBy(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">CountyId</span><span style=\"color: #800000;\">\"</span>).LazyLoad();<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">一对多</span></pre>\n</div>\n<p>&nbsp;</p>\n<p>city实体</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #000000;\">    [Serializable]\n</span><span style=\"color: #008080;\"> 2</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> City : BaseEntity\n</span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #000000;\">    {\n</span><span style=\"color: #008080;\"> 4</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\"> 5</span>          <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> CityId\n</span><span style=\"color: #008080;\"> 6</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\"> 7</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">int</span> CityId { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n</span><span style=\"color: #008080;\"> 8</span> \n<span style=\"color: #008080;\"> 9</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">10</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Version\n</span><span style=\"color: #008080;\">11</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">12</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">int</span> Version { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n</span><span style=\"color: #008080;\">13</span> \n<span style=\"color: #008080;\">14</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">15</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> OldCityId\n</span><span style=\"color: #008080;\">16</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">17</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">int</span> OldCityId { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; } \n</span><span style=\"color: #008080;\">18</span> \n<span style=\"color: #008080;\">19</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">20</span>          <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> ParentId\n</span><span style=\"color: #008080;\">21</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">22</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">int</span> ParentId { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; } \n</span><span style=\"color: #008080;\">23</span> \n<span style=\"color: #008080;\">24</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">25</span>          <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 城市名称\n</span><span style=\"color: #008080;\">26</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">27</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">string</span> CityName { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; } \n</span><span style=\"color: #008080;\">28</span> \n<span style=\"color: #008080;\">29</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">30</span>          <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 城市英文名称\n</span><span style=\"color: #008080;\">31</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">32</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">string</span> EnCityName { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; } \n</span><span style=\"color: #008080;\">33</span> \n<span style=\"color: #008080;\">34</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">35</span>          <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> CityImgUrl\n</span><span style=\"color: #008080;\">36</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">37</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">string</span> CityImgUrl { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; } \n</span><span style=\"color: #008080;\">38</span> \n<span style=\"color: #008080;\">39</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">40</span>          <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 经纬度\n</span><span style=\"color: #008080;\">41</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">42</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">string</span> LatLng { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; } \n</span><span style=\"color: #008080;\">43</span> \n<span style=\"color: #008080;\">44</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">45</span>          <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 关键字\n</span><span style=\"color: #008080;\">46</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">47</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">string</span> Keywords { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n</span><span style=\"color: #008080;\">48</span> \n<span style=\"color: #008080;\">49</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">50</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 是否推荐\n</span><span style=\"color: #008080;\">51</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">52</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">bool</span> IsRecommend { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n</span><span style=\"color: #008080;\">53</span> \n<span style=\"color: #008080;\">54</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">55</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> IsDepart\n</span><span style=\"color: #008080;\">56</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">57</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">bool</span> IsDepart { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; } \n</span><span style=\"color: #008080;\">58</span> \n<span style=\"color: #008080;\">59</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">60</span>          <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 航区\n</span><span style=\"color: #008080;\">61</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">62</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">int</span> AreaId { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; } \n</span><span style=\"color: #008080;\">63</span> \n<span style=\"color: #008080;\">64</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">65</span>          <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 城市介绍\n</span><span style=\"color: #008080;\">66</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">67</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">string</span> CityContent { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; } \n</span><span style=\"color: #008080;\">68</span> \n<span style=\"color: #008080;\">69</span>     }</pre>\n</div>\n<p>&nbsp;</p>\n<p>下面是操作session，进行数据库调用的方法</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #008080;\">  1</span>     <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">  2</span>     <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Hibernate操作Helper \n</span><span style=\"color: #008080;\">  3</span>     <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">  4</span>     <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;typeparam name=\"T\"&gt;&lt;/typeparam&gt;</span>\n<span style=\"color: #008080;\">  5</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span> DbHelper&lt;T&gt; <span style=\"color: #0000ff;\">where</span><span style=\"color: #000000;\"> T : BaseEntity\n</span><span style=\"color: #008080;\">  6</span> <span style=\"color: #000000;\">    {\n</span><span style=\"color: #008080;\">  7</span>         <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">readonly</span> ISession _session =<span style=\"color: #000000;\"> SessionBuilder.GetSession();\n</span><span style=\"color: #008080;\">  8</span>         <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">protected static readonly ILog Log = LogManager.GetLogger(MethodBase.GetCurrentMethod().DeclaringType);</span>\n<span style=\"color: #008080;\">  9</span> \n<span style=\"color: #008080;\"> 10</span>         <span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> DbHelper() { }\n</span><span style=\"color: #008080;\"> 11</span> \n<span style=\"color: #008080;\"> 12</span>         <span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> DbHelper(ISession session)\n</span><span style=\"color: #008080;\"> 13</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\"> 14</span>             _session =<span style=\"color: #000000;\"> session;\n</span><span style=\"color: #008080;\"> 15</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\"> 16</span> \n<span style=\"color: #008080;\"> 17</span>         <span style=\"color: #0000ff;\">#region</span> 获取一个实体\n<span style=\"color: #008080;\"> 18</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\"> 19</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 获取一个实体（一级缓存）\n</span><span style=\"color: #008080;\"> 20</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\"> 21</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"id\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\"> 22</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\"> 23</span>         <span style=\"color: #0000ff;\">public</span> T Load(<span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> id)\n</span><span style=\"color: #008080;\"> 24</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\"> 25</span>             <span style=\"color: #0000ff;\">return</span> _session.Load&lt;T&gt;<span style=\"color: #000000;\">(id);\n</span><span style=\"color: #008080;\"> 26</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\"> 27</span> \n<span style=\"color: #008080;\"> 28</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\"> 29</span> \n<span style=\"color: #008080;\"> 30</span>         <span style=\"color: #0000ff;\">#region</span> 获取一个实体（缓存）\n<span style=\"color: #008080;\"> 31</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\"> 32</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 获取一个实体（二级缓存）\n</span><span style=\"color: #008080;\"> 33</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\"> 34</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"id\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\"> 35</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\"> 36</span>         <span style=\"color: #0000ff;\">public</span> T Get(<span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> id)\n</span><span style=\"color: #008080;\"> 37</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\"> 38</span>             <span style=\"color: #0000ff;\">return</span> _session.Get&lt;T&gt;<span style=\"color: #000000;\">(id);\n</span><span style=\"color: #008080;\"> 39</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\"> 40</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\"> 41</span> \n<span style=\"color: #008080;\"> 42</span>         <span style=\"color: #0000ff;\">#region</span> 销毁一个实体\n<span style=\"color: #008080;\"> 43</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\"> 44</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 销毁一个实体\n</span><span style=\"color: #008080;\"> 45</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\"> 46</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"obj\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\"> 47</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\"> 48</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">void</span> Evict(<span style=\"color: #0000ff;\">object</span><span style=\"color: #000000;\"> obj)\n</span><span style=\"color: #008080;\"> 49</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\"> 50</span> <span style=\"color: #000000;\">            _session.Evict(obj);\n</span><span style=\"color: #008080;\"> 51</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\"> 52</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\"> 53</span> \n<span style=\"color: #008080;\"> 54</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\"> 55</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 根据SQL语句获取\n</span><span style=\"color: #008080;\"> 56</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\"> 57</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"sql\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\"> 58</span>         <span style=\"color: #0000ff;\">public</span> ISQLQuery CreateSqlQuery(<span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> sql)\n</span><span style=\"color: #008080;\"> 59</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\"> 60</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> _session.CreateSQLQuery(sql);\n</span><span style=\"color: #008080;\"> 61</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\"> 62</span> \n<span style=\"color: #008080;\"> 63</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\"> 64</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 获取集合\n</span><span style=\"color: #008080;\"> 65</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\"> 66</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"hql\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\"> 67</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\"> 68</span>         <span style=\"color: #0000ff;\">public</span> ICriteria GetCriteria(<span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> hql)\n</span><span style=\"color: #008080;\"> 69</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\"> 70</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> _session.CreateCriteria(hql);\n</span><span style=\"color: #008080;\"> 71</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\"> 72</span> \n<span style=\"color: #008080;\"> 73</span>         <span style=\"color: #0000ff;\">#region</span> 获取全部数据\n<span style=\"color: #008080;\"> 74</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\"> 75</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 获取全部数据\n</span><span style=\"color: #008080;\"> 76</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\"> 77</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"cacheable\"&gt;</span><span style=\"color: #008000;\">是否缓存</span><span style=\"color: #808080;\">&lt;/param&gt;</span>\n<span style=\"color: #008080;\"> 78</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\"> 79</span>         <span style=\"color: #0000ff;\">public</span> IEnumerable&lt;T&gt; GetAll(<span style=\"color: #0000ff;\">bool</span><span style=\"color: #000000;\"> cacheable)\n</span><span style=\"color: #008080;\"> 80</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\"> 81</span>             <span style=\"color: #0000ff;\">var</span> ic = _session.CreateCriteria(<span style=\"color: #0000ff;\">typeof</span><span style=\"color: #000000;\">(T));\n</span><span style=\"color: #008080;\"> 82</span>             IEnumerable&lt;T&gt; list = ic.SetCacheable(cacheable).List&lt;T&gt;() ?? <span style=\"color: #0000ff;\">new</span> List&lt;T&gt;<span style=\"color: #000000;\">();\n</span><span style=\"color: #008080;\"> 83</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> list;\n</span><span style=\"color: #008080;\"> 84</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\"> 85</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\"> 86</span> \n<span style=\"color: #008080;\"> 87</span>         <span style=\"color: #0000ff;\">#region</span> 插入或者更新数据\n<span style=\"color: #008080;\"> 88</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\"> 89</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 插入数据\n</span><span style=\"color: #008080;\"> 90</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\"> 91</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"entity\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\"> 92</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\"> 93</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> Save(T entity)\n</span><span style=\"color: #008080;\"> 94</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\"> 95</span>             <span style=\"color: #0000ff;\">var</span> id = <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\"> 96</span>             <span style=\"color: #0000ff;\">var</span> session = <span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">._session;\n</span><span style=\"color: #008080;\"> 97</span>             ITransaction tan =<span style=\"color: #000000;\"> session.BeginTransaction();\n</span><span style=\"color: #008080;\"> 98</span> \n<span style=\"color: #008080;\"> 99</span>             <span style=\"color: #0000ff;\">try</span>\n<span style=\"color: #008080;\">100</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">101</span>                 entity =<span style=\"color: #000000;\"> session.Merge(entity);\n</span><span style=\"color: #008080;\">102</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">103</span>             <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e)\n</span><span style=\"color: #008080;\">104</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">105</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Log.DebugFormat($\"Save124，Exception：{e.Message}，entity:{JsonConvert.SerializeObject(entity)}\");</span>\n<span style=\"color: #008080;\">106</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">107</span> \n<span style=\"color: #008080;\">108</span>             <span style=\"color: #0000ff;\">try</span>\n<span style=\"color: #008080;\">109</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">110</span> <span style=\"color: #000000;\">                tan.Begin();\n</span><span style=\"color: #008080;\">111</span>                 id = (<span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\">)session.Save(entity);\n</span><span style=\"color: #008080;\">112</span> <span style=\"color: #000000;\">                session.Flush();\n</span><span style=\"color: #008080;\">113</span> <span style=\"color: #000000;\">                tan.Commit();\n</span><span style=\"color: #008080;\">114</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">115</span>             <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e)\n</span><span style=\"color: #008080;\">116</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">117</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Log.DebugFormat($\"Save136，Exception：{e.Message}，entity:{JsonConvert.SerializeObject(entity)}\");</span>\n<span style=\"color: #008080;\">118</span> <span style=\"color: #000000;\">                tan.Rollback();\n</span><span style=\"color: #008080;\">119</span>                 <span style=\"color: #0000ff;\">throw</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">120</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">121</span> \n<span style=\"color: #008080;\">122</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> id;\n</span><span style=\"color: #008080;\">123</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">124</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">125</span> \n<span style=\"color: #008080;\">126</span>         <span style=\"color: #0000ff;\">#region</span> 更新数据\n<span style=\"color: #008080;\">127</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">128</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 更新数据\n</span><span style=\"color: #008080;\">129</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">130</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"entity\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\">131</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">132</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> Update(T entity)\n</span><span style=\"color: #008080;\">133</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">134</span>             <span style=\"color: #0000ff;\">int</span> result = <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">135</span>             ITransaction tan =<span style=\"color: #000000;\"> _session.BeginTransaction();\n</span><span style=\"color: #008080;\">136</span>             <span style=\"color: #0000ff;\">var</span> session = <span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">._session;\n</span><span style=\"color: #008080;\">137</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">entity = (T)_session.Merge(entity);</span>\n<span style=\"color: #008080;\">138</span>             <span style=\"color: #0000ff;\">try</span>\n<span style=\"color: #008080;\">139</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">140</span>                 entity =<span style=\"color: #000000;\"> session.Merge(entity);\n</span><span style=\"color: #008080;\">141</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">142</span>             <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e)\n</span><span style=\"color: #008080;\">143</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">144</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Log.DebugFormat($\"Update163，Exception：{e.Message}，entity:{JsonConvert.SerializeObject(entity)}\");</span>\n<span style=\"color: #008080;\">145</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">146</span>             <span style=\"color: #0000ff;\">try</span>\n<span style=\"color: #008080;\">147</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">148</span> <span style=\"color: #000000;\">                tan.Begin();\n</span><span style=\"color: #008080;\">149</span> <span style=\"color: #000000;\">                _session.Update(entity);\n</span><span style=\"color: #008080;\">150</span> <span style=\"color: #000000;\">                _session.Flush();\n</span><span style=\"color: #008080;\">151</span> <span style=\"color: #000000;\">                tan.Commit();\n</span><span style=\"color: #008080;\">152</span>                 result++<span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">153</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">154</span>             <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e)\n</span><span style=\"color: #008080;\">155</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">156</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Log.DebugFormat($\"Update175，Exception：{e.Message}，entity:{JsonConvert.SerializeObject(entity)}\");</span>\n<span style=\"color: #008080;\">157</span> <span style=\"color: #000000;\">                tan.Rollback();\n</span><span style=\"color: #008080;\">158</span>                 <span style=\"color: #0000ff;\">throw</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">159</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">160</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> result;\n</span><span style=\"color: #008080;\">161</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">162</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">163</span> \n<span style=\"color: #008080;\">164</span>         <span style=\"color: #0000ff;\">#region</span> 删除一条数据\n<span style=\"color: #008080;\">165</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">166</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 删除一条数据\n</span><span style=\"color: #008080;\">167</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">168</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"id\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\">169</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">170</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">int</span> DeleteModelById(<span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> id)\n</span><span style=\"color: #008080;\">171</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">172</span>             <span style=\"color: #0000ff;\">int</span> result = <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">173</span>             <span style=\"color: #0000ff;\">object</span> item =<span style=\"color: #000000;\"> Get(id);\n</span><span style=\"color: #008080;\">174</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">ITransaction tan = _session.BeginTransaction();</span>\n<span style=\"color: #008080;\">175</span>             <span style=\"color: #0000ff;\">try</span>\n<span style=\"color: #008080;\">176</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">177</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">tan.Begin();</span>\n<span style=\"color: #008080;\">178</span> <span style=\"color: #000000;\">                _session.Delete(item);\n</span><span style=\"color: #008080;\">179</span> <span style=\"color: #000000;\">                _session.Flush();\n</span><span style=\"color: #008080;\">180</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">tan.Commit();</span>\n<span style=\"color: #008080;\">181</span>                 result++<span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">182</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">183</span>             <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception)\n</span><span style=\"color: #008080;\">184</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">185</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">tan.Rollback();</span>\n<span style=\"color: #008080;\">186</span>                 <span style=\"color: #0000ff;\">throw</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">187</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">188</span> \n<span style=\"color: #008080;\">189</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> result;\n</span><span style=\"color: #008080;\">190</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">191</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">192</span> \n<span style=\"color: #008080;\">193</span>         <span style=\"color: #0000ff;\">#region</span> 删除一个实体对象\n<span style=\"color: #008080;\">194</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">195</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 删除一个实体对象\n</span><span style=\"color: #008080;\">196</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">197</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"entity\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\">198</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">199</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> DeleteModel(BaseEntity entity)\n</span><span style=\"color: #008080;\">200</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">201</span>             <span style=\"color: #0000ff;\">var</span> result = <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">202</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">ITransaction tan = _session.BeginTransaction();</span>\n<span style=\"color: #008080;\">203</span>             <span style=\"color: #0000ff;\">try</span>\n<span style=\"color: #008080;\">204</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">205</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">tan.Begin();</span>\n<span style=\"color: #008080;\">206</span> <span style=\"color: #000000;\">                _session.Delete(entity);\n</span><span style=\"color: #008080;\">207</span> <span style=\"color: #000000;\">                _session.Flush();\n</span><span style=\"color: #008080;\">208</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">tan.Commit();</span>\n<span style=\"color: #008080;\">209</span>                 result++<span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">210</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">211</span>             <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception)\n</span><span style=\"color: #008080;\">212</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">213</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">tan.Rollback();</span>\n<span style=\"color: #008080;\">214</span>                 <span style=\"color: #0000ff;\">throw</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">215</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">216</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> result;\n</span><span style=\"color: #008080;\">217</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">218</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">219</span> \n<span style=\"color: #008080;\">220</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">221</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 根据SQL语句删除\n</span><span style=\"color: #008080;\">222</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">223</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"sql\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\">224</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">void</span> DeleteList(<span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> sql)\n</span><span style=\"color: #008080;\">225</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">226</span> <span style=\"color: #000000;\">            _session.CreateSQLQuery(sql).UniqueResult();\n</span><span style=\"color: #008080;\">227</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">228</span> \n<span style=\"color: #008080;\">229</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">230</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 删除泛型集合\n</span><span style=\"color: #008080;\">231</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">232</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"models\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\">233</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">void</span> DeleteList(IList&lt;T&gt;<span style=\"color: #000000;\"> models)\n</span><span style=\"color: #008080;\">234</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">235</span>             <span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #0000ff;\">var</span> model <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> models)\n</span><span style=\"color: #008080;\">236</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">237</span> <span style=\"color: #000000;\">                DeleteModel(model);\n</span><span style=\"color: #008080;\">238</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">239</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">240</span> \n<span style=\"color: #008080;\">241</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">bool</span> IsExist(Expression&lt;Func&lt;T, <span style=\"color: #0000ff;\">bool</span>&gt;&gt;<span style=\"color: #000000;\"> keyWhere)\n</span><span style=\"color: #008080;\">242</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">243</span>             <span style=\"color: #0000ff;\">var</span> ss = _session.QueryOver&lt;T&gt;<span style=\"color: #000000;\">().Where(keyWhere);\n</span><span style=\"color: #008080;\">244</span>             <span style=\"color: #0000ff;\">return</span> ss.RowCount() &gt; <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">245</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">246</span> \n<span style=\"color: #008080;\">247</span>         <span style=\"color: #0000ff;\">#region</span> GetQuery\n<span style=\"color: #008080;\">248</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">249</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> GetQuery\n</span><span style=\"color: #008080;\">250</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">251</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">252</span>         <span style=\"color: #0000ff;\">public</span> IQueryable&lt;T&gt;<span style=\"color: #000000;\"> GetQuery()\n</span><span style=\"color: #008080;\">253</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">254</span>             <span style=\"color: #0000ff;\">try</span>\n<span style=\"color: #008080;\">255</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">256</span>                 <span style=\"color: #0000ff;\">return</span> _session.Query&lt;T&gt;<span style=\"color: #000000;\">();\n</span><span style=\"color: #008080;\">257</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">258</span>             <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e)\n</span><span style=\"color: #008080;\">259</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">260</span>                 <span style=\"color: #0000ff;\">var</span> session =<span style=\"color: #000000;\"> SessionBuilder.GetSession();\n</span><span style=\"color: #008080;\">261</span>                 <span style=\"color: #0000ff;\">return</span> session.Query&lt;T&gt;<span style=\"color: #000000;\">();\n</span><span style=\"color: #008080;\">262</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">263</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">264</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">265</span> \n<span style=\"color: #008080;\">266</span>         <span style=\"color: #0000ff;\">#region</span> GetQueryOver\n<span style=\"color: #008080;\">267</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">268</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> GetQueryOver\n</span><span style=\"color: #008080;\">269</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">270</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">271</span>         <span style=\"color: #0000ff;\">public</span> IQueryOver&lt;T, T&gt; GetQueryOver(Expression&lt;Func&lt;T, <span style=\"color: #0000ff;\">bool</span>&gt;&gt;<span style=\"color: #000000;\"> keyWhere)\n</span><span style=\"color: #008080;\">272</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">273</span>             <span style=\"color: #0000ff;\">return</span> _session.QueryOver&lt;T&gt;<span style=\"color: #000000;\">().Where(keyWhere);\n</span><span style=\"color: #008080;\">274</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">275</span> \n<span style=\"color: #008080;\">276</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">277</span> \n<span style=\"color: #008080;\">278</span>         <span style=\"color: #0000ff;\">#region</span> GetQueryOver\n<span style=\"color: #008080;\">279</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">280</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> GetQueryOver\n</span><span style=\"color: #008080;\">281</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">282</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">283</span>         <span style=\"color: #0000ff;\">public</span> IQueryOver&lt;T, T&gt;<span style=\"color: #000000;\"> GetQueryOver()\n</span><span style=\"color: #008080;\">284</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">285</span>             <span style=\"color: #0000ff;\">return</span> _session.QueryOver&lt;T&gt;<span style=\"color: #000000;\">();\n</span><span style=\"color: #008080;\">286</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">287</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">288</span> \n<span style=\"color: #008080;\">289</span>         <span style=\"color: #0000ff;\">#region</span> 获取集合ByHql\n<span style=\"color: #008080;\">290</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">291</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 获取集合ByHql\n</span><span style=\"color: #008080;\">292</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">293</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"strHql\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\">294</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">295</span>         <span style=\"color: #0000ff;\">public</span> IQuery GetQueryByHql(<span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> strHql)\n</span><span style=\"color: #008080;\">296</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">297</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> _session.CreateQuery(strHql);\n</span><span style=\"color: #008080;\">298</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">299</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">300</span> \n<span style=\"color: #008080;\">301</span>         <span style=\"color: #0000ff;\">#region</span> 获取集合BySql\n<span style=\"color: #008080;\">302</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">303</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 获取集合BySql\n</span><span style=\"color: #008080;\">304</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">305</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"strSql\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\">306</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">307</span>         <span style=\"color: #0000ff;\">public</span> IQuery GetQueryBySql(<span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> strSql)\n</span><span style=\"color: #008080;\">308</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">309</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> _session.CreateSQLQuery(strSql);\n</span><span style=\"color: #008080;\">310</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">311</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">312</span>     }</pre>\n</div>\n<p>&nbsp;</p>","slug":"cnblogs/11103355","published":1,"updated":"2022-07-10T13:01:24.834Z","_id":"cl5f7iz9m0023c0uncckl4fi8","comments":1,"layout":"post","photos":[],"link":"","content":"<p><span style=\"color: #ff0000;\"><span style=\"color: #000000;\">在.net&nbsp;framework中的创建session代码先贴一个</span></span></p>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #008080;\"> 1</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> SessionBuilder\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">    {\n</span><span style=\"color: #008080;\"> 3</span>         <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">static</span> ISessionFactory _sessionFactory = <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\"> 4</span> \n<span style=\"color: #008080;\"> 5</span>         <span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> SessionBuilder()\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\"> 7</span>             <span style=\"color: #0000ff;\">if</span> (_sessionFactory == <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">创建ISessionFactory</span>\n<span style=\"color: #008080;\">10</span>                 _sessionFactory =<span style=\"color: #000000;\"> GetSessionFactory();\n</span><span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">12</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">13</span> \n<span style=\"color: #008080;\">14</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">15</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 创建ISessionFactory\n</span><span style=\"color: #008080;\">16</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">17</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">18</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> ISessionFactory GetSessionFactory()\n</span><span style=\"color: #008080;\">19</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">20</span> <span style=\"color: #000000;\">            //HibernatingRhinos.Profiler.Appender.NHibernate.NHibernateProfiler.Initialize();\n</span><span style=\"color: #008080;\">21</span> \n<span style=\"color: #008080;\">22</span>             <span style=\"color: #0000ff;\">var</span> mappers = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ModelMapper();\n</span><span style=\"color: #008080;\">23</span> <span style=\"color: #000000;\">            mappers.AddMappings(Assembly.GetExecutingAssembly().GetExportedTypes());\n</span><span style=\"color: #008080;\">24</span> \n<span style=\"color: #008080;\">25</span>             <span style=\"color: #0000ff;\">var</span> cfg = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Configuration().Configure();\n</span><span style=\"color: #008080;\">26</span>             cfg.AddDeserializedMapping(mappers.CompileMappingForAllExplicitlyAddedEntities(), <span style=\"color: #800000;\">\"\"</span><span style=\"color: #000000;\">);\n</span><span style=\"color: #008080;\">27</span> \n<span style=\"color: #008080;\">28</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> cfg.BuildSessionFactory();\n</span><span style=\"color: #008080;\">29</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">30</span> \n<span style=\"color: #008080;\">31</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">32</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 打开ISession\n</span><span style=\"color: #008080;\">33</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">34</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">35</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> ISession GetSession()\n</span><span style=\"color: #008080;\">36</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">37</span>             <span style=\"color: #0000ff;\">if</span> (_sessionFactory == <span style=\"color: #0000ff;\">null</span> ||<span style=\"color: #000000;\"> _sessionFactory.IsClosed)\n</span><span style=\"color: #008080;\">38</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">39</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">创建ISessionFactory</span>\n<span style=\"color: #008080;\">40</span>                 _sessionFactory =<span style=\"color: #000000;\"> GetSessionFactory();\n</span><span style=\"color: #008080;\">41</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">42</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">43</span> \n<span style=\"color: #008080;\">44</span> \n<span style=\"color: #008080;\">45</span>         <span style=\"color: #0000ff;\">#region</span> 打开一个新的Session\n<span style=\"color: #008080;\">46</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> ISession OpenSession()\n</span><span style=\"color: #008080;\">47</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">48</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> _sessionFactory.OpenSession();\n</span><span style=\"color: #008080;\">49</span>\n<span style=\"color: #008080;\">50</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">51</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">52</span> \n<span style=\"color: #008080;\">53</span>     }</pre>\n</div>\n<p>与数据库的交互时，需要先在web.config配置（数据库为sql server）</p>\n<div class=\"cnblogs_code\">\n<pre>&lt;configuration&gt;\n  &lt;configSections&gt;\n    &lt;section name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">hibernate-configuration</span><span style=\"color: #800000;\">\"</span> type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">NHibernate.Cfg.ConfigurationSectionHandler, NHibernate</span><span style=\"color: #800000;\">\"</span> /&gt;\n  &lt;/configSections&gt;\n  &lt;!--NHibernate配置开始--&gt;\n  &lt;hibernate-configuration xmlns=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">urn:nhibernate-configuration-2.2</span><span style=\"color: #800000;\">\"</span>&gt;\n    &lt;session-factory&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">connection.provider</span><span style=\"color: #800000;\">\"</span>&gt;NHibernate.Connection.DriverConnectionProvider&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">connection.driver_class</span><span style=\"color: #800000;\">\"</span>&gt;NHibernate.Driver.SqlClientDriver&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">dialect</span><span style=\"color: #800000;\">\"</span>&gt;NHibernate.Dialect.MsSql2012Dialect&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">show_sql</span><span style=\"color: #800000;\">\"</span>&gt;<span style=\"color: #0000ff;\">false</span>&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">connection.connection_string_name</span><span style=\"color: #800000;\">\"</span>&gt;ylsdai&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">adonet.batch_size</span><span style=\"color: #800000;\">\"</span>&gt;<span style=\"color: #800080;\">30</span>&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">generate_statistics</span><span style=\"color: #800000;\">\"</span>&gt;<span style=\"color: #0000ff;\">false</span>&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">format_sql</span><span style=\"color: #800000;\">\"</span>&gt;<span style=\"color: #0000ff;\">true</span>&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">command_timeout</span><span style=\"color: #800000;\">\"</span>&gt;<span style=\"color: #800080;\">60</span>&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">current_session_context_class</span><span style=\"color: #800000;\">\"</span>&gt;web&lt;/property&gt;\n      &lt;!--&lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">cache.provider_class</span><span style=\"color: #800000;\">\"</span>&gt;NHibernate.Caches.SysCache2.SysCacheProvider,NHibernate.Caches.SysCache2&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">cache.default_expiration</span><span style=\"color: #800000;\">\"</span>&gt;<span style=\"color: #800080;\">120</span>&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">cache.use_second_level_cache</span><span style=\"color: #800000;\">\"</span>&gt;<span style=\"color: #0000ff;\">true</span>&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">cache.use_query_cache</span><span style=\"color: #800000;\">\"</span>&gt;<span style=\"color: #0000ff;\">true</span>&lt;/property&gt;--&gt;\n    &lt;/session-factory&gt;\n  &lt;/hibernate-configuration&gt;\n  &lt;!--NHibernate配置结束--&gt;\n  &lt;connectionStrings&gt;\n    &lt;!--test_db--&gt;\n    &lt;!--&lt;add name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ylsdai</span><span style=\"color: #800000;\">\"</span> connectionString=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">data source=0.0.0.1,111;database=test_db;uid=sa;pwd=123456</span><span style=\"color: #800000;\">\"</span> providerName=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">System.Data.SqlClient</span><span style=\"color: #800000;\">\"</span> /&gt;\n  &lt;/connectionStrings&gt;\n&lt;/configuration&gt;</pre>\n</div>\n<p>映射类</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> NHibernate.Mapping.ByCode;\n</span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> NHibernate.Mapping.ByCode.Conformist;\n\n<p></span><span style=\"color: #0000ff;\">namespace</span><span style=\"color: #000000;\"> ClassMapping<br>{<br>    </span><span style=\"color: #0000ff;\">#region</span> CityMap<br>    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span> CityMap : ClassMapping&lt;City&gt;<span style=\"color: #000000;\"><br>    {<br>        </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> CityMap()<br>        {</p>\n<pre><code>        SelectBeforeUpdate(&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n        DynamicUpdate(&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;Cache(p =&amp;gt; p.Usage(CacheUsage.ReadWrite));&lt;/span&gt;\n        Id(p =&amp;gt; p.CityId, map =&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; map.Generator(Generators.Native));\n        Property(p &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; p.OldCityId);\n        Property(p &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; p.ParentId);\n        Property(p &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; p.CityName);\n        Property(p &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; p.EnCityName);\n        Property(p &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; p.CityImgUrl);\n        Property(p &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; p.LatLng);\n        Property(p &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; p.Keywords);\n        Property(p &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; p.IsRecommend);\n        Property(p &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; p.IsDepart);\n        Property(p &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; p.AreaId);\n        Property(p &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; p.CityContent);\n    &#125;\n&#125;\n&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;#endregion&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;\n</code></pre>\n<p>}</span></pre></p>\n</div>\n<p>&nbsp;</p>\n<p>将实体写好，就可以进行实现了</p>\n<p>&nbsp;</p>\n<p>但是在迁移到.net core的时候遇到的问题：</p>\n<p>1. 创建Session，使用.net&nbsp;framework的方法将不可用</p>\n<p>2.config中对于NHiberante的配置也读取不到</p>\n<p>3.基于问题1，映射类也无法进行实现</p>\n<p>好在是在.net core中有一个辅助的开源框架<a href=\"http://fluentnhibernate.org/\">Fluent NHibernate</a>，它可以帮我解决上面遇到的问题，但是在具体使用时也踩了不少坑</p>\n<p>1.网上的文档基本都是映射类在xml中的，但是当实际项目在.cs文件中时，大量的文件映射从.cs文件迁到到.xml文件将变得特别繁琐</p>\n<p>最后的解决办法，创建session方法中GetSessionFactory方法做以下修改</p>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 创建ISessionFactory\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> ISessionFactory GetSessionFactory()\n        {\n            </span><span style=\"color: #0000ff;\">var</span> assemblyName = Assembly.Load(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ClassMapping</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n\n<pre><code>        NHibernate.Cfg.Configuration setCfg(NHibernate.Cfg.Configuration c)\n        &#123;\n            c.Properties.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;show_sql&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n            c.Properties.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;adonet.batch_size&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;1000&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n            c.Properties.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;generate_statistics&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;false&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n            c.Properties.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;format_sql&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n            c.Properties.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;command_timeout&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;60&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n            c.Properties.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;current_session_context_class&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;web&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; c;\n        &#125;\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; Fluently.Configure().Database(\n</code></pre>\n<p>FluentNHibernate.Cfg.Db.MsSqlConfiguration.MsSql2012.ConnectionString(</span><span style=\"color: #800000;\">“</span><span style=\"color: #800000;\">Server=0.0.0.1,111;Database=test_db;Uid=sa;Pwd=123456;</span><span style=\"color: #800000;\">“</span><span style=\"color: #000000;\">))<br>                        .Mappings(m </span>=&gt;<span style=\"color: #000000;\"> m.FluentMappings.AddFromAssembly(assemblyName))<br>                        .ExposeConfiguration(c </span>=&gt; <span style=\"color: #0000ff;\">new</span> SchemaUpdate(c).Execute(<span style=\"color: #0000ff;\">true</span>, <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">))<br>                        .ExposeConfiguration(c </span>=&gt;<span style=\"color: #000000;\"> setCfg(c))<br>                        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">.ExposeConfiguration(f =&gt; f.SetInterceptor(new SqlStatementInterceptor()))</span><br><span style=\"color: #000000;\">                        .BuildSessionFactory();</p>\n<pre><code>    &#125;&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<p>其中映射类的引入在</p>\n<p>.Mappings(m =&gt; m.FluentMappings.AddFromAssembly(assemblyName))</p>\n<p>这句话，是将命名空间引入，所以具体映射类可以重新新建一个项目，名字就叫做ClassMapping，具体的映射类做以下修改</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> Entity;\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> FluentNHibernate.Mapping;\n</span><span style=\"color: #008080;\"> 3</span> \n<span style=\"color: #008080;\"> 4</span> <span style=\"color: #0000ff;\">namespace</span><span style=\"color: #000000;\"> ClassMapping\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">{\n</span><span style=\"color: #008080;\"> 6</span>     <span style=\"color: #0000ff;\">#region</span> CityMap\n<span style=\"color: #008080;\"> 7</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span> CityMap : ClassMap&lt;City&gt;\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">    {\n</span><span style=\"color: #008080;\"> 9</span>         <span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> CityMap()\n</span><span style=\"color: #008080;\">10</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">11</span>             Table(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">City</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n</span><span style=\"color: #008080;\">12</span> \n<span style=\"color: #008080;\">13</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">SelectBeforeUpdate(true);\n</span><span style=\"color: #008080;\">14</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">DynamicUpdate(true);\n</span><span style=\"color: #008080;\">15</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Cache(p =&gt; p.Usage(CacheUsage.ReadWrite));</span>\n<span style=\"color: #008080;\">16</span>             Id(p =&gt;<span style=\"color: #000000;\"> p.CityId);\n</span><span style=\"color: #008080;\">17</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.OldCityId);\n</span><span style=\"color: #008080;\">18</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.ParentId);\n</span><span style=\"color: #008080;\">19</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.CityName);\n</span><span style=\"color: #008080;\">20</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.EnCityName);\n</span><span style=\"color: #008080;\">21</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.CityImgUrl);\n</span><span style=\"color: #008080;\">22</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.LatLng);\n</span><span style=\"color: #008080;\">23</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.Keywords);\n</span><span style=\"color: #008080;\">24</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.IsRecommend);\n</span><span style=\"color: #008080;\">25</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.IsDepart);\n</span><span style=\"color: #008080;\">26</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.AreaId);\n</span><span style=\"color: #008080;\">27</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.CityContent);\n</span><span style=\"color: #008080;\">28</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">29</span> <span style=\"color: #000000;\">    }\n</span><span style=\"color: #008080;\">30</span>     <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">31</span> \n<span style=\"color: #008080;\">32</span> }</pre>\n</div>\n<p>&nbsp;</p>\n<p>在迁移过程中会碰到映射关系的迁移</p>\n<p>以前的版本中为</p>\n<div class=\"cnblogs_code\">\n<pre>            OneToOne(p =&gt; p.City, map =&gt;<span style=\"color: #000000;\">\n            {\n                map.Cascade(Cascade.All);\n                map.Lazy(LazyRelation.Proxy);\n            });</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">一对一</span>\n<span style=\"color: #000000;\">\n            ManyToOne(p </span>=&gt; p.Province, map =&gt; map.Column(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ProvinceId</span><span style=\"color: #800000;\">\"</span>));<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">多对一</span>\n<span style=\"color: #000000;\">\n            Bag(p </span>=&gt; p.Counties, map =&gt;<span style=\"color: #000000;\">\n            {\n                map.Key(k </span>=&gt; k.Column(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">CountyId</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">));\n                map.OrderBy(k </span>=&gt;<span style=\"color: #000000;\"> k.SortId);\n            }, rel </span>=&gt; rel.OneToMany());<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">一对多</span></pre>\n</div>\n<p>.net core版本中对应为</p>\n<div class=\"cnblogs_code\">\n<pre>HasOne(p =&gt; p.City).Cascade.All().LazyLoad();<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">一对一\n\n<p></span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">References&lt;Province&gt;(r =&gt; r.Province).Column(“ProvinceId”).ForeignKey(“ProvinceId”).Cascade.None();</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">多对一，在实际运用中会出现问题</span><br><span style=\"color: #000000;\"><br>HasMany(p </span>=&gt; p.Counties).KeyColumn(<span style=\"color: #800000;\">“</span><span style=\"color: #800000;\">CountyId</span><span style=\"color: #800000;\">“</span>).OrderBy(<span style=\"color: #800000;\">“</span><span style=\"color: #800000;\">CountyId</span><span style=\"color: #800000;\">“</span>).LazyLoad();<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">一对多</span></pre></p>\n</div>\n<p>&nbsp;</p>\n<p>city实体</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #000000;\">    [Serializable]\n</span><span style=\"color: #008080;\"> 2</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> City : BaseEntity\n</span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #000000;\">    {\n</span><span style=\"color: #008080;\"> 4</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\"> 5</span>          <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> CityId\n</span><span style=\"color: #008080;\"> 6</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\"> 7</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">int</span> CityId { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n</span><span style=\"color: #008080;\"> 8</span> \n<span style=\"color: #008080;\"> 9</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">10</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Version\n</span><span style=\"color: #008080;\">11</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">12</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">int</span> Version { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n</span><span style=\"color: #008080;\">13</span> \n<span style=\"color: #008080;\">14</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">15</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> OldCityId\n</span><span style=\"color: #008080;\">16</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">17</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">int</span> OldCityId { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; } \n</span><span style=\"color: #008080;\">18</span> \n<span style=\"color: #008080;\">19</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">20</span>          <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> ParentId\n</span><span style=\"color: #008080;\">21</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">22</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">int</span> ParentId { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; } \n</span><span style=\"color: #008080;\">23</span> \n<span style=\"color: #008080;\">24</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">25</span>          <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 城市名称\n</span><span style=\"color: #008080;\">26</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">27</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">string</span> CityName { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; } \n</span><span style=\"color: #008080;\">28</span> \n<span style=\"color: #008080;\">29</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">30</span>          <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 城市英文名称\n</span><span style=\"color: #008080;\">31</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">32</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">string</span> EnCityName { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; } \n</span><span style=\"color: #008080;\">33</span> \n<span style=\"color: #008080;\">34</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">35</span>          <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> CityImgUrl\n</span><span style=\"color: #008080;\">36</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">37</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">string</span> CityImgUrl { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; } \n</span><span style=\"color: #008080;\">38</span> \n<span style=\"color: #008080;\">39</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">40</span>          <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 经纬度\n</span><span style=\"color: #008080;\">41</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">42</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">string</span> LatLng { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; } \n</span><span style=\"color: #008080;\">43</span> \n<span style=\"color: #008080;\">44</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">45</span>          <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 关键字\n</span><span style=\"color: #008080;\">46</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">47</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">string</span> Keywords { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n</span><span style=\"color: #008080;\">48</span> \n<span style=\"color: #008080;\">49</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">50</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 是否推荐\n</span><span style=\"color: #008080;\">51</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">52</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">bool</span> IsRecommend { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n</span><span style=\"color: #008080;\">53</span> \n<span style=\"color: #008080;\">54</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">55</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> IsDepart\n</span><span style=\"color: #008080;\">56</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">57</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">bool</span> IsDepart { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; } \n</span><span style=\"color: #008080;\">58</span> \n<span style=\"color: #008080;\">59</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">60</span>          <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 航区\n</span><span style=\"color: #008080;\">61</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">62</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">int</span> AreaId { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; } \n</span><span style=\"color: #008080;\">63</span> \n<span style=\"color: #008080;\">64</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">65</span>          <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 城市介绍\n</span><span style=\"color: #008080;\">66</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">67</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">string</span> CityContent { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; } \n</span><span style=\"color: #008080;\">68</span> \n<span style=\"color: #008080;\">69</span>     }</pre>\n</div>\n<p>&nbsp;</p>\n<p>下面是操作session，进行数据库调用的方法</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #008080;\">  1</span>     <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">  2</span>     <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Hibernate操作Helper \n</span><span style=\"color: #008080;\">  3</span>     <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">  4</span>     <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;typeparam name=\"T\"&gt;&lt;/typeparam&gt;</span>\n<span style=\"color: #008080;\">  5</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span> DbHelper&lt;T&gt; <span style=\"color: #0000ff;\">where</span><span style=\"color: #000000;\"> T : BaseEntity\n</span><span style=\"color: #008080;\">  6</span> <span style=\"color: #000000;\">    {\n</span><span style=\"color: #008080;\">  7</span>         <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">readonly</span> ISession _session =<span style=\"color: #000000;\"> SessionBuilder.GetSession();\n</span><span style=\"color: #008080;\">  8</span>         <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">protected static readonly ILog Log = LogManager.GetLogger(MethodBase.GetCurrentMethod().DeclaringType);</span>\n<span style=\"color: #008080;\">  9</span> \n<span style=\"color: #008080;\"> 10</span>         <span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> DbHelper() { }\n</span><span style=\"color: #008080;\"> 11</span> \n<span style=\"color: #008080;\"> 12</span>         <span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> DbHelper(ISession session)\n</span><span style=\"color: #008080;\"> 13</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\"> 14</span>             _session =<span style=\"color: #000000;\"> session;\n</span><span style=\"color: #008080;\"> 15</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\"> 16</span> \n<span style=\"color: #008080;\"> 17</span>         <span style=\"color: #0000ff;\">#region</span> 获取一个实体\n<span style=\"color: #008080;\"> 18</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\"> 19</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 获取一个实体（一级缓存）\n</span><span style=\"color: #008080;\"> 20</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\"> 21</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"id\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\"> 22</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\"> 23</span>         <span style=\"color: #0000ff;\">public</span> T Load(<span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> id)\n</span><span style=\"color: #008080;\"> 24</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\"> 25</span>             <span style=\"color: #0000ff;\">return</span> _session.Load&lt;T&gt;<span style=\"color: #000000;\">(id);\n</span><span style=\"color: #008080;\"> 26</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\"> 27</span> \n<span style=\"color: #008080;\"> 28</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\"> 29</span> \n<span style=\"color: #008080;\"> 30</span>         <span style=\"color: #0000ff;\">#region</span> 获取一个实体（缓存）\n<span style=\"color: #008080;\"> 31</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\"> 32</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 获取一个实体（二级缓存）\n</span><span style=\"color: #008080;\"> 33</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\"> 34</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"id\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\"> 35</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\"> 36</span>         <span style=\"color: #0000ff;\">public</span> T Get(<span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> id)\n</span><span style=\"color: #008080;\"> 37</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\"> 38</span>             <span style=\"color: #0000ff;\">return</span> _session.Get&lt;T&gt;<span style=\"color: #000000;\">(id);\n</span><span style=\"color: #008080;\"> 39</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\"> 40</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\"> 41</span> \n<span style=\"color: #008080;\"> 42</span>         <span style=\"color: #0000ff;\">#region</span> 销毁一个实体\n<span style=\"color: #008080;\"> 43</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\"> 44</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 销毁一个实体\n</span><span style=\"color: #008080;\"> 45</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\"> 46</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"obj\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\"> 47</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\"> 48</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">void</span> Evict(<span style=\"color: #0000ff;\">object</span><span style=\"color: #000000;\"> obj)\n</span><span style=\"color: #008080;\"> 49</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\"> 50</span> <span style=\"color: #000000;\">            _session.Evict(obj);\n</span><span style=\"color: #008080;\"> 51</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\"> 52</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\"> 53</span> \n<span style=\"color: #008080;\"> 54</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\"> 55</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 根据SQL语句获取\n</span><span style=\"color: #008080;\"> 56</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\"> 57</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"sql\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\"> 58</span>         <span style=\"color: #0000ff;\">public</span> ISQLQuery CreateSqlQuery(<span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> sql)\n</span><span style=\"color: #008080;\"> 59</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\"> 60</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> _session.CreateSQLQuery(sql);\n</span><span style=\"color: #008080;\"> 61</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\"> 62</span> \n<span style=\"color: #008080;\"> 63</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\"> 64</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 获取集合\n</span><span style=\"color: #008080;\"> 65</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\"> 66</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"hql\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\"> 67</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\"> 68</span>         <span style=\"color: #0000ff;\">public</span> ICriteria GetCriteria(<span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> hql)\n</span><span style=\"color: #008080;\"> 69</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\"> 70</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> _session.CreateCriteria(hql);\n</span><span style=\"color: #008080;\"> 71</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\"> 72</span> \n<span style=\"color: #008080;\"> 73</span>         <span style=\"color: #0000ff;\">#region</span> 获取全部数据\n<span style=\"color: #008080;\"> 74</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\"> 75</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 获取全部数据\n</span><span style=\"color: #008080;\"> 76</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\"> 77</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"cacheable\"&gt;</span><span style=\"color: #008000;\">是否缓存</span><span style=\"color: #808080;\">&lt;/param&gt;</span>\n<span style=\"color: #008080;\"> 78</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\"> 79</span>         <span style=\"color: #0000ff;\">public</span> IEnumerable&lt;T&gt; GetAll(<span style=\"color: #0000ff;\">bool</span><span style=\"color: #000000;\"> cacheable)\n</span><span style=\"color: #008080;\"> 80</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\"> 81</span>             <span style=\"color: #0000ff;\">var</span> ic = _session.CreateCriteria(<span style=\"color: #0000ff;\">typeof</span><span style=\"color: #000000;\">(T));\n</span><span style=\"color: #008080;\"> 82</span>             IEnumerable&lt;T&gt; list = ic.SetCacheable(cacheable).List&lt;T&gt;() ?? <span style=\"color: #0000ff;\">new</span> List&lt;T&gt;<span style=\"color: #000000;\">();\n</span><span style=\"color: #008080;\"> 83</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> list;\n</span><span style=\"color: #008080;\"> 84</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\"> 85</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\"> 86</span> \n<span style=\"color: #008080;\"> 87</span>         <span style=\"color: #0000ff;\">#region</span> 插入或者更新数据\n<span style=\"color: #008080;\"> 88</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\"> 89</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 插入数据\n</span><span style=\"color: #008080;\"> 90</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\"> 91</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"entity\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\"> 92</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\"> 93</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> Save(T entity)\n</span><span style=\"color: #008080;\"> 94</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\"> 95</span>             <span style=\"color: #0000ff;\">var</span> id = <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\"> 96</span>             <span style=\"color: #0000ff;\">var</span> session = <span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">._session;\n</span><span style=\"color: #008080;\"> 97</span>             ITransaction tan =<span style=\"color: #000000;\"> session.BeginTransaction();\n</span><span style=\"color: #008080;\"> 98</span> \n<span style=\"color: #008080;\"> 99</span>             <span style=\"color: #0000ff;\">try</span>\n<span style=\"color: #008080;\">100</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">101</span>                 entity =<span style=\"color: #000000;\"> session.Merge(entity);\n</span><span style=\"color: #008080;\">102</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">103</span>             <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e)\n</span><span style=\"color: #008080;\">104</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">105</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Log.DebugFormat($\"Save124，Exception：{e.Message}，entity:{JsonConvert.SerializeObject(entity)}\");</span>\n<span style=\"color: #008080;\">106</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">107</span> \n<span style=\"color: #008080;\">108</span>             <span style=\"color: #0000ff;\">try</span>\n<span style=\"color: #008080;\">109</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">110</span> <span style=\"color: #000000;\">                tan.Begin();\n</span><span style=\"color: #008080;\">111</span>                 id = (<span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\">)session.Save(entity);\n</span><span style=\"color: #008080;\">112</span> <span style=\"color: #000000;\">                session.Flush();\n</span><span style=\"color: #008080;\">113</span> <span style=\"color: #000000;\">                tan.Commit();\n</span><span style=\"color: #008080;\">114</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">115</span>             <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e)\n</span><span style=\"color: #008080;\">116</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">117</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Log.DebugFormat($\"Save136，Exception：{e.Message}，entity:{JsonConvert.SerializeObject(entity)}\");</span>\n<span style=\"color: #008080;\">118</span> <span style=\"color: #000000;\">                tan.Rollback();\n</span><span style=\"color: #008080;\">119</span>                 <span style=\"color: #0000ff;\">throw</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">120</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">121</span> \n<span style=\"color: #008080;\">122</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> id;\n</span><span style=\"color: #008080;\">123</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">124</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">125</span> \n<span style=\"color: #008080;\">126</span>         <span style=\"color: #0000ff;\">#region</span> 更新数据\n<span style=\"color: #008080;\">127</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">128</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 更新数据\n</span><span style=\"color: #008080;\">129</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">130</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"entity\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\">131</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">132</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> Update(T entity)\n</span><span style=\"color: #008080;\">133</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">134</span>             <span style=\"color: #0000ff;\">int</span> result = <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">135</span>             ITransaction tan =<span style=\"color: #000000;\"> _session.BeginTransaction();\n</span><span style=\"color: #008080;\">136</span>             <span style=\"color: #0000ff;\">var</span> session = <span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">._session;\n</span><span style=\"color: #008080;\">137</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">entity = (T)_session.Merge(entity);</span>\n<span style=\"color: #008080;\">138</span>             <span style=\"color: #0000ff;\">try</span>\n<span style=\"color: #008080;\">139</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">140</span>                 entity =<span style=\"color: #000000;\"> session.Merge(entity);\n</span><span style=\"color: #008080;\">141</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">142</span>             <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e)\n</span><span style=\"color: #008080;\">143</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">144</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Log.DebugFormat($\"Update163，Exception：{e.Message}，entity:{JsonConvert.SerializeObject(entity)}\");</span>\n<span style=\"color: #008080;\">145</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">146</span>             <span style=\"color: #0000ff;\">try</span>\n<span style=\"color: #008080;\">147</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">148</span> <span style=\"color: #000000;\">                tan.Begin();\n</span><span style=\"color: #008080;\">149</span> <span style=\"color: #000000;\">                _session.Update(entity);\n</span><span style=\"color: #008080;\">150</span> <span style=\"color: #000000;\">                _session.Flush();\n</span><span style=\"color: #008080;\">151</span> <span style=\"color: #000000;\">                tan.Commit();\n</span><span style=\"color: #008080;\">152</span>                 result++<span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">153</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">154</span>             <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e)\n</span><span style=\"color: #008080;\">155</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">156</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Log.DebugFormat($\"Update175，Exception：{e.Message}，entity:{JsonConvert.SerializeObject(entity)}\");</span>\n<span style=\"color: #008080;\">157</span> <span style=\"color: #000000;\">                tan.Rollback();\n</span><span style=\"color: #008080;\">158</span>                 <span style=\"color: #0000ff;\">throw</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">159</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">160</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> result;\n</span><span style=\"color: #008080;\">161</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">162</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">163</span> \n<span style=\"color: #008080;\">164</span>         <span style=\"color: #0000ff;\">#region</span> 删除一条数据\n<span style=\"color: #008080;\">165</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">166</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 删除一条数据\n</span><span style=\"color: #008080;\">167</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">168</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"id\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\">169</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">170</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">int</span> DeleteModelById(<span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> id)\n</span><span style=\"color: #008080;\">171</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">172</span>             <span style=\"color: #0000ff;\">int</span> result = <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">173</span>             <span style=\"color: #0000ff;\">object</span> item =<span style=\"color: #000000;\"> Get(id);\n</span><span style=\"color: #008080;\">174</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">ITransaction tan = _session.BeginTransaction();</span>\n<span style=\"color: #008080;\">175</span>             <span style=\"color: #0000ff;\">try</span>\n<span style=\"color: #008080;\">176</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">177</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">tan.Begin();</span>\n<span style=\"color: #008080;\">178</span> <span style=\"color: #000000;\">                _session.Delete(item);\n</span><span style=\"color: #008080;\">179</span> <span style=\"color: #000000;\">                _session.Flush();\n</span><span style=\"color: #008080;\">180</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">tan.Commit();</span>\n<span style=\"color: #008080;\">181</span>                 result++<span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">182</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">183</span>             <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception)\n</span><span style=\"color: #008080;\">184</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">185</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">tan.Rollback();</span>\n<span style=\"color: #008080;\">186</span>                 <span style=\"color: #0000ff;\">throw</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">187</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">188</span> \n<span style=\"color: #008080;\">189</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> result;\n</span><span style=\"color: #008080;\">190</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">191</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">192</span> \n<span style=\"color: #008080;\">193</span>         <span style=\"color: #0000ff;\">#region</span> 删除一个实体对象\n<span style=\"color: #008080;\">194</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">195</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 删除一个实体对象\n</span><span style=\"color: #008080;\">196</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">197</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"entity\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\">198</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">199</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> DeleteModel(BaseEntity entity)\n</span><span style=\"color: #008080;\">200</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">201</span>             <span style=\"color: #0000ff;\">var</span> result = <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">202</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">ITransaction tan = _session.BeginTransaction();</span>\n<span style=\"color: #008080;\">203</span>             <span style=\"color: #0000ff;\">try</span>\n<span style=\"color: #008080;\">204</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">205</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">tan.Begin();</span>\n<span style=\"color: #008080;\">206</span> <span style=\"color: #000000;\">                _session.Delete(entity);\n</span><span style=\"color: #008080;\">207</span> <span style=\"color: #000000;\">                _session.Flush();\n</span><span style=\"color: #008080;\">208</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">tan.Commit();</span>\n<span style=\"color: #008080;\">209</span>                 result++<span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">210</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">211</span>             <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception)\n</span><span style=\"color: #008080;\">212</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">213</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">tan.Rollback();</span>\n<span style=\"color: #008080;\">214</span>                 <span style=\"color: #0000ff;\">throw</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">215</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">216</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> result;\n</span><span style=\"color: #008080;\">217</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">218</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">219</span> \n<span style=\"color: #008080;\">220</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">221</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 根据SQL语句删除\n</span><span style=\"color: #008080;\">222</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">223</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"sql\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\">224</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">void</span> DeleteList(<span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> sql)\n</span><span style=\"color: #008080;\">225</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">226</span> <span style=\"color: #000000;\">            _session.CreateSQLQuery(sql).UniqueResult();\n</span><span style=\"color: #008080;\">227</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">228</span> \n<span style=\"color: #008080;\">229</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">230</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 删除泛型集合\n</span><span style=\"color: #008080;\">231</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">232</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"models\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\">233</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">void</span> DeleteList(IList&lt;T&gt;<span style=\"color: #000000;\"> models)\n</span><span style=\"color: #008080;\">234</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">235</span>             <span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #0000ff;\">var</span> model <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> models)\n</span><span style=\"color: #008080;\">236</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">237</span> <span style=\"color: #000000;\">                DeleteModel(model);\n</span><span style=\"color: #008080;\">238</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">239</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">240</span> \n<span style=\"color: #008080;\">241</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">bool</span> IsExist(Expression&lt;Func&lt;T, <span style=\"color: #0000ff;\">bool</span>&gt;&gt;<span style=\"color: #000000;\"> keyWhere)\n</span><span style=\"color: #008080;\">242</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">243</span>             <span style=\"color: #0000ff;\">var</span> ss = _session.QueryOver&lt;T&gt;<span style=\"color: #000000;\">().Where(keyWhere);\n</span><span style=\"color: #008080;\">244</span>             <span style=\"color: #0000ff;\">return</span> ss.RowCount() &gt; <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">245</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">246</span> \n<span style=\"color: #008080;\">247</span>         <span style=\"color: #0000ff;\">#region</span> GetQuery\n<span style=\"color: #008080;\">248</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">249</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> GetQuery\n</span><span style=\"color: #008080;\">250</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">251</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">252</span>         <span style=\"color: #0000ff;\">public</span> IQueryable&lt;T&gt;<span style=\"color: #000000;\"> GetQuery()\n</span><span style=\"color: #008080;\">253</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">254</span>             <span style=\"color: #0000ff;\">try</span>\n<span style=\"color: #008080;\">255</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">256</span>                 <span style=\"color: #0000ff;\">return</span> _session.Query&lt;T&gt;<span style=\"color: #000000;\">();\n</span><span style=\"color: #008080;\">257</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">258</span>             <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e)\n</span><span style=\"color: #008080;\">259</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">260</span>                 <span style=\"color: #0000ff;\">var</span> session =<span style=\"color: #000000;\"> SessionBuilder.GetSession();\n</span><span style=\"color: #008080;\">261</span>                 <span style=\"color: #0000ff;\">return</span> session.Query&lt;T&gt;<span style=\"color: #000000;\">();\n</span><span style=\"color: #008080;\">262</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">263</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">264</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">265</span> \n<span style=\"color: #008080;\">266</span>         <span style=\"color: #0000ff;\">#region</span> GetQueryOver\n<span style=\"color: #008080;\">267</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">268</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> GetQueryOver\n</span><span style=\"color: #008080;\">269</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">270</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">271</span>         <span style=\"color: #0000ff;\">public</span> IQueryOver&lt;T, T&gt; GetQueryOver(Expression&lt;Func&lt;T, <span style=\"color: #0000ff;\">bool</span>&gt;&gt;<span style=\"color: #000000;\"> keyWhere)\n</span><span style=\"color: #008080;\">272</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">273</span>             <span style=\"color: #0000ff;\">return</span> _session.QueryOver&lt;T&gt;<span style=\"color: #000000;\">().Where(keyWhere);\n</span><span style=\"color: #008080;\">274</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">275</span> \n<span style=\"color: #008080;\">276</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">277</span> \n<span style=\"color: #008080;\">278</span>         <span style=\"color: #0000ff;\">#region</span> GetQueryOver\n<span style=\"color: #008080;\">279</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">280</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> GetQueryOver\n</span><span style=\"color: #008080;\">281</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">282</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">283</span>         <span style=\"color: #0000ff;\">public</span> IQueryOver&lt;T, T&gt;<span style=\"color: #000000;\"> GetQueryOver()\n</span><span style=\"color: #008080;\">284</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">285</span>             <span style=\"color: #0000ff;\">return</span> _session.QueryOver&lt;T&gt;<span style=\"color: #000000;\">();\n</span><span style=\"color: #008080;\">286</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">287</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">288</span> \n<span style=\"color: #008080;\">289</span>         <span style=\"color: #0000ff;\">#region</span> 获取集合ByHql\n<span style=\"color: #008080;\">290</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">291</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 获取集合ByHql\n</span><span style=\"color: #008080;\">292</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">293</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"strHql\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\">294</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">295</span>         <span style=\"color: #0000ff;\">public</span> IQuery GetQueryByHql(<span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> strHql)\n</span><span style=\"color: #008080;\">296</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">297</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> _session.CreateQuery(strHql);\n</span><span style=\"color: #008080;\">298</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">299</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">300</span> \n<span style=\"color: #008080;\">301</span>         <span style=\"color: #0000ff;\">#region</span> 获取集合BySql\n<span style=\"color: #008080;\">302</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">303</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 获取集合BySql\n</span><span style=\"color: #008080;\">304</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">305</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"strSql\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\">306</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">307</span>         <span style=\"color: #0000ff;\">public</span> IQuery GetQueryBySql(<span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> strSql)\n</span><span style=\"color: #008080;\">308</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">309</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> _session.CreateSQLQuery(strSql);\n</span><span style=\"color: #008080;\">310</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">311</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">312</span>     }</pre>\n</div>\n<p>&nbsp;</p>","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"spatxos","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/spatxos","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"<p><span style=\"color: #ff0000;\"><span style=\"color: #000000;\">在.net&nbsp;framework中的创建session代码先贴一个</span></span></p>\n<p>&nbsp;</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #008080;\"> 1</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> SessionBuilder\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">    {\n</span><span style=\"color: #008080;\"> 3</span>         <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">static</span> ISessionFactory _sessionFactory = <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\"> 4</span> \n<span style=\"color: #008080;\"> 5</span>         <span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> SessionBuilder()\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\"> 7</span>             <span style=\"color: #0000ff;\">if</span> (_sessionFactory == <span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">)\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\"> 9</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">创建ISessionFactory</span>\n<span style=\"color: #008080;\">10</span>                 _sessionFactory =<span style=\"color: #000000;\"> GetSessionFactory();\n</span><span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">12</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">13</span> \n<span style=\"color: #008080;\">14</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">15</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 创建ISessionFactory\n</span><span style=\"color: #008080;\">16</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">17</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">18</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> ISessionFactory GetSessionFactory()\n</span><span style=\"color: #008080;\">19</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">20</span> <span style=\"color: #000000;\">            //HibernatingRhinos.Profiler.Appender.NHibernate.NHibernateProfiler.Initialize();\n</span><span style=\"color: #008080;\">21</span> \n<span style=\"color: #008080;\">22</span>             <span style=\"color: #0000ff;\">var</span> mappers = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> ModelMapper();\n</span><span style=\"color: #008080;\">23</span> <span style=\"color: #000000;\">            mappers.AddMappings(Assembly.GetExecutingAssembly().GetExportedTypes());\n</span><span style=\"color: #008080;\">24</span> \n<span style=\"color: #008080;\">25</span>             <span style=\"color: #0000ff;\">var</span> cfg = <span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> Configuration().Configure();\n</span><span style=\"color: #008080;\">26</span>             cfg.AddDeserializedMapping(mappers.CompileMappingForAllExplicitlyAddedEntities(), <span style=\"color: #800000;\">\"\"</span><span style=\"color: #000000;\">);\n</span><span style=\"color: #008080;\">27</span> \n<span style=\"color: #008080;\">28</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> cfg.BuildSessionFactory();\n</span><span style=\"color: #008080;\">29</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">30</span> \n<span style=\"color: #008080;\">31</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">32</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 打开ISession\n</span><span style=\"color: #008080;\">33</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">34</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">35</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> ISession GetSession()\n</span><span style=\"color: #008080;\">36</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">37</span>             <span style=\"color: #0000ff;\">if</span> (_sessionFactory == <span style=\"color: #0000ff;\">null</span> ||<span style=\"color: #000000;\"> _sessionFactory.IsClosed)\n</span><span style=\"color: #008080;\">38</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">39</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">创建ISessionFactory</span>\n<span style=\"color: #008080;\">40</span>                 _sessionFactory =<span style=\"color: #000000;\"> GetSessionFactory();\n</span><span style=\"color: #008080;\">41</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">42</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">43</span> \n<span style=\"color: #008080;\">44</span> \n<span style=\"color: #008080;\">45</span>         <span style=\"color: #0000ff;\">#region</span> 打开一个新的Session\n<span style=\"color: #008080;\">46</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> ISession OpenSession()\n</span><span style=\"color: #008080;\">47</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">48</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> _sessionFactory.OpenSession();\n</span><span style=\"color: #008080;\">49</span>\n<span style=\"color: #008080;\">50</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">51</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">52</span> \n<span style=\"color: #008080;\">53</span>     }</pre>\n</div>\n<p>与数据库的交互时，需要先在web.config配置（数据库为sql server）</p>\n<div class=\"cnblogs_code\">\n<pre>&lt;configuration&gt;\n  &lt;configSections&gt;\n    &lt;section name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">hibernate-configuration</span><span style=\"color: #800000;\">\"</span> type=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">NHibernate.Cfg.ConfigurationSectionHandler, NHibernate</span><span style=\"color: #800000;\">\"</span> /&gt;\n  &lt;/configSections&gt;\n  &lt;!--NHibernate配置开始--&gt;\n  &lt;hibernate-configuration xmlns=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">urn:nhibernate-configuration-2.2</span><span style=\"color: #800000;\">\"</span>&gt;\n    &lt;session-factory&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">connection.provider</span><span style=\"color: #800000;\">\"</span>&gt;NHibernate.Connection.DriverConnectionProvider&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">connection.driver_class</span><span style=\"color: #800000;\">\"</span>&gt;NHibernate.Driver.SqlClientDriver&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">dialect</span><span style=\"color: #800000;\">\"</span>&gt;NHibernate.Dialect.MsSql2012Dialect&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">show_sql</span><span style=\"color: #800000;\">\"</span>&gt;<span style=\"color: #0000ff;\">false</span>&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">connection.connection_string_name</span><span style=\"color: #800000;\">\"</span>&gt;ylsdai&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">adonet.batch_size</span><span style=\"color: #800000;\">\"</span>&gt;<span style=\"color: #800080;\">30</span>&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">generate_statistics</span><span style=\"color: #800000;\">\"</span>&gt;<span style=\"color: #0000ff;\">false</span>&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">format_sql</span><span style=\"color: #800000;\">\"</span>&gt;<span style=\"color: #0000ff;\">true</span>&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">command_timeout</span><span style=\"color: #800000;\">\"</span>&gt;<span style=\"color: #800080;\">60</span>&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">current_session_context_class</span><span style=\"color: #800000;\">\"</span>&gt;web&lt;/property&gt;\n      &lt;!--&lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">cache.provider_class</span><span style=\"color: #800000;\">\"</span>&gt;NHibernate.Caches.SysCache2.SysCacheProvider,NHibernate.Caches.SysCache2&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">cache.default_expiration</span><span style=\"color: #800000;\">\"</span>&gt;<span style=\"color: #800080;\">120</span>&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">cache.use_second_level_cache</span><span style=\"color: #800000;\">\"</span>&gt;<span style=\"color: #0000ff;\">true</span>&lt;/property&gt;\n      &lt;property name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">cache.use_query_cache</span><span style=\"color: #800000;\">\"</span>&gt;<span style=\"color: #0000ff;\">true</span>&lt;/property&gt;--&gt;\n    &lt;/session-factory&gt;\n  &lt;/hibernate-configuration&gt;\n  &lt;!--NHibernate配置结束--&gt;\n  &lt;connectionStrings&gt;\n    &lt;!--test_db--&gt;\n    &lt;!--&lt;add name=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ylsdai</span><span style=\"color: #800000;\">\"</span> connectionString=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">data source=0.0.0.1,111;database=test_db;uid=sa;pwd=123456</span><span style=\"color: #800000;\">\"</span> providerName=<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">System.Data.SqlClient</span><span style=\"color: #800000;\">\"</span> /&gt;\n  &lt;/connectionStrings&gt;\n&lt;/configuration&gt;</pre>\n</div>\n<p>映射类</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> NHibernate.Mapping.ByCode;\n</span><span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> NHibernate.Mapping.ByCode.Conformist;\n\n<p></span><span style=\"color: #0000ff;\">namespace</span><span style=\"color: #000000;\"> ClassMapping<br>{<br>    </span><span style=\"color: #0000ff;\">#region</span> CityMap<br>    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span> CityMap : ClassMapping&lt;City&gt;<span style=\"color: #000000;\"><br>    {<br>        </span><span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> CityMap()<br>        {</p>\n<pre><code>        SelectBeforeUpdate(&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n        DynamicUpdate(&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n        &lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;//&lt;/span&gt;&lt;span style=&quot;color: #008000;&quot;&gt;Cache(p =&amp;gt; p.Usage(CacheUsage.ReadWrite));&lt;/span&gt;\n        Id(p =&amp;gt; p.CityId, map =&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; map.Generator(Generators.Native));\n        Property(p &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; p.OldCityId);\n        Property(p &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; p.ParentId);\n        Property(p &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; p.CityName);\n        Property(p &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; p.EnCityName);\n        Property(p &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; p.CityImgUrl);\n        Property(p &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; p.LatLng);\n        Property(p &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; p.Keywords);\n        Property(p &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; p.IsRecommend);\n        Property(p &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; p.IsDepart);\n        Property(p &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; p.AreaId);\n        Property(p &lt;/span&gt;=&amp;gt;&lt;span style=&quot;color: #000000;&quot;&gt; p.CityContent);\n    &#125;\n&#125;\n&lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;#endregion&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;\n</code></pre>\n<p>}</span></pre></p>\n</div>\n<p>&nbsp;</p>\n<p>将实体写好，就可以进行实现了</p>\n<p>&nbsp;</p>\n<p>但是在迁移到.net core的时候遇到的问题：</p>\n<p>1. 创建Session，使用.net&nbsp;framework的方法将不可用</p>\n<p>2.config中对于NHiberante的配置也读取不到</p>\n<p>3.基于问题1，映射类也无法进行实现</p>\n<p>好在是在.net core中有一个辅助的开源框架<a href=\"http://fluentnhibernate.org/\">Fluent NHibernate</a>，它可以帮我解决上面遇到的问题，但是在具体使用时也踩了不少坑</p>\n<p>1.网上的文档基本都是映射类在xml中的，但是当实际项目在.cs文件中时，大量的文件映射从.cs文件迁到到.xml文件将变得特别繁琐</p>\n<p>最后的解决办法，创建session方法中GetSessionFactory方法做以下修改</p>\n<div class=\"cnblogs_code\">\n<pre>        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n        <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 创建ISessionFactory\n        </span><span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n        <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n        <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> ISessionFactory GetSessionFactory()\n        {\n            </span><span style=\"color: #0000ff;\">var</span> assemblyName = Assembly.Load(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ClassMapping</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n\n<pre><code>        NHibernate.Cfg.Configuration setCfg(NHibernate.Cfg.Configuration c)\n        &#123;\n            c.Properties.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;show_sql&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n            c.Properties.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;adonet.batch_size&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;1000&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n            c.Properties.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;generate_statistics&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;false&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n            c.Properties.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;format_sql&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;true&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n            c.Properties.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;command_timeout&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;60&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n            c.Properties.Add(&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;current_session_context_class&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;, &lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;web&lt;/span&gt;&lt;span style=&quot;color: #800000;&quot;&gt;&quot;&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt;);\n            &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; c;\n        &#125;\n\n        &lt;/span&gt;&lt;span style=&quot;color: #0000ff;&quot;&gt;return&lt;/span&gt;&lt;span style=&quot;color: #000000;&quot;&gt; Fluently.Configure().Database(\n</code></pre>\n<p>FluentNHibernate.Cfg.Db.MsSqlConfiguration.MsSql2012.ConnectionString(</span><span style=\"color: #800000;\">“</span><span style=\"color: #800000;\">Server=0.0.0.1,111;Database=test_db;Uid=sa;Pwd=123456;</span><span style=\"color: #800000;\">“</span><span style=\"color: #000000;\">))<br>                        .Mappings(m </span>=&gt;<span style=\"color: #000000;\"> m.FluentMappings.AddFromAssembly(assemblyName))<br>                        .ExposeConfiguration(c </span>=&gt; <span style=\"color: #0000ff;\">new</span> SchemaUpdate(c).Execute(<span style=\"color: #0000ff;\">true</span>, <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">))<br>                        .ExposeConfiguration(c </span>=&gt;<span style=\"color: #000000;\"> setCfg(c))<br>                        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">.ExposeConfiguration(f =&gt; f.SetInterceptor(new SqlStatementInterceptor()))</span><br><span style=\"color: #000000;\">                        .BuildSessionFactory();</p>\n<pre><code>    &#125;&lt;/span&gt;&lt;/pre&gt;\n</code></pre>\n</div>\n<p>其中映射类的引入在</p>\n<p>.Mappings(m =&gt; m.FluentMappings.AddFromAssembly(assemblyName))</p>\n<p>这句话，是将命名空间引入，所以具体映射类可以重新新建一个项目，名字就叫做ClassMapping，具体的映射类做以下修改</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> Entity;\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #0000ff;\">using</span><span style=\"color: #000000;\"> FluentNHibernate.Mapping;\n</span><span style=\"color: #008080;\"> 3</span> \n<span style=\"color: #008080;\"> 4</span> <span style=\"color: #0000ff;\">namespace</span><span style=\"color: #000000;\"> ClassMapping\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">{\n</span><span style=\"color: #008080;\"> 6</span>     <span style=\"color: #0000ff;\">#region</span> CityMap\n<span style=\"color: #008080;\"> 7</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span> CityMap : ClassMap&lt;City&gt;\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">    {\n</span><span style=\"color: #008080;\"> 9</span>         <span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> CityMap()\n</span><span style=\"color: #008080;\">10</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">11</span>             Table(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">City</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">);\n</span><span style=\"color: #008080;\">12</span> \n<span style=\"color: #008080;\">13</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">SelectBeforeUpdate(true);\n</span><span style=\"color: #008080;\">14</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">DynamicUpdate(true);\n</span><span style=\"color: #008080;\">15</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Cache(p =&gt; p.Usage(CacheUsage.ReadWrite));</span>\n<span style=\"color: #008080;\">16</span>             Id(p =&gt;<span style=\"color: #000000;\"> p.CityId);\n</span><span style=\"color: #008080;\">17</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.OldCityId);\n</span><span style=\"color: #008080;\">18</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.ParentId);\n</span><span style=\"color: #008080;\">19</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.CityName);\n</span><span style=\"color: #008080;\">20</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.EnCityName);\n</span><span style=\"color: #008080;\">21</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.CityImgUrl);\n</span><span style=\"color: #008080;\">22</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.LatLng);\n</span><span style=\"color: #008080;\">23</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.Keywords);\n</span><span style=\"color: #008080;\">24</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.IsRecommend);\n</span><span style=\"color: #008080;\">25</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.IsDepart);\n</span><span style=\"color: #008080;\">26</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.AreaId);\n</span><span style=\"color: #008080;\">27</span>             Map(p =&gt;<span style=\"color: #000000;\"> p.CityContent);\n</span><span style=\"color: #008080;\">28</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">29</span> <span style=\"color: #000000;\">    }\n</span><span style=\"color: #008080;\">30</span>     <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">31</span> \n<span style=\"color: #008080;\">32</span> }</pre>\n</div>\n<p>&nbsp;</p>\n<p>在迁移过程中会碰到映射关系的迁移</p>\n<p>以前的版本中为</p>\n<div class=\"cnblogs_code\">\n<pre>            OneToOne(p =&gt; p.City, map =&gt;<span style=\"color: #000000;\">\n            {\n                map.Cascade(Cascade.All);\n                map.Lazy(LazyRelation.Proxy);\n            });</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">一对一</span>\n<span style=\"color: #000000;\">\n            ManyToOne(p </span>=&gt; p.Province, map =&gt; map.Column(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">ProvinceId</span><span style=\"color: #800000;\">\"</span>));<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">多对一</span>\n<span style=\"color: #000000;\">\n            Bag(p </span>=&gt; p.Counties, map =&gt;<span style=\"color: #000000;\">\n            {\n                map.Key(k </span>=&gt; k.Column(<span style=\"color: #800000;\">\"</span><span style=\"color: #800000;\">CountyId</span><span style=\"color: #800000;\">\"</span><span style=\"color: #000000;\">));\n                map.OrderBy(k </span>=&gt;<span style=\"color: #000000;\"> k.SortId);\n            }, rel </span>=&gt; rel.OneToMany());<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">一对多</span></pre>\n</div>\n<p>.net core版本中对应为</p>\n<div class=\"cnblogs_code\">\n<pre>HasOne(p =&gt; p.City).Cascade.All().LazyLoad();<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">一对一\n\n<p></span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">References&lt;Province&gt;(r =&gt; r.Province).Column(“ProvinceId”).ForeignKey(“ProvinceId”).Cascade.None();</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">多对一，在实际运用中会出现问题</span><br><span style=\"color: #000000;\"><br>HasMany(p </span>=&gt; p.Counties).KeyColumn(<span style=\"color: #800000;\">“</span><span style=\"color: #800000;\">CountyId</span><span style=\"color: #800000;\">“</span>).OrderBy(<span style=\"color: #800000;\">“</span><span style=\"color: #800000;\">CountyId</span><span style=\"color: #800000;\">“</span>).LazyLoad();<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">一对多</span></pre></p>\n</div>\n<p>&nbsp;</p>\n<p>city实体</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #000000;\">    [Serializable]\n</span><span style=\"color: #008080;\"> 2</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> City : BaseEntity\n</span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #000000;\">    {\n</span><span style=\"color: #008080;\"> 4</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\"> 5</span>          <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> CityId\n</span><span style=\"color: #008080;\"> 6</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\"> 7</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">int</span> CityId { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n</span><span style=\"color: #008080;\"> 8</span> \n<span style=\"color: #008080;\"> 9</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">10</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Version\n</span><span style=\"color: #008080;\">11</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">12</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">int</span> Version { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n</span><span style=\"color: #008080;\">13</span> \n<span style=\"color: #008080;\">14</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">15</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> OldCityId\n</span><span style=\"color: #008080;\">16</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">17</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">int</span> OldCityId { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; } \n</span><span style=\"color: #008080;\">18</span> \n<span style=\"color: #008080;\">19</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">20</span>          <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> ParentId\n</span><span style=\"color: #008080;\">21</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">22</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">int</span> ParentId { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; } \n</span><span style=\"color: #008080;\">23</span> \n<span style=\"color: #008080;\">24</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">25</span>          <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 城市名称\n</span><span style=\"color: #008080;\">26</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">27</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">string</span> CityName { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; } \n</span><span style=\"color: #008080;\">28</span> \n<span style=\"color: #008080;\">29</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">30</span>          <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 城市英文名称\n</span><span style=\"color: #008080;\">31</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">32</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">string</span> EnCityName { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; } \n</span><span style=\"color: #008080;\">33</span> \n<span style=\"color: #008080;\">34</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">35</span>          <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> CityImgUrl\n</span><span style=\"color: #008080;\">36</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">37</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">string</span> CityImgUrl { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; } \n</span><span style=\"color: #008080;\">38</span> \n<span style=\"color: #008080;\">39</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">40</span>          <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 经纬度\n</span><span style=\"color: #008080;\">41</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">42</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">string</span> LatLng { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; } \n</span><span style=\"color: #008080;\">43</span> \n<span style=\"color: #008080;\">44</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">45</span>          <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 关键字\n</span><span style=\"color: #008080;\">46</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">47</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">string</span> Keywords { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n</span><span style=\"color: #008080;\">48</span> \n<span style=\"color: #008080;\">49</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">50</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 是否推荐\n</span><span style=\"color: #008080;\">51</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">52</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">bool</span> IsRecommend { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; }\n</span><span style=\"color: #008080;\">53</span> \n<span style=\"color: #008080;\">54</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">55</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> IsDepart\n</span><span style=\"color: #008080;\">56</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">57</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">bool</span> IsDepart { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; } \n</span><span style=\"color: #008080;\">58</span> \n<span style=\"color: #008080;\">59</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">60</span>          <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 航区\n</span><span style=\"color: #008080;\">61</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">62</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">int</span> AreaId { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; } \n</span><span style=\"color: #008080;\">63</span> \n<span style=\"color: #008080;\">64</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">65</span>          <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 城市介绍\n</span><span style=\"color: #008080;\">66</span>          <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">67</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">virtual</span> <span style=\"color: #0000ff;\">string</span> CityContent { <span style=\"color: #0000ff;\">get</span>; <span style=\"color: #0000ff;\">set</span><span style=\"color: #000000;\">; } \n</span><span style=\"color: #008080;\">68</span> \n<span style=\"color: #008080;\">69</span>     }</pre>\n</div>\n<p>&nbsp;</p>\n<p>下面是操作session，进行数据库调用的方法</p>\n<div class=\"cnblogs_code\">\n<pre><span style=\"color: #008080;\">  1</span>     <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">  2</span>     <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> Hibernate操作Helper \n</span><span style=\"color: #008080;\">  3</span>     <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">  4</span>     <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;typeparam name=\"T\"&gt;&lt;/typeparam&gt;</span>\n<span style=\"color: #008080;\">  5</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">class</span> DbHelper&lt;T&gt; <span style=\"color: #0000ff;\">where</span><span style=\"color: #000000;\"> T : BaseEntity\n</span><span style=\"color: #008080;\">  6</span> <span style=\"color: #000000;\">    {\n</span><span style=\"color: #008080;\">  7</span>         <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">readonly</span> ISession _session =<span style=\"color: #000000;\"> SessionBuilder.GetSession();\n</span><span style=\"color: #008080;\">  8</span>         <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">protected static readonly ILog Log = LogManager.GetLogger(MethodBase.GetCurrentMethod().DeclaringType);</span>\n<span style=\"color: #008080;\">  9</span> \n<span style=\"color: #008080;\"> 10</span>         <span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> DbHelper() { }\n</span><span style=\"color: #008080;\"> 11</span> \n<span style=\"color: #008080;\"> 12</span>         <span style=\"color: #0000ff;\">public</span><span style=\"color: #000000;\"> DbHelper(ISession session)\n</span><span style=\"color: #008080;\"> 13</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\"> 14</span>             _session =<span style=\"color: #000000;\"> session;\n</span><span style=\"color: #008080;\"> 15</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\"> 16</span> \n<span style=\"color: #008080;\"> 17</span>         <span style=\"color: #0000ff;\">#region</span> 获取一个实体\n<span style=\"color: #008080;\"> 18</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\"> 19</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 获取一个实体（一级缓存）\n</span><span style=\"color: #008080;\"> 20</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\"> 21</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"id\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\"> 22</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\"> 23</span>         <span style=\"color: #0000ff;\">public</span> T Load(<span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> id)\n</span><span style=\"color: #008080;\"> 24</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\"> 25</span>             <span style=\"color: #0000ff;\">return</span> _session.Load&lt;T&gt;<span style=\"color: #000000;\">(id);\n</span><span style=\"color: #008080;\"> 26</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\"> 27</span> \n<span style=\"color: #008080;\"> 28</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\"> 29</span> \n<span style=\"color: #008080;\"> 30</span>         <span style=\"color: #0000ff;\">#region</span> 获取一个实体（缓存）\n<span style=\"color: #008080;\"> 31</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\"> 32</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 获取一个实体（二级缓存）\n</span><span style=\"color: #008080;\"> 33</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\"> 34</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"id\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\"> 35</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\"> 36</span>         <span style=\"color: #0000ff;\">public</span> T Get(<span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> id)\n</span><span style=\"color: #008080;\"> 37</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\"> 38</span>             <span style=\"color: #0000ff;\">return</span> _session.Get&lt;T&gt;<span style=\"color: #000000;\">(id);\n</span><span style=\"color: #008080;\"> 39</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\"> 40</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\"> 41</span> \n<span style=\"color: #008080;\"> 42</span>         <span style=\"color: #0000ff;\">#region</span> 销毁一个实体\n<span style=\"color: #008080;\"> 43</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\"> 44</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 销毁一个实体\n</span><span style=\"color: #008080;\"> 45</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\"> 46</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"obj\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\"> 47</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\"> 48</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">void</span> Evict(<span style=\"color: #0000ff;\">object</span><span style=\"color: #000000;\"> obj)\n</span><span style=\"color: #008080;\"> 49</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\"> 50</span> <span style=\"color: #000000;\">            _session.Evict(obj);\n</span><span style=\"color: #008080;\"> 51</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\"> 52</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\"> 53</span> \n<span style=\"color: #008080;\"> 54</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\"> 55</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 根据SQL语句获取\n</span><span style=\"color: #008080;\"> 56</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\"> 57</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"sql\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\"> 58</span>         <span style=\"color: #0000ff;\">public</span> ISQLQuery CreateSqlQuery(<span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> sql)\n</span><span style=\"color: #008080;\"> 59</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\"> 60</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> _session.CreateSQLQuery(sql);\n</span><span style=\"color: #008080;\"> 61</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\"> 62</span> \n<span style=\"color: #008080;\"> 63</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\"> 64</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 获取集合\n</span><span style=\"color: #008080;\"> 65</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\"> 66</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"hql\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\"> 67</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\"> 68</span>         <span style=\"color: #0000ff;\">public</span> ICriteria GetCriteria(<span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> hql)\n</span><span style=\"color: #008080;\"> 69</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\"> 70</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> _session.CreateCriteria(hql);\n</span><span style=\"color: #008080;\"> 71</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\"> 72</span> \n<span style=\"color: #008080;\"> 73</span>         <span style=\"color: #0000ff;\">#region</span> 获取全部数据\n<span style=\"color: #008080;\"> 74</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\"> 75</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 获取全部数据\n</span><span style=\"color: #008080;\"> 76</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\"> 77</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"cacheable\"&gt;</span><span style=\"color: #008000;\">是否缓存</span><span style=\"color: #808080;\">&lt;/param&gt;</span>\n<span style=\"color: #008080;\"> 78</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\"> 79</span>         <span style=\"color: #0000ff;\">public</span> IEnumerable&lt;T&gt; GetAll(<span style=\"color: #0000ff;\">bool</span><span style=\"color: #000000;\"> cacheable)\n</span><span style=\"color: #008080;\"> 80</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\"> 81</span>             <span style=\"color: #0000ff;\">var</span> ic = _session.CreateCriteria(<span style=\"color: #0000ff;\">typeof</span><span style=\"color: #000000;\">(T));\n</span><span style=\"color: #008080;\"> 82</span>             IEnumerable&lt;T&gt; list = ic.SetCacheable(cacheable).List&lt;T&gt;() ?? <span style=\"color: #0000ff;\">new</span> List&lt;T&gt;<span style=\"color: #000000;\">();\n</span><span style=\"color: #008080;\"> 83</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> list;\n</span><span style=\"color: #008080;\"> 84</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\"> 85</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\"> 86</span> \n<span style=\"color: #008080;\"> 87</span>         <span style=\"color: #0000ff;\">#region</span> 插入或者更新数据\n<span style=\"color: #008080;\"> 88</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\"> 89</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 插入数据\n</span><span style=\"color: #008080;\"> 90</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\"> 91</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"entity\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\"> 92</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\"> 93</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> Save(T entity)\n</span><span style=\"color: #008080;\"> 94</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\"> 95</span>             <span style=\"color: #0000ff;\">var</span> id = <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\"> 96</span>             <span style=\"color: #0000ff;\">var</span> session = <span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">._session;\n</span><span style=\"color: #008080;\"> 97</span>             ITransaction tan =<span style=\"color: #000000;\"> session.BeginTransaction();\n</span><span style=\"color: #008080;\"> 98</span> \n<span style=\"color: #008080;\"> 99</span>             <span style=\"color: #0000ff;\">try</span>\n<span style=\"color: #008080;\">100</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">101</span>                 entity =<span style=\"color: #000000;\"> session.Merge(entity);\n</span><span style=\"color: #008080;\">102</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">103</span>             <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e)\n</span><span style=\"color: #008080;\">104</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">105</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Log.DebugFormat($\"Save124，Exception：{e.Message}，entity:{JsonConvert.SerializeObject(entity)}\");</span>\n<span style=\"color: #008080;\">106</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">107</span> \n<span style=\"color: #008080;\">108</span>             <span style=\"color: #0000ff;\">try</span>\n<span style=\"color: #008080;\">109</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">110</span> <span style=\"color: #000000;\">                tan.Begin();\n</span><span style=\"color: #008080;\">111</span>                 id = (<span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\">)session.Save(entity);\n</span><span style=\"color: #008080;\">112</span> <span style=\"color: #000000;\">                session.Flush();\n</span><span style=\"color: #008080;\">113</span> <span style=\"color: #000000;\">                tan.Commit();\n</span><span style=\"color: #008080;\">114</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">115</span>             <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e)\n</span><span style=\"color: #008080;\">116</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">117</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Log.DebugFormat($\"Save136，Exception：{e.Message}，entity:{JsonConvert.SerializeObject(entity)}\");</span>\n<span style=\"color: #008080;\">118</span> <span style=\"color: #000000;\">                tan.Rollback();\n</span><span style=\"color: #008080;\">119</span>                 <span style=\"color: #0000ff;\">throw</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">120</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">121</span> \n<span style=\"color: #008080;\">122</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> id;\n</span><span style=\"color: #008080;\">123</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">124</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">125</span> \n<span style=\"color: #008080;\">126</span>         <span style=\"color: #0000ff;\">#region</span> 更新数据\n<span style=\"color: #008080;\">127</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">128</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 更新数据\n</span><span style=\"color: #008080;\">129</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">130</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"entity\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\">131</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">132</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> Update(T entity)\n</span><span style=\"color: #008080;\">133</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">134</span>             <span style=\"color: #0000ff;\">int</span> result = <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">135</span>             ITransaction tan =<span style=\"color: #000000;\"> _session.BeginTransaction();\n</span><span style=\"color: #008080;\">136</span>             <span style=\"color: #0000ff;\">var</span> session = <span style=\"color: #0000ff;\">this</span><span style=\"color: #000000;\">._session;\n</span><span style=\"color: #008080;\">137</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">entity = (T)_session.Merge(entity);</span>\n<span style=\"color: #008080;\">138</span>             <span style=\"color: #0000ff;\">try</span>\n<span style=\"color: #008080;\">139</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">140</span>                 entity =<span style=\"color: #000000;\"> session.Merge(entity);\n</span><span style=\"color: #008080;\">141</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">142</span>             <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e)\n</span><span style=\"color: #008080;\">143</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">144</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Log.DebugFormat($\"Update163，Exception：{e.Message}，entity:{JsonConvert.SerializeObject(entity)}\");</span>\n<span style=\"color: #008080;\">145</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">146</span>             <span style=\"color: #0000ff;\">try</span>\n<span style=\"color: #008080;\">147</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">148</span> <span style=\"color: #000000;\">                tan.Begin();\n</span><span style=\"color: #008080;\">149</span> <span style=\"color: #000000;\">                _session.Update(entity);\n</span><span style=\"color: #008080;\">150</span> <span style=\"color: #000000;\">                _session.Flush();\n</span><span style=\"color: #008080;\">151</span> <span style=\"color: #000000;\">                tan.Commit();\n</span><span style=\"color: #008080;\">152</span>                 result++<span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">153</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">154</span>             <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e)\n</span><span style=\"color: #008080;\">155</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">156</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Log.DebugFormat($\"Update175，Exception：{e.Message}，entity:{JsonConvert.SerializeObject(entity)}\");</span>\n<span style=\"color: #008080;\">157</span> <span style=\"color: #000000;\">                tan.Rollback();\n</span><span style=\"color: #008080;\">158</span>                 <span style=\"color: #0000ff;\">throw</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">159</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">160</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> result;\n</span><span style=\"color: #008080;\">161</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">162</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">163</span> \n<span style=\"color: #008080;\">164</span>         <span style=\"color: #0000ff;\">#region</span> 删除一条数据\n<span style=\"color: #008080;\">165</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">166</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 删除一条数据\n</span><span style=\"color: #008080;\">167</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">168</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"id\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\">169</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">170</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">int</span> DeleteModelById(<span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> id)\n</span><span style=\"color: #008080;\">171</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">172</span>             <span style=\"color: #0000ff;\">int</span> result = <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">173</span>             <span style=\"color: #0000ff;\">object</span> item =<span style=\"color: #000000;\"> Get(id);\n</span><span style=\"color: #008080;\">174</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">ITransaction tan = _session.BeginTransaction();</span>\n<span style=\"color: #008080;\">175</span>             <span style=\"color: #0000ff;\">try</span>\n<span style=\"color: #008080;\">176</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">177</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">tan.Begin();</span>\n<span style=\"color: #008080;\">178</span> <span style=\"color: #000000;\">                _session.Delete(item);\n</span><span style=\"color: #008080;\">179</span> <span style=\"color: #000000;\">                _session.Flush();\n</span><span style=\"color: #008080;\">180</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">tan.Commit();</span>\n<span style=\"color: #008080;\">181</span>                 result++<span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">182</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">183</span>             <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception)\n</span><span style=\"color: #008080;\">184</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">185</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">tan.Rollback();</span>\n<span style=\"color: #008080;\">186</span>                 <span style=\"color: #0000ff;\">throw</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">187</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">188</span> \n<span style=\"color: #008080;\">189</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> result;\n</span><span style=\"color: #008080;\">190</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">191</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">192</span> \n<span style=\"color: #008080;\">193</span>         <span style=\"color: #0000ff;\">#region</span> 删除一个实体对象\n<span style=\"color: #008080;\">194</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">195</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 删除一个实体对象\n</span><span style=\"color: #008080;\">196</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">197</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"entity\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\">198</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">199</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> DeleteModel(BaseEntity entity)\n</span><span style=\"color: #008080;\">200</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">201</span>             <span style=\"color: #0000ff;\">var</span> result = <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">202</span>             <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">ITransaction tan = _session.BeginTransaction();</span>\n<span style=\"color: #008080;\">203</span>             <span style=\"color: #0000ff;\">try</span>\n<span style=\"color: #008080;\">204</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">205</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">tan.Begin();</span>\n<span style=\"color: #008080;\">206</span> <span style=\"color: #000000;\">                _session.Delete(entity);\n</span><span style=\"color: #008080;\">207</span> <span style=\"color: #000000;\">                _session.Flush();\n</span><span style=\"color: #008080;\">208</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">tan.Commit();</span>\n<span style=\"color: #008080;\">209</span>                 result++<span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">210</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">211</span>             <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception)\n</span><span style=\"color: #008080;\">212</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">213</span>                 <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">tan.Rollback();</span>\n<span style=\"color: #008080;\">214</span>                 <span style=\"color: #0000ff;\">throw</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">215</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">216</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> result;\n</span><span style=\"color: #008080;\">217</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">218</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">219</span> \n<span style=\"color: #008080;\">220</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">221</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 根据SQL语句删除\n</span><span style=\"color: #008080;\">222</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">223</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"sql\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\">224</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">void</span> DeleteList(<span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> sql)\n</span><span style=\"color: #008080;\">225</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">226</span> <span style=\"color: #000000;\">            _session.CreateSQLQuery(sql).UniqueResult();\n</span><span style=\"color: #008080;\">227</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">228</span> \n<span style=\"color: #008080;\">229</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">230</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 删除泛型集合\n</span><span style=\"color: #008080;\">231</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">232</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"models\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\">233</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">void</span> DeleteList(IList&lt;T&gt;<span style=\"color: #000000;\"> models)\n</span><span style=\"color: #008080;\">234</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">235</span>             <span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #0000ff;\">var</span> model <span style=\"color: #0000ff;\">in</span><span style=\"color: #000000;\"> models)\n</span><span style=\"color: #008080;\">236</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">237</span> <span style=\"color: #000000;\">                DeleteModel(model);\n</span><span style=\"color: #008080;\">238</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">239</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">240</span> \n<span style=\"color: #008080;\">241</span>         <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">bool</span> IsExist(Expression&lt;Func&lt;T, <span style=\"color: #0000ff;\">bool</span>&gt;&gt;<span style=\"color: #000000;\"> keyWhere)\n</span><span style=\"color: #008080;\">242</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">243</span>             <span style=\"color: #0000ff;\">var</span> ss = _session.QueryOver&lt;T&gt;<span style=\"color: #000000;\">().Where(keyWhere);\n</span><span style=\"color: #008080;\">244</span>             <span style=\"color: #0000ff;\">return</span> ss.RowCount() &gt; <span style=\"color: #800080;\">0</span><span style=\"color: #000000;\">;\n</span><span style=\"color: #008080;\">245</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">246</span> \n<span style=\"color: #008080;\">247</span>         <span style=\"color: #0000ff;\">#region</span> GetQuery\n<span style=\"color: #008080;\">248</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">249</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> GetQuery\n</span><span style=\"color: #008080;\">250</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">251</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">252</span>         <span style=\"color: #0000ff;\">public</span> IQueryable&lt;T&gt;<span style=\"color: #000000;\"> GetQuery()\n</span><span style=\"color: #008080;\">253</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">254</span>             <span style=\"color: #0000ff;\">try</span>\n<span style=\"color: #008080;\">255</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">256</span>                 <span style=\"color: #0000ff;\">return</span> _session.Query&lt;T&gt;<span style=\"color: #000000;\">();\n</span><span style=\"color: #008080;\">257</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">258</span>             <span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> (Exception e)\n</span><span style=\"color: #008080;\">259</span> <span style=\"color: #000000;\">            {\n</span><span style=\"color: #008080;\">260</span>                 <span style=\"color: #0000ff;\">var</span> session =<span style=\"color: #000000;\"> SessionBuilder.GetSession();\n</span><span style=\"color: #008080;\">261</span>                 <span style=\"color: #0000ff;\">return</span> session.Query&lt;T&gt;<span style=\"color: #000000;\">();\n</span><span style=\"color: #008080;\">262</span> <span style=\"color: #000000;\">            }\n</span><span style=\"color: #008080;\">263</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">264</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">265</span> \n<span style=\"color: #008080;\">266</span>         <span style=\"color: #0000ff;\">#region</span> GetQueryOver\n<span style=\"color: #008080;\">267</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">268</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> GetQueryOver\n</span><span style=\"color: #008080;\">269</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">270</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">271</span>         <span style=\"color: #0000ff;\">public</span> IQueryOver&lt;T, T&gt; GetQueryOver(Expression&lt;Func&lt;T, <span style=\"color: #0000ff;\">bool</span>&gt;&gt;<span style=\"color: #000000;\"> keyWhere)\n</span><span style=\"color: #008080;\">272</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">273</span>             <span style=\"color: #0000ff;\">return</span> _session.QueryOver&lt;T&gt;<span style=\"color: #000000;\">().Where(keyWhere);\n</span><span style=\"color: #008080;\">274</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">275</span> \n<span style=\"color: #008080;\">276</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">277</span> \n<span style=\"color: #008080;\">278</span>         <span style=\"color: #0000ff;\">#region</span> GetQueryOver\n<span style=\"color: #008080;\">279</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">280</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> GetQueryOver\n</span><span style=\"color: #008080;\">281</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">282</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">283</span>         <span style=\"color: #0000ff;\">public</span> IQueryOver&lt;T, T&gt;<span style=\"color: #000000;\"> GetQueryOver()\n</span><span style=\"color: #008080;\">284</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">285</span>             <span style=\"color: #0000ff;\">return</span> _session.QueryOver&lt;T&gt;<span style=\"color: #000000;\">();\n</span><span style=\"color: #008080;\">286</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">287</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">288</span> \n<span style=\"color: #008080;\">289</span>         <span style=\"color: #0000ff;\">#region</span> 获取集合ByHql\n<span style=\"color: #008080;\">290</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">291</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 获取集合ByHql\n</span><span style=\"color: #008080;\">292</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">293</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"strHql\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\">294</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">295</span>         <span style=\"color: #0000ff;\">public</span> IQuery GetQueryByHql(<span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> strHql)\n</span><span style=\"color: #008080;\">296</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">297</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> _session.CreateQuery(strHql);\n</span><span style=\"color: #008080;\">298</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">299</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">300</span> \n<span style=\"color: #008080;\">301</span>         <span style=\"color: #0000ff;\">#region</span> 获取集合BySql\n<span style=\"color: #008080;\">302</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;summary&gt;</span>\n<span style=\"color: #008080;\">303</span>         <span style=\"color: #808080;\">///</span><span style=\"color: #008000;\"> 获取集合BySql\n</span><span style=\"color: #008080;\">304</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;/summary&gt;</span>\n<span style=\"color: #008080;\">305</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;param name=\"strSql\"&gt;&lt;/param&gt;</span>\n<span style=\"color: #008080;\">306</span>         <span style=\"color: #808080;\">///</span> <span style=\"color: #808080;\">&lt;returns&gt;&lt;/returns&gt;</span>\n<span style=\"color: #008080;\">307</span>         <span style=\"color: #0000ff;\">public</span> IQuery GetQueryBySql(<span style=\"color: #0000ff;\">string</span><span style=\"color: #000000;\"> strSql)\n</span><span style=\"color: #008080;\">308</span> <span style=\"color: #000000;\">        {\n</span><span style=\"color: #008080;\">309</span>             <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> _session.CreateSQLQuery(strSql);\n</span><span style=\"color: #008080;\">310</span> <span style=\"color: #000000;\">        }\n</span><span style=\"color: #008080;\">311</span>         <span style=\"color: #0000ff;\">#endregion</span>\n<span style=\"color: #008080;\">312</span>     }</pre>\n</div>\n<p>&nbsp;</p>"},{"title":"reactnative中FlatList上拉加载更多的解决办法","date":"2017-07-14T06:38:00.000Z","author":"不辍","_content":"<p>项目app中用到了list滚动加载，把List做了下对比发现FlatList比较适合自己的项目，但是在实际运用中</p>\n<h4 class=\"propTitle\">onEndReached方法需要给定</h4>\n<h4 class=\"propTitle\">onEndReachedThreshold的高度</h4>\n<p><img src=\"http://images2015.cnblogs.com/blog/789895/201707/789895-20170714143016228-154295959.png\" alt=\"\" /></p>\n<p>但是给定0和1之间的值也没有找到正确的办法 &nbsp;，会出现以下几个情况：</p>\n<p>1.如果在onEndReached中更改data数据源，那么会出现循环调用;</p>\n<p>2.将onEndReachedThreshold设置为0,则一直不会调用</p>\n<p>3.将onEndReachedThreshold设置为大于0的值，则会调用多次onEndReached 方法，但是都是在页面加载完成之后，并且也不会出现\"当列表被滚动到距离内容最底部不足<code>onEndReachedThreshold</code>的距离时调用\"</p>\n<p>在网上找了很久，终于找到一个解决办法</p>\n<p>&nbsp;<img src=\"http://images2015.cnblogs.com/blog/789895/201707/789895-20170714143616759-1043984784.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>摘自https://www.questarter.com/q/flatlist-39-s-onendreached-not-fire-unless-setting-height-explicitly-in-react-native-27_43444690.html</p>","source":"_posts/cnblogs/7170210.md","raw":"---\ntitle: reactnative中FlatList上拉加载更多的解决办法\ndate: 2017-07-14T14:38:00\nauthor: 不辍\ntags: [\"FlatList\",\"reactnative\",\"上拉加载\"]\n---\n<p>项目app中用到了list滚动加载，把List做了下对比发现FlatList比较适合自己的项目，但是在实际运用中</p>\n<h4 class=\"propTitle\">onEndReached方法需要给定</h4>\n<h4 class=\"propTitle\">onEndReachedThreshold的高度</h4>\n<p><img src=\"http://images2015.cnblogs.com/blog/789895/201707/789895-20170714143016228-154295959.png\" alt=\"\" /></p>\n<p>但是给定0和1之间的值也没有找到正确的办法 &nbsp;，会出现以下几个情况：</p>\n<p>1.如果在onEndReached中更改data数据源，那么会出现循环调用;</p>\n<p>2.将onEndReachedThreshold设置为0,则一直不会调用</p>\n<p>3.将onEndReachedThreshold设置为大于0的值，则会调用多次onEndReached 方法，但是都是在页面加载完成之后，并且也不会出现\"当列表被滚动到距离内容最底部不足<code>onEndReachedThreshold</code>的距离时调用\"</p>\n<p>在网上找了很久，终于找到一个解决办法</p>\n<p>&nbsp;<img src=\"http://images2015.cnblogs.com/blog/789895/201707/789895-20170714143616759-1043984784.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>摘自https://www.questarter.com/q/flatlist-39-s-onendreached-not-fire-unless-setting-height-explicitly-in-react-native-27_43444690.html</p>","slug":"cnblogs/7170210","published":1,"updated":"2022-07-10T13:01:24.988Z","_id":"cl5f7izhb0024c0unetsy0hmb","comments":1,"layout":"post","photos":[],"link":"","content":"<p>项目app中用到了list滚动加载，把List做了下对比发现FlatList比较适合自己的项目，但是在实际运用中</p>\n<h4 class=\"propTitle\">onEndReached方法需要给定</h4>\n<h4 class=\"propTitle\">onEndReachedThreshold的高度</h4>\n<p><img src=\"http://images2015.cnblogs.com/blog/789895/201707/789895-20170714143016228-154295959.png\" alt=\"\" /></p>\n<p>但是给定0和1之间的值也没有找到正确的办法 &nbsp;，会出现以下几个情况：</p>\n<p>1.如果在onEndReached中更改data数据源，那么会出现循环调用;</p>\n<p>2.将onEndReachedThreshold设置为0,则一直不会调用</p>\n<p>3.将onEndReachedThreshold设置为大于0的值，则会调用多次onEndReached 方法，但是都是在页面加载完成之后，并且也不会出现\"当列表被滚动到距离内容最底部不足<code>onEndReachedThreshold</code>的距离时调用\"</p>\n<p>在网上找了很久，终于找到一个解决办法</p>\n<p>&nbsp;<img src=\"http://images2015.cnblogs.com/blog/789895/201707/789895-20170714143616759-1043984784.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>摘自https://www.questarter.com/q/flatlist-39-s-onendreached-not-fire-unless-setting-height-explicitly-in-react-native-27_43444690.html</p>","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"spatxos","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/spatxos","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"<p>项目app中用到了list滚动加载，把List做了下对比发现FlatList比较适合自己的项目，但是在实际运用中</p>\n<h4 class=\"propTitle\">onEndReached方法需要给定</h4>\n<h4 class=\"propTitle\">onEndReachedThreshold的高度</h4>\n<p><img src=\"http://images2015.cnblogs.com/blog/789895/201707/789895-20170714143016228-154295959.png\" alt=\"\" /></p>\n<p>但是给定0和1之间的值也没有找到正确的办法 &nbsp;，会出现以下几个情况：</p>\n<p>1.如果在onEndReached中更改data数据源，那么会出现循环调用;</p>\n<p>2.将onEndReachedThreshold设置为0,则一直不会调用</p>\n<p>3.将onEndReachedThreshold设置为大于0的值，则会调用多次onEndReached 方法，但是都是在页面加载完成之后，并且也不会出现\"当列表被滚动到距离内容最底部不足<code>onEndReachedThreshold</code>的距离时调用\"</p>\n<p>在网上找了很久，终于找到一个解决办法</p>\n<p>&nbsp;<img src=\"http://images2015.cnblogs.com/blog/789895/201707/789895-20170714143616759-1043984784.png\" alt=\"\" /></p>\n<p>&nbsp;</p>\n<p>摘自https://www.questarter.com/q/flatlist-39-s-onendreached-not-fire-unless-setting-height-explicitly-in-react-native-27_43444690.html</p>"},{"title":"初学者-微信小程序 问题解决办法记录","date":"2016-11-24T01:35:00.000Z","author":"不辍","_content":"<p>1.tabBar不显示的问题</p>\n<p>&nbsp; &nbsp; 1），检查大小写</p>\n<p>&nbsp; &nbsp; 2），pagePath路径书写，和pages路径一样，不能多或者少一个&ldquo;/&rdquo;或者&ldquo;?&rdquo;</p>\n<p>2.tabBar和navigationBarTitleText中文乱码问题（VS编写）</p>\n<p>&nbsp; &nbsp;现在没有找到原因，有可能是编码问题。暂时解决办法：在开发者工具里面编辑之后工具自动同步到编辑器（VS）里面</p>\n<p>&nbsp; &nbsp;如果在VS编写，工具自动刷新就有可能出现中文乱码</p>","source":"_posts/cnblogs/6096502.md","raw":"---\ntitle: 初学者-微信小程序 问题解决办法记录\ndate: 2016-11-24T09:35:00\nauthor: 不辍\ntags: []\n---\n<p>1.tabBar不显示的问题</p>\n<p>&nbsp; &nbsp; 1），检查大小写</p>\n<p>&nbsp; &nbsp; 2），pagePath路径书写，和pages路径一样，不能多或者少一个&ldquo;/&rdquo;或者&ldquo;?&rdquo;</p>\n<p>2.tabBar和navigationBarTitleText中文乱码问题（VS编写）</p>\n<p>&nbsp; &nbsp;现在没有找到原因，有可能是编码问题。暂时解决办法：在开发者工具里面编辑之后工具自动同步到编辑器（VS）里面</p>\n<p>&nbsp; &nbsp;如果在VS编写，工具自动刷新就有可能出现中文乱码</p>","slug":"cnblogs/6096502","published":1,"updated":"2022-07-10T13:01:25.717Z","_id":"cl5f7izhg002bc0un650bdki3","comments":1,"layout":"post","photos":[],"link":"","content":"<p>1.tabBar不显示的问题</p>\n<p>&nbsp; &nbsp; 1），检查大小写</p>\n<p>&nbsp; &nbsp; 2），pagePath路径书写，和pages路径一样，不能多或者少一个&ldquo;/&rdquo;或者&ldquo;?&rdquo;</p>\n<p>2.tabBar和navigationBarTitleText中文乱码问题（VS编写）</p>\n<p>&nbsp; &nbsp;现在没有找到原因，有可能是编码问题。暂时解决办法：在开发者工具里面编辑之后工具自动同步到编辑器（VS）里面</p>\n<p>&nbsp; &nbsp;如果在VS编写，工具自动刷新就有可能出现中文乱码</p>","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"spatxos","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/spatxos","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"<p>1.tabBar不显示的问题</p>\n<p>&nbsp; &nbsp; 1），检查大小写</p>\n<p>&nbsp; &nbsp; 2），pagePath路径书写，和pages路径一样，不能多或者少一个&ldquo;/&rdquo;或者&ldquo;?&rdquo;</p>\n<p>2.tabBar和navigationBarTitleText中文乱码问题（VS编写）</p>\n<p>&nbsp; &nbsp;现在没有找到原因，有可能是编码问题。暂时解决办法：在开发者工具里面编辑之后工具自动同步到编辑器（VS）里面</p>\n<p>&nbsp; &nbsp;如果在VS编写，工具自动刷新就有可能出现中文乱码</p>"},{"title":"初学者-ASCII码 数字转字母","date":"2015-12-29T03:05:00.000Z","author":"不辍","_content":"<p>var index=1;</p>\n<p>var byt = new byte[1] {(byte) (index + 64)};<br />        var grade = Encoding.ASCII.GetString(byt);</p>\n<p>1转换为a;</p>\n<p>在百度上面查询时很多知识纯粹的ASCII对应的码值转换，初学者如果少加了64就一直会得不到正确的数据</p>","source":"_posts/cnblogs/5085021.md","raw":"---\ntitle: 初学者-ASCII码 数字转字母\ndate: 2015-12-29T11:05:00\nauthor: 不辍\ntags: [\"ASCII\",\"数字转换字母\"]\n---\n<p>var index=1;</p>\n<p>var byt = new byte[1] {(byte) (index + 64)};<br />        var grade = Encoding.ASCII.GetString(byt);</p>\n<p>1转换为a;</p>\n<p>在百度上面查询时很多知识纯粹的ASCII对应的码值转换，初学者如果少加了64就一直会得不到正确的数据</p>","slug":"cnblogs/5085021","published":1,"updated":"2022-07-10T13:01:26.717Z","_id":"cl5f7izkp002cc0un5dglgj8f","comments":1,"layout":"post","photos":[],"link":"","content":"<p>var index=1;</p>\n<p>var byt = new byte[1] {(byte) (index + 64)};<br />        var grade = Encoding.ASCII.GetString(byt);</p>\n<p>1转换为a;</p>\n<p>在百度上面查询时很多知识纯粹的ASCII对应的码值转换，初学者如果少加了64就一直会得不到正确的数据</p>","site":{"data":{"widget":{"widget_library":null,"widget_library_sticky":[{"class_name":"testWidget","id_name":"testWidget","order":-1,"name":"微博热搜","icon":"fab fa-weibo","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myWeibo\">\n<!-- 如果不要滚动，则去掉 vue-seamless-scroll标签就行了，这个插件使用cdn向左向右滚动好像有问题 -->\n<vue-seamless-scroll :data=\"content\" :class-option=\"classOption\" class=\"warp\" > <div class=\"weibo-container\" v-for=\"(item, index) in content\" :key=\"index\"> <div class=\"left\"> <div class=\"order\" :class=\"{ red: index<=2 }\">{{index + 1}}</div> <div class=\"name\"><a :href=\"item.url\" target=\"_blank\">{{item.name}}</a></div> </div> <div class=\"hot\">{{item.hot}}</div> </div> </vue-seamless-scroll> </div>\n<script src=\"/widget/weibo/index.js\"></script> <link href=\"/widget/weibo/index.css\" rel=\"stylesheet\"> "},{"class_name":"historyToday","id_name":"historyToday","order":-1,"name":"历史上的今天","icon":"fas fa-calendar-week","icon_color":"#d63130","url":"http://baidu.com","background":"#fff","html":" <div id=\"myHistorySwiper\" @mouseenter=\"stopAutoPlay()\" @mouseleave=\"startAutoPlay()\"> <swiper class=\"myhistoryswiper\" ref=\"myhistoryswiper\" style=\"height:80px;\" :options=\"swiperOption\"> <swiper-slide v-for=\"(item, index) in content\" :key=\"index\"> {{item}} </swiper-slide> </swiper> </div> <script src=\"/widget/historyToday/index.js\"></script> "}],"home_widget":[{"class_name":"welcome","id_name":"welcome","order":-1,"name":"欢迎","icon":"fas fa-eye","icon_color":"blue","url":"https://api.dzzui.com/api/ip","background":"#fff","html":"<img src=\"https://api.dzzui.com/api/ip\" style=\"width:100%\">"},{"class_name":"my_github_container","id_name":"my_github_container","order":-1,"name":"spatxos","icon":"fab fa-github","icon_color":"blue","url":"https://github.com/spatxos","background":"#fff","html":" <div id=\"github_container\"></div> <script data-pjax src=\"/widget/githubcalendar/index.js\"></script> "}]}}},"excerpt":"","more":"<p>var index=1;</p>\n<p>var byt = new byte[1] {(byte) (index + 64)};<br />        var grade = Encoding.ASCII.GetString(byt);</p>\n<p>1转换为a;</p>\n<p>在百度上面查询时很多知识纯粹的ASCII对应的码值转换，初学者如果少加了64就一直会得不到正确的数据</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cl5aiolxs00004gunf7x72eqz","category_id":"cl5atsd4n0000d8un5ifbhf2h","_id":"cl5atsd4w0003d8unhnly9k7h"}],"PostTag":[{"post_id":"cl5aiolxs00004gunf7x72eqz","tag_id":"cl5atsd4q0001d8unasmb5126","_id":"cl5atsd4x0004d8unflcs4rs3"},{"post_id":"cl5aiolxs00004gunf7x72eqz","tag_id":"cl5atsd4r0002d8un1fs8aob4","_id":"cl5atsd4x0005d8un78dpb09v"},{"post_id":"cl5f3a2cz0000c0un5z9fhahx","tag_id":"cl5f0k9n1000evkunhvh53e1k","_id":"cl5f3a2d60002c0un8ckm85db"},{"post_id":"cl5f3a2d40001c0un669d07f1","tag_id":"cl5f0k9n3000hvkun98fi0ovw","_id":"cl5f3a2d70004c0un8oet41j1"},{"post_id":"cl5f3a2d70005c0undm3bc106","tag_id":"cl5f0y90f00006sunhrps58cw","_id":"cl5f3a2d90007c0un2dul64tr"},{"post_id":"cl5f3a2d70005c0undm3bc106","tag_id":"cl5f0y90m00056sun4iywhv30","_id":"cl5f3a2d90009c0ung4jzgc4c"},{"post_id":"cl5f3a2d70005c0undm3bc106","tag_id":"cl5f0y90m00066sundbuabu8k","_id":"cl5f3a2da000bc0unbmfncawg"},{"post_id":"cl5f3a2d80006c0ungrei1qcr","tag_id":"cl5f0y90r000d6sungcl5830k","_id":"cl5f3a2db000dc0un2tk2d666"},{"post_id":"cl5f3a2d80006c0ungrei1qcr","tag_id":"cl5f0k9n3000hvkun98fi0ovw","_id":"cl5f3a2dc000fc0unb37fa5ui"},{"post_id":"cl5f3a2d80006c0ungrei1qcr","tag_id":"cl5f0y90r000g6sunb2lu5ept","_id":"cl5f3a2dd000hc0un3bigciom"},{"post_id":"cl5f3a2d90008c0un46mfbuj6","tag_id":"cl5f0y90q000a6sun6vyqa1ay","_id":"cl5f3a2dd000ic0un2duwhqvz"},{"post_id":"cl5f3a2d90008c0un46mfbuj6","tag_id":"cl5f0y90q000b6sun9vzve55u","_id":"cl5f3a2dd000jc0un13337w52"},{"post_id":"cl5f3a2d90008c0un46mfbuj6","tag_id":"cl5f0y90r000c6sun1wtd7ub6","_id":"cl5f3a2dd000kc0unhmysb1ml"},{"post_id":"cl5f3a2d9000ac0unhzqrfk06","tag_id":"cl5f0y90f00006sunhrps58cw","_id":"cl5f3a2dd000lc0unf7tp9war"},{"post_id":"cl5f3a2d9000ac0unhzqrfk06","tag_id":"cl5f0y90k00016sun7iss9whr","_id":"cl5f3a2dd000mc0unh12p3k20"},{"post_id":"cl5f3a2da000cc0un58suh37p","tag_id":"cl5f0y90r000d6sungcl5830k","_id":"cl5f3a2dd000nc0una3kmf3k4"},{"post_id":"cl5f3a2da000cc0un58suh37p","tag_id":"cl5atsx1l0007d8un7dj1elhx","_id":"cl5f3a2dd000oc0un8cfw7ydh"},{"post_id":"cl5f3a2da000cc0un58suh37p","tag_id":"cl5atsx1l0008d8uncabzgwer","_id":"cl5f3a2dd000pc0un0gvl6rpx"},{"post_id":"cl5f3a2da000cc0un58suh37p","tag_id":"cl5atsx1l000ad8unh9e1b94i","_id":"cl5f3a2de000qc0un2640091s"},{"post_id":"cl5f3a2da000cc0un58suh37p","tag_id":"cl5atsx1l000bd8unbbazh3nh","_id":"cl5f3a2de000rc0un26segf27"},{"post_id":"cl5f3a2da000cc0un58suh37p","tag_id":"cl5f0y90s000l6sun7nx8f0ax","_id":"cl5f3a2de000sc0un4nt92adq"},{"post_id":"cl5f3ges5000tc0un6kkqdny5","tag_id":"cl5f0y90f00006sunhrps58cw","_id":"cl5f3ges9000uc0unacddep6i"},{"post_id":"cl5f3ges5000tc0un6kkqdny5","tag_id":"cl5f0y90k00016sun7iss9whr","_id":"cl5f3ges9000vc0un1gtge9r0"},{"post_id":"cl5f3ges5000tc0un6kkqdny5","tag_id":"cl5atsd4q0001d8unasmb5126","_id":"cl5f3ges9000wc0unhjuwgq0c"},{"post_id":"cl5f7imq3000yc0una3tbhgyv","tag_id":"cl5f7imq5000zc0un9hzp2l3r","_id":"cl5f7imq60011c0unf47tfbkg"},{"post_id":"cl5f7imq3000yc0una3tbhgyv","tag_id":"cl5f7imq50010c0und000281c","_id":"cl5f7imq60012c0un42t0es4w"},{"post_id":"cl5f7ir2a0014c0unea3ebqg5","tag_id":"cl5f7ir2b0015c0un7hh52k2j","_id":"cl5f7ir2c0017c0unhaaaf8eb"},{"post_id":"cl5f7ir2a0014c0unea3ebqg5","tag_id":"cl5f7ir2b0016c0uncjpjcx0l","_id":"cl5f7ir2c0018c0un8nfm3jlu"},{"post_id":"cl5f7irg60019c0un7j3w7q0l","tag_id":"cl5f7ir2b0015c0un7hh52k2j","_id":"cl5f7irg7001ac0un29790u9o"},{"post_id":"cl5f7irg60019c0un7j3w7q0l","tag_id":"cl5f7ir2b0016c0uncjpjcx0l","_id":"cl5f7irg7001bc0un6vpf0lgk"},{"post_id":"cl5f7is79001cc0un0okx8k7x","tag_id":"cl5f7ir2b0015c0un7hh52k2j","_id":"cl5f7is79001dc0un82vv7je7"},{"post_id":"cl5f7is79001cc0un0okx8k7x","tag_id":"cl5f7ir2b0016c0uncjpjcx0l","_id":"cl5f7is79001ec0unafuhhxy6"},{"post_id":"cl5f7ispq001gc0unb09000ja","tag_id":"cl5f7ir2b0016c0uncjpjcx0l","_id":"cl5f7isps001ic0unb08i0eu1"},{"post_id":"cl5f7ispq001gc0unb09000ja","tag_id":"cl5f7ispr001hc0un7xvzdybb","_id":"cl5f7isps001jc0unga0pf35s"},{"post_id":"cl5f7it0a001kc0ungeb97696","tag_id":"cl5f7it0f001lc0un70s548q4","_id":"cl5f7it0g001mc0un90dc28k4"},{"post_id":"cl5f7it0a001kc0ungeb97696","tag_id":"cl5f7ir2b0016c0uncjpjcx0l","_id":"cl5f7it0g001nc0unhdux3ggq"},{"post_id":"cl5f7ivnq001pc0un7cf82f18","tag_id":"cl5f7imq50010c0und000281c","_id":"cl5f7ivnr001qc0una17xf9h4"},{"post_id":"cl5f7ivnq001pc0un7cf82f18","tag_id":"cl5f7ir2b0016c0uncjpjcx0l","_id":"cl5f7ivnr001rc0unddf93n98"},{"post_id":"cl5f7ivnq001pc0un7cf82f18","tag_id":"cl5f0y90r000d6sungcl5830k","_id":"cl5f7ivnr001sc0un084o5q0n"},{"post_id":"cl5f7iyu4001xc0unehubgwl5","tag_id":"cl5f0k9ml0000vkunftb6e78m","_id":"cl5f7iyu8001zc0una5gq11w3"},{"post_id":"cl5f7iyu4001xc0unehubgwl5","tag_id":"cl5f7iyu7001yc0un019h3j97","_id":"cl5f7iyu80020c0unexv89eam"},{"post_id":"cl5f7iz9k0021c0un0uakhq9f","tag_id":"cl5f0k9ml0000vkunftb6e78m","_id":"cl5f7iz9l0022c0unfn76f6ov"},{"post_id":"cl5f7izhb0024c0unetsy0hmb","tag_id":"cl5f7izhd0025c0unfzq18flm","_id":"cl5f7izhf0028c0un4qvi4xgb"},{"post_id":"cl5f7izhb0024c0unetsy0hmb","tag_id":"cl5f7izhe0026c0unev4z9v5h","_id":"cl5f7izhf0029c0un3vfw2ws2"},{"post_id":"cl5f7izhb0024c0unetsy0hmb","tag_id":"cl5f7izhe0027c0une6wsafxk","_id":"cl5f7izhf002ac0ungt7ne2xu"},{"post_id":"cl5f7izkp002cc0un5dglgj8f","tag_id":"cl5f7izkr002dc0und5qjcmdp","_id":"cl5f7iznj002fc0un7slb4rmc"},{"post_id":"cl5f7izkp002cc0un5dglgj8f","tag_id":"cl5f7izks002ec0uncn4301gv","_id":"cl5f7iznj002gc0un6uig0gak"}],"Tag":[{"name":"hexo","_id":"cl5atsd4q0001d8unasmb5126"},{"name":"hexo-admin","_id":"cl5atsd4r0002d8un1fs8aob4"},{"name":"gitea","_id":"cl5atsx1l0007d8un7dj1elhx"},{"name":"drone","_id":"cl5atsx1l0008d8uncabzgwer"},{"name":"harbor","_id":"cl5atsx1l000ad8unh9e1b94i"},{"name":"群晖","_id":"cl5atsx1l000bd8unbbazh3nh"},{"name":".Net Core 2.2","_id":"cl5f0k9ml0000vkunftb6e78m"},{"name":".Net Core 2.2 html","_id":"cl5f0k9ms0001vkun0cvf30n3"},{"name":"linux netcore docker","_id":"cl5f0k9mu0003vkunfy01aj44"},{"name":"appsettings.json netcore","_id":"cl5f0k9mw0005vkun5t0mhsg2"},{"name":"netcore 定制化","_id":"cl5f0k9mx0007vkun0u6a93hr"},{"name":"abp netcore","_id":"cl5f0k9my0009vkunhtfdfpdg"},{"name":"rabbitmq","_id":"cl5f0k9n1000evkunhvh53e1k"},{"name":"k8s","_id":"cl5f0k9n3000hvkun98fi0ovw"},{"name":"mysql linux","_id":"cl5f0k9n6000jvkunbjl2ct02"},{"name":"go dnspod 域名解析记录","_id":"cl5f0k9n7000lvkunbgtl1q8f"},{"name":"k3s ubuntu ubuntu内核升级","_id":"cl5f0k9n8000nvkun0ntx99lr"},{"name":"go go文件下载","_id":"cl5f0k9n9000pvkunco98e3eh"},{"name":"docker k8s 压测","_id":"cl5f0k9na000rvkun81c800c5"},{"name":"docker gitea drone harbor 群晖 .net6","_id":"cl5f0k9na000tvkungg19ezwu"},{"name":"ASCII 数字转换字母","_id":"cl5f0k9na000vvkundlpvde0i"},{"name":"FlatList reactnative 上拉加载","_id":"cl5f0k9nb000xvkun8ss7b3hz"},{"name":"go","_id":"cl5f0y90f00006sunhrps58cw"},{"name":"go文件下载","_id":"cl5f0y90k00016sun7iss9whr"},{"name":"dnspod","_id":"cl5f0y90m00056sun4iywhv30"},{"name":"域名解析记录","_id":"cl5f0y90m00066sundbuabu8k"},{"name":"k3s","_id":"cl5f0y90q000a6sun6vyqa1ay"},{"name":"ubuntu","_id":"cl5f0y90q000b6sun9vzve55u"},{"name":"ubuntu内核升级","_id":"cl5f0y90r000c6sun1wtd7ub6"},{"name":"docker","_id":"cl5f0y90r000d6sungcl5830k"},{"name":"压测","_id":"cl5f0y90r000g6sunb2lu5ept"},{"name":".net6","_id":"cl5f0y90s000l6sun7nx8f0ax"},{"name":"mysql","_id":"cl5f7imq5000zc0un9hzp2l3r"},{"name":"linux","_id":"cl5f7imq50010c0und000281c"},{"name":"abp","_id":"cl5f7ir2b0015c0un7hh52k2j"},{"name":"netcore","_id":"cl5f7ir2b0016c0uncjpjcx0l"},{"name":"定制化","_id":"cl5f7ispr001hc0un7xvzdybb"},{"name":"appsettings.json","_id":"cl5f7it0f001lc0un70s548q4"},{"name":"html","_id":"cl5f7iyu7001yc0un019h3j97"},{"name":"FlatList","_id":"cl5f7izhd0025c0unfzq18flm"},{"name":"reactnative","_id":"cl5f7izhe0026c0unev4z9v5h"},{"name":"上拉加载","_id":"cl5f7izhe0027c0une6wsafxk"},{"name":"ASCII","_id":"cl5f7izkr002dc0und5qjcmdp"},{"name":"数字转换字母","_id":"cl5f7izks002ec0uncn4301gv"}]}}